(in-package "M6")

;; (acl2::set-guard-checking nil)

(include-book "../M6-DJVM-shared/cldc-classtable")
;; ; (acl2::set-guard-checking t)

;; (defconst *ip* 0)
;; (defconst *th* 0)
;; (defconst *h*  nil)
;; (defconst *tt* nil)
;; (defconst *dcl* nil)
;; (defconst *s* (make-state *ip* *th* *h* *tt* *dcl* (make-env
;;                                                      JVM::|*OUT/CLDC-CLASS-TABLE*|)
;;                            nil
;;                            nil))

;; (acl2::set-guard-checking nil)
;; (defconst *s1* (round-robin-run (setup-initial-state "First" '() *s*) 6))

;; (acl2::set-guard-checking t)
;; (logic)
;; (defun init-state ()
;;   *s1*)

(defun init-state ()
  '(STATE
 2 0
 (HEAP (0 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY (64) 1)
          (("java.lang.Object")))
       (1 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 0)
                               ("offset" . 0)
                               ("count" . 1))
           ("java.lang.Object")))
       (2 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY
                         (116 105 109 101
                              111 117 116 32 118 97 108 117 101 32 105
                              115 32 110 101 103 97 116 105 118 101)
                         25)
          (("java.lang.Object")))
       (3 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 2)
                               ("offset" . 0)
                               ("count" . 25))
           ("java.lang.Object")))
       (4 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY
                         (110 97 110 111 115 101
                              99 111 110 100 32 116 105 109 101 111
                              117 116 32 118 97 108 117 101 32 111 117
                              116 32 111 102 32 114 97 110 103 101)
                         37)
          (("java.lang.Object")))
       (5 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 4)
                               ("offset" . 0)
                               ("count" . 37))
           ("java.lang.Object")))
       (6 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.Class")
          (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Object")
          (("java.lang.Class")
           ("java.lang.Object")))
       (7 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY
                         (105 110 116 101 114 102 97 99 101 32)
                         10)
          (("java.lang.Object")))
       (8 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 7)
                               ("offset" . 0)
                               ("count" . 10))
           ("java.lang.Object")))
       (9 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY (99 108 97 115 115 32)
                         6)
          (("java.lang.Object")))
       (10 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 9)
                                ("offset" . 0)
                                ("count" . 6))
            ("java.lang.Object")))
       (11 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (114 101 115 111 117 114 99 101 58)
                          9)
           (("java.lang.Object")))
       (12 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 11)
                                ("offset" . 0)
                                ("count" . 9))
            ("java.lang.Object")))
       (13 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Class")
           (("java.lang.Class")
            ("java.lang.Object")))
       (14 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (110 117 108 108)
                          4)
           (("java.lang.Object")))
       (15 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 14)
                                ("offset" . 0)
                                ("count" . 4))
            ("java.lang.Object")))
       (16 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (116 114 117 101)
                          4)
           (("java.lang.Object")))
       (17 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 16)
                                ("offset" . 0)
                                ("count" . 4))
            ("java.lang.Object")))
       (18 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (102 97 108 115 101)
                          5)
           (("java.lang.Object")))
       (19 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 18)
                                ("offset" . 0)
                                ("count" . 5))
            ("java.lang.Object")))
       (20 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.String")
           (("java.lang.Class")
            ("java.lang.Object")))
       (21 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY CHAR))
           (("java.lang.Class")
            ("java.lang.Object")))
       (22 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY SHORT))
           (("java.lang.Class")
            ("java.lang.Object")))
       (23 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY INT))
           (("java.lang.Class")
            ("java.lang.Object")))
       (24 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY FLOAT))
           (("java.lang.Class")
            ("java.lang.Object")))
       (25 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY DOUBLE))
           (("java.lang.Class")
            ("java.lang.Object")))
       (26 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY LONG))
           (("java.lang.Class")
            ("java.lang.Object")))
       (27 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY BOOLEAN))
           (("java.lang.Class")
            ("java.lang.Object")))
       (28 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY BYTE))
           (("java.lang.Class")
            ("java.lang.Object")))
       (29 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (100 101 98 117 103 58)
                          6)
           (("java.lang.Object")))
       (30 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 29)
                                ("offset" . 0)
                                ("count" . 6))
            ("java.lang.Object")))
       (31 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (67 111 117 108 100 32 110
                              111 116 32 111 112 101 110 32 100 101
                              98 117 103 32 115 116 114 101 97 109)
                          27)
           (("java.lang.Object")))
       (32 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 31)
                                ("offset" . 0)
                                ("count" . 27))
            ("java.lang.Object")))
       (33 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (107 101 121 32 99 97 110
                               110 116 32 98 101 32 110 117 108 108)
                          17)
           (("java.lang.Object")))
       (34 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 33)
                                ("offset" . 0)
                                ("count" . 17))
            ("java.lang.Object")))
       (35 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY NIL 0)
           (("java.lang.Object")))
       (36 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 35)
                                ("offset" . 0)
                                ("count" . 0))
            ("java.lang.Object")))
       (37 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (107 101 121 32 99 97 110 110
                               116 32 98 101 32 101 109 112 116 121)
                          18)
           (("java.lang.Object")))
       (38 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 37)
                                ("offset" . 0)
                                ("count" . 18))
            ("java.lang.Object")))
       (39 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.System")
           (("java.lang.Class")
            ("java.lang.Object")))
       (40 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Runnable")
           (("java.lang.Class")
            ("java.lang.Object")))
       (41 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (84 104 114 101 97 100 91 64)
                          8)
           (("java.lang.Object")))
       (42 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 41)
                                ("offset" . 0)
                                ("count" . 8))
            ("java.lang.Object")))
       (43 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (44) 1)
           (("java.lang.Object")))
       (44 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 43)
                                ("offset" . 0)
                                ("count" . 1))
            ("java.lang.Object")))
       (45 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (93) 1)
           (("java.lang.Object")))
       (46 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 45)
                                ("offset" . 0)
                                ("count" . 1))
            ("java.lang.Object")))
       (47 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Thread")
           (("java.lang.Class")
            ("java.lang.Object")))
       (48 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (58 32) 2)
           (("java.lang.Object")))
       (49 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 48)
                                ("offset" . 0)
                                ("count" . 2))
            ("java.lang.Object")))
       (50 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Throwable")
           (("java.lang.Class")
            ("java.lang.Object")))
       (51 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Error")
           (("java.lang.Class")
            ("java.lang.Object")))
       (52 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY "java.lang.String"))
           (("java.lang.Class")
            ("java.lang.Object")))
       (53 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY "java.lang.String"))
           (SPECIFIC-INFO ARRAY NIL 0)
           (("java.lang.Object")))
       (54 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Thread")
           (SPECIFIC-INFO GENERIC_OBJECT)
           (("java.lang.Thread" ("priority" . 5)
                                ("threadQ" . -1)
                                ("target" . -1))
            ("java.lang.Object")))
       (55 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "First")
           (("java.lang.Class")
            ("java.lang.Object"))))
 (THREAD-TABLE
  (JVM::THREAD
     0 (JVM::SAVED-PC . 0)
     (JVM::CALL-STACK
          (FRAME (RETURN_PC . KILL_THREAD)
                 (OPERAND-STACK)
                 (LOCALS 53 TOPX TOPX)
                 (METHOD-PTR "First"
                             "main" ((ARRAY "java.lang.String"))
                             VOID)
                 (SYNC-OBJ-REF . -1)
                 (RESUME-PC . -1)
                 (AUX))
          (FRAME (RETURN_PC . 0)
                 (OPERAND-STACK 53 "First"
                                (JVM::CALL-BACK *INITINITIALTHREADBEHAVIOR*))
                 (LOCALS)
                 (METHOD-PTR "java.lang.Class"
                             "runCustomCode" NIL VOID)
                 (SYNC-OBJ-REF . -1)
                 (RESUME-PC . -1)
                 (AUX)))
     (JVM::STATUS THREAD_ACTIVE)
     (MONITOR . -1)
     (JVM::MDEPTH . 0)
     (JVM::THREAD-OBJ . 54)))
 (CLASS-TABLE
  (INSTANCE-CLASS-TABLE
   (CLASS
    "First"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "First" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "First" "main"
             (PARAMETERS (ARRAY "java.lang.String"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (MAX_LOCAL . 3)
                   (CODE_LENGTH . 9)
                   (PARSEDCODE (0 (ILOAD_2))
                               (1 (ISTORE_1))
                               (2 (ILOAD_1))
                               (3 (ICONST_1))
                               (4 (IADD))
                               (5 (ISTORE_2))
                               (6 (ILOAD_2))
                               (7 (ISTORE_1))
                               (8 (RETURN))
                               (ENDOFCODE 9))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . CLASS_READY)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 55))
   (CLASS
    "java.lang.Error"
    "java.lang.Throwable" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "java.lang.Error" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Throwable" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.Error"
      "<init>" (PARAMETERS "java.lang.String")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Throwable"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 51))
   (CLASS
    "java.lang.Throwable" "java.lang.Object"
    (CONSTANT_POOL (STRING 49))
    (FIELDS (FIELD "java.lang.Throwable"
                   "detailMessage" "java.lang.String"
                   (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.Throwable"
                   "backtrace" "java.lang.Object"
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)))
    (METHODS
     (METHOD
      "java.lang.Throwable"
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Throwable"
      "<init>" (PARAMETERS "java.lang.String")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                     (CLASS "java.lang.String"))))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Throwable"
      "getMessage" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (MAX_LOCAL . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                        (CLASS "java.lang.String"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.Throwable"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 45)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                        NIL (CLASS "java.lang.Class"))))
            (4 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                        NIL (CLASS "java.lang.String"))))
            (7 (ASTORE_1))
            (8 (ALOAD_0))
            (9 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                        NIL (CLASS "java.lang.String"))))
            (12 (ASTORE_2))
            (13 (ALOAD_2))
            (14 (IFNULL 43))
            (17 (NEW (CLASS "java.lang.StringBuffer")))
            (20 (DUP))
            (21 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (24 (ALOAD_1))
            (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (28 (LDC 0))
            (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (33 (ALOAD_2))
            (34 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (37 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (40 (GOTO 44))
            (43 (ALOAD_1))
            (44 (ARETURN))
            (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (43 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "java.lang.Throwable"
      "printStackTrace" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 57)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                    (CLASS "java.io.PrintStream"))))
        (3 (ASTORE_1))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                    NIL (CLASS "java.lang.String"))))
        (8 (ASTORE_2))
        (9 (ALOAD_1))
        (10 (ALOAD_0))
        (11 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                     NIL (CLASS "java.lang.Class"))))
        (14 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (17 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (20 (ALOAD_2))
        (21 (IFNULL 38))
        (24 (ALOAD_1))
        (25 (LDC 0))
        (27 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (30 (ALOAD_1))
        (31 (ALOAD_2))
        (32 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (35 (GOTO 42))
        (38 (ALOAD_1))
        (39 (INVOKEVIRTUAL (METHODCP "println"
                                     "java.io.PrintStream" NIL VOID)))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "backtrace" "java.lang.Throwable"
                                    (CLASS "java.lang.Object"))))
        (46 (IFNULL 56))
        (49 (ALOAD_0))
        (50 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                     (CLASS "java.io.PrintStream"))))
        (53 (INVOKESPECIAL (METHODCP "printStackTrace0" "java.lang.Throwable"
                                     ((CLASS "java.lang.Object"))
                                     VOID)))
        (56 (RETURN))
        (ENDOFCODE 57))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (42 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "java.lang.Throwable" "printStackTrace0"
             (PARAMETERS "java.lang.Object")
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 50))
   (CLASS
    "java.lang.Thread" "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 5)
                   (INT 10)
                   (STRING 42)
                   (STRING 44)
                   (STRING 46))
    (FIELDS (FIELD "java.lang.Thread" "priority"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.Thread"
                   "threadQ" "java.lang.Thread"
                   (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.Thread"
                   "target" "java.lang.Runnable"
                   (ACCESSFLAGS *CLASS* *PRIVATE*)))
    (METHODS
     (METHOD "java.lang.Thread"
             "currentThread" (PARAMETERS)
             (RETURNTYPE . "java.lang.Thread")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Thread" "yield" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Thread"
             "sleep" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ACONST_NULL))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread"
                                               ((CLASS "java.lang.Runnable"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Thread" "<init>"
      (PARAMETERS "java.lang.Runnable")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_5))
          (6 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (9 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                     NIL (CLASS "java.lang.Thread"))))
          (12 (ASTORE_2))
          (13 (ALOAD_0))
          (14 (ALOAD_2))
          (15 (INVOKEVIRTUAL (METHODCP "getPriority"
                                       "java.lang.Thread" NIL INT)))
          (18 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (21 (ALOAD_0))
          (22 (ALOAD_1))
          (23 (PUTFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                      (CLASS "java.lang.Runnable"))))
          (26 (ALOAD_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (31 (INVOKEVIRTUAL (METHODCP "setPriority" "java.lang.Thread" (INT)
                                       VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.Thread" "start" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*
                          *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread" "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (4 (IFNULL 16))
          (7 (ALOAD_0))
          (8 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (11 (INVOKEINTERFACE (METHODCP "run" "java.lang.Runnable" NIL VOID)
                               1))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD "java.lang.Thread"
             "isAlive" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread"
      "setPriority" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 30)
       (PARSEDCODE
         (0 (ILOAD_1))
         (1 (BIPUSH 10))
         (3 (IF_ICMPGT 11))
         (6 (ILOAD_1))
         (7 (ICONST_1))
         (8 (IF_ICMPGE 19))
         (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (14 (DUP))
         (15 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
         (18 (ATHROW))
         (19 (ALOAD_0))
         (20 (ALOAD_0))
         (21 (ILOAD_1))
         (22 (DUP_X1))
         (23 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
         (26 (INVOKESPECIAL (METHODCP "setPriority0" "java.lang.Thread" (INT)
                                      VOID)))
         (29 (RETURN))
         (ENDOFCODE 30))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.Thread"
      "getPriority" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (MAX_LOCAL . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD "java.lang.Thread"
             "activeCount" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread" "join" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                       NIL (CLASS "java.lang.Thread"))))
            (4 (JVM::IF_ACMPNE 11))
            (7 (RETURN))
            (8 (INVOKESTATIC (METHODCP "yield" "java.lang.Thread" NIL VOID)))
            (11 (ALOAD_0))
            (12 (INVOKEVIRTUAL (METHODCP "isAlive"
                                         "java.lang.Thread" NIL BOOLEAN)))
            (15 (IFNE 8))
            (18 (RETURN))
            (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.Thread"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (LDC 3))
        (9 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.StringBuffer"))))
        (12 (ALOAD_0))
        (13 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (16 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (19 (LDC 4))
        (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (24 (ALOAD_0))
        (25 (INVOKEVIRTUAL (METHODCP "getPriority"
                                     "java.lang.Thread" NIL INT)))
        (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (31 (LDC 5))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (39 (ARETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.Thread"
             "setPriority0" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES "java.lang.Runnable")
    (STATIC-FIELDS
         (JVM::STATIC-FIELD "java.lang.Thread" "MIN_PRIORITY" INT
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            1)
         (JVM::STATIC-FIELD "java.lang.Thread" "NORM_PRIORITY" INT
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            5)
         (JVM::STATIC-FIELD "java.lang.Thread" "MAX_PRIORITY" INT
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            10))
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 47))
   (CLASS "java.lang.Runnable"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "java.lang.Runnable" "run" (PARAMETERS)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE (MAX_STACK . 0)
                                 (MAX_LOCAL . 0)
                                 (CODE_LENGTH . 0)
                                 (PARSEDCODE)
                                 (EXCEPTIONS)
                                 (STACKMAP))))
          (INTERFACES)
          (STATIC-FIELDS)
          (JVM::STATUS . 2)
          (JVM::ACCESS-FLAGS *ABSTRACT* *INTERFACE* *PUBLIC*)
          (JVM::INIT-THREAD . -1)
          (CLASS-REF . 40))
   (CLASS
    "java.lang.System" "java.lang.Object"
    (CONSTANT_POOL (STRING 30)
                   (STRING 32)
                   (STRING 34)
                   (STRING 36)
                   (STRING 38))
    (FIELDS)
    (METHODS
     (METHOD
      "java.lang.System" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.System"
             "getOutput" (PARAMETERS)
             (RETURNTYPE . "java.io.PrintStream")
             (ACCESSFLAGS *CLASS* *PRIVATE* *NATIVE* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.System"
             "currentTimeMillis" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.System" "arraycopy"
             (PARAMETERS "java.lang.Object"
                         INT (CLASS "java.lang.Object")
                         INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.System" "identityHashCode"
             (PARAMETERS "java.lang.Object")
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.System" "getProperty"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 38)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (IFNONNULL 14))
            (4 (NEW (CLASS "java.lang.NullPointerException")))
            (7 (DUP))
            (8 (LDC 2))
            (10 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.NullPointerException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (13 (ATHROW))
            (14 (ALOAD_0))
            (15 (LDC 3))
            (17 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (20 (IFEQ 33))
            (23 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (26 (DUP))
            (27 (LDC 4))
            (29 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (32 (ATHROW))
            (33 (ALOAD_0))
            (34 (INVOKESTATIC (METHODCP "getProperty0" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (37 (ARETURN))
            (ENDOFCODE 38))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (33 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "java.lang.System" "getProperty0"
             (PARAMETERS "java.lang.String")
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.System"
      "exit" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 2)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                           NIL (CLASS "java.lang.Runtime"))))
                (3 (ILOAD_0))
                (4 (INVOKEVIRTUAL (METHODCP "exit" "java.lang.Runtime" (INT)
                                            VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.System" "gc" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (MAX_LOCAL . 0)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                        NIL (CLASS "java.lang.Runtime"))))
             (3 (INVOKEVIRTUAL (METHODCP "gc" "java.lang.Runtime" NIL VOID)))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.System"
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (MAX_LOCAL . 0)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (INVOKESTATIC (METHODCP "getOutput" "java.lang.System"
                                         NIL (CLASS "java.io.PrintStream"))))
              (3 (PUTSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (6 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (9 (PUTSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS
         (JVM::STATIC-FIELD "java.lang.System"
                            "out" "java.io.PrintStream"
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            -1)
         (JVM::STATIC-FIELD "java.lang.System"
                            "err" "java.io.PrintStream"
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            -1))
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS*
                       *FINAL* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 39))
   (CLASS
    "java.lang.String" "java.lang.Object"
    (CONSTANT_POOL (STRING 15)
                   (STRING 17)
                   (STRING 19))
    (FIELDS (FIELD "java.lang.String" "value" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.String" "offset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.String" "count"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)))
    (METHODS
     (METHOD
      "java.lang.String" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (NEWARRAY CHAR))
          (8 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (11 (RETURN))
          (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "<init>" (PARAMETERS "java.lang.String")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 37)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (9 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (12 (ALOAD_0))
          (13 (ALOAD_0))
          (14 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (17 (NEWARRAY CHAR))
          (19 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (22 (ALOAD_1))
          (23 (ICONST_0))
          (24 (ALOAD_0))
          (25 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (28 (ALOAD_0))
          (29 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (32 (ICONST_0))
          (33 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                       (INT INT (ARRAY CHAR) INT)
                                       VOID)))
          (36 (RETURN))
          (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "<init>" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (ARRAYLENGTH))
          (7 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (10 (ALOAD_0))
          (11 (ALOAD_0))
          (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (15 (NEWARRAY CHAR))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_1))
          (21 (ICONST_0))
          (22 (ALOAD_0))
          (23 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (26 (ICONST_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (31 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                      ((CLASS "java.lang.Object")
                                       INT (CLASS "java.lang.Object")
                                       INT INT)
                                      VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 73)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
        (4 (ILOAD_2))
        (5 (IFGE 17))
        (8 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (ILOAD_2))
        (13
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (16 (ATHROW))
        (17 (ILOAD_3))
        (18 (IFGE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_3))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_2))
        (31 (ALOAD_1))
        (32 (ARRAYLENGTH))
        (33 (ILOAD_3))
        (34 (ISUB))
        (35 (IF_ICMPLE 49))
        (38 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (41 (DUP))
        (42 (ILOAD_2))
        (43 (ILOAD_3))
        (44 (IADD))
        (45
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (48 (ATHROW))
        (49 (ALOAD_0))
        (50 (ILOAD_3))
        (51 (NEWARRAY CHAR))
        (53 (PUTFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (56 (ALOAD_0))
        (57 (ILOAD_3))
        (58 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (61 (ALOAD_1))
        (62 (ILOAD_2))
        (63 (ALOAD_0))
        (64 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (67 (ICONST_0))
        (68 (ILOAD_3))
        (69 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (72 (RETURN))
        (ENDOFCODE 73))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY BYTE)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 5)
         (MAX_LOCAL . 5)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ALOAD_1))
              (2 (ILOAD_2))
              (3 (ILOAD_3))
              (4 (ALOAD 4))
              (6 (INVOKESTATIC (METHODCP "byteToCharArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY CHAR))))
              (9 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.lang.String" ((ARRAY CHAR))
                                          VOID)))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY BYTE)
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (MAX_LOCAL . 3)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (ICONST_0))
             (3 (ALOAD_1))
             (4 (ARRAYLENGTH))
             (5 (ALOAD_2))
             (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         VOID)))
             (9 (RETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (MAX_LOCAL . 4)
           (CODE_LENGTH . 11)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ILOAD_2))
                (3 (ILOAD_3))
                (4 (INVOKESTATIC (METHODCP "byteToCharArray"
                                           "com.sun.cldc.i18n.Helper"
                                           ((ARRAY BYTE) INT INT)
                                           (ARRAY CHAR))))
                (7 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (10 (RETURN))
                (ENDOFCODE 11))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String"
      "<init>" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 4)
          (MAX_LOCAL . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE (0 (ALOAD_0))
                      (1 (ALOAD_1))
                      (2 (ICONST_0))
                      (3 (ALOAD_1))
                      (4 (ARRAYLENGTH))
                      (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY BYTE) INT INT)
                                                  VOID)))
                      (8 (RETURN))
                      (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS "java.lang.StringBuffer")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 44)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_1))
          (5 (DUP))
          (6 (ASTORE_2))
          (7 (MONITORENTER))
          (8 (ALOAD_1))
          (9 (INVOKEVIRTUAL (METHODCP "setShared"
                                      "java.lang.StringBuffer" NIL VOID)))
          (12 (ALOAD_0))
          (13 (ALOAD_1))
          (14 (INVOKEVIRTUAL (METHODCP "getValue" "java.lang.StringBuffer"
                                       NIL (ARRAY CHAR))))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_0))
          (21 (ICONST_0))
          (22 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (25 (ALOAD_0))
          (26 (ALOAD_1))
          (27 (INVOKEVIRTUAL (METHODCP "length"
                                       "java.lang.StringBuffer" NIL INT)))
          (30 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (33 (ALOAD_2))
          (34 (MONITOREXIT))
          (35 (GOTO 43))
          (38 (ASTORE_3))
          (39 (ALOAD_2))
          (40 (MONITOREXIT))
          (41 (ALOAD_3))
          (42 (ATHROW))
          (43 (RETURN))
          (ENDOFCODE 44))
       (EXCEPTIONS (JVM::HANDLER 8 35 38 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 38 41 38 (CLASS "java.lang.Throwable")))
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS INT INT (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_3))
          (6 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (9 (ALOAD_0))
          (10 (ILOAD_1))
          (11 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (14 (ALOAD_0))
          (15 (ILOAD_2))
          (16 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (19 (RETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String" "length" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (MAX_LOCAL . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (4 (IRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "java.lang.String"
             "charAt" (PARAMETERS INT)
             (RETURNTYPE . CHAR)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String" "getChars"
      (PARAMETERS INT INT (ARRAY CHAR) INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (MAX_LOCAL . 5)
       (CODE_LENGTH . 66)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ALOAD_0))
        (47 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (50 (ALOAD_0))
        (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ALOAD_3))
        (57 (ILOAD 4))
        (59 (ILOAD_2))
        (60 (ILOAD_1))
        (61 (ISUB))
        (62 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (65 (RETURN))
        (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String" "getBytes"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (MAX_LOCAL . 2)
        (CODE_LENGTH . 17)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value"
                                        "java.lang.String" (ARRAY CHAR))))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (8 (ALOAD_0))
             (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (12 (ALOAD_1))
             (13 (INVOKESTATIC (METHODCP "charToByteArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY CHAR)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY BYTE))))
             (16 (ARETURN))
             (ENDOFCODE 17))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.String"
      "getBytes" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 16)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (4 (ALOAD_0))
                (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (8 (ALOAD_0))
                (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (12 (INVOKESTATIC (METHODCP "charToByteArray"
                                            "com.sun.cldc.i18n.Helper"
                                            ((ARRAY CHAR) INT INT)
                                            (ARRAY BYTE))))
                (15 (ARETURN))
                (ENDOFCODE 16))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD "java.lang.String"
             "equals" (PARAMETERS "java.lang.Object")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String" "compareTo"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (MAX_LOCAL . 11)
          (CODE_LENGTH . 91)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (ISTORE_2))
               (5 (ALOAD_1))
               (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (9 (ISTORE_3))
               (10 (ILOAD_2))
               (11 (ILOAD_3))
               (12 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                           INT)))
               (15 (ISTORE 4))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (21 (ASTORE 5))
               (23 (ALOAD_1))
               (24 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (27 (ASTORE 6))
               (29 (ALOAD_0))
               (30 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (33 (ISTORE 7))
               (35 (ALOAD_1))
               (36 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (39 (ISTORE 8))
               (41 (GOTO 77))
               (44 (ALOAD 5))
               (46 (ILOAD 7))
               (48 (IINC 7 1))
               (51 (CALOAD))
               (52 (ISTORE 9))
               (54 (ALOAD 6))
               (56 (ILOAD 8))
               (58 (IINC 8 1))
               (61 (CALOAD))
               (62 (ISTORE 10))
               (64 (ILOAD 9))
               (66 (ILOAD 10))
               (68 (IF_ICMPEQ 77))
               (71 (ILOAD 9))
               (73 (ILOAD 10))
               (75 (ISUB))
               (76 (IRETURN))
               (77 (ILOAD 4))
               (79 (DUP))
               (80 (ICONST_1))
               (81 (ISUB))
               (82 (ISTORE 4))
               (84 (IFNE 44))
               (87 (ILOAD_2))
               (88 (ILOAD_3))
               (89 (ISUB))
               (90 (IRETURN))
               (ENDOFCODE 91))
          (EXCEPTIONS)
          (STACKMAP (44 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL))
                    (77 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "regionMatches"
      (PARAMETERS BOOLEAN INT (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 6)
          (MAX_LOCAL . 15)
          (CODE_LENGTH . 170)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE 6))
               (6 (ALOAD_0))
               (7 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (10 (ILOAD_2))
               (11 (IADD))
               (12 (ISTORE 7))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (22 (IADD))
               (23 (ISTORE 8))
               (25 (ALOAD_3))
               (26 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (29 (ASTORE 9))
               (31 (ALOAD_3))
               (32 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (35 (ILOAD 4))
               (37 (IADD))
               (38 (ISTORE 10))
               (40 (ILOAD 4))
               (42 (IFLT 80))
               (45 (ILOAD_2))
               (46 (IFLT 80))
               (49 (ILOAD_2))
               (50 (JVM::I2L))
               (51 (ALOAD_0))
               (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (55 (JVM::I2L))
               (56 (ILOAD 5))
               (58 (JVM::I2L))
               (59 (JVM::LSUB))
               (60 (LCMP))
               (61 (IFGT 80))
               (64 (ILOAD 4))
               (66 (JVM::I2L))
               (67 (ALOAD_3))
               (68 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (71 (JVM::I2L))
               (72 (ILOAD 5))
               (74 (JVM::I2L))
               (75 (JVM::LSUB))
               (76 (LCMP))
               (77 (IFLE 158))
               (80 (ICONST_0))
               (81 (IRETURN))
               (82 (ALOAD 6))
               (84 (ILOAD 7))
               (86 (IINC 7 1))
               (89 (CALOAD))
               (90 (ISTORE 11))
               (92 (ALOAD 9))
               (94 (ILOAD 10))
               (96 (IINC 10 1))
               (99 (CALOAD))
               (100 (ISTORE 12))
               (102 (ILOAD 11))
               (104 (ILOAD 12))
               (106 (IF_ICMPNE 112))
               (109 (GOTO 158))
               (112 (ILOAD_1))
               (113 (IFEQ 156))
               (116 (ILOAD 11))
               (118 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (121 (ISTORE 13))
               (123 (ILOAD 12))
               (125 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (128 (ISTORE 14))
               (130 (ILOAD 13))
               (132 (ILOAD 14))
               (134 (IF_ICMPNE 140))
               (137 (GOTO 158))
               (140 (ILOAD 13))
               (142 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (145 (ILOAD 14))
               (147 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (150 (IF_ICMPNE 156))
               (153 (GOTO 158))
               (156 (ICONST_0))
               (157 (IRETURN))
               (158 (ILOAD 5))
               (160 (DUP))
               (161 (ICONST_1))
               (162 (ISUB))
               (163 (ISTORE 5))
               (165 (IFGT 82))
               (168 (ICONST_1))
               (169 (IRETURN))
               (ENDOFCODE 170))
          (EXCEPTIONS)
          (STACKMAP (80 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (112 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (140 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT INT INT)
                                (STACK)
                                NIL))
                    (156 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (158 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT TOPX TOPX TOPX TOPX)
                                (STACK)
                                NIL)))))
     (METHOD
      "java.lang.String" "startsWith"
      (PARAMETERS "java.lang.String" INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (MAX_LOCAL . 9)
          (CODE_LENGTH . 89)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (9 (ILOAD_2))
               (10 (IADD))
               (11 (ISTORE 4))
               (13 (ALOAD_0))
               (14 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (21 (IADD))
               (22 (ISTORE 5))
               (24 (ALOAD_1))
               (25 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (28 (ASTORE 6))
               (30 (ALOAD_1))
               (31 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (34 (ISTORE 7))
               (36 (ALOAD_1))
               (37 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (40 (ISTORE 8))
               (42 (ILOAD_2))
               (43 (IFLT 57))
               (46 (ILOAD_2))
               (47 (ALOAD_0))
               (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (51 (ILOAD 8))
               (53 (ISUB))
               (54 (IF_ICMPLE 79))
               (57 (ICONST_0))
               (58 (IRETURN))
               (59 (ALOAD_3))
               (60 (ILOAD 4))
               (62 (IINC 4 1))
               (65 (CALOAD))
               (66 (ALOAD 6))
               (68 (ILOAD 7))
               (70 (IINC 7 1))
               (73 (CALOAD))
               (74 (IF_ICMPEQ 79))
               (77 (ICONST_0))
               (78 (IRETURN))
               (79 (IINC 8 -1))
               (82 (ILOAD 8))
               (84 (IFGE 59))
               (87 (ICONST_1))
               (88 (IRETURN))
               (ENDOFCODE 89))
          (EXCEPTIONS)
          (STACKMAP (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (79 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "startsWith"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (MAX_LOCAL . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "java.lang.String" "endsWith"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (MAX_LOCAL . 2)
           (CODE_LENGTH . 15)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (6 (ALOAD_1))
                (7 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (10 (ISUB))
                (11 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                (14 (IRETURN))
                (ENDOFCODE 15))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String"
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (MAX_LOCAL . 6)
           (CODE_LENGTH . 48)
           (PARSEDCODE
                (0 (ICONST_0))
                (1 (ISTORE_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (6 (ISTORE_2))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (11 (ASTORE_3))
                (12 (ALOAD_0))
                (13 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (16 (ISTORE 4))
                (18 (ICONST_0))
                (19 (ISTORE 5))
                (21 (GOTO 39))
                (24 (BIPUSH 31))
                (26 (ILOAD_1))
                (27 (IMUL))
                (28 (ALOAD_3))
                (29 (ILOAD_2))
                (30 (IINC 2 1))
                (33 (CALOAD))
                (34 (IADD))
                (35 (ISTORE_1))
                (36 (IINC 5 1))
                (39 (ILOAD 5))
                (41 (ILOAD 4))
                (43 (IF_ICMPLT 24))
                (46 (ILOAD_1))
                (47 (IRETURN))
                (ENDOFCODE 48))
           (EXCEPTIONS)
           (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL))
                     (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL)))))
     (METHOD "java.lang.String"
             "indexOf" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.String"
             "indexOf" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String"
      "lastIndexOf" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (MAX_LOCAL . 2)
            (CODE_LENGTH . 12)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ILOAD_1))
                 (2 (ALOAD_0))
                 (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (6 (ICONST_1))
                 (7 (ISUB))
                 (8 (INVOKEVIRTUAL (METHODCP "lastIndexOf"
                                             "java.lang.String" (INT INT)
                                             INT)))
                 (11 (IRETURN))
                 (ENDOFCODE 12))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "java.lang.String"
      "lastIndexOf" (PARAMETERS INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (MAX_LOCAL . 6)
          (CODE_LENGTH . 67)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (4 (ISTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (9 (ASTORE 4))
               (11 (ALOAD_0))
               (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (15 (ILOAD_2))
               (16 (ALOAD_0))
               (17 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (20 (IF_ICMPLT 32))
               (23 (ALOAD_0))
               (24 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (27 (ICONST_1))
               (28 (ISUB))
               (29 (GOTO 33))
               (32 (ILOAD_2))
               (33 (IADD))
               (34 (ISTORE 5))
               (36 (GOTO 59))
               (39 (ALOAD 4))
               (41 (ILOAD 5))
               (43 (CALOAD))
               (44 (ILOAD_1))
               (45 (IF_ICMPNE 56))
               (48 (ILOAD 5))
               (50 (ALOAD_0))
               (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (54 (ISUB))
               (55 (IRETURN))
               (56 (IINC 5 -1))
               (59 (ILOAD 5))
               (61 (ILOAD_3))
               (62 (IF_ICMPGE 39))
               (65 (ICONST_M1))
               (66 (IRETURN))
               (ENDOFCODE 67))
          (EXCEPTIONS)
          (STACKMAP (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT)
                               NIL))
                    (33 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT INT)
                               NIL))
                    (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (56 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "indexOf"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (MAX_LOCAL . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             INT)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "java.lang.String" "indexOf"
      (PARAMETERS "java.lang.String" INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (MAX_LOCAL . 12)
         (CODE_LENGTH . 189)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (4 (ASTORE_3))
              (5 (ALOAD_1))
              (6 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (9 (ASTORE 4))
              (11 (ALOAD_0))
              (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (15 (ALOAD_0))
              (16 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (19 (ALOAD_1))
              (20 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (23 (ISUB))
              (24 (IADD))
              (25 (ISTORE 5))
              (27 (ILOAD_2))
              (28 (ALOAD_0))
              (29 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (32 (IF_ICMPLT 57))
              (35 (ALOAD_0))
              (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (39 (IFNE 55))
              (42 (ILOAD_2))
              (43 (IFNE 55))
              (46 (ALOAD_1))
              (47 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (50 (IFNE 55))
              (53 (ICONST_0))
              (54 (IRETURN))
              (55 (ICONST_M1))
              (56 (IRETURN))
              (57 (ILOAD_2))
              (58 (IFGE 63))
              (61 (ICONST_0))
              (62 (ISTORE_2))
              (63 (ALOAD_1))
              (64 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (67 (IFNE 72))
              (70 (ILOAD_2))
              (71 (IRETURN))
              (72 (ALOAD_1))
              (73 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (76 (ISTORE 6))
              (78 (ALOAD 4))
              (80 (ILOAD 6))
              (82 (CALOAD))
              (83 (ISTORE 7))
              (85 (ALOAD_0))
              (86 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (89 (ILOAD_2))
              (90 (IADD))
              (91 (ISTORE 8))
              (93 (GOTO 99))
              (96 (IINC 8 1))
              (99 (ILOAD 8))
              (101 (ILOAD 5))
              (103 (IF_ICMPGT 115))
              (106 (ALOAD_3))
              (107 (ILOAD 8))
              (109 (CALOAD))
              (110 (ILOAD 7))
              (112 (IF_ICMPNE 96))
              (115 (ILOAD 8))
              (117 (ILOAD 5))
              (119 (IF_ICMPLE 124))
              (122 (ICONST_M1))
              (123 (IRETURN))
              (124 (ILOAD 8))
              (126 (ICONST_1))
              (127 (IADD))
              (128 (ISTORE 9))
              (130 (ILOAD 9))
              (132 (ALOAD_1))
              (133 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (136 (IADD))
              (137 (ICONST_1))
              (138 (ISUB))
              (139 (ISTORE 10))
              (141 (ILOAD 6))
              (143 (ICONST_1))
              (144 (IADD))
              (145 (ISTORE 11))
              (147 (GOTO 174))
              (150 (ALOAD_3))
              (151 (ILOAD 9))
              (153 (IINC 9 1))
              (156 (CALOAD))
              (157 (ALOAD 4))
              (159 (ILOAD 11))
              (161 (IINC 11 1))
              (164 (CALOAD))
              (165 (IF_ICMPEQ 174))
              (168 (IINC 8 1))
              (171 (GOTO 99))
              (174 (ILOAD 9))
              (176 (ILOAD 10))
              (178 (IF_ICMPLT 150))
              (181 (ILOAD 8))
              (183 (ALOAD_0))
              (184 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (187 (ISUB))
              (188 (IRETURN))
              (ENDOFCODE 189))
         (EXCEPTIONS)
         (STACKMAP (55 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (63 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (72 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (96 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (99 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (115 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (124 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (150 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL))
                   (174 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String"
      "substring" (PARAMETERS INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (ALOAD_0))
         (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
         (6 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
         (9 (ARETURN))
         (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "substring" (PARAMETERS INT INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 83)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ILOAD_1))
        (47 (IFNE 62))
        (50 (ILOAD_2))
        (51 (ALOAD_0))
        (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (55 (IF_ICMPNE 62))
        (58 (ALOAD_0))
        (59 (GOTO 82))
        (62 (NEW (CLASS "java.lang.String")))
        (65 (DUP))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (70 (ILOAD_1))
        (71 (IADD))
        (72 (ILOAD_2))
        (73 (ILOAD_1))
        (74 (ISUB))
        (75 (ALOAD_0))
        (76 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (79 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                     (INT INT (ARRAY CHAR))
                                     VOID)))
        (82 (ARETURN))
        (ENDOFCODE 83))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "java.lang.String"
      "concat" (PARAMETERS "java.lang.String")
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 58)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (4 (ISTORE_2))
           (5 (ILOAD_2))
           (6 (IFNE 11))
           (9 (ALOAD_0))
           (10 (ARETURN))
           (11 (ALOAD_0))
           (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (15 (ILOAD_2))
           (16 (IADD))
           (17 (NEWARRAY CHAR))
           (19 (ASTORE_3))
           (20 (ALOAD_0))
           (21 (ICONST_0))
           (22 (ALOAD_0))
           (23 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (26 (ALOAD_3))
           (27 (ICONST_0))
           (28 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (31 (ALOAD_1))
           (32 (ICONST_0))
           (33 (ILOAD_2))
           (34 (ALOAD_3))
           (35 (ALOAD_0))
           (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (39 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (42 (NEW (CLASS "java.lang.String")))
           (45 (DUP))
           (46 (ICONST_0))
           (47 (ALOAD_0))
           (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (51 (ILOAD_2))
           (52 (IADD))
           (53 (ALOAD_3))
           (54 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                        (INT INT (ARRAY CHAR))
                                        VOID)))
           (57 (ARETURN))
           (ENDOFCODE 58))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String"
      "replace" (PARAMETERS CHAR CHAR)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (MAX_LOCAL . 10)
        (CODE_LENGTH . 145)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ILOAD_2))
             (2 (IF_ICMPEQ 143))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (9 (ISTORE_3))
             (10 (ICONST_M1))
             (11 (ISTORE 4))
             (13 (ALOAD_0))
             (14 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
             (17 (ASTORE 5))
             (19 (ALOAD_0))
             (20 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (23 (ISTORE 6))
             (25 (GOTO 43))
             (28 (ALOAD 5))
             (30 (ILOAD 6))
             (32 (ILOAD 4))
             (34 (IADD))
             (35 (CALOAD))
             (36 (ILOAD_1))
             (37 (IF_ICMPNE 43))
             (40 (GOTO 52))
             (43 (IINC 4 1))
             (46 (ILOAD 4))
             (48 (ILOAD_3))
             (49 (IF_ICMPLT 28))
             (52 (ILOAD 4))
             (54 (ILOAD_3))
             (55 (IF_ICMPGE 143))
             (58 (ILOAD_3))
             (59 (NEWARRAY CHAR))
             (61 (ASTORE 7))
             (63 (ICONST_0))
             (64 (ISTORE 8))
             (66 (GOTO 85))
             (69 (ALOAD 7))
             (71 (ILOAD 8))
             (73 (ALOAD 5))
             (75 (ILOAD 6))
             (77 (ILOAD 8))
             (79 (IADD))
             (80 (CALOAD))
             (81 (CASTORE))
             (82 (IINC 8 1))
             (85 (ILOAD 8))
             (87 (ILOAD 4))
             (89 (IF_ICMPLT 69))
             (92 (GOTO 125))
             (95 (ALOAD 5))
             (97 (ILOAD 6))
             (99 (ILOAD 4))
             (101 (IADD))
             (102 (CALOAD))
             (103 (ISTORE 9))
             (105 (ALOAD 7))
             (107 (ILOAD 4))
             (109 (ILOAD 9))
             (111 (ILOAD_1))
             (112 (IF_ICMPNE 119))
             (115 (ILOAD_2))
             (116 (GOTO 121))
             (119 (ILOAD 9))
             (121 (CASTORE))
             (122 (IINC 4 1))
             (125 (ILOAD 4))
             (127 (ILOAD_3))
             (128 (IF_ICMPLT 95))
             (131 (NEW (CLASS "java.lang.String")))
             (134 (DUP))
             (135 (ICONST_0))
             (136 (ILOAD_3))
             (137 (ALOAD 7))
             (139 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           (INT INT (ARRAY CHAR))
                                           VOID)))
             (142 (ARETURN))
             (143 (ALOAD_0))
             (144 (ARETURN))
             (ENDOFCODE 145))
        (EXCEPTIONS)
        (STACKMAP (28 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (52 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (69 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (95 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (119 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT (ARRAY CHAR))
                              NIL))
                  (121 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT INT (ARRAY CHAR))
                              NIL))
                  (125 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT TOPX)
                              (STACK)
                              NIL))
                  (143 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL)))))
     (METHOD
      "java.lang.String"
      "toLowerCase" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (MAX_LOCAL . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toLowerCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String"
      "toUpperCase" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (MAX_LOCAL . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toUpperCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "trim" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 5)
       (CODE_LENGTH . 87)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (4 (ISTORE_1))
        (5 (ICONST_0))
        (6 (ISTORE_2))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (11 (ISTORE_3))
        (12 (ALOAD_0))
        (13 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (16 (ASTORE 4))
        (18 (GOTO 24))
        (21 (IINC 2 1))
        (24 (ILOAD_2))
        (25 (ILOAD_1))
        (26 (IF_ICMPGE 46))
        (29 (ALOAD 4))
        (31 (ILOAD_3))
        (32 (ILOAD_2))
        (33 (IADD))
        (34 (CALOAD))
        (35 (BIPUSH 32))
        (37 (IF_ICMPLE 21))
        (40 (GOTO 46))
        (43 (IINC 1 -1))
        (46 (ILOAD_2))
        (47 (ILOAD_1))
        (48 (IF_ICMPGE 64))
        (51 (ALOAD 4))
        (53 (ILOAD_3))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ICONST_1))
        (57 (ISUB))
        (58 (CALOAD))
        (59 (BIPUSH 32))
        (61 (IF_ICMPLE 43))
        (64 (ILOAD_2))
        (65 (IFGT 76))
        (68 (ILOAD_1))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (73 (IF_ICMPGE 85))
        (76 (ALOAD_0))
        (77 (ILOAD_2))
        (78 (ILOAD_1))
        (79 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (82 (GOTO 86))
        (85 (ALOAD_0))
        (86 (ARETURN))
        (ENDOFCODE 87))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (64 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (76 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (86 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD "java.lang.String"
             "toString" (PARAMETERS)
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (MAX_LOCAL . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ARETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String"
      "toCharArray" (PARAMETERS)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 5)
           (MAX_LOCAL . 2)
           (CODE_LENGTH . 20)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (4 (NEWARRAY CHAR))
                (6 (ASTORE_1))
                (7 (ALOAD_0))
                (8 (ICONST_0))
                (9 (ALOAD_0))
                (10 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (13 (ALOAD_1))
                (14 (ICONST_0))
                (15 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                             (INT INT (ARRAY CHAR) INT)
                                             VOID)))
                (18 (ALOAD_1))
                (19 (ARETURN))
                (ENDOFCODE 20))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String" "valueOf"
      (PARAMETERS "java.lang.Object")
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 1)
          (MAX_LOCAL . 1)
          (CODE_LENGTH . 14)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (IFNONNULL 9))
               (4 (LDC 0))
               (6 (GOTO 13))
               (9 (ALOAD_0))
               (10 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                            NIL (CLASS "java.lang.String"))))
               (13 (ARETURN))
               (ENDOFCODE 14))
          (EXCEPTIONS)
          (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object"))
                              (STACK)
                              NIL))
                    (13 (FRAME (LOCALS (CLASS "java.lang.Object"))
                               (STACK (CLASS "java.lang.String"))
                               NIL)))))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 3)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 9)
           (PARSEDCODE
                (0 (NEW (CLASS "java.lang.String")))
                (3 (DUP))
                (4 (ALOAD_0))
                (5 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (8 (ARETURN))
                (ENDOFCODE 9))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String" "valueOf"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 5)
          (MAX_LOCAL . 3)
          (CODE_LENGTH . 11)
          (PARSEDCODE (0 (NEW (CLASS "java.lang.String")))
                      (3 (DUP))
                      (4 (ALOAD_0))
                      (5 (ILOAD_1))
                      (6 (ILOAD_2))
                      (7 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY CHAR) INT INT)
                                                  VOID)))
                      (10 (ARETURN))
                      (ENDOFCODE 11))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD "java.lang.String"
             "valueOf" (PARAMETERS BOOLEAN)
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 1)
                   (MAX_LOCAL . 1)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFEQ 9))
                               (4 (LDC 1))
                               (6 (GOTO 11))
                               (9 (LDC 2))
                               (11 (ARETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT) (STACK) NIL))
                             (11 (FRAME (LOCALS INT)
                                        (STACK (CLASS "java.lang.String"))
                                        NIL)))))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS CHAR)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 5)
         (MAX_LOCAL . 2)
         (CODE_LENGTH . 19)
         (PARSEDCODE (0 (ICONST_1))
                     (1 (NEWARRAY CHAR))
                     (3 (DUP))
                     (4 (ICONST_0))
                     (5 (ILOAD_0))
                     (6 (CASTORE))
                     (7 (ASTORE_1))
                     (8 (NEW (CLASS "java.lang.String")))
                     (11 (DUP))
                     (12 (ICONST_0))
                     (13 (ICONST_1))
                     (14 (ALOAD_1))
                     (15 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  (INT INT (ARRAY CHAR))
                                                  VOID)))
                     (18 (ARETURN))
                     (ENDOFCODE 19))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ILOAD_0))
          (1 (BIPUSH 10))
          (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT INT)
                                     (CLASS "java.lang.String"))))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS LONG)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (JVM::LLOAD_0))
            (1 (BIPUSH 10))
            (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Long" (LONG INT)
                                       (CLASS "java.lang.String"))))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS*
                       *FINAL* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 20))
   (CLASS
    "java.lang.Class" "java.lang.Object"
    (CONSTANT_POOL (STRING 8)
                   (STRING 10)
                   (STRING 12))
    (FIELDS)
    (METHODS
     (METHOD
      "java.lang.Class" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Class"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (MAX_LOCAL . 1)
        (CODE_LENGTH . 35)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (ALOAD_0))
             (8 (INVOKEVIRTUAL (METHODCP "isInterface"
                                         "java.lang.Class" NIL BOOLEAN)))
             (11 (IFEQ 19))
             (14 (LDC 0))
             (16 (GOTO 21))
             (19 (LDC 1))
             (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (24 (ALOAD_0))
             (25 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                          NIL (CLASS "java.lang.String"))))
             (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (34 (ARETURN))
             (ENDOFCODE 35))
        (EXCEPTIONS)
        (STACKMAP (19 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.StringBuffer"))
                             NIL))
                  (21 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer"))
                             NIL)))))
     (METHOD "java.lang.Class" "forName"
             (PARAMETERS "java.lang.String")
             (RETURNTYPE . "java.lang.Class")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class"
             "newInstance" (PARAMETERS)
             (RETURNTYPE . "java.lang.Object")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "isInstance"
             (PARAMETERS "java.lang.Object")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "isAssignableFrom"
             (PARAMETERS "java.lang.Class")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class"
             "isInterface" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "isArray" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "getName" (PARAMETERS)
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Class" "getResourceAsStream"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 101)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (4 (IFLE 26))
        (7 (ALOAD_1))
        (8 (ICONST_0))
        (9 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                    CHAR)))
        (12 (BIPUSH 47))
        (14 (IF_ICMPNE 26))
        (17 (ALOAD_1))
        (18 (ICONST_1))
        (19 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (22 (ASTORE_1))
        (23 (GOTO 75))
        (26 (ALOAD_0))
        (27 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (30 (ASTORE_2))
        (31 (ALOAD_2))
        (32 (BIPUSH 46))
        (34 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.lang.String" (INT)
                                     INT)))
        (37 (ISTORE_3))
        (38 (ILOAD_3))
        (39 (IFLT 75))
        (42 (NEW (CLASS "java.lang.StringBuffer")))
        (45 (DUP))
        (46 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (49 (ALOAD_2))
        (50 (ICONST_0))
        (51 (ILOAD_3))
        (52 (ICONST_1))
        (53 (IADD))
        (54 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (57 (BIPUSH 46))
        (59 (BIPUSH 47))
        (61 (INVOKEVIRTUAL (METHODCP "replace" "java.lang.String" (CHAR CHAR)
                                     (CLASS "java.lang.String"))))
        (64 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (67 (ALOAD_1))
        (68 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (71 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (74 (ASTORE_1))
        (75 (NEW (CLASS "java.lang.StringBuffer")))
        (78 (DUP))
        (79 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (82 (LDC 2))
        (84 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (87 (ALOAD_1))
        (88 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (91 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (94 (INVOKESTATIC (METHODCP "openInputStream"
                                    "javax.microedition.io.Connector"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.io.InputStream"))))
        (97 (ARETURN))
        (98 (ASTORE_2))
        (99 (ACONST_NULL))
        (100 (ARETURN))
        (ENDOFCODE 101))
       (EXCEPTIONS (JVM::HANDLER 0 97 98 (CLASS "java.io.IOException")))
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (75 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL)))))
     (METHOD "java.lang.Class"
             "runCustomCode" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (CUSTOMCODE))
                               (1 (RETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS*
                       *FINAL* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 13))
   (CLASS
    "java.lang.Object" ""
    (CONSTANT_POOL (STRING 1)
                   (STRING 3)
                   (INT 999999)
                   (STRING 5)
                   (INT 500000))
    (FIELDS)
    (METHODS
     (METHOD "java.lang.Object" "<init>" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "getClass" (PARAMETERS)
             (RETURNTYPE . "java.lang.Class")
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "hashCode" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "equals" (PARAMETERS "java.lang.Object")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 2)
                   (MAX_LOCAL . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ALOAD_1))
                               (2 (JVM::IF_ACMPNE 9))
                               (5 (ICONST_1))
                               (6 (GOTO 10))
                               (9 (ICONST_0))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object")
                                               (CLASS "java.lang.Object"))
                                       (STACK)
                                       NIL))
                             (10 (FRAME (LOCALS (CLASS "java.lang.Object")
                                                (CLASS "java.lang.Object"))
                                        (STACK INT)
                                        NIL)))))
     (METHOD
      "java.lang.Object"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                    NIL (CLASS "java.lang.Class"))))
        (11 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (17 (LDC 0))
        (19 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (22 (ALOAD_0))
        (23 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (26 (INVOKESTATIC (METHODCP "toHexString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (35 (ARETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.Object" "notify" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "notifyAll" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "wait" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Object"
      "wait" (PARAMETERS LONG INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 62)
       (PARSEDCODE
            (0 (JVM::LLOAD_1))
            (1 (LCONST_0))
            (2 (LCMP))
            (3 (IFGE 16))
            (6 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (9 (DUP))
            (10 (LDC 1))
            (12 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (15 (ATHROW))
            (16 (ILOAD_3))
            (17 (IFLT 26))
            (20 (ILOAD_3))
            (21 (LDC 2))
            (23 (IF_ICMPLE 36))
            (26 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (29 (DUP))
            (30 (LDC 3))
            (32 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (35 (ATHROW))
            (36 (ILOAD_3))
            (37 (LDC 4))
            (39 (IF_ICMPGE 52))
            (42 (ILOAD_3))
            (43 (IFEQ 56))
            (46 (JVM::LLOAD_1))
            (47 (LCONST_0))
            (48 (LCMP))
            (49 (IFNE 56))
            (52 (JVM::LLOAD_1))
            (53 (LCONST_1))
            (54 (JVM::LADD))
            (55 (JVM::LSTORE_1))
            (56 (ALOAD_0))
            (57 (JVM::LLOAD_1))
            (58 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                         VOID)))
            (61 (RETURN))
            (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (36 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (52 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.Object" "wait" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (MAX_LOCAL . 1)
            (CODE_LENGTH . 6)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (LCONST_0))
                 (2 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                             VOID)))
                 (5 (RETURN))
                 (ENDOFCODE 6))
            (EXCEPTIONS)
            (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . CLASS_READY)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 6)))
  (ARRAY-CLASS-TABLE ((ARRAY "java.lang.String")
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      52)
                     ((ARRAY BYTE)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      28)
                     ((ARRAY BOOLEAN)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      27)
                     ((ARRAY LONG)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      26)
                     ((ARRAY DOUBLE)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      25)
                     ((ARRAY FLOAT)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      24)
                     ((ARRAY INT)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      23)
                     ((ARRAY SHORT)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      22)
                     ((ARRAY CHAR)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      21)))
 (ENV
  (EXTERNAL-CLASS-TABLE
   (CLASS
    "com.sun.cldc.i18n.StreamReader"
    "java.io.Reader"
    (CONSTANT_POOL (STRING "mark() not supported"))
    (FIELDS (FIELD "in" (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Reader" NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.io.InputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Reader")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (PUTFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (5 (ALOAD_0))
             (6 (ARETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "ready" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "available"
                                         "java.io.InputStream" NIL INT)))
             (7 (IFLE 14))
             (10 (ICONST_1))
             (11 (GOTO 15))
             (14 (ICONST_0))
             (15 (IRETURN))
             (16 (ASTORE_1))
             (17 (ICONST_0))
             (18 (IRETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS (JVM::HANDLER 0 15 16 (CLASS "java.io.IOException")))
        (STACKMAP (14 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                     TOPX)
                             (STACK)
                             NIL))
                  (15 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                     TOPX)
                             (STACK INT)
                             NIL))
                  (16 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                     TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL)))))
     (METHOD
      "markSupported" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                         "java.io.InputStream" NIL BOOLEAN)))
             (7 (IRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 32)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                       (CLASS "java.io.InputStream"))))
            (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                        "java.io.InputStream" NIL BOOLEAN)))
            (7 (IFEQ 21))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
            (14 (ILOAD_1))
            (15 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                         VOID)))
            (18 (GOTO 31))
            (21 (NEW (CLASS "java.io.IOException")))
            (24 (DUP))
            (25 (LDC 0))
            (27 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (30 (ATHROW))
            (31 (RETURN))
            (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                    INT)
                            (STACK)
                            NIL))
                 (31 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "reset"
                                         "java.io.InputStream" NIL VOID)))
             (7 (RETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 13)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "close"
                                         "java.io.InputStream" NIL VOID)))
             (7 (ALOAD_0))
             (8 (ACONST_NULL))
             (9 (PUTFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (12 (RETURN))
             (ENDOFCODE 13))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.StreamWriter"
    "java.io.Writer" (CONSTANT_POOL)
    (FIELDS (FIELD "out" (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Writer" NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (PUTFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
            (5 (ALOAD_0))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
            (4 (INVOKEVIRTUAL (METHODCP "flush"
                                        "java.io.OutputStream" NIL VOID)))
            (7 (RETURN))
            (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
            (4 (INVOKEVIRTUAL (METHODCP "close"
                                        "java.io.OutputStream" NIL VOID)))
            (7 (RETURN))
            (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "isLowerCase" (PARAMETERS CHAR)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (BIPUSH 97))
                               (3 (IF_ICMPLT 16))
                               (6 (ILOAD_0))
                               (7 (BIPUSH 122))
                               (9 (IF_ICMPGT 16))
                               (12 (ICONST_1))
                               (13 (GOTO 17))
                               (16 (ICONST_0))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (16 (FRAME (LOCALS INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD "isUpperCase" (PARAMETERS CHAR)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (BIPUSH 65))
                               (3 (IF_ICMPLT 16))
                               (6 (ILOAD_0))
                               (7 (BIPUSH 90))
                               (9 (IF_ICMPGT 16))
                               (12 (ICONST_1))
                               (13 (GOTO 17))
                               (16 (ICONST_0))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (16 (FRAME (LOCALS INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD
      "toLowerCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 15)
         (PARSEDCODE
              (0 (ILOAD_0))
              (1 (INVOKESTATIC
                      (METHODCP "isUpperCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
              (4 (IFEQ 13))
              (7 (ILOAD_0))
              (8 (BIPUSH 32))
              (10 (IADD))
              (11 (JVM::I2C))
              (12 (IRETURN))
              (13 (ILOAD_0))
              (14 (IRETURN))
              (ENDOFCODE 15))
         (EXCEPTIONS)
         (STACKMAP (13 (FRAME (LOCALS INT) (STACK) NIL)))))
     (METHOD
      "toUpperCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 15)
         (PARSEDCODE
              (0 (ILOAD_0))
              (1 (INVOKESTATIC
                      (METHODCP "isLowerCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
              (4 (IFEQ 13))
              (7 (ILOAD_0))
              (8 (BIPUSH 32))
              (10 (ISUB))
              (11 (JVM::I2C))
              (12 (IRETURN))
              (13 (ILOAD_0))
              (14 (IRETURN))
              (ENDOFCODE 15))
         (EXCEPTIONS)
         (STACKMAP (13 (FRAME (LOCALS INT) (STACK) NIL)))))
     (METHOD "isDigit" (PARAMETERS CHAR)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (BIPUSH 48))
                               (3 (IF_ICMPLT 16))
                               (6 (ILOAD_0))
                               (7 (BIPUSH 57))
                               (9 (IF_ICMPGT 16))
                               (12 (ICONST_1))
                               (13 (GOTO 17))
                               (16 (ICONST_0))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (16 (FRAME (LOCALS INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD
      "digit" (PARAMETERS CHAR INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 61)
        (PARSEDCODE
             (0 (ICONST_M1))
             (1 (ISTORE_2))
             (2 (ILOAD_1))
             (3 (ICONST_2))
             (4 (IF_ICMPLT 50))
             (7 (ILOAD_1))
             (8 (BIPUSH 36))
             (10 (IF_ICMPGT 50))
             (13 (ILOAD_0))
             (14 (INVOKESTATIC
                      (METHODCP "isDigit"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
             (17 (IFEQ 28))
             (20 (ILOAD_0))
             (21 (BIPUSH 48))
             (23 (ISUB))
             (24 (ISTORE_2))
             (25 (GOTO 50))
             (28 (ILOAD_0))
             (29 (INVOKESTATIC
                      (METHODCP "isUpperCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
             (32 (IFNE 42))
             (35 (ILOAD_0))
             (36 (INVOKESTATIC
                      (METHODCP "isLowerCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
             (39 (IFEQ 50))
             (42 (ILOAD_0))
             (43 (BIPUSH 31))
             (45 (JVM::IAND))
             (46 (BIPUSH 9))
             (48 (IADD))
             (49 (ISTORE_2))
             (50 (ILOAD_2))
             (51 (ILOAD_1))
             (52 (IF_ICMPGE 59))
             (55 (ILOAD_2))
             (56 (GOTO 60))
             (59 (ICONST_M1))
             (60 (IRETURN))
             (ENDOFCODE 61))
        (EXCEPTIONS)
        (STACKMAP (28 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (42 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (50 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (59 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (60 (FRAME (LOCALS INT INT INT)
                             (STACK INT)
                             NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.Helper"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "Missing default encoding ")
                   (STRING "_Reader")
                   (STRING "com.sun.cldc.i18n.j2se.Default_Reader")
                   (STRING "Encoding ")
                   (STRING " not found")
                   (STRING "InstantiationException ")
                   (STRING "IllegalAccessException ")
                   (STRING "ClassCastException ")
                   (STRING "_Writer")
                   (STRING "com.sun.cldc.i18n.j2se.Default_Writer")
                   (STRING "IOException reading reader ")
                   (STRING "IOException writing writer ")
                   (STRING "US_ASCII")
                   (STRING "ISO8859_1")
                   (STRING "ISO_8859_1")
                   (STRING "_InternalEncodingName")
                   (STRING "microedition.encoding")
                   (STRING "microedition.configuration")
                   (STRING "com.sun.cldc.i18n.Helper.i18npath")
                   (STRING "com.sun.cldc.i18n.j2me"))
    (FIELDS (FIELD "defaultEncoding"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "defaultMEPath"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "j2me" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastReaderEncoding"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastReader"
                   (CLASS "com.sun.cldc.i18n.StreamReader")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastWriterEncoding"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastWriter"
                   (CLASS "com.sun.cldc.i18n.StreamWriter")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getStreamReader"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE CLASS "java.io.Reader")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 38)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (4 (INVOKESTATIC (METHODCP "getStreamReader"
                                      "com.sun.cldc.i18n.Helper"
                                      ((CLASS "java.io.InputStream")
                                       (CLASS "java.lang.String"))
                                      (CLASS "java.io.Reader"))))
           (7 (ARETURN))
           (8 (ASTORE_1))
           (9 (NEW (CLASS "java.lang.RuntimeException")))
           (12 (DUP))
           (13 (NEW (CLASS "java.lang.StringBuffer")))
           (16 (DUP))
           (17 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (20 (LDC 0))
           (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (25 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (34 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (37 (ATHROW))
           (ENDOFCODE 38))
       (EXCEPTIONS
            (JVM::HANDLER 0 7 8
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (8 (FRAME (LOCALS (CLASS "java.io.InputStream")
                              TOPX)
                      (STACK (CLASS "java.io.UnsupportedEncodingException"))
                      NIL)))))
     (METHOD
      "getStreamReader"
      (PARAMETERS (CLASS "java.io.InputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Reader")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNULL 8))
        (4 (ALOAD_1))
        (5 (IFNONNULL 16))
        (8 (NEW (CLASS "java.lang.NullPointerException")))
        (11 (DUP))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (15 (ATHROW))
        (16 (ALOAD_1))
        (17
          (INVOKESTATIC (METHODCP "getStreamReaderPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (20 (ASTORE_2))
        (21 (ALOAD_2))
        (22 (ALOAD_0))
        (23 (ALOAD_1))
        (24 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamReader"
                                     ((CLASS "java.io.InputStream")
                                      (CLASS "java.lang.String"))
                                     (CLASS "java.io.Reader"))))
        (27 (ARETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                   (CLASS "java.lang.String")
                                   TOPX)
                           (STACK)
                           NIL))
                 (16 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "getStreamReaderPrim"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "com.sun.cldc.i18n.StreamReader")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 201)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ALOAD_0))
        (13 (INVOKESTATIC (METHODCP "internalNameForEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (16 (ASTORE_0))
        (17 (GETSTATIC (JVM::FIELDCP "j2me"
                                     "com.sun.cldc.i18n.Helper" BOOLEAN)))
        (20 (IFEQ 57))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (GETSTATIC (JVM::FIELDCP "defaultMEPath"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (BIPUSH 46))
        (38 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (41 (ALOAD_0))
        (42 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (45 (LDC 1))
        (47 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (50 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (53 (ASTORE_1))
        (54 (GOTO 60))
        (57 (LDC 2))
        (59 (ASTORE_1))
        (60 (ALOAD_1))
        (61 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (64 (ASTORE_2))
        (65 (ALOAD_2))
        (66 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (69 (CHECKCAST (CLASS "com.sun.cldc.i18n.StreamReader")))
        (72 (ARETURN))
        (73 (ASTORE_1))
        (74 (NEW (CLASS "java.io.UnsupportedEncodingException")))
        (77 (DUP))
        (78 (NEW (CLASS "java.lang.StringBuffer")))
        (81 (DUP))
        (82 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (85 (LDC 3))
        (87 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (90 (ALOAD_0))
        (91 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (94 (LDC 4))
        (96 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (99 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (102 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UnsupportedEncodingException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (105 (ATHROW))
        (106 (ASTORE_2))
        (107 (NEW (CLASS "java.lang.RuntimeException")))
        (110 (DUP))
        (111 (NEW (CLASS "java.lang.StringBuffer")))
        (114 (DUP))
        (115 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (118 (LDC 5))
        (120 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (123 (ALOAD_2))
        (124 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (127 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (130 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (133 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (136 (ATHROW))
        (137 (ASTORE_3))
        (138 (NEW (CLASS "java.lang.RuntimeException")))
        (141 (DUP))
        (142 (NEW (CLASS "java.lang.StringBuffer")))
        (145 (DUP))
        (146 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (149 (LDC 6))
        (151 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (154 (ALOAD_3))
        (155 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (158 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (161 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (164 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (167 (ATHROW))
        (168 (ASTORE 4))
        (170 (NEW (CLASS "java.lang.RuntimeException")))
        (173 (DUP))
        (174 (NEW (CLASS "java.lang.StringBuffer")))
        (177 (DUP))
        (178 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (181 (LDC 7))
        (183 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (186 (ALOAD 4))
        (188 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (191 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (194 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (197 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (200 (ATHROW))
        (ENDOFCODE 201))
       (EXCEPTIONS (JVM::HANDLER 17 72 73
                                 (CLASS "java.lang.ClassNotFoundException"))
                   (JVM::HANDLER 17 72 106
                                 (CLASS "java.lang.InstantiationException"))
                   (JVM::HANDLER 17 72 137
                                 (CLASS "java.lang.IllegalAccessException"))
                   (JVM::HANDLER 17 72 168
                                 (CLASS "java.lang.ClassCastException")))
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (73 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (106 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.InstantiationException"))
                        NIL))
            (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.IllegalAccessException"))
                        NIL))
            (168 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.ClassCastException"))
                        NIL)))))
     (METHOD
      "getStreamWriter"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 38)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (4 (INVOKESTATIC (METHODCP "getStreamWriter"
                                      "com.sun.cldc.i18n.Helper"
                                      ((CLASS "java.io.OutputStream")
                                       (CLASS "java.lang.String"))
                                      (CLASS "java.io.Writer"))))
           (7 (ARETURN))
           (8 (ASTORE_1))
           (9 (NEW (CLASS "java.lang.RuntimeException")))
           (12 (DUP))
           (13 (NEW (CLASS "java.lang.StringBuffer")))
           (16 (DUP))
           (17 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (20 (LDC 0))
           (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (25 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (34 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (37 (ATHROW))
           (ENDOFCODE 38))
       (EXCEPTIONS
            (JVM::HANDLER 0 7 8
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (8 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                              TOPX)
                      (STACK (CLASS "java.io.UnsupportedEncodingException"))
                      NIL)))))
     (METHOD
      "getStreamWriter"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNULL 8))
        (4 (ALOAD_1))
        (5 (IFNONNULL 16))
        (8 (NEW (CLASS "java.lang.NullPointerException")))
        (11 (DUP))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (15 (ATHROW))
        (16 (ALOAD_1))
        (17
          (INVOKESTATIC (METHODCP "getStreamWriterPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (20 (ASTORE_2))
        (21 (ALOAD_2))
        (22 (ALOAD_0))
        (23 (ALOAD_1))
        (24 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamWriter"
                                     ((CLASS "java.io.OutputStream")
                                      (CLASS "java.lang.String"))
                                     (CLASS "java.io.Writer"))))
        (27 (ARETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                   (CLASS "java.lang.String")
                                   TOPX)
                           (STACK)
                           NIL))
                 (16 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "getStreamWriterPrim"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "com.sun.cldc.i18n.StreamWriter")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 201)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ALOAD_0))
        (13 (INVOKESTATIC (METHODCP "internalNameForEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (16 (ASTORE_0))
        (17 (GETSTATIC (JVM::FIELDCP "j2me"
                                     "com.sun.cldc.i18n.Helper" BOOLEAN)))
        (20 (IFEQ 57))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (GETSTATIC (JVM::FIELDCP "defaultMEPath"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (BIPUSH 46))
        (38 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (41 (ALOAD_0))
        (42 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (45 (LDC 8))
        (47 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (50 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (53 (ASTORE_1))
        (54 (GOTO 60))
        (57 (LDC 9))
        (59 (ASTORE_1))
        (60 (ALOAD_1))
        (61 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (64 (ASTORE_2))
        (65 (ALOAD_2))
        (66 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (69 (CHECKCAST (CLASS "com.sun.cldc.i18n.StreamWriter")))
        (72 (ARETURN))
        (73 (ASTORE_1))
        (74 (NEW (CLASS "java.io.UnsupportedEncodingException")))
        (77 (DUP))
        (78 (NEW (CLASS "java.lang.StringBuffer")))
        (81 (DUP))
        (82 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (85 (LDC 3))
        (87 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (90 (ALOAD_0))
        (91 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (94 (LDC 4))
        (96 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (99 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (102 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UnsupportedEncodingException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (105 (ATHROW))
        (106 (ASTORE_2))
        (107 (NEW (CLASS "java.lang.RuntimeException")))
        (110 (DUP))
        (111 (NEW (CLASS "java.lang.StringBuffer")))
        (114 (DUP))
        (115 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (118 (LDC 5))
        (120 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (123 (ALOAD_2))
        (124 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (127 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (130 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (133 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (136 (ATHROW))
        (137 (ASTORE_3))
        (138 (NEW (CLASS "java.lang.RuntimeException")))
        (141 (DUP))
        (142 (NEW (CLASS "java.lang.StringBuffer")))
        (145 (DUP))
        (146 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (149 (LDC 6))
        (151 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (154 (ALOAD_3))
        (155 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (158 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (161 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (164 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (167 (ATHROW))
        (168 (ASTORE 4))
        (170 (NEW (CLASS "java.lang.RuntimeException")))
        (173 (DUP))
        (174 (NEW (CLASS "java.lang.StringBuffer")))
        (177 (DUP))
        (178 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (181 (LDC 7))
        (183 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (186 (ALOAD 4))
        (188 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (191 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (194 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (197 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (200 (ATHROW))
        (ENDOFCODE 201))
       (EXCEPTIONS (JVM::HANDLER 17 72 73
                                 (CLASS "java.lang.ClassNotFoundException"))
                   (JVM::HANDLER 17 72 106
                                 (CLASS "java.lang.InstantiationException"))
                   (JVM::HANDLER 17 72 137
                                 (CLASS "java.lang.IllegalAccessException"))
                   (JVM::HANDLER 17 72 168
                                 (CLASS "java.lang.ClassCastException")))
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (73 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (106 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.InstantiationException"))
                        NIL))
            (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.IllegalAccessException"))
                        NIL))
            (168 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.ClassCastException"))
                        NIL)))))
     (METHOD
      "byteToCharArray"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 40)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ILOAD_1))
           (2 (ILOAD_2))
           (3 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (6 (INVOKESTATIC (METHODCP "byteToCharArray"
                                      "com.sun.cldc.i18n.Helper"
                                      ((ARRAY BYTE)
                                       INT INT (CLASS "java.lang.String"))
                                      (ARRAY CHAR))))
           (9 (ARETURN))
           (10 (ASTORE_3))
           (11 (NEW (CLASS "java.lang.RuntimeException")))
           (14 (DUP))
           (15 (NEW (CLASS "java.lang.StringBuffer")))
           (18 (DUP))
           (19 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (22 (LDC 0))
           (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (27 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (33 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (36 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (39 (ATHROW))
           (ENDOFCODE 40))
       (EXCEPTIONS
            (JVM::HANDLER 0 9 10
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (10 (FRAME (LOCALS (ARRAY BYTE) INT INT TOPX)
                       (STACK (CLASS "java.io.UnsupportedEncodingException"))
                       NIL)))))
     (METHOD
      "charToByteArray"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 40)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ILOAD_1))
           (2 (ILOAD_2))
           (3 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (6 (INVOKESTATIC (METHODCP "charToByteArray"
                                      "com.sun.cldc.i18n.Helper"
                                      ((ARRAY CHAR)
                                       INT INT (CLASS "java.lang.String"))
                                      (ARRAY BYTE))))
           (9 (ARETURN))
           (10 (ASTORE_3))
           (11 (NEW (CLASS "java.lang.RuntimeException")))
           (14 (DUP))
           (15 (NEW (CLASS "java.lang.StringBuffer")))
           (18 (DUP))
           (19 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (22 (LDC 0))
           (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (27 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (33 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (36 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (39 (ATHROW))
           (ENDOFCODE 40))
       (EXCEPTIONS
            (JVM::HANDLER 0 9 10
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (10 (FRAME (LOCALS (ARRAY CHAR) INT INT TOPX)
                       (STACK (CLASS "java.io.UnsupportedEncodingException"))
                       NIL)))))
     (METHOD
      "byteToCharArray"
      (PARAMETERS (ARRAY BYTE)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 173)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 16))
        (4 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                   (CLASS "java.lang.String"))))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (15 (ATHROW))
        (16 (ILOAD_2))
        (17 (IFGE 32))
        (20 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (23 (DUP))
        (24 (ILOAD_2))
        (25 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (28 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (31 (ATHROW))
        (32 (ILOAD_1))
        (33 (ALOAD_0))
        (34 (ARRAYLENGTH))
        (35 (ILOAD_2))
        (36 (ISUB))
        (37 (IF_ICMPLE 54))
        (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (43 (DUP))
        (44 (ILOAD_1))
        (45 (ILOAD_2))
        (46 (IADD))
        (47 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (50 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (53 (ATHROW))
        (54 (GETSTATIC (JVM::FIELDCP "lastReaderEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (57 (IFNULL 70))
        (60 (GETSTATIC (JVM::FIELDCP "lastReaderEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (63 (ALOAD_3))
        (64 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (67 (IFNE 81))
        (70 (ALOAD_3))
        (71
          (INVOKESTATIC (METHODCP "getStreamReaderPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (74
         (PUTSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (77 (ALOAD_3))
        (78 (PUTSTATIC (JVM::FIELDCP "lastReaderEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (81
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (84 (ALOAD_0))
        (85 (ILOAD_1))
        (86 (ILOAD_2))
        (87 (INVOKEVIRTUAL (METHODCP "sizeOf"
                                     "com.sun.cldc.i18n.StreamReader"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (90 (ISTORE 4))
        (92 (ILOAD 4))
        (94 (NEWARRAY CHAR))
        (96 (ASTORE 5))
        (98
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (101 (NEW (CLASS "java.io.ByteArrayInputStream")))
        (104 (DUP))
        (105 (ALOAD_0))
        (106 (ILOAD_1))
        (107 (ILOAD_2))
        (108 (INVOKESPECIAL (METHODCP "<init>" "java.io.ByteArrayInputStream"
                                      ((ARRAY BYTE) INT INT)
                                      VOID)))
        (111 (ALOAD_3))
        (112 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamReader"
                                      ((CLASS "java.io.InputStream")
                                       (CLASS "java.lang.String"))
                                      (CLASS "java.io.Reader"))))
        (115 (POP))
        (116
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (119 (ALOAD 5))
        (121 (ICONST_0))
        (122 (ILOAD 4))
        (124 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
        (127 (POP))
        (128
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (131
            (INVOKEVIRTUAL (METHODCP "close" "com.sun.cldc.i18n.StreamReader"
                                     NIL VOID)))
        (134 (GOTO 170))
        (137 (ASTORE 6))
        (139 (NEW (CLASS "java.lang.RuntimeException")))
        (142 (DUP))
        (143 (NEW (CLASS "java.lang.StringBuffer")))
        (146 (DUP))
        (147 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (150 (LDC 10))
        (152 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (155 (ALOAD 6))
        (157 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (160 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (163 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (166 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (169 (ATHROW))
        (170 (ALOAD 5))
        (172 (ARETURN))
        (ENDOFCODE 173))
       (EXCEPTIONS (JVM::HANDLER 116
                                 134 137 (CLASS "java.io.IOException")))
       (STACKMAP (16 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (70 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (81 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (137 (FRAME (LOCALS (ARRAY BYTE)
                                     INT INT (CLASS "java.lang.String")
                                     INT (ARRAY CHAR)
                                     TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL))
                 (170 (FRAME (LOCALS (ARRAY BYTE)
                                     INT INT (CLASS "java.lang.String")
                                     INT (ARRAY CHAR)
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "charToByteArray"
      (PARAMETERS (ARRAY CHAR)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 129)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "lastWriterEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    (CLASS "java.lang.String"))))
        (3 (IFNULL 16))
        (6 (GETSTATIC (JVM::FIELDCP "lastWriterEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    (CLASS "java.lang.String"))))
        (9 (ALOAD_3))
        (10 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (13 (IFNE 27))
        (16 (ALOAD_3))
        (17
          (INVOKESTATIC (METHODCP "getStreamWriterPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (20
         (PUTSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (23 (ALOAD_3))
        (24 (PUTSTATIC (JVM::FIELDCP "lastWriterEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (27
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (30 (ALOAD_0))
        (31 (ILOAD_1))
        (32 (ILOAD_2))
        (33 (INVOKEVIRTUAL (METHODCP "sizeOf"
                                     "com.sun.cldc.i18n.StreamWriter"
                                     ((ARRAY CHAR) INT INT)
                                     INT)))
        (36 (ISTORE 4))
        (38 (NEW (CLASS "java.io.ByteArrayOutputStream")))
        (41 (DUP))
        (42 (ILOAD 4))
        (44 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.ByteArrayOutputStream" (INT)
                                     VOID)))
        (47 (ASTORE 5))
        (49
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (52 (ALOAD 5))
        (54 (ALOAD_3))
        (55 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamWriter"
                                     ((CLASS "java.io.OutputStream")
                                      (CLASS "java.lang.String"))
                                     (CLASS "java.io.Writer"))))
        (58 (POP))
        (59
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (62 (ALOAD_0))
        (63 (ILOAD_1))
        (64 (ILOAD_2))
        (65 (INVOKEVIRTUAL (METHODCP "write"
                                     "java.io.Writer" ((ARRAY CHAR) INT INT)
                                     VOID)))
        (68
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (71 (INVOKEVIRTUAL (METHODCP "close" "com.sun.cldc.i18n.StreamWriter"
                                     NIL VOID)))
        (74 (GOTO 110))
        (77 (ASTORE 6))
        (79 (NEW (CLASS "java.lang.RuntimeException")))
        (82 (DUP))
        (83 (NEW (CLASS "java.lang.StringBuffer")))
        (86 (DUP))
        (87 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (90 (LDC 11))
        (92 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (95 (ALOAD 6))
        (97 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                     NIL (CLASS "java.lang.String"))))
        (100 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (103 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (106 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (109 (ATHROW))
        (110 (ALOAD 5))
        (112 (INVOKEVIRTUAL (METHODCP "close" "java.io.ByteArrayOutputStream"
                                      NIL VOID)))
        (115 (GOTO 123))
        (118 (ASTORE 6))
        (120 (GOTO 123))
        (123 (ALOAD 5))
        (125 (INVOKEVIRTUAL (METHODCP "toByteArray"
                                      "java.io.ByteArrayOutputStream"
                                      NIL (ARRAY BYTE))))
        (128 (ARETURN))
        (ENDOFCODE 129))
       (EXCEPTIONS (JVM::HANDLER 59 74 77 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 110
                                 115 118 (CLASS "java.io.IOException")))
       (STACKMAP (16 (FRAME (LOCALS (ARRAY CHAR)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (ARRAY CHAR)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (77 (FRAME (LOCALS (ARRAY CHAR)
                                    INT INT (CLASS "java.lang.String")
                                    INT
                                    (CLASS "java.io.ByteArrayOutputStream")
                                    TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (110 (FRAME (LOCALS (ARRAY CHAR)
                                     INT INT (CLASS "java.lang.String")
                                     INT
                                     (CLASS "java.io.ByteArrayOutputStream")
                                     TOPX)
                             (STACK)
                             NIL))
                 (118 (FRAME (LOCALS (ARRAY CHAR)
                                     INT INT (CLASS "java.lang.String")
                                     INT
                                     (CLASS "java.io.ByteArrayOutputStream")
                                     TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL))
                 (123 (FRAME (LOCALS (ARRAY CHAR)
                                     INT INT (CLASS "java.lang.String")
                                     INT
                                     (CLASS "java.io.ByteArrayOutputStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "internalNameForEncoding"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 60)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESTATIC (METHODCP "normalizeEncodingName"
                                       "com.sun.cldc.i18n.Helper"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
            (4 (ASTORE_1))
            (5 (ALOAD_1))
            (6 (LDC 12))
            (8 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                        ((CLASS "java.lang.Object"))
                                        BOOLEAN)))
            (11 (IFEQ 17))
            (14 (LDC 13))
            (16 (ARETURN))
            (17 (ALOAD_1))
            (18 (LDC 14))
            (20 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (23 (IFEQ 29))
            (26 (LDC 13))
            (28 (ARETURN))
            (29 (NEW (CLASS "java.lang.StringBuffer")))
            (32 (DUP))
            (33 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (36 (ALOAD_1))
            (37 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (40 (LDC 15))
            (42 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (45 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (48 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (51 (ASTORE_2))
            (52 (ALOAD_2))
            (53 (IFNULL 58))
            (56 (ALOAD_2))
            (57 (ARETURN))
            (58 (ALOAD_1))
            (59 (ARETURN))
            (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL))
                 (58 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD
      "normalizeEncodingName"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
         (0 (NEW (CLASS "java.lang.StringBuffer")))
         (3 (DUP))
         (4 (ALOAD_0))
         (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
         (8 (ASTORE_1))
         (9 (ICONST_0))
         (10 (ISTORE_3))
         (11 (GOTO 54))
         (14 (ALOAD_1))
         (15 (ILOAD_3))
         (16 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.StringBuffer" (INT)
                                      CHAR)))
         (19 (ISTORE_2))
         (20 (ILOAD_2))
         (21 (BIPUSH 45))
         (23 (IF_ICMPEQ 32))
         (26 (ILOAD_2))
         (27 (BIPUSH 58))
         (29 (IF_ICMPNE 42))
         (32 (ALOAD_1))
         (33 (ILOAD_3))
         (34 (BIPUSH 95))
         (36 (INVOKEVIRTUAL (METHODCP "setCharAt"
                                      "java.lang.StringBuffer" (INT CHAR)
                                      VOID)))
         (39 (GOTO 51))
         (42 (ALOAD_1))
         (43 (ILOAD_3))
         (44 (ILOAD_2))
         (45 (INVOKESTATIC (METHODCP "toUpperCase"
                                     "java.lang.Character" (CHAR)
                                     CHAR)))
         (48 (INVOKEVIRTUAL (METHODCP "setCharAt"
                                      "java.lang.StringBuffer" (INT CHAR)
                                      VOID)))
         (51 (IINC 3 1))
         (54 (ILOAD_3))
         (55 (ALOAD_1))
         (56 (INVOKEVIRTUAL (METHODCP "length"
                                      "java.lang.StringBuffer" NIL INT)))
         (59 (IF_ICMPLT 14))
         (62 (ALOAD_1))
         (63 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (66 (ARETURN))
         (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX INT)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (42 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 55)
       (PARSEDCODE
           (0 (ICONST_0))
           (1 (PUTSTATIC (JVM::FIELDCP "j2me"
                                       "com.sun.cldc.i18n.Helper" BOOLEAN)))
           (4 (LDC 16))
           (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.String"))))
           (9 (PUTSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (12 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (15 (IFNONNULL 23))
           (18 (LDC 13))
           (20 (PUTSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (23 (LDC 17))
           (25 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
           (28 (IFNULL 35))
           (31 (ICONST_1))
           (32 (PUTSTATIC (JVM::FIELDCP "j2me"
                                        "com.sun.cldc.i18n.Helper" BOOLEAN)))
           (35 (LDC 18))
           (37 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
           (40 (PUTSTATIC (JVM::FIELDCP "defaultMEPath"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (43 (GETSTATIC (JVM::FIELDCP "defaultMEPath"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (46 (IFNONNULL 54))
           (49 (LDC 19))
           (51 (PUTSTATIC (JVM::FIELDCP "defaultMEPath"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (54 (RETURN))
           (ENDOFCODE 55))
       (EXCEPTIONS)
       (STACKMAP (23 (FRAME (LOCALS) (STACK) NIL))
                 (35 (FRAME (LOCALS) (STACK) NIL))
                 (54 (FRAME (LOCALS) (STACK) NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.j2me.ISO8859_1_Reader"
    "com.sun.cldc.i18n.StreamReader"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.i18n.StreamReader"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                     (CLASS "java.io.InputStream"))))
          (4 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
          (7 (IRETURN))
          (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 50)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE 4))
        (3 (GOTO 42))
        (6 (ALOAD_0))
        (7 (INVOKEVIRTUAL (METHODCP "read"
                                    "com.sun.cldc.i18n.j2me.ISO8859_1_Reader"
                                    NIL INT)))
        (10 (ISTORE 5))
        (12 (ILOAD 5))
        (14 (ICONST_M1))
        (15 (IF_ICMPNE 30))
        (18 (ILOAD 4))
        (20 (IFNE 27))
        (23 (ICONST_M1))
        (24 (GOTO 29))
        (27 (ILOAD 4))
        (29 (IRETURN))
        (30 (ALOAD_1))
        (31 (ILOAD_2))
        (32 (IINC 2 1))
        (35 (ILOAD 5))
        (37 (JVM::I2C))
        (38 (CASTORE))
        (39 (IINC 4 1))
        (42 (ILOAD 4))
        (44 (ILOAD_3))
        (45 (IF_ICMPLT 6))
        (48 (ILOAD_3))
        (49 (IRETURN))
        (ENDOFCODE 50))
       (EXCEPTIONS)
       (STACKMAP
         (6 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                           (ARRAY CHAR)
                           INT INT INT TOPX)
                   (STACK)
                   NIL))
         (27 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT INT)
                    (STACK)
                    NIL))
         (29 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT INT)
                    (STACK INT)
                    NIL))
         (30 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT INT)
                    (STACK)
                    NIL))
         (42 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT TOPX)
                    (STACK)
                    NIL)))))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ILOAD_3))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.j2me.ISO8859_1_Writer"
    "com.sun.cldc.i18n.StreamWriter"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.i18n.StreamWriter"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ILOAD_1))
           (1 (JVM::SIPUSH 255))
           (4 (IF_ICMPLE 10))
           (7 (BIPUSH 63))
           (9 (ISTORE_1))
           (10 (ALOAD_0))
           (11 (GETFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
           (14 (ILOAD_1))
           (15 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                        VOID)))
           (18 (RETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
         (10 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                            INT)
                    (STACK)
                    NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 22)
       (PARSEDCODE
        (0 (GOTO 13))
        (3 (ALOAD_0))
        (4 (ALOAD_1))
        (5 (ILOAD_2))
        (6 (IINC 2 1))
        (9 (CALOAD))
        (10
           (INVOKEVIRTUAL (METHODCP "write"
                                    "com.sun.cldc.i18n.j2me.ISO8859_1_Writer"
                                    (INT)
                                    VOID)))
        (13 (ILOAD_3))
        (14 (DUP))
        (15 (ICONST_1))
        (16 (ISUB))
        (17 (ISTORE_3))
        (18 (IFGT 3))
        (21 (RETURN))
        (ENDOFCODE 22))
       (EXCEPTIONS)
       (STACKMAP
         (3 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                           (ARRAY CHAR)
                           INT INT)
                   (STACK)
                   NIL))
         (13 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                            (ARRAY CHAR)
                            INT INT)
                    (STACK)
                    NIL)))))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE 4))
        (3 (GOTO 21))
        (6 (ALOAD_0))
        (7 (ALOAD_1))
        (8 (ILOAD_2))
        (9 (ILOAD 4))
        (11 (IADD))
        (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (15
           (INVOKEVIRTUAL (METHODCP "write"
                                    "com.sun.cldc.i18n.j2me.ISO8859_1_Writer"
                                    (INT)
                                    VOID)))
        (18 (IINC 4 1))
        (21 (ILOAD 4))
        (23 (ILOAD_3))
        (24 (IF_ICMPLT 6))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
         (6 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                           (CLASS "java.lang.String")
                           INT INT INT)
                   (STACK)
                   NIL))
         (21 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                            (CLASS "java.lang.String")
                            INT INT INT)
                    (STACK)
                    NIL)))))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ILOAD_3))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.j2se.Default_Writer"
    "com.sun.cldc.i18n.StreamWriter"
    (CONSTANT_POOL (STRING "Illegal call to J2SE_Writer::write")
                   (STRING "Illegal call to J2SE_Writer::sizeOf"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.i18n.StreamWriter"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 23)
       (PARSEDCODE
           (0 (ALOAD_2))
           (1 (IFNONNULL 13))
           (4 (NEW (CLASS "java.io.OutputStreamWriter")))
           (7 (DUP))
           (8 (ALOAD_1))
           (9 (INVOKESPECIAL (METHODCP "<init>" "java.io.OutputStreamWriter"
                                       ((CLASS "java.io.OutputStream"))
                                       VOID)))
           (12 (ARETURN))
           (13 (NEW (CLASS "java.io.OutputStreamWriter")))
           (16 (DUP))
           (17 (ALOAD_1))
           (18 (ALOAD_2))
           (19 (INVOKESPECIAL (METHODCP "<init>" "java.io.OutputStreamWriter"
                                        ((CLASS "java.io.OutputStream")
                                         (CLASS "java.lang.String"))
                                        VOID)))
           (22 (ARETURN))
           (ENDOFCODE 23))
       (EXCEPTIONS)
       (STACKMAP
           (13 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2se.Default_Writer")
                              (CLASS "java.io.OutputStream")
                              (CLASS "java.lang.String"))
                      (STACK)
                      NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "sizeOf"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.DateParser"
    "java.lang.Object"
    (CONSTANT_POOL (INT 1721426)
                   (STRING "Jan")
                   (STRING "Feb")
                   (STRING "Mar")
                   (STRING "Apr")
                   (STRING "May")
                   (STRING "Jun")
                   (STRING "Jul")
                   (STRING "Aug")
                   (STRING "Sep")
                   (STRING "Oct")
                   (STRING "Nov")
                   (STRING "Dec")
                   (STRING "Mon")
                   (STRING "Tue")
                   (STRING "Wed")
                   (STRING "Thu")
                   (STRING "Fri")
                   (STRING "Sat")
                   (STRING "Sun")
                   (LONG 365)
                   (LONG 4)
                   (LONG 1721423)
                   (LONG 400)
                   (LONG 100)
                   (LONG 2)
                   (LONG 2440588)
                   (INT 3600000)
                   (STRING "am")
                   (STRING "pm")
                   (STRING "monday")
                   (STRING "tuesday")
                   (STRING "wednesday")
                   (STRING "thursday")
                   (STRING "friday")
                   (STRING "saturday")
                   (STRING "sunday")
                   (STRING "january")
                   (STRING "february")
                   (STRING "march")
                   (STRING "april")
                   (STRING "may")
                   (STRING "june")
                   (STRING "july")
                   (STRING "august")
                   (STRING "september")
                   (STRING "october")
                   (STRING "november")
                   (STRING "december")
                   (STRING "gmt")
                   (STRING "ut")
                   (STRING "utc")
                   (STRING "est")
                   (STRING "edt")
                   (STRING "cst")
                   (STRING "cdt")
                   (STRING "mst")
                   (STRING "mdt")
                   (STRING "pst")
                   (STRING "pdt")
                   (STRING "GMT")
                   (STRING "UT")
                   (STRING "UTC")
                   (STRING "PST")
                   (STRING "PDT")
                   (STRING "JST"))
    (FIELDS (FIELD "year"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "month"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "day"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "hour"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "minute"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "second"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "milli"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "tzoffset"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "local_tz" INT
                   (ACCESSFLAGS *CLASS* *PROTECTED* *STATIC*)
                   -1)
            (FIELD "timezones"
                   (CLASS "java.util.Hashtable")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "days_in_month" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "month_shorts"
                   (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "weekday_shorts"
                   (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "julianDayOffset" LONG
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "millisPerHour" INT
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "millisPerDay" INT
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "JAN_1_1_JULIAN_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "wtb" (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "ttb" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "LEAP_NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS INT INT INT INT INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 329)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (BIPUSH 12))
          (7 (NEWARRAY INT))
          (9 (DUP))
          (10 (ICONST_0))
          (11 (BIPUSH 31))
          (13 (IASTORE))
          (14 (DUP))
          (15 (ICONST_1))
          (16 (BIPUSH 28))
          (18 (IASTORE))
          (19 (DUP))
          (20 (ICONST_2))
          (21 (BIPUSH 31))
          (23 (IASTORE))
          (24 (DUP))
          (25 (ICONST_3))
          (26 (BIPUSH 30))
          (28 (IASTORE))
          (29 (DUP))
          (30 (ICONST_4))
          (31 (BIPUSH 31))
          (33 (IASTORE))
          (34 (DUP))
          (35 (ICONST_5))
          (36 (BIPUSH 30))
          (38 (IASTORE))
          (39 (DUP))
          (40 (BIPUSH 6))
          (42 (BIPUSH 31))
          (44 (IASTORE))
          (45 (DUP))
          (46 (BIPUSH 7))
          (48 (BIPUSH 31))
          (50 (IASTORE))
          (51 (DUP))
          (52 (BIPUSH 8))
          (54 (BIPUSH 30))
          (56 (IASTORE))
          (57 (DUP))
          (58 (BIPUSH 9))
          (60 (BIPUSH 31))
          (62 (IASTORE))
          (63 (DUP))
          (64 (BIPUSH 10))
          (66 (BIPUSH 30))
          (68 (IASTORE))
          (69 (DUP))
          (70 (BIPUSH 11))
          (72 (BIPUSH 31))
          (74 (IASTORE))
          (75 (PUTFIELD (JVM::FIELDCP "days_in_month"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
          (78 (ALOAD_0))
          (79 (BIPUSH 12))
          (81 (ANEWARRAY (CLASS "java.lang.String")))
          (84 (DUP))
          (85 (ICONST_0))
          (86 (LDC 1))
          (88 (AASTORE))
          (89 (DUP))
          (90 (ICONST_1))
          (91 (LDC 2))
          (93 (AASTORE))
          (94 (DUP))
          (95 (ICONST_2))
          (96 (LDC 3))
          (98 (AASTORE))
          (99 (DUP))
          (100 (ICONST_3))
          (101 (LDC 4))
          (103 (AASTORE))
          (104 (DUP))
          (105 (ICONST_4))
          (106 (LDC 5))
          (108 (AASTORE))
          (109 (DUP))
          (110 (ICONST_5))
          (111 (LDC 6))
          (113 (AASTORE))
          (114 (DUP))
          (115 (BIPUSH 6))
          (117 (LDC 7))
          (119 (AASTORE))
          (120 (DUP))
          (121 (BIPUSH 7))
          (123 (LDC 8))
          (125 (AASTORE))
          (126 (DUP))
          (127 (BIPUSH 8))
          (129 (LDC 9))
          (131 (AASTORE))
          (132 (DUP))
          (133 (BIPUSH 9))
          (135 (LDC 10))
          (137 (AASTORE))
          (138 (DUP))
          (139 (BIPUSH 10))
          (141 (LDC 11))
          (143 (AASTORE))
          (144 (DUP))
          (145 (BIPUSH 11))
          (147 (LDC 12))
          (149 (AASTORE))
          (150 (PUTFIELD (JVM::FIELDCP "month_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (153 (ALOAD_0))
          (154 (BIPUSH 7))
          (156 (ANEWARRAY (CLASS "java.lang.String")))
          (159 (DUP))
          (160 (ICONST_0))
          (161 (LDC 13))
          (163 (AASTORE))
          (164 (DUP))
          (165 (ICONST_1))
          (166 (LDC 14))
          (168 (AASTORE))
          (169 (DUP))
          (170 (ICONST_2))
          (171 (LDC 15))
          (173 (AASTORE))
          (174 (DUP))
          (175 (ICONST_3))
          (176 (LDC 16))
          (178 (AASTORE))
          (179 (DUP))
          (180 (ICONST_4))
          (181 (LDC 17))
          (183 (AASTORE))
          (184 (DUP))
          (185 (ICONST_5))
          (186 (LDC 18))
          (188 (AASTORE))
          (189 (DUP))
          (190 (BIPUSH 6))
          (192 (LDC 19))
          (194 (AASTORE))
          (195 (PUTFIELD (JVM::FIELDCP "weekday_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (198 (ILOAD_1))
          (199 (JVM::SIPUSH 1583))
          (202 (IF_ICMPLT 282))
          (205 (ILOAD_2))
          (206 (IFLT 282))
          (209 (ILOAD_2))
          (210 (BIPUSH 11))
          (212 (IF_ICMPGT 282))
          (215 (ILOAD_3))
          (216 (IFLT 282))
          (219 (ILOAD_3))
          (220 (ALOAD_0))
          (221 (GETFIELD (JVM::FIELDCP "days_in_month"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY INT))))
          (224 (ILOAD_2))
          (225 (IALOAD))
          (226 (IF_ICMPLE 246))
          (229 (ILOAD_2))
          (230 (ICONST_1))
          (231 (IF_ICMPNE 282))
          (234 (ILOAD_3))
          (235 (BIPUSH 29))
          (237 (IF_ICMPNE 282))
          (240 (ILOAD_1))
          (241 (ICONST_4))
          (242 (IREM))
          (243 (IFNE 282))
          (246 (ILOAD 4))
          (248 (IFLT 282))
          (251 (ILOAD 4))
          (253 (BIPUSH 23))
          (255 (IF_ICMPGT 282))
          (258 (ILOAD 5))
          (260 (IFLT 282))
          (263 (ILOAD 5))
          (265 (BIPUSH 59))
          (267 (IF_ICMPGT 282))
          (270 (ILOAD 6))
          (272 (IFLT 282))
          (275 (ILOAD 6))
          (277 (BIPUSH 59))
          (279 (IF_ICMPLE 290))
          (282 (NEW (CLASS "java.lang.IllegalArgumentException")))
          (285 (DUP))
          (286 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IllegalArgumentException"
                                        NIL VOID)))
          (289 (ATHROW))
          (290 (ALOAD_0))
          (291 (ILOAD_1))
          (292 (PUTFIELD (JVM::FIELDCP "year"
                                       "com.sun.cldc.io.DateParser" INT)))
          (295 (ALOAD_0))
          (296 (ILOAD_2))
          (297 (PUTFIELD (JVM::FIELDCP "month"
                                       "com.sun.cldc.io.DateParser" INT)))
          (300 (ALOAD_0))
          (301 (ILOAD_3))
          (302 (PUTFIELD (JVM::FIELDCP "day"
                                       "com.sun.cldc.io.DateParser" INT)))
          (305 (ALOAD_0))
          (306 (ILOAD 4))
          (308 (PUTFIELD (JVM::FIELDCP "hour"
                                       "com.sun.cldc.io.DateParser" INT)))
          (311 (ALOAD_0))
          (312 (ILOAD 5))
          (314 (PUTFIELD (JVM::FIELDCP "minute"
                                       "com.sun.cldc.io.DateParser" INT)))
          (317 (ALOAD_0))
          (318 (ILOAD 6))
          (320 (PUTFIELD (JVM::FIELDCP "second"
                                       "com.sun.cldc.io.DateParser" INT)))
          (323 (ALOAD_0))
          (324 (ICONST_0))
          (325 (PUTFIELD (JVM::FIELDCP "milli"
                                       "com.sun.cldc.io.DateParser" INT)))
          (328 (RETURN))
          (ENDOFCODE 329))
       (EXCEPTIONS)
       (STACKMAP (246 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (282 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (290 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 204)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (BIPUSH 12))
          (7 (NEWARRAY INT))
          (9 (DUP))
          (10 (ICONST_0))
          (11 (BIPUSH 31))
          (13 (IASTORE))
          (14 (DUP))
          (15 (ICONST_1))
          (16 (BIPUSH 28))
          (18 (IASTORE))
          (19 (DUP))
          (20 (ICONST_2))
          (21 (BIPUSH 31))
          (23 (IASTORE))
          (24 (DUP))
          (25 (ICONST_3))
          (26 (BIPUSH 30))
          (28 (IASTORE))
          (29 (DUP))
          (30 (ICONST_4))
          (31 (BIPUSH 31))
          (33 (IASTORE))
          (34 (DUP))
          (35 (ICONST_5))
          (36 (BIPUSH 30))
          (38 (IASTORE))
          (39 (DUP))
          (40 (BIPUSH 6))
          (42 (BIPUSH 31))
          (44 (IASTORE))
          (45 (DUP))
          (46 (BIPUSH 7))
          (48 (BIPUSH 31))
          (50 (IASTORE))
          (51 (DUP))
          (52 (BIPUSH 8))
          (54 (BIPUSH 30))
          (56 (IASTORE))
          (57 (DUP))
          (58 (BIPUSH 9))
          (60 (BIPUSH 31))
          (62 (IASTORE))
          (63 (DUP))
          (64 (BIPUSH 10))
          (66 (BIPUSH 30))
          (68 (IASTORE))
          (69 (DUP))
          (70 (BIPUSH 11))
          (72 (BIPUSH 31))
          (74 (IASTORE))
          (75 (PUTFIELD (JVM::FIELDCP "days_in_month"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
          (78 (ALOAD_0))
          (79 (BIPUSH 12))
          (81 (ANEWARRAY (CLASS "java.lang.String")))
          (84 (DUP))
          (85 (ICONST_0))
          (86 (LDC 1))
          (88 (AASTORE))
          (89 (DUP))
          (90 (ICONST_1))
          (91 (LDC 2))
          (93 (AASTORE))
          (94 (DUP))
          (95 (ICONST_2))
          (96 (LDC 3))
          (98 (AASTORE))
          (99 (DUP))
          (100 (ICONST_3))
          (101 (LDC 4))
          (103 (AASTORE))
          (104 (DUP))
          (105 (ICONST_4))
          (106 (LDC 5))
          (108 (AASTORE))
          (109 (DUP))
          (110 (ICONST_5))
          (111 (LDC 6))
          (113 (AASTORE))
          (114 (DUP))
          (115 (BIPUSH 6))
          (117 (LDC 7))
          (119 (AASTORE))
          (120 (DUP))
          (121 (BIPUSH 7))
          (123 (LDC 8))
          (125 (AASTORE))
          (126 (DUP))
          (127 (BIPUSH 8))
          (129 (LDC 9))
          (131 (AASTORE))
          (132 (DUP))
          (133 (BIPUSH 9))
          (135 (LDC 10))
          (137 (AASTORE))
          (138 (DUP))
          (139 (BIPUSH 10))
          (141 (LDC 11))
          (143 (AASTORE))
          (144 (DUP))
          (145 (BIPUSH 11))
          (147 (LDC 12))
          (149 (AASTORE))
          (150 (PUTFIELD (JVM::FIELDCP "month_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (153 (ALOAD_0))
          (154 (BIPUSH 7))
          (156 (ANEWARRAY (CLASS "java.lang.String")))
          (159 (DUP))
          (160 (ICONST_0))
          (161 (LDC 13))
          (163 (AASTORE))
          (164 (DUP))
          (165 (ICONST_1))
          (166 (LDC 14))
          (168 (AASTORE))
          (169 (DUP))
          (170 (ICONST_2))
          (171 (LDC 15))
          (173 (AASTORE))
          (174 (DUP))
          (175 (ICONST_3))
          (176 (LDC 16))
          (178 (AASTORE))
          (179 (DUP))
          (180 (ICONST_4))
          (181 (LDC 17))
          (183 (AASTORE))
          (184 (DUP))
          (185 (ICONST_5))
          (186 (LDC 18))
          (188 (AASTORE))
          (189 (DUP))
          (190 (BIPUSH 6))
          (192 (LDC 19))
          (194 (AASTORE))
          (195 (PUTFIELD (JVM::FIELDCP "weekday_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (198 (ALOAD_0))
          (199 (ALOAD_1))
          (200 (INVOKESPECIAL (METHODCP "internalParse"
                                        "com.sun.cldc.io.DateParser"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
          (203 (RETURN))
          (ENDOFCODE 204))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setTimeZone"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                    (CLASS "java.util.Hashtable"))))
        (3 (ALOAD_0))
        (4 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                    ((CLASS "java.lang.Object"))
                                    (CLASS "java.lang.Object"))))
        (7 (IFNONNULL 11))
        (10 (RETURN))
        (11 (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (14 (ALOAD_0))
        (15 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                     ((CLASS "java.lang.Object"))
                                     (CLASS "java.lang.Object"))))
        (18 (CHECKCAST (CLASS "java.lang.Integer")))
        (21 (INVOKEVIRTUAL (METHODCP "intValue"
                                     "java.lang.Integer" NIL INT)))
        (24 (PUTSTATIC (JVM::FIELDCP "local_tz"
                                     "com.sun.cldc.io.DateParser" INT)))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD
      "parse"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
         (0 (NEW (CLASS "com.sun.cldc.io.DateParser")))
         (3 (DUP))
         (4 (ALOAD_0))
         (5 (INVOKESPECIAL (METHODCP "<init>" "com.sun.cldc.io.DateParser"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
         (8 (INVOKEVIRTUAL (METHODCP "getTime"
                                     "com.sun.cldc.io.DateParser" NIL LONG)))
         (11 (JVM::LRETURN))
         (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getYear" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "year"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getMonth" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "month"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getDay" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "day"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getHour" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "hour"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getMinute" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "minute"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getSecond" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "second"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getTime" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 6)
        (CODE_LENGTH . 96)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "year"
                                        "com.sun.cldc.io.DateParser" INT)))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "month"
                                        "com.sun.cldc.io.DateParser" INT)))
             (9 (ALOAD_0))
             (10 (GETFIELD (JVM::FIELDCP "day"
                                         "com.sun.cldc.io.DateParser" INT)))
             (13 (INVOKESPECIAL (METHODCP "computeJulianDay"
                                          "com.sun.cldc.io.DateParser"
                                          (INT INT INT)
                                          LONG)))
             (16 (JVM::LSTORE_1))
             (17 (ALOAD_0))
             (18 (JVM::LLOAD_1))
             (19 (INVOKESPECIAL (METHODCP "julianDayToMillis"
                                          "com.sun.cldc.io.DateParser" (LONG)
                                          LONG)))
             (22 (JVM::LSTORE_3))
             (23 (ICONST_0))
             (24 (ISTORE 5))
             (26 (ILOAD 5))
             (28 (ALOAD_0))
             (29 (GETFIELD (JVM::FIELDCP "hour"
                                         "com.sun.cldc.io.DateParser" INT)))
             (32 (IADD))
             (33 (ISTORE 5))
             (35 (ILOAD 5))
             (37 (BIPUSH 60))
             (39 (IMUL))
             (40 (ISTORE 5))
             (42 (ILOAD 5))
             (44 (ALOAD_0))
             (45 (GETFIELD (JVM::FIELDCP "minute"
                                         "com.sun.cldc.io.DateParser" INT)))
             (48 (IADD))
             (49 (ISTORE 5))
             (51 (ILOAD 5))
             (53 (BIPUSH 60))
             (55 (IMUL))
             (56 (ISTORE 5))
             (58 (ILOAD 5))
             (60 (ALOAD_0))
             (61 (GETFIELD (JVM::FIELDCP "second"
                                         "com.sun.cldc.io.DateParser" INT)))
             (64 (IADD))
             (65 (ISTORE 5))
             (67 (ILOAD 5))
             (69 (JVM::SIPUSH 1000))
             (72 (IMUL))
             (73 (ISTORE 5))
             (75 (ILOAD 5))
             (77 (ALOAD_0))
             (78 (GETFIELD (JVM::FIELDCP "milli"
                                         "com.sun.cldc.io.DateParser" INT)))
             (81 (IADD))
             (82 (ISTORE 5))
             (84 (JVM::LLOAD_3))
             (85 (ILOAD 5))
             (87 (JVM::I2L))
             (88 (JVM::LADD))
             (89 (ALOAD_0))
             (90 (GETFIELD (JVM::FIELDCP "tzoffset"
                                         "com.sun.cldc.io.DateParser" INT)))
             (93 (JVM::I2L))
             (94 (JVM::LSUB))
             (95 (JVM::LRETURN))
             (ENDOFCODE 96))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "computeJulianDay"
      (PARAMETERS INT INT INT)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 8)
       (JVM::MAX_LOCALS . 10)
       (CODE_LENGTH . 134)
       (PARSEDCODE
        (0 (LCONST_0))
        (1 (JVM::LSTORE 5))
        (3 (ILOAD_1))
        (4 (ICONST_4))
        (5 (IREM))
        (6 (IFNE 13))
        (9 (ICONST_1))
        (10 (GOTO 14))
        (13 (ICONST_0))
        (14 (ISTORE 7))
        (16 (ILOAD_1))
        (17 (ICONST_1))
        (18 (ISUB))
        (19 (ISTORE 4))
        (21 (JVM::LDC2_W 20))
        (24 (ILOAD 4))
        (26 (JVM::I2L))
        (27 (JVM::LMUL))
        (28 (ILOAD 4))
        (30 (JVM::I2L))
        (31 (JVM::LDC2_W 21))
        (34 (INVOKESTATIC (METHODCP "floorDivide"
                                    "com.sun.cldc.io.DateParser" (LONG LONG)
                                    LONG)))
        (37 (JVM::LADD))
        (38 (JVM::LDC2_W 22))
        (41 (JVM::LADD))
        (42 (JVM::LSTORE 8))
        (44 (ILOAD 7))
        (46 (IFEQ 68))
        (49 (ILOAD_1))
        (50 (BIPUSH 100))
        (52 (IREM))
        (53 (IFNE 64))
        (56 (ILOAD_1))
        (57 (JVM::SIPUSH 400))
        (60 (IREM))
        (61 (IFNE 68))
        (64 (ICONST_1))
        (65 (GOTO 69))
        (68 (ICONST_0))
        (69 (ISTORE 7))
        (71 (JVM::LLOAD 8))
        (73 (ILOAD 4))
        (75 (JVM::I2L))
        (76 (JVM::LDC2_W 23))
        (79 (INVOKESTATIC (METHODCP "floorDivide"
                                    "com.sun.cldc.io.DateParser" (LONG LONG)
                                    LONG)))
        (82 (ILOAD 4))
        (84 (JVM::I2L))
        (85 (JVM::LDC2_W 24))
        (88 (INVOKESTATIC (METHODCP "floorDivide"
                                    "com.sun.cldc.io.DateParser" (LONG LONG)
                                    LONG)))
        (91 (JVM::LSUB))
        (92 (JVM::LDC2_W 25))
        (95 (JVM::LADD))
        (96 (JVM::LADD))
        (97 (JVM::LSTORE 8))
        (99 (JVM::LLOAD 8))
        (101 (ILOAD 7))
        (103 (IFEQ 115))
        (106 (GETSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (109 (ILOAD_2))
        (110 (IALOAD))
        (111 (JVM::I2L))
        (112 (GOTO 121))
        (115 (GETSTATIC (JVM::FIELDCP "NUM_DAYS" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (118 (ILOAD_2))
        (119 (IALOAD))
        (120 (JVM::I2L))
        (121 (JVM::LADD))
        (122 (JVM::LSTORE 8))
        (124 (JVM::LLOAD 8))
        (126 (ILOAD_3))
        (127 (JVM::I2L))
        (128 (JVM::LADD))
        (129 (JVM::LSTORE 8))
        (131 (JVM::LLOAD 8))
        (133 (JVM::LRETURN))
        (ENDOFCODE 134))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (64 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT INT INT INT LONG TOPX INT LONG TOPX)
                            (STACK)
                            NIL))
                 (68 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT INT INT INT LONG TOPX INT LONG TOPX)
                            (STACK)
                            NIL))
                 (69 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT INT INT INT LONG TOPX INT LONG TOPX)
                            (STACK INT)
                            NIL))
                 (115 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG)
                             NIL))
                 (121 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG TOPX LONG)
                             NIL)))))
     (METHOD "floorDivide" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 20)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_0))
                               (2 (LCMP))
                               (3 (IFLT 12))
                               (6 (JVM::LLOAD_0))
                               (7 (JVM::LLOAD_2))
                               (8 (JVM::LDIV))
                               (9 (GOTO 19))
                               (12 (JVM::LLOAD_0))
                               (13 (LCONST_1))
                               (14 (JVM::LADD))
                               (15 (JVM::LLOAD_2))
                               (16 (JVM::LDIV))
                               (17 (LCONST_1))
                               (18 (JVM::LSUB))
                               (19 (JVM::LRETURN))
                               (ENDOFCODE 20))
                   (EXCEPTIONS)
                   (STACKMAP (12 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (19 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD
      "julianDayToMillis" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 11)
        (PARSEDCODE
             (0 (JVM::LLOAD_1))
             (1 (GETSTATIC (JVM::FIELDCP "julianDayOffset"
                                         "com.sun.cldc.io.DateParser" LONG)))
             (4 (JVM::LSUB))
             (5 (GETSTATIC (JVM::FIELDCP "millisPerDay"
                                         "com.sun.cldc.io.DateParser" INT)))
             (8 (JVM::I2L))
             (9 (JVM::LMUL))
             (10 (JVM::LRETURN))
             (ENDOFCODE 11))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "internalParse"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 19)
       (CODE_LENGTH . 893)
       (PARSEDCODE
        (0 (ICONST_M1))
        (1 (ISTORE_2))
        (2 (ICONST_M1))
        (3 (ISTORE_3))
        (4 (ICONST_M1))
        (5 (ISTORE 4))
        (7 (ICONST_M1))
        (8 (ISTORE 5))
        (10 (ICONST_M1))
        (11 (ISTORE 6))
        (13 (ICONST_M1))
        (14 (ISTORE 7))
        (16 (ICONST_M1))
        (17 (ISTORE 8))
        (19 (ICONST_M1))
        (20 (ISTORE 9))
        (22 (ICONST_0))
        (23 (ISTORE 10))
        (25 (ICONST_M1))
        (26 (ISTORE 11))
        (28 (ICONST_M1))
        (29 (ISTORE 12))
        (31 (ICONST_M1))
        (32 (ISTORE 13))
        (34 (ICONST_0))
        (35 (ISTORE 14))
        (37 (ALOAD_1))
        (38 (IFNONNULL 44))
        (41 (GOTO 885))
        (44 (ALOAD_1))
        (45 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (48 (ISTORE 15))
        (50 (GOTO 781))
        (53 (ALOAD_1))
        (54 (ILOAD 10))
        (56 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (59 (ISTORE 9))
        (61 (IINC 10 1))
        (64 (ILOAD 9))
        (66 (BIPUSH 32))
        (68 (IF_ICMPLE 781))
        (71 (ILOAD 9))
        (73 (BIPUSH 44))
        (75 (IF_ICMPNE 81))
        (78 (GOTO 781))
        (81 (ILOAD 9))
        (83 (BIPUSH 40))
        (85 (IF_ICMPNE 146))
        (88 (ICONST_1))
        (89 (ISTORE 16))
        (91 (GOTO 136))
        (94 (ALOAD_1))
        (95 (ILOAD 10))
        (97 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (100 (ISTORE 9))
        (102 (IINC 10 1))
        (105 (ILOAD 9))
        (107 (BIPUSH 40))
        (109 (IF_ICMPNE 118))
        (112 (IINC 16 1))
        (115 (GOTO 136))
        (118 (ILOAD 9))
        (120 (BIPUSH 41))
        (122 (IF_ICMPNE 136))
        (125 (IINC 16 -1))
        (128 (ILOAD 16))
        (130 (IFGT 136))
        (133 (GOTO 781))
        (136 (ILOAD 10))
        (138 (ILOAD 15))
        (140 (IF_ICMPLT 94))
        (143 (GOTO 781))
        (146 (BIPUSH 48))
        (148 (ILOAD 9))
        (150 (IF_ICMPGT 511))
        (153 (ILOAD 9))
        (155 (BIPUSH 57))
        (157 (IF_ICMPGT 511))
        (160 (ILOAD 9))
        (162 (BIPUSH 48))
        (164 (ISUB))
        (165 (ISTORE 11))
        (167 (GOTO 186))
        (170 (ILOAD 11))
        (172 (BIPUSH 10))
        (174 (IMUL))
        (175 (ILOAD 9))
        (177 (IADD))
        (178 (BIPUSH 48))
        (180 (ISUB))
        (181 (ISTORE 11))
        (183 (IINC 10 1))
        (186 (ILOAD 10))
        (188 (ILOAD 15))
        (190 (IF_ICMPGE 214))
        (193 (BIPUSH 48))
        (195 (ALOAD_1))
        (196 (ILOAD 10))
        (198 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (201 (DUP))
        (202 (ISTORE 9))
        (204 (IF_ICMPGT 214))
        (207 (ILOAD 9))
        (209 (BIPUSH 57))
        (211 (IF_ICMPLE 170))
        (214 (ILOAD 14))
        (216 (BIPUSH 43))
        (218 (IF_ICMPEQ 232))
        (221 (ILOAD 14))
        (223 (BIPUSH 45))
        (225 (IF_ICMPNE 298))
        (228 (ILOAD_2))
        (229 (IFLT 298))
        (232 (ILOAD 11))
        (234 (BIPUSH 24))
        (236 (IF_ICMPGE 249))
        (239 (ILOAD 11))
        (241 (BIPUSH 60))
        (243 (IMUL))
        (244 (ISTORE 11))
        (246 (GOTO 265))
        (249 (ILOAD 11))
        (251 (BIPUSH 100))
        (253 (IREM))
        (254 (ILOAD 11))
        (256 (BIPUSH 100))
        (258 (IDIV))
        (259 (BIPUSH 60))
        (261 (IMUL))
        (262 (IADD))
        (263 (ISTORE 11))
        (265 (ILOAD 14))
        (267 (BIPUSH 43))
        (269 (IF_ICMPNE 277))
        (272 (ILOAD 11))
        (274 (INEG))
        (275 (ISTORE 11))
        (277 (ILOAD 13))
        (279 (IFEQ 291))
        (282 (ILOAD 13))
        (284 (ICONST_M1))
        (285 (IF_ICMPEQ 291))
        (288 (GOTO 885))
        (291 (ILOAD 11))
        (293 (ISTORE 13))
        (295 (GOTO 505))
        (298 (ILOAD 11))
        (300 (BIPUSH 70))
        (302 (IF_ICMPLT 362))
        (305 (ILOAD_2))
        (306 (IFLT 312))
        (309 (GOTO 885))
        (312 (ILOAD 9))
        (314 (BIPUSH 32))
        (316 (IF_ICMPLE 340))
        (319 (ILOAD 9))
        (321 (BIPUSH 44))
        (323 (IF_ICMPEQ 340))
        (326 (ILOAD 9))
        (328 (BIPUSH 47))
        (330 (IF_ICMPEQ 340))
        (333 (ILOAD 10))
        (335 (ILOAD 15))
        (337 (IF_ICMPLT 885))
        (340 (ILOAD 11))
        (342 (BIPUSH 100))
        (344 (IF_ICMPGE 356))
        (347 (ILOAD 11))
        (349 (JVM::SIPUSH 1900))
        (352 (IADD))
        (353 (GOTO 358))
        (356 (ILOAD 11))
        (358 (ISTORE_2))
        (359 (GOTO 505))
        (362 (ILOAD 9))
        (364 (BIPUSH 58))
        (366 (IF_ICMPNE 395))
        (369 (ILOAD 5))
        (371 (IFGE 382))
        (374 (ILOAD 11))
        (376 (JVM::I2B))
        (377 (ISTORE 5))
        (379 (GOTO 505))
        (382 (ILOAD 6))
        (384 (IFGE 885))
        (387 (ILOAD 11))
        (389 (JVM::I2B))
        (390 (ISTORE 6))
        (392 (GOTO 505))
        (395 (ILOAD 9))
        (397 (BIPUSH 47))
        (399 (IF_ICMPNE 428))
        (402 (ILOAD_3))
        (403 (IFGE 415))
        (406 (ILOAD 11))
        (408 (ICONST_1))
        (409 (ISUB))
        (410 (JVM::I2B))
        (411 (ISTORE_3))
        (412 (GOTO 505))
        (415 (ILOAD 4))
        (417 (IFGE 885))
        (420 (ILOAD 11))
        (422 (JVM::I2B))
        (423 (ISTORE 4))
        (425 (GOTO 505))
        (428 (ILOAD 10))
        (430 (ILOAD 15))
        (432 (IF_ICMPGE 459))
        (435 (ILOAD 9))
        (437 (BIPUSH 44))
        (439 (IF_ICMPEQ 459))
        (442 (ILOAD 9))
        (444 (BIPUSH 32))
        (446 (IF_ICMPLE 459))
        (449 (ILOAD 9))
        (451 (BIPUSH 45))
        (453 (IF_ICMPEQ 459))
        (456 (GOTO 885))
        (459 (ILOAD 5))
        (461 (IFLT 477))
        (464 (ILOAD 6))
        (466 (IFGE 477))
        (469 (ILOAD 11))
        (471 (JVM::I2B))
        (472 (ISTORE 6))
        (474 (GOTO 505))
        (477 (ILOAD 6))
        (479 (IFLT 495))
        (482 (ILOAD 7))
        (484 (IFGE 495))
        (487 (ILOAD 11))
        (489 (JVM::I2B))
        (490 (ISTORE 7))
        (492 (GOTO 505))
        (495 (ILOAD 4))
        (497 (IFGE 885))
        (500 (ILOAD 11))
        (502 (JVM::I2B))
        (503 (ISTORE 4))
        (505 (ICONST_0))
        (506 (ISTORE 14))
        (508 (GOTO 781))
        (511 (ILOAD 9))
        (513 (BIPUSH 47))
        (515 (IF_ICMPEQ 539))
        (518 (ILOAD 9))
        (520 (BIPUSH 58))
        (522 (IF_ICMPEQ 539))
        (525 (ILOAD 9))
        (527 (BIPUSH 43))
        (529 (IF_ICMPEQ 539))
        (532 (ILOAD 9))
        (534 (BIPUSH 45))
        (536 (IF_ICMPNE 546))
        (539 (ILOAD 9))
        (541 (ISTORE 14))
        (543 (GOTO 781))
        (546 (ILOAD 10))
        (548 (ICONST_1))
        (549 (ISUB))
        (550 (ISTORE 16))
        (552 (GOTO 597))
        (555 (ALOAD_1))
        (556 (ILOAD 10))
        (558 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (561 (ISTORE 9))
        (563 (BIPUSH 65))
        (565 (ILOAD 9))
        (567 (IF_ICMPGT 577))
        (570 (ILOAD 9))
        (572 (BIPUSH 90))
        (574 (IF_ICMPLE 594))
        (577 (BIPUSH 97))
        (579 (ILOAD 9))
        (581 (IF_ICMPGT 604))
        (584 (ILOAD 9))
        (586 (BIPUSH 122))
        (588 (IF_ICMPLE 594))
        (591 (GOTO 604))
        (594 (IINC 10 1))
        (597 (ILOAD 10))
        (599 (ILOAD 15))
        (601 (IF_ICMPLT 555))
        (604 (ILOAD 10))
        (606 (ILOAD 16))
        (608 (ICONST_1))
        (609 (IADD))
        (610 (IF_ICMPGT 616))
        (613 (GOTO 885))
        (616 (GETSTATIC (JVM::FIELDCP "wtb" "com.sun.cldc.io.DateParser"
                                      (ARRAY (CLASS "java.lang.String")))))
        (619 (ARRAYLENGTH))
        (620 (ISTORE 17))
        (622 (GOTO 762))
        (625 (GETSTATIC (JVM::FIELDCP "wtb" "com.sun.cldc.io.DateParser"
                                      (ARRAY (CLASS "java.lang.String")))))
        (628 (ILOAD 17))
        (630 (AALOAD))
        (631 (ICONST_1))
        (632 (ICONST_0))
        (633 (ALOAD_1))
        (634 (ILOAD 16))
        (636 (ILOAD 10))
        (638 (ILOAD 16))
        (640 (ISUB))
        (641 (INVOKEVIRTUAL (METHODCP "regionMatches" "java.lang.String"
                                      (BOOLEAN INT (CLASS "java.lang.String")
                                               INT INT)
                                      BOOLEAN)))
        (644 (IFEQ 762))
        (647 (GETSTATIC (JVM::FIELDCP "ttb" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (650 (ILOAD 17))
        (652 (IALOAD))
        (653 (ISTORE 18))
        (655 (ILOAD 18))
        (657 (IFEQ 770))
        (660 (ILOAD 18))
        (662 (ICONST_1))
        (663 (IF_ICMPNE 695))
        (666 (ILOAD 5))
        (668 (BIPUSH 12))
        (670 (IF_ICMPGT 885))
        (673 (ILOAD 5))
        (675 (ICONST_1))
        (676 (IF_ICMPGE 682))
        (679 (GOTO 885))
        (682 (ILOAD 5))
        (684 (BIPUSH 12))
        (686 (IF_ICMPGE 770))
        (689 (IINC 5 12))
        (692 (GOTO 770))
        (695 (ILOAD 18))
        (697 (BIPUSH 14))
        (699 (IF_ICMPNE 731))
        (702 (ILOAD 5))
        (704 (BIPUSH 12))
        (706 (IF_ICMPGT 885))
        (709 (ILOAD 5))
        (711 (ICONST_1))
        (712 (IF_ICMPGE 718))
        (715 (GOTO 885))
        (718 (ILOAD 5))
        (720 (BIPUSH 12))
        (722 (IF_ICMPNE 770))
        (725 (ICONST_0))
        (726 (ISTORE 5))
        (728 (GOTO 770))
        (731 (ILOAD 18))
        (733 (BIPUSH 13))
        (735 (IF_ICMPGT 751))
        (738 (ILOAD_3))
        (739 (IFGE 885))
        (742 (ILOAD 18))
        (744 (ICONST_2))
        (745 (ISUB))
        (746 (JVM::I2B))
        (747 (ISTORE_3))
        (748 (GOTO 770))
        (751 (ILOAD 18))
        (753 (JVM::SIPUSH 10000))
        (756 (ISUB))
        (757 (ISTORE 13))
        (759 (GOTO 770))
        (762 (IINC 17 -1))
        (765 (ILOAD 17))
        (767 (IFGE 625))
        (770 (ILOAD 17))
        (772 (IFGE 778))
        (775 (GOTO 885))
        (778 (ICONST_0))
        (779 (ISTORE 14))
        (781 (ILOAD 10))
        (783 (ILOAD 15))
        (785 (IF_ICMPLT 53))
        (788 (ILOAD_2))
        (789 (JVM::SIPUSH 1583))
        (792 (IF_ICMPLT 885))
        (795 (ILOAD_3))
        (796 (IFLT 885))
        (799 (ILOAD 4))
        (801 (IFGE 807))
        (804 (GOTO 885))
        (807 (ILOAD 7))
        (809 (IFGE 815))
        (812 (ICONST_0))
        (813 (ISTORE 7))
        (815 (ILOAD 6))
        (817 (IFGE 823))
        (820 (ICONST_0))
        (821 (ISTORE 6))
        (823 (ILOAD 5))
        (825 (IFGE 831))
        (828 (ICONST_0))
        (829 (ISTORE 5))
        (831 (ALOAD_0))
        (832 (ILOAD_2))
        (833 (PUTFIELD (JVM::FIELDCP "year"
                                     "com.sun.cldc.io.DateParser" INT)))
        (836 (ALOAD_0))
        (837 (ILOAD_3))
        (838 (PUTFIELD (JVM::FIELDCP "month"
                                     "com.sun.cldc.io.DateParser" INT)))
        (841 (ALOAD_0))
        (842 (ILOAD 4))
        (844 (PUTFIELD (JVM::FIELDCP "day"
                                     "com.sun.cldc.io.DateParser" INT)))
        (847 (ALOAD_0))
        (848 (ILOAD 5))
        (850 (PUTFIELD (JVM::FIELDCP "hour"
                                     "com.sun.cldc.io.DateParser" INT)))
        (853 (ALOAD_0))
        (854 (ILOAD 13))
        (856 (INEG))
        (857 (BIPUSH 60))
        (859 (IMUL))
        (860 (JVM::SIPUSH 1000))
        (863 (IMUL))
        (864 (PUTFIELD (JVM::FIELDCP "tzoffset"
                                     "com.sun.cldc.io.DateParser" INT)))
        (867 (ALOAD_0))
        (868 (ILOAD 6))
        (870 (PUTFIELD (JVM::FIELDCP "minute"
                                     "com.sun.cldc.io.DateParser" INT)))
        (873 (ALOAD_0))
        (874 (ILOAD 7))
        (876 (PUTFIELD (JVM::FIELDCP "second"
                                     "com.sun.cldc.io.DateParser" INT)))
        (879 (ALOAD_0))
        (880 (ICONST_0))
        (881 (PUTFIELD (JVM::FIELDCP "milli"
                                     "com.sun.cldc.io.DateParser" INT)))
        (884 (RETURN))
        (885 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (888 (DUP))
        (889 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
        (892 (ATHROW))
        (ENDOFCODE 893))
       (EXCEPTIONS)
       (STACKMAP (44 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (81 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (94 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (118 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (136 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (146 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (170 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (186 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (214 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (232 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (249 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (265 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (277 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (291 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (298 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (312 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (340 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (356 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (358 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (362 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (382 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (395 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (415 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (428 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (459 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (477 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (495 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (505 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (511 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (539 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (546 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (555 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (577 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (594 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (597 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (604 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (616 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (625 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (682 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (695 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (718 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (731 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (751 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (762 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (770 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (778 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (781 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (807 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (815 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (823 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (831 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (885 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 721)
       (PARSEDCODE
        (0 (JVM::LDC2_W 26))
        (3 (PUTSTATIC (JVM::FIELDCP "julianDayOffset"
                                    "com.sun.cldc.io.DateParser" LONG)))
        (6 (LDC 27))
        (8 (PUTSTATIC (JVM::FIELDCP "millisPerHour"
                                    "com.sun.cldc.io.DateParser" INT)))
        (11 (BIPUSH 24))
        (13 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                     "com.sun.cldc.io.DateParser" INT)))
        (16 (IMUL))
        (17 (PUTSTATIC (JVM::FIELDCP "millisPerDay"
                                     "com.sun.cldc.io.DateParser" INT)))
        (20 (BIPUSH 32))
        (22 (ANEWARRAY (CLASS "java.lang.String")))
        (25 (DUP))
        (26 (ICONST_0))
        (27 (LDC 28))
        (29 (AASTORE))
        (30 (DUP))
        (31 (ICONST_1))
        (32 (LDC 29))
        (34 (AASTORE))
        (35 (DUP))
        (36 (ICONST_2))
        (37 (LDC 30))
        (39 (AASTORE))
        (40 (DUP))
        (41 (ICONST_3))
        (42 (LDC 31))
        (44 (AASTORE))
        (45 (DUP))
        (46 (ICONST_4))
        (47 (LDC 32))
        (49 (AASTORE))
        (50 (DUP))
        (51 (ICONST_5))
        (52 (LDC 33))
        (54 (AASTORE))
        (55 (DUP))
        (56 (BIPUSH 6))
        (58 (LDC 34))
        (60 (AASTORE))
        (61 (DUP))
        (62 (BIPUSH 7))
        (64 (LDC 35))
        (66 (AASTORE))
        (67 (DUP))
        (68 (BIPUSH 8))
        (70 (LDC 36))
        (72 (AASTORE))
        (73 (DUP))
        (74 (BIPUSH 9))
        (76 (LDC 37))
        (78 (AASTORE))
        (79 (DUP))
        (80 (BIPUSH 10))
        (82 (LDC 38))
        (84 (AASTORE))
        (85 (DUP))
        (86 (BIPUSH 11))
        (88 (LDC 39))
        (90 (AASTORE))
        (91 (DUP))
        (92 (BIPUSH 12))
        (94 (LDC 40))
        (96 (AASTORE))
        (97 (DUP))
        (98 (BIPUSH 13))
        (100 (LDC 41))
        (102 (AASTORE))
        (103 (DUP))
        (104 (BIPUSH 14))
        (106 (LDC 42))
        (108 (AASTORE))
        (109 (DUP))
        (110 (BIPUSH 15))
        (112 (LDC 43))
        (114 (AASTORE))
        (115 (DUP))
        (116 (BIPUSH 16))
        (118 (LDC 44))
        (120 (AASTORE))
        (121 (DUP))
        (122 (BIPUSH 17))
        (124 (LDC 45))
        (126 (AASTORE))
        (127 (DUP))
        (128 (BIPUSH 18))
        (130 (LDC 46))
        (132 (AASTORE))
        (133 (DUP))
        (134 (BIPUSH 19))
        (136 (LDC 47))
        (138 (AASTORE))
        (139 (DUP))
        (140 (BIPUSH 20))
        (142 (LDC 48))
        (144 (AASTORE))
        (145 (DUP))
        (146 (BIPUSH 21))
        (148 (LDC 49))
        (150 (AASTORE))
        (151 (DUP))
        (152 (BIPUSH 22))
        (154 (LDC 50))
        (156 (AASTORE))
        (157 (DUP))
        (158 (BIPUSH 23))
        (160 (LDC 51))
        (162 (AASTORE))
        (163 (DUP))
        (164 (BIPUSH 24))
        (166 (LDC 52))
        (168 (AASTORE))
        (169 (DUP))
        (170 (BIPUSH 25))
        (172 (LDC 53))
        (174 (AASTORE))
        (175 (DUP))
        (176 (BIPUSH 26))
        (178 (LDC 54))
        (180 (AASTORE))
        (181 (DUP))
        (182 (BIPUSH 27))
        (184 (LDC 55))
        (186 (AASTORE))
        (187 (DUP))
        (188 (BIPUSH 28))
        (190 (LDC 56))
        (192 (AASTORE))
        (193 (DUP))
        (194 (BIPUSH 29))
        (196 (LDC 57))
        (198 (AASTORE))
        (199 (DUP))
        (200 (BIPUSH 30))
        (202 (LDC 58))
        (204 (AASTORE))
        (205 (DUP))
        (206 (BIPUSH 31))
        (208 (LDC 59))
        (210 (AASTORE))
        (211 (PUTSTATIC (JVM::FIELDCP "wtb" "com.sun.cldc.io.DateParser"
                                      (ARRAY (CLASS "java.lang.String")))))
        (214 (BIPUSH 32))
        (216 (NEWARRAY INT))
        (218 (DUP))
        (219 (ICONST_0))
        (220 (BIPUSH 14))
        (222 (IASTORE))
        (223 (DUP))
        (224 (ICONST_1))
        (225 (ICONST_1))
        (226 (IASTORE))
        (227 (DUP))
        (228 (ICONST_2))
        (229 (ICONST_0))
        (230 (IASTORE))
        (231 (DUP))
        (232 (ICONST_3))
        (233 (ICONST_0))
        (234 (IASTORE))
        (235 (DUP))
        (236 (ICONST_4))
        (237 (ICONST_0))
        (238 (IASTORE))
        (239 (DUP))
        (240 (ICONST_5))
        (241 (ICONST_0))
        (242 (IASTORE))
        (243 (DUP))
        (244 (BIPUSH 6))
        (246 (ICONST_0))
        (247 (IASTORE))
        (248 (DUP))
        (249 (BIPUSH 7))
        (251 (ICONST_0))
        (252 (IASTORE))
        (253 (DUP))
        (254 (BIPUSH 8))
        (256 (ICONST_0))
        (257 (IASTORE))
        (258 (DUP))
        (259 (BIPUSH 9))
        (261 (ICONST_2))
        (262 (IASTORE))
        (263 (DUP))
        (264 (BIPUSH 10))
        (266 (ICONST_3))
        (267 (IASTORE))
        (268 (DUP))
        (269 (BIPUSH 11))
        (271 (ICONST_4))
        (272 (IASTORE))
        (273 (DUP))
        (274 (BIPUSH 12))
        (276 (ICONST_5))
        (277 (IASTORE))
        (278 (DUP))
        (279 (BIPUSH 13))
        (281 (BIPUSH 6))
        (283 (IASTORE))
        (284 (DUP))
        (285 (BIPUSH 14))
        (287 (BIPUSH 7))
        (289 (IASTORE))
        (290 (DUP))
        (291 (BIPUSH 15))
        (293 (BIPUSH 8))
        (295 (IASTORE))
        (296 (DUP))
        (297 (BIPUSH 16))
        (299 (BIPUSH 9))
        (301 (IASTORE))
        (302 (DUP))
        (303 (BIPUSH 17))
        (305 (BIPUSH 10))
        (307 (IASTORE))
        (308 (DUP))
        (309 (BIPUSH 18))
        (311 (BIPUSH 11))
        (313 (IASTORE))
        (314 (DUP))
        (315 (BIPUSH 19))
        (317 (BIPUSH 12))
        (319 (IASTORE))
        (320 (DUP))
        (321 (BIPUSH 20))
        (323 (BIPUSH 13))
        (325 (IASTORE))
        (326 (DUP))
        (327 (BIPUSH 21))
        (329 (JVM::SIPUSH 10000))
        (332 (IASTORE))
        (333 (DUP))
        (334 (BIPUSH 22))
        (336 (JVM::SIPUSH 10000))
        (339 (IASTORE))
        (340 (DUP))
        (341 (BIPUSH 23))
        (343 (JVM::SIPUSH 10000))
        (346 (IASTORE))
        (347 (DUP))
        (348 (BIPUSH 24))
        (350 (JVM::SIPUSH 10300))
        (353 (IASTORE))
        (354 (DUP))
        (355 (BIPUSH 25))
        (357 (JVM::SIPUSH 10240))
        (360 (IASTORE))
        (361 (DUP))
        (362 (BIPUSH 26))
        (364 (JVM::SIPUSH 10360))
        (367 (IASTORE))
        (368 (DUP))
        (369 (BIPUSH 27))
        (371 (JVM::SIPUSH 10300))
        (374 (IASTORE))
        (375 (DUP))
        (376 (BIPUSH 28))
        (378 (JVM::SIPUSH 10420))
        (381 (IASTORE))
        (382 (DUP))
        (383 (BIPUSH 29))
        (385 (JVM::SIPUSH 10360))
        (388 (IASTORE))
        (389 (DUP))
        (390 (BIPUSH 30))
        (392 (JVM::SIPUSH 10480))
        (395 (IASTORE))
        (396 (DUP))
        (397 (BIPUSH 31))
        (399 (JVM::SIPUSH 10420))
        (402 (IASTORE))
        (403 (PUTSTATIC (JVM::FIELDCP "ttb" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (406 (BIPUSH 12))
        (408 (NEWARRAY INT))
        (410 (DUP))
        (411 (ICONST_0))
        (412 (ICONST_0))
        (413 (IASTORE))
        (414 (DUP))
        (415 (ICONST_1))
        (416 (BIPUSH 31))
        (418 (IASTORE))
        (419 (DUP))
        (420 (ICONST_2))
        (421 (BIPUSH 59))
        (423 (IASTORE))
        (424 (DUP))
        (425 (ICONST_3))
        (426 (BIPUSH 90))
        (428 (IASTORE))
        (429 (DUP))
        (430 (ICONST_4))
        (431 (BIPUSH 120))
        (433 (IASTORE))
        (434 (DUP))
        (435 (ICONST_5))
        (436 (JVM::SIPUSH 151))
        (439 (IASTORE))
        (440 (DUP))
        (441 (BIPUSH 6))
        (443 (JVM::SIPUSH 181))
        (446 (IASTORE))
        (447 (DUP))
        (448 (BIPUSH 7))
        (450 (JVM::SIPUSH 212))
        (453 (IASTORE))
        (454 (DUP))
        (455 (BIPUSH 8))
        (457 (JVM::SIPUSH 243))
        (460 (IASTORE))
        (461 (DUP))
        (462 (BIPUSH 9))
        (464 (JVM::SIPUSH 273))
        (467 (IASTORE))
        (468 (DUP))
        (469 (BIPUSH 10))
        (471 (JVM::SIPUSH 304))
        (474 (IASTORE))
        (475 (DUP))
        (476 (BIPUSH 11))
        (478 (JVM::SIPUSH 334))
        (481 (IASTORE))
        (482 (PUTSTATIC (JVM::FIELDCP "NUM_DAYS" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (485 (BIPUSH 12))
        (487 (NEWARRAY INT))
        (489 (DUP))
        (490 (ICONST_0))
        (491 (ICONST_0))
        (492 (IASTORE))
        (493 (DUP))
        (494 (ICONST_1))
        (495 (BIPUSH 31))
        (497 (IASTORE))
        (498 (DUP))
        (499 (ICONST_2))
        (500 (BIPUSH 60))
        (502 (IASTORE))
        (503 (DUP))
        (504 (ICONST_3))
        (505 (BIPUSH 91))
        (507 (IASTORE))
        (508 (DUP))
        (509 (ICONST_4))
        (510 (BIPUSH 121))
        (512 (IASTORE))
        (513 (DUP))
        (514 (ICONST_5))
        (515 (JVM::SIPUSH 152))
        (518 (IASTORE))
        (519 (DUP))
        (520 (BIPUSH 6))
        (522 (JVM::SIPUSH 182))
        (525 (IASTORE))
        (526 (DUP))
        (527 (BIPUSH 7))
        (529 (JVM::SIPUSH 213))
        (532 (IASTORE))
        (533 (DUP))
        (534 (BIPUSH 8))
        (536 (JVM::SIPUSH 244))
        (539 (IASTORE))
        (540 (DUP))
        (541 (BIPUSH 9))
        (543 (JVM::SIPUSH 274))
        (546 (IASTORE))
        (547 (DUP))
        (548 (BIPUSH 10))
        (550 (JVM::SIPUSH 305))
        (553 (IASTORE))
        (554 (DUP))
        (555 (BIPUSH 11))
        (557 (JVM::SIPUSH 335))
        (560 (IASTORE))
        (561 (PUTSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (564 (NEW (CLASS "java.util.Hashtable")))
        (567 (DUP))
        (568 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.Hashtable" NIL VOID)))
        (571
            (PUTSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (574
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (577 (LDC 60))
        (579 (NEW (CLASS "java.lang.Integer")))
        (582 (DUP))
        (583 (ICONST_0))
        (584 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (587 (IMUL))
        (588 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (591 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (594 (POP))
        (595
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (598 (LDC 61))
        (600 (NEW (CLASS "java.lang.Integer")))
        (603 (DUP))
        (604 (ICONST_0))
        (605 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (608 (IMUL))
        (609 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (612 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (615 (POP))
        (616
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (619 (LDC 62))
        (621 (NEW (CLASS "java.lang.Integer")))
        (624 (DUP))
        (625 (ICONST_0))
        (626 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (629 (IMUL))
        (630 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (633 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (636 (POP))
        (637
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (640 (LDC 63))
        (642 (NEW (CLASS "java.lang.Integer")))
        (645 (DUP))
        (646 (BIPUSH -8))
        (648 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (651 (IMUL))
        (652 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (655 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (658 (POP))
        (659
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (662 (LDC 64))
        (664 (NEW (CLASS "java.lang.Integer")))
        (667 (DUP))
        (668 (BIPUSH -7))
        (670 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (673 (IMUL))
        (674 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (677 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (680 (POP))
        (681
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (684 (LDC 65))
        (686 (NEW (CLASS "java.lang.Integer")))
        (689 (DUP))
        (690 (BIPUSH 9))
        (692 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (695 (IMUL))
        (696 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (699 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (702 (POP))
        (703
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (706 (LDC 63))
        (708 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (711 (CHECKCAST (CLASS "java.lang.Integer")))
        (714 (INVOKEVIRTUAL (METHODCP "intValue"
                                      "java.lang.Integer" NIL INT)))
        (717 (PUTSTATIC (JVM::FIELDCP "local_tz"
                                      "com.sun.cldc.io.DateParser" INT)))
        (720 (RETURN))
        (ENDOFCODE 721))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "com.sun.cldc.io.ConnectionBaseInterface"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "openPrim"
                           (PARAMETERS (CLASS "java.lang.String")
                                       INT BOOLEAN)
                           (RETURNTYPE CLASS
                                       "javax.microedition.io.Connection")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "com.sun.cldc.io.GeneralBase"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "No write()")
                   (STRING "Function not supported")
                   (INT 65535)
                   (STRING "No read()")
                   (LONG 4294967295))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 79)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (IFNONNULL 12))
           (4 (NEW (CLASS "java.lang.NullPointerException")))
           (7 (DUP))
           (8 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
           (11 (ATHROW))
           (12 (ILOAD_2))
           (13 (IFLT 40))
           (16 (ILOAD_2))
           (17 (ALOAD_1))
           (18 (ARRAYLENGTH))
           (19 (IF_ICMPGT 40))
           (22 (ILOAD_3))
           (23 (IFLT 40))
           (26 (ILOAD_2))
           (27 (ILOAD_3))
           (28 (IADD))
           (29 (ALOAD_1))
           (30 (ARRAYLENGTH))
           (31 (IF_ICMPGT 40))
           (34 (ILOAD_2))
           (35 (ILOAD_3))
           (36 (IADD))
           (37 (IFGE 48))
           (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
           (43 (DUP))
           (44 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
           (47 (ATHROW))
           (48 (ILOAD_3))
           (49 (IFNE 53))
           (52 (RETURN))
           (53 (ICONST_0))
           (54 (ISTORE 4))
           (56 (GOTO 72))
           (59 (ALOAD_0))
           (60 (ALOAD_1))
           (61 (ILOAD_2))
           (62 (ILOAD 4))
           (64 (IADD))
           (65 (BALOAD))
           (66 (INVOKEVIRTUAL (METHODCP "write"
                                        "com.sun.cldc.io.GeneralBase" (INT)
                                        VOID)))
           (69 (IINC 4 1))
           (72 (ILOAD 4))
           (74 (ILOAD_3))
           (75 (IF_ICMPLT 59))
           (78 (RETURN))
           (ENDOFCODE 79))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (ICONST_0))
            (3 (ALOAD_1))
            (4 (ARRAYLENGTH))
            (5 (INVOKEVIRTUAL (METHODCP "write" "com.sun.cldc.io.GeneralBase"
                                        ((ARRAY BYTE) INT INT)
                                        VOID)))
            (8 (RETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeBoolean" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 14)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (IFEQ 9))
             (5 (ICONST_1))
             (6 (GOTO 10))
             (9 (ICONST_0))
             (10 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (13 (RETURN))
             (ENDOFCODE 14))
        (EXCEPTIONS)
        (STACKMAP (9 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK (CLASS "com.sun.cldc.io.GeneralBase"))
                            NIL))
                  (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                     INT)
                             (STACK INT
                                    (CLASS "com.sun.cldc.io.GeneralBase"))
                             NIL)))))
     (METHOD
      "writeByte" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 6)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
              (5 (RETURN))
              (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "writeShort" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (BIPUSH 8))
             (4 (JVM::IUSHR))
             (5 (JVM::SIPUSH 255))
             (8 (JVM::IAND))
             (9 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
             (12 (ALOAD_0))
             (13 (ILOAD_1))
             (14 (ICONST_0))
             (15 (JVM::IUSHR))
             (16 (JVM::SIPUSH 255))
             (19 (JVM::IAND))
             (20 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeChar" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (BIPUSH 8))
             (4 (JVM::IUSHR))
             (5 (JVM::SIPUSH 255))
             (8 (JVM::IAND))
             (9 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
             (12 (ALOAD_0))
             (13 (ILOAD_1))
             (14 (ICONST_0))
             (15 (JVM::IUSHR))
             (16 (JVM::SIPUSH 255))
             (19 (JVM::IAND))
             (20 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeInt" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 48)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (BIPUSH 24))
             (4 (JVM::IUSHR))
             (5 (JVM::SIPUSH 255))
             (8 (JVM::IAND))
             (9 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
             (12 (ALOAD_0))
             (13 (ILOAD_1))
             (14 (BIPUSH 16))
             (16 (JVM::IUSHR))
             (17 (JVM::SIPUSH 255))
             (20 (JVM::IAND))
             (21 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (24 (ALOAD_0))
             (25 (ILOAD_1))
             (26 (BIPUSH 8))
             (28 (JVM::IUSHR))
             (29 (JVM::SIPUSH 255))
             (32 (JVM::IAND))
             (33 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (36 (ALOAD_0))
             (37 (ILOAD_1))
             (38 (ICONST_0))
             (39 (JVM::IUSHR))
             (40 (JVM::SIPUSH 255))
             (43 (JVM::IAND))
             (44 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (47 (RETURN))
             (ENDOFCODE 48))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeLong" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 104)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (JVM::LLOAD_1))
            (2 (BIPUSH 56))
            (4 (JVM::LUSHR))
            (5 (JVM::L2I))
            (6 (JVM::SIPUSH 255))
            (9 (JVM::IAND))
            (10 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (13 (ALOAD_0))
            (14 (JVM::LLOAD_1))
            (15 (BIPUSH 48))
            (17 (JVM::LUSHR))
            (18 (JVM::L2I))
            (19 (JVM::SIPUSH 255))
            (22 (JVM::IAND))
            (23 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (26 (ALOAD_0))
            (27 (JVM::LLOAD_1))
            (28 (BIPUSH 40))
            (30 (JVM::LUSHR))
            (31 (JVM::L2I))
            (32 (JVM::SIPUSH 255))
            (35 (JVM::IAND))
            (36 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (39 (ALOAD_0))
            (40 (JVM::LLOAD_1))
            (41 (BIPUSH 32))
            (43 (JVM::LUSHR))
            (44 (JVM::L2I))
            (45 (JVM::SIPUSH 255))
            (48 (JVM::IAND))
            (49 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (52 (ALOAD_0))
            (53 (JVM::LLOAD_1))
            (54 (BIPUSH 24))
            (56 (JVM::LUSHR))
            (57 (JVM::L2I))
            (58 (JVM::SIPUSH 255))
            (61 (JVM::IAND))
            (62 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (65 (ALOAD_0))
            (66 (JVM::LLOAD_1))
            (67 (BIPUSH 16))
            (69 (JVM::LUSHR))
            (70 (JVM::L2I))
            (71 (JVM::SIPUSH 255))
            (74 (JVM::IAND))
            (75 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (78 (ALOAD_0))
            (79 (JVM::LLOAD_1))
            (80 (BIPUSH 8))
            (82 (JVM::LUSHR))
            (83 (JVM::L2I))
            (84 (JVM::SIPUSH 255))
            (87 (JVM::IAND))
            (88 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (91 (ALOAD_0))
            (92 (JVM::LLOAD_1))
            (93 (ICONST_0))
            (94 (JVM::LUSHR))
            (95 (JVM::L2I))
            (96 (JVM::SIPUSH 255))
            (99 (JVM::IAND))
            (100 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
            (103 (RETURN))
            (ENDOFCODE 104))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeBytes"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeChars"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 51)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (4 (ISTORE_2))
           (5 (ICONST_0))
           (6 (ISTORE_3))
           (7 (GOTO 45))
           (10 (ALOAD_1))
           (11 (ILOAD_3))
           (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                        CHAR)))
           (15 (ISTORE 4))
           (17 (ALOAD_0))
           (18 (ILOAD 4))
           (20 (BIPUSH 8))
           (22 (JVM::IUSHR))
           (23 (JVM::SIPUSH 255))
           (26 (JVM::IAND))
           (27 (INVOKEVIRTUAL (METHODCP "write"
                                        "com.sun.cldc.io.GeneralBase" (INT)
                                        VOID)))
           (30 (ALOAD_0))
           (31 (ILOAD 4))
           (33 (ICONST_0))
           (34 (JVM::IUSHR))
           (35 (JVM::SIPUSH 255))
           (38 (JVM::IAND))
           (39 (INVOKEVIRTUAL (METHODCP "write"
                                        "com.sun.cldc.io.GeneralBase" (INT)
                                        VOID)))
           (42 (IINC 3 1))
           (45 (ILOAD_3))
           (46 (ILOAD_2))
           (47 (IF_ICMPLT 10))
           (50 (RETURN))
           (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ALOAD_1))
          (1 (ALOAD_0))
          (2 (INVOKESTATIC (METHODCP "writeUTF" "com.sun.cldc.io.GeneralBase"
                                     ((CLASS "java.lang.String")
                                      (CLASS "java.io.DataOutput"))
                                     INT)))
          (5 (POP))
          (6 (RETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String")
                  (CLASS "java.io.DataOutput"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 10)
       (CODE_LENGTH . 311)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (4 (ISTORE_2))
          (5 (ICONST_0))
          (6 (ISTORE_3))
          (7 (ILOAD_2))
          (8 (NEWARRAY CHAR))
          (10 (ASTORE 4))
          (12 (ICONST_0))
          (13 (ISTORE 6))
          (15 (ALOAD_0))
          (16 (ICONST_0))
          (17 (ILOAD_2))
          (18 (ALOAD 4))
          (20 (ICONST_0))
          (21 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                       (INT INT (ARRAY CHAR) INT)
                                       VOID)))
          (24 (ICONST_0))
          (25 (ISTORE 7))
          (27 (GOTO 76))
          (30 (ALOAD 4))
          (32 (ILOAD 7))
          (34 (CALOAD))
          (35 (ISTORE 5))
          (37 (ILOAD 5))
          (39 (ICONST_1))
          (40 (IF_ICMPLT 56))
          (43 (ILOAD 5))
          (45 (BIPUSH 127))
          (47 (IF_ICMPGT 56))
          (50 (IINC 3 1))
          (53 (GOTO 73))
          (56 (ILOAD 5))
          (58 (JVM::SIPUSH 2047))
          (61 (IF_ICMPLE 70))
          (64 (IINC 3 3))
          (67 (GOTO 73))
          (70 (IINC 3 2))
          (73 (IINC 7 1))
          (76 (ILOAD 7))
          (78 (ILOAD_2))
          (79 (IF_ICMPLT 30))
          (82 (ILOAD_3))
          (83 (LDC 2))
          (85 (IF_ICMPLE 96))
          (88 (NEW (CLASS "java.io.UTFDataFormatException")))
          (91 (DUP))
          (92 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.io.UTFDataFormatException"
                                       NIL VOID)))
          (95 (ATHROW))
          (96 (ILOAD_3))
          (97 (ICONST_2))
          (98 (IADD))
          (99 (NEWARRAY BYTE))
          (101 (ASTORE 8))
          (103 (ALOAD 8))
          (105 (ILOAD 6))
          (107 (IINC 6 1))
          (110 (ILOAD_3))
          (111 (BIPUSH 8))
          (113 (JVM::IUSHR))
          (114 (JVM::SIPUSH 255))
          (117 (JVM::IAND))
          (118 (JVM::I2B))
          (119 (BASTORE))
          (120 (ALOAD 8))
          (122 (ILOAD 6))
          (124 (IINC 6 1))
          (127 (ILOAD_3))
          (128 (ICONST_0))
          (129 (JVM::IUSHR))
          (130 (JVM::SIPUSH 255))
          (133 (JVM::IAND))
          (134 (JVM::I2B))
          (135 (BASTORE))
          (136 (ICONST_0))
          (137 (ISTORE 9))
          (139 (GOTO 293))
          (142 (ALOAD 4))
          (144 (ILOAD 9))
          (146 (CALOAD))
          (147 (ISTORE 5))
          (149 (ILOAD 5))
          (151 (ICONST_1))
          (152 (IF_ICMPLT 176))
          (155 (ILOAD 5))
          (157 (BIPUSH 127))
          (159 (IF_ICMPGT 176))
          (162 (ALOAD 8))
          (164 (ILOAD 6))
          (166 (IINC 6 1))
          (169 (ILOAD 5))
          (171 (JVM::I2B))
          (172 (BASTORE))
          (173 (GOTO 290))
          (176 (ILOAD 5))
          (178 (JVM::SIPUSH 2047))
          (181 (IF_ICMPLE 249))
          (184 (ALOAD 8))
          (186 (ILOAD 6))
          (188 (IINC 6 1))
          (191 (JVM::SIPUSH 224))
          (194 (ILOAD 5))
          (196 (BIPUSH 12))
          (198 (JVM::ISHR))
          (199 (BIPUSH 15))
          (201 (JVM::IAND))
          (202 (JVM::IOR))
          (203 (JVM::I2B))
          (204 (BASTORE))
          (205 (ALOAD 8))
          (207 (ILOAD 6))
          (209 (IINC 6 1))
          (212 (JVM::SIPUSH 128))
          (215 (ILOAD 5))
          (217 (BIPUSH 6))
          (219 (JVM::ISHR))
          (220 (BIPUSH 63))
          (222 (JVM::IAND))
          (223 (JVM::IOR))
          (224 (JVM::I2B))
          (225 (BASTORE))
          (226 (ALOAD 8))
          (228 (ILOAD 6))
          (230 (IINC 6 1))
          (233 (JVM::SIPUSH 128))
          (236 (ILOAD 5))
          (238 (ICONST_0))
          (239 (JVM::ISHR))
          (240 (BIPUSH 63))
          (242 (JVM::IAND))
          (243 (JVM::IOR))
          (244 (JVM::I2B))
          (245 (BASTORE))
          (246 (GOTO 290))
          (249 (ALOAD 8))
          (251 (ILOAD 6))
          (253 (IINC 6 1))
          (256 (JVM::SIPUSH 192))
          (259 (ILOAD 5))
          (261 (BIPUSH 6))
          (263 (JVM::ISHR))
          (264 (BIPUSH 31))
          (266 (JVM::IAND))
          (267 (JVM::IOR))
          (268 (JVM::I2B))
          (269 (BASTORE))
          (270 (ALOAD 8))
          (272 (ILOAD 6))
          (274 (IINC 6 1))
          (277 (JVM::SIPUSH 128))
          (280 (ILOAD 5))
          (282 (ICONST_0))
          (283 (JVM::ISHR))
          (284 (BIPUSH 63))
          (286 (JVM::IAND))
          (287 (JVM::IOR))
          (288 (JVM::I2B))
          (289 (BASTORE))
          (290 (IINC 9 1))
          (293 (ILOAD 9))
          (295 (ILOAD_2))
          (296 (IF_ICMPLT 142))
          (299 (ALOAD_1))
          (300 (ALOAD 8))
          (302 (INVOKEINTERFACE (METHODCP "write"
                                          "java.io.DataOutput" ((ARRAY BYTE))
                                          VOID)
                                2))
          (307 (ILOAD_3))
          (308 (ICONST_2))
          (309 (IADD))
          (310 (IRETURN))
          (ENDOFCODE 311))
       (EXCEPTIONS)
       (STACKMAP (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    TOPX INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (70 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (73 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (76 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    TOPX INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (96 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    TOPX INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (142 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     TOPX INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (176 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     INT INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (249 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     INT INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (290 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     INT INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (293 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     TOPX INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD "flush" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 3))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 29)
       (PARSEDCODE
         (0 (JVM::LLOAD_1))
         (1 (JVM::LSTORE_3))
         (2 (GOTO 19))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (IFGE 15))
         (12 (GOTO 25))
         (15 (JVM::LLOAD_3))
         (16 (LCONST_1))
         (17 (JVM::LSUB))
         (18 (JVM::LSTORE_3))
         (19 (JVM::LLOAD_3))
         (20 (LCONST_0))
         (21 (LCMP))
         (22 (IFGT 5))
         (25 (JVM::LLOAD_1))
         (26 (JVM::LLOAD_3))
         (27 (JVM::LSUB))
         (28 (JVM::LRETURN))
         (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (5 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                   LONG TOPX LONG TOPX)
                           (STACK)
                           NIL))
                 (15 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "readFully" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE (0 (ALOAD_0))
                    (1 (ALOAD_1))
                    (2 (ICONST_0))
                    (3 (ALOAD_1))
                    (4 (ARRAYLENGTH))
                    (5 (INVOKEVIRTUAL (METHODCP "readFully"
                                                "com.sun.cldc.io.GeneralBase"
                                                ((ARRAY BYTE) INT INT)
                                                VOID)))
                    (8 (RETURN))
                    (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readFully"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 56)
       (PARSEDCODE
        (0 (ILOAD_3))
        (1 (IFGE 12))
        (4 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.IndexOutOfBoundsException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ICONST_0))
        (13 (ISTORE 4))
        (15 (GOTO 49))
        (18 (ALOAD_0))
        (19 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
        (22 (ISTORE 5))
        (24 (ILOAD 5))
        (26 (IFGE 37))
        (29 (NEW (CLASS "java.io.EOFException")))
        (32 (DUP))
        (33 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.EOFException" NIL VOID)))
        (36 (ATHROW))
        (37 (ALOAD_1))
        (38 (ILOAD_2))
        (39 (ILOAD 4))
        (41 (IINC 4 1))
        (44 (IADD))
        (45 (ILOAD 5))
        (47 (JVM::I2B))
        (48 (BASTORE))
        (49 (ILOAD 4))
        (51 (ILOAD_3))
        (52 (IF_ICMPLT 18))
        (55 (RETURN))
        (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "skipBytes" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 32)
       (PARSEDCODE
            (0 (ICONST_0))
            (1 (ISTORE_2))
            (2 (ICONST_0))
            (3 (ISTORE_3))
            (4 (GOTO 11))
            (7 (ILOAD_2))
            (8 (ILOAD_3))
            (9 (IADD))
            (10 (ISTORE_2))
            (11 (ILOAD_2))
            (12 (ILOAD_1))
            (13 (IF_ICMPGE 30))
            (16 (ALOAD_0))
            (17 (ILOAD_1))
            (18 (ILOAD_2))
            (19 (ISUB))
            (20 (JVM::I2L))
            (21 (INVOKEVIRTUAL (METHODCP "skip"
                                         "com.sun.cldc.io.GeneralBase" (LONG)
                                         LONG)))
            (24 (JVM::L2I))
            (25 (DUP))
            (26 (ISTORE_3))
            (27 (IFGT 7))
            (30 (ILOAD_2))
            (31 (IRETURN))
            (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                   INT INT INT)
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readBoolean" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 27)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ILOAD_1))
         (6 (IFGE 17))
         (9 (NEW (CLASS "java.io.EOFException")))
         (12 (DUP))
         (13 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (16 (ATHROW))
         (17 (ILOAD_1))
         (18 (IFEQ 25))
         (21 (ICONST_1))
         (22 (GOTO 26))
         (25 (ICONST_0))
         (26 (IRETURN))
         (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK INT)
                            NIL)))))
     (METHOD
      "readByte" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 20)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ILOAD_1))
         (6 (IFGE 17))
         (9 (NEW (CLASS "java.io.EOFException")))
         (12 (DUP))
         (13 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (16 (ATHROW))
         (17 (ILOAD_1))
         (18 (JVM::I2B))
         (19 (IRETURN))
         (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readUnsignedByte" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 19)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ILOAD_1))
         (6 (IFGE 17))
         (9 (NEW (CLASS "java.io.EOFException")))
         (12 (DUP))
         (13 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (16 (ATHROW))
         (17 (ILOAD_1))
         (18 (IRETURN))
         (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readShort" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 34)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (ISTORE_2))
         (10 (ILOAD_1))
         (11 (ILOAD_2))
         (12 (JVM::IOR))
         (13 (IFGE 24))
         (16 (NEW (CLASS "java.io.EOFException")))
         (19 (DUP))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (23 (ATHROW))
         (24 (ILOAD_1))
         (25 (BIPUSH 8))
         (27 (JVM::ISHL))
         (28 (ILOAD_2))
         (29 (ICONST_0))
         (30 (JVM::ISHL))
         (31 (IADD))
         (32 (JVM::I2S))
         (33 (IRETURN))
         (ENDOFCODE 34))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readUnsignedShort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 33)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (ISTORE_2))
         (10 (ILOAD_1))
         (11 (ILOAD_2))
         (12 (JVM::IOR))
         (13 (IFGE 24))
         (16 (NEW (CLASS "java.io.EOFException")))
         (19 (DUP))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (23 (ATHROW))
         (24 (ILOAD_1))
         (25 (BIPUSH 8))
         (27 (JVM::ISHL))
         (28 (ILOAD_2))
         (29 (ICONST_0))
         (30 (JVM::ISHL))
         (31 (IADD))
         (32 (IRETURN))
         (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readChar" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 34)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (ISTORE_2))
         (10 (ILOAD_1))
         (11 (ILOAD_2))
         (12 (JVM::IOR))
         (13 (IFGE 24))
         (16 (NEW (CLASS "java.io.EOFException")))
         (19 (DUP))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (23 (ATHROW))
         (24 (ILOAD_1))
         (25 (BIPUSH 8))
         (27 (JVM::ISHL))
         (28 (ILOAD_2))
         (29 (ICONST_0))
         (30 (JVM::ISHL))
         (31 (IADD))
         (32 (JVM::I2C))
         (33 (IRETURN))
         (ENDOFCODE 34))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readInt" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 60)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "read"
                                    "com.sun.cldc.io.GeneralBase" NIL INT)))
        (4 (ISTORE_1))
        (5 (ALOAD_0))
        (6 (INVOKEVIRTUAL (METHODCP "read"
                                    "com.sun.cldc.io.GeneralBase" NIL INT)))
        (9 (ISTORE_2))
        (10 (ALOAD_0))
        (11 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
        (14 (ISTORE_3))
        (15 (ALOAD_0))
        (16 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
        (19 (ISTORE 4))
        (21 (ILOAD_1))
        (22 (ILOAD_2))
        (23 (JVM::IOR))
        (24 (ILOAD_3))
        (25 (JVM::IOR))
        (26 (ILOAD 4))
        (28 (JVM::IOR))
        (29 (IFGE 40))
        (32 (NEW (CLASS "java.io.EOFException")))
        (35 (DUP))
        (36 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.EOFException" NIL VOID)))
        (39 (ATHROW))
        (40 (ILOAD_1))
        (41 (BIPUSH 24))
        (43 (JVM::ISHL))
        (44 (ILOAD_2))
        (45 (BIPUSH 16))
        (47 (JVM::ISHL))
        (48 (IADD))
        (49 (ILOAD_3))
        (50 (BIPUSH 8))
        (52 (JVM::ISHL))
        (53 (IADD))
        (54 (ILOAD 4))
        (56 (ICONST_0))
        (57 (JVM::ISHL))
        (58 (IADD))
        (59 (IRETURN))
        (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "readInt"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (JVM::I2L))
         (5 (BIPUSH 32))
         (7 (JVM::LSHL))
         (8 (ALOAD_0))
         (9 (INVOKEVIRTUAL (METHODCP "readInt"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (12 (JVM::I2L))
         (13 (JVM::LDC2_W 4))
         (16 (JVM::LAND))
         (17 (JVM::LADD))
         (18 (JVM::LRETURN))
         (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readUTF" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESTATIC (METHODCP "readUTF" "java.io.DataInputStream"
                                          ((CLASS "java.io.DataInput"))
                                          (CLASS "java.lang.String"))))
               (4 (ARETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "readLine" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "iowait" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE)))
    (INTERFACES "java.io.DataInput"
                "java.io.DataOutput")
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.ConnectionBase"
    "com.sun.cldc.io.GeneralBase"
    (CONSTANT_POOL (STRING "No openInputStream")
                   (STRING "No openOutputStream"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>" "com.sun.cldc.io.GeneralBase"
                                       NIL VOID)))
           (4 (RETURN))
           (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 9)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_1))
         (2 (ILOAD_2))
         (3 (ILOAD_3))
         (4 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.io.ConnectionBase"
                                     ((CLASS "java.lang.String") INT BOOLEAN)
                                     VOID)))
         (7 (ALOAD_0))
         (8 (ARETURN))
         (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openDataInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 12)
        (PARSEDCODE
             (0 (NEW (CLASS "java.io.DataInputStream")))
             (3 (DUP))
             (4 (ALOAD_0))
             (5 (INVOKEVIRTUAL (METHODCP "openInputStream"
                                         "com.sun.cldc.io.ConnectionBase"
                                         NIL (CLASS "java.io.InputStream"))))
             (8 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataInputStream"
                                         ((CLASS "java.io.InputStream"))
                                         VOID)))
             (11 (ARETURN))
             (ENDOFCODE 12))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "openDataOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataOutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
            (0 (NEW (CLASS "java.io.DataOutputStream")))
            (3 (DUP))
            (4 (ALOAD_0))
            (5 (INVOKEVIRTUAL (METHODCP "openOutputStream"
                                        "com.sun.cldc.io.ConnectionBase"
                                        NIL (CLASS "java.io.OutputStream"))))
            (8 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataOutputStream"
                                        ((CLASS "java.io.OutputStream"))
                                        VOID)))
            (11 (ARETURN))
            (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES "javax.microedition.io.Connection"
                "com.sun.cldc.io.ConnectionBaseInterface")
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.NetworkConnectionBase"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.io.ConnectionBase"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "initializeInternal" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 0)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 4)
       (PARSEDCODE
           (0 (INVOKESTATIC (METHODCP "initializeInternal"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
           (3 (RETURN))
           (ENDOFCODE 4))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "com.sun.cldc.io.connections.HttpConnection"
          "java.lang.Object"
          (CONSTANT_POOL (STRING "HEAD")
                         (STRING "GET")
                         (STRING "POST")
                         (INT 200)
                         (INT 201)
                         (INT 202)
                         (INT 203)
                         (INT 204)
                         (INT 205)
                         (INT 206)
                         (INT 300)
                         (INT 301)
                         (INT 302)
                         (INT 303)
                         (INT 304)
                         (INT 305)
                         (INT 307)
                         (INT 400)
                         (INT 401)
                         (INT 402)
                         (INT 403)
                         (INT 404)
                         (INT 405)
                         (INT 406)
                         (INT 407)
                         (INT 408)
                         (INT 409)
                         (INT 410)
                         (INT 411)
                         (INT 412)
                         (INT 413)
                         (INT 414)
                         (INT 415)
                         (INT 416)
                         (INT 417)
                         (INT 500)
                         (INT 501)
                         (INT 502)
                         (INT 503)
                         (INT 504)
                         (INT 505))
          (FIELDS (FIELD "HEAD" (CLASS "java.lang.String")
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         0)
                  (FIELD "GET" (CLASS "java.lang.String")
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         1)
                  (FIELD "POST" (CLASS "java.lang.String")
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         2)
                  (FIELD "HTTP_OK" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         3)
                  (FIELD "HTTP_CREATED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         4)
                  (FIELD "HTTP_ACCEPTED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         5)
                  (FIELD "HTTP_NOT_AUTHORITATIVE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         6)
                  (FIELD "HTTP_NO_CONTENT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         7)
                  (FIELD "HTTP_RESET" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         8)
                  (FIELD "HTTP_PARTIAL" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         9)
                  (FIELD "HTTP_MULT_CHOICE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         10)
                  (FIELD "HTTP_MOVED_PERM" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         11)
                  (FIELD "HTTP_MOVED_TEMP" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         12)
                  (FIELD "HTTP_SEE_OTHER" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         13)
                  (FIELD "HTTP_NOT_MODIFIED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         14)
                  (FIELD "HTTP_USE_PROXY" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         15)
                  (FIELD "HTTP_TEMP_REDIRECT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         16)
                  (FIELD "HTTP_BAD_REQUEST" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         17)
                  (FIELD "HTTP_UNAUTHORIZED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         18)
                  (FIELD "HTTP_PAYMENT_REQUIRED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         19)
                  (FIELD "HTTP_FORBIDDEN" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         20)
                  (FIELD "HTTP_NOT_FOUND" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         21)
                  (FIELD "HTTP_BAD_METHOD" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         22)
                  (FIELD "HTTP_NOT_ACCEPTABLE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         23)
                  (FIELD "HTTP_PROXY_AUTH" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         24)
                  (FIELD "HTTP_CLIENT_TIMEOUT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         25)
                  (FIELD "HTTP_CONFLICT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         26)
                  (FIELD "HTTP_GONE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         27)
                  (FIELD "HTTP_LENGTH_REQUIRED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         28)
                  (FIELD "HTTP_PRECON_FAILED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         29)
                  (FIELD "HTTP_ENTITY_TOO_LARGE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         30)
                  (FIELD "HTTP_REQ_TOO_LONG" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         31)
                  (FIELD "HTTP_UNSUPPORTED_TYPE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         32)
                  (FIELD "HTTP_UNSUPPORTED_RANGE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         33)
                  (FIELD "HTTP_EXPECT_FAILED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         34)
                  (FIELD "HTTP_INTERNAL_ERROR" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         35)
                  (FIELD "HTTP_NOT_IMPLEMENTED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         36)
                  (FIELD "HTTP_BAD_GATEWAY" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         37)
                  (FIELD "HTTP_UNAVAILABLE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         38)
                  (FIELD "HTTP_GATEWAY_TIMEOUT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         39)
                  (FIELD "HTTP_VERSION" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         40))
          (METHODS (METHOD "getURL" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getProtocol" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHost" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getFile" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getRef" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getQuery" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getPort" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getRequestMethod" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "setRequestMethod"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getRequestProperty"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "setRequestProperty"
                           (PARAMETERS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getResponseCode" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getResponseMessage" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getExpiration" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getDate" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getLastModified" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderField"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderFieldInt"
                           (PARAMETERS (CLASS "java.lang.String")
                                       INT)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderFieldDate"
                           (PARAMETERS (CLASS "java.lang.String")
                                       LONG)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderField" (PARAMETERS INT)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderFieldKey" (PARAMETERS INT)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.ContentConnection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (INT 0)
                   (INT 1)
                   (INT 2)
                   (INT 4)
                   (INT 16)
                   (INT 32)
                   (INT 128)
                   (INT 192)
                   (STRING "baudrate=110")
                   (STRING "baudrate=300")
                   (STRING "baudrate=600")
                   (STRING "baudrate=1200")
                   (STRING "baudrate=2400")
                   (STRING "baudrate=4800")
                   (STRING "baudrate=9600")
                   (STRING "baudrate=14400")
                   (STRING "baudrate=19200")
                   (STRING "baudrate=38400")
                   (INT 38400)
                   (STRING "baudrate=56000")
                   (INT 56000)
                   (STRING "baudrate=57600")
                   (INT 57600)
                   (STRING "baudrate=115200")
                   (INT 115200)
                   (STRING "baudrate=128000")
                   (INT 128000)
                   (STRING "baudrate=256000")
                   (INT 256000)
                   (STRING "bitsperchar=7")
                   (STRING "bitsperchar=8")
                   (STRING "stopbits=1")
                   (STRING "stopbits=2")
                   (STRING "parity=none")
                   (STRING "parity=odd")
                   (STRING "parity=even")
                   (STRING "autorts=off")
                   (STRING "autorts=on")
                   (STRING "autocts=off")
                   (STRING "autocts=on")
                   (STRING "blocking=off")
                   (STRING "blocking=on")
                   (STRING "Bad parameter")
                   (STRING "Missing port ID")
                   (STRING ";")
                   (STRING "missing parameter delimiter")
                   (STRING "com.sun.cldc.io.j2me.comm.buffersize"))
    (FIELDS (FIELD "bufferSize" INT
                   (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
                   -1)
            (FIELD "opens"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "copen" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "outputStream"
                   (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "inputStream"
                   (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "hPort" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "serSettingsFlagStopBits1" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "serSettingsFlagStopBits2" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "serSettingsFlagParityOddM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "serSettingsFlagParityEvenM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   3)
            (FIELD "serSettingsFlagRTSAutoM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   4)
            (FIELD "serSettingsFlagCTSAutoM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   5)
            (FIELD "serSettingsFlagBitsPerChar7" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   6)
            (FIELD "serSettingsFlagBitsPerChar8" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   7)
            (FIELD "bbc" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "stop" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "parity" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "rts" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "cts" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "baud" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "blocking" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 56)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "com.sun.cldc.io.ConnectionBase"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (ICONST_0))
             (6 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (9 (ALOAD_0))
             (10 (ICONST_0))
             (11 (PUTFIELD (JVM::FIELDCP "copen"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         BOOLEAN)))
             (14 (ALOAD_0))
             (15 (JVM::SIPUSH 192))
             (18 (PUTFIELD (JVM::FIELDCP "bbc"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (21 (ALOAD_0))
             (22 (ICONST_0))
             (23 (PUTFIELD (JVM::FIELDCP "stop"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (26 (ALOAD_0))
             (27 (ICONST_0))
             (28 (PUTFIELD (JVM::FIELDCP "parity"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (31 (ALOAD_0))
             (32 (BIPUSH 16))
             (34 (PUTFIELD (JVM::FIELDCP "rts"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (37 (ALOAD_0))
             (38 (BIPUSH 32))
             (40 (PUTFIELD (JVM::FIELDCP "cts"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (43 (ALOAD_0))
             (44 (JVM::SIPUSH 19200))
             (47 (PUTFIELD (JVM::FIELDCP "baud"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (50 (ALOAD_0))
             (51 (ICONST_1))
             (52 (PUTFIELD (JVM::FIELDCP "blocking"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (55 (RETURN))
             (ENDOFCODE 56))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "parseParameter"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 523)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (ILOAD_2))
         (2 (ILOAD_3))
         (3 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
         (6 (ASTORE_1))
         (7 (ALOAD_1))
         (8 (LDC 8))
         (10 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (13 (IFEQ 25))
         (16 (ALOAD_0))
         (17 (BIPUSH 110))
         (19 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (22 (GOTO 522))
         (25 (ALOAD_1))
         (26 (LDC 9))
         (28 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (31 (IFEQ 44))
         (34 (ALOAD_0))
         (35 (JVM::SIPUSH 300))
         (38 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (41 (GOTO 522))
         (44 (ALOAD_1))
         (45 (LDC 10))
         (47 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (50 (IFEQ 63))
         (53 (ALOAD_0))
         (54 (JVM::SIPUSH 600))
         (57 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (60 (GOTO 522))
         (63 (ALOAD_1))
         (64 (LDC 11))
         (66 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (69 (IFEQ 82))
         (72 (ALOAD_0))
         (73 (JVM::SIPUSH 1200))
         (76 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (79 (GOTO 522))
         (82 (ALOAD_1))
         (83 (LDC 12))
         (85 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (88 (IFEQ 101))
         (91 (ALOAD_0))
         (92 (JVM::SIPUSH 2400))
         (95 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (98 (GOTO 522))
         (101 (ALOAD_1))
         (102 (LDC 13))
         (104 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (107 (IFEQ 120))
         (110 (ALOAD_0))
         (111 (JVM::SIPUSH 4800))
         (114 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (117 (GOTO 522))
         (120 (ALOAD_1))
         (121 (LDC 14))
         (123 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (126 (IFEQ 139))
         (129 (ALOAD_0))
         (130 (JVM::SIPUSH 9600))
         (133 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (136 (GOTO 522))
         (139 (ALOAD_1))
         (140 (LDC 15))
         (142 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (145 (IFEQ 158))
         (148 (ALOAD_0))
         (149 (JVM::SIPUSH 14400))
         (152 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (155 (GOTO 522))
         (158 (ALOAD_1))
         (159 (LDC 16))
         (161 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (164 (IFEQ 177))
         (167 (ALOAD_0))
         (168 (JVM::SIPUSH 19200))
         (171 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (174 (GOTO 522))
         (177 (ALOAD_1))
         (178 (LDC 17))
         (180 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (183 (IFEQ 195))
         (186 (ALOAD_0))
         (187 (LDC 18))
         (189 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (192 (GOTO 522))
         (195 (ALOAD_1))
         (196 (LDC 19))
         (198 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (201 (IFEQ 213))
         (204 (ALOAD_0))
         (205 (LDC 20))
         (207 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (210 (GOTO 522))
         (213 (ALOAD_1))
         (214 (LDC 21))
         (216 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (219 (IFEQ 231))
         (222 (ALOAD_0))
         (223 (LDC 22))
         (225 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (228 (GOTO 522))
         (231 (ALOAD_1))
         (232 (LDC 23))
         (234 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (237 (IFEQ 249))
         (240 (ALOAD_0))
         (241 (LDC 24))
         (243 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (246 (GOTO 522))
         (249 (ALOAD_1))
         (250 (LDC 25))
         (252 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (255 (IFEQ 267))
         (258 (ALOAD_0))
         (259 (LDC 26))
         (261 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (264 (GOTO 522))
         (267 (ALOAD_1))
         (268 (LDC 27))
         (270 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (273 (IFEQ 285))
         (276 (ALOAD_0))
         (277 (LDC 28))
         (279 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (282 (GOTO 522))
         (285 (ALOAD_1))
         (286 (LDC 29))
         (288 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (291 (IFEQ 304))
         (294 (ALOAD_0))
         (295 (JVM::SIPUSH 128))
         (298 (PUTFIELD (JVM::FIELDCP "bbc"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (301 (GOTO 522))
         (304 (ALOAD_1))
         (305 (LDC 30))
         (307 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (310 (IFEQ 323))
         (313 (ALOAD_0))
         (314 (JVM::SIPUSH 192))
         (317 (PUTFIELD (JVM::FIELDCP "bbc"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (320 (GOTO 522))
         (323 (ALOAD_1))
         (324 (LDC 31))
         (326 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (329 (IFEQ 340))
         (332 (ALOAD_0))
         (333 (ICONST_0))
         (334 (PUTFIELD (JVM::FIELDCP "stop"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (337 (GOTO 522))
         (340 (ALOAD_1))
         (341 (LDC 32))
         (343 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (346 (IFEQ 357))
         (349 (ALOAD_0))
         (350 (ICONST_1))
         (351 (PUTFIELD (JVM::FIELDCP "stop"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (354 (GOTO 522))
         (357 (ALOAD_1))
         (358 (LDC 33))
         (360 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (363 (IFEQ 374))
         (366 (ALOAD_0))
         (367 (ICONST_0))
         (368 (PUTFIELD (JVM::FIELDCP "parity"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (371 (GOTO 522))
         (374 (ALOAD_1))
         (375 (LDC 34))
         (377 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (380 (IFEQ 391))
         (383 (ALOAD_0))
         (384 (ICONST_2))
         (385 (PUTFIELD (JVM::FIELDCP "parity"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (388 (GOTO 522))
         (391 (ALOAD_1))
         (392 (LDC 35))
         (394 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (397 (IFEQ 408))
         (400 (ALOAD_0))
         (401 (ICONST_4))
         (402 (PUTFIELD (JVM::FIELDCP "parity"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (405 (GOTO 522))
         (408 (ALOAD_1))
         (409 (LDC 36))
         (411 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (414 (IFEQ 425))
         (417 (ALOAD_0))
         (418 (ICONST_0))
         (419 (PUTFIELD (JVM::FIELDCP "rts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (422 (GOTO 522))
         (425 (ALOAD_1))
         (426 (LDC 37))
         (428 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (431 (IFEQ 443))
         (434 (ALOAD_0))
         (435 (BIPUSH 16))
         (437 (PUTFIELD (JVM::FIELDCP "rts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (440 (GOTO 522))
         (443 (ALOAD_1))
         (444 (LDC 38))
         (446 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (449 (IFEQ 460))
         (452 (ALOAD_0))
         (453 (ICONST_0))
         (454 (PUTFIELD (JVM::FIELDCP "cts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (457 (GOTO 522))
         (460 (ALOAD_1))
         (461 (LDC 39))
         (463 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (466 (IFEQ 478))
         (469 (ALOAD_0))
         (470 (BIPUSH 32))
         (472 (PUTFIELD (JVM::FIELDCP "cts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (475 (GOTO 522))
         (478 (ALOAD_1))
         (479 (LDC 40))
         (481 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (484 (IFEQ 495))
         (487 (ALOAD_0))
         (488 (ICONST_0))
         (489 (PUTFIELD (JVM::FIELDCP "blocking"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (492 (GOTO 522))
         (495 (ALOAD_1))
         (496 (LDC 41))
         (498 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (501 (IFEQ 512))
         (504 (ALOAD_0))
         (505 (ICONST_1))
         (506 (PUTFIELD (JVM::FIELDCP "blocking"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (509 (GOTO 522))
         (512 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (515 (DUP))
         (516 (LDC 42))
         (518 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.IllegalArgumentException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
         (521 (ATHROW))
         (522 (RETURN))
         (ENDOFCODE 523))
       (EXCEPTIONS)
       (STACKMAP
            (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (44 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (63 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (82 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (101 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (120 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (139 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (158 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (177 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (195 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (213 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (231 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (249 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (267 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (285 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (304 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (323 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (340 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (357 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (374 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (391 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (408 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (425 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (443 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (460 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (478 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (495 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (512 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (522 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL)))))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 338)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE 4))
        (3 (ACONST_NULL))
        (4 (ASTORE 5))
        (6 (ICONST_0))
        (7 (ISTORE 6))
        (9 (ICONST_0))
        (10 (ISTORE 7))
        (12 (ALOAD_1))
        (13 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (16 (IFNE 29))
        (19 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (22 (DUP))
        (23 (LDC 43))
        (25 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (28 (ATHROW))
        (29 (ALOAD_1))
        (30 (ICONST_0))
        (31 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (34 (INVOKESTATIC (METHODCP "isDigit" "java.lang.Character" (CHAR)
                                    BOOLEAN)))
        (37 (IFEQ 57))
        (40 (ALOAD_1))
        (41 (ICONST_0))
        (42 (ICONST_1))
        (43 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (46 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (49 (ISTORE 4))
        (51 (IINC 7 1))
        (54 (GOTO 175))
        (57 (ALOAD_1))
        (58 (LDC 44))
        (60 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (63 (ISTORE 7))
        (65 (ILOAD 7))
        (67 (IFGE 82))
        (70 (ALOAD_1))
        (71 (ASTORE 5))
        (73 (ALOAD_1))
        (74 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (77 (ISTORE 7))
        (79 (GOTO 175))
        (82 (ALOAD_1))
        (83 (ICONST_0))
        (84 (ILOAD 7))
        (86 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (89 (ASTORE 5))
        (91 (GOTO 175))
        (94 (ALOAD_1))
        (95 (ILOAD 7))
        (97 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (100 (BIPUSH 59))
        (102 (IF_ICMPEQ 115))
        (105 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (108 (DUP))
        (109 (LDC 45))
        (111 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (114 (ATHROW))
        (115 (IINC 7 1))
        (118 (ILOAD 7))
        (120 (ISTORE 6))
        (122 (GOTO 125))
        (125 (ILOAD 7))
        (127 (ALOAD_1))
        (128 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (131 (IF_ICMPNE 146))
        (134 (ALOAD_0))
        (135 (ALOAD_1))
        (136 (ILOAD 6))
        (138 (ILOAD 7))
        (140 (INVOKESPECIAL (METHODCP "parseParameter"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      ((CLASS "java.lang.String") INT INT)
                                      VOID)))
        (143 (GOTO 175))
        (146 (ALOAD_1))
        (147 (ILOAD 7))
        (149 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (152 (BIPUSH 59))
        (154 (IF_ICMPNE 169))
        (157 (ALOAD_0))
        (158 (ALOAD_1))
        (159 (ILOAD 6))
        (161 (ILOAD 7))
        (163 (INVOKESPECIAL (METHODCP "parseParameter"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      ((CLASS "java.lang.String") INT INT)
                                      VOID)))
        (166 (GOTO 175))
        (169 (IINC 7 1))
        (172 (GOTO 125))
        (175 (ALOAD_1))
        (176 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (179 (ILOAD 7))
        (181 (IF_ICMPGT 94))
        (184 (ALOAD 5))
        (186 (IFNULL 233))
        (189 (ALOAD_0))
        (190 (ALOAD 5))
        (192 (ALOAD_0))
        (193 (GETFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (196 (ALOAD_0))
        (197 (GETFIELD (JVM::FIELDCP "bbc"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (200 (ALOAD_0))
        (201 (GETFIELD (JVM::FIELDCP "stop"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (204 (JVM::IOR))
        (205 (ALOAD_0))
        (206 (GETFIELD (JVM::FIELDCP "parity"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (209 (JVM::IOR))
        (210 (ALOAD_0))
        (211 (GETFIELD (JVM::FIELDCP "rts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (214 (JVM::IOR))
        (215 (ALOAD_0))
        (216 (GETFIELD (JVM::FIELDCP "cts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (219 (JVM::IOR))
        (220 (ALOAD_0))
        (221 (GETFIELD (JVM::FIELDCP "blocking"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (224 (INVOKESTATIC (METHODCP "native_openByName"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     ((CLASS "java.lang.String") INT INT INT)
                                     INT)))
        (227 (PUTFIELD (JVM::FIELDCP "hPort"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (230 (GOTO 274))
        (233 (ALOAD_0))
        (234 (ILOAD 4))
        (236 (ALOAD_0))
        (237 (GETFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (240 (ALOAD_0))
        (241 (GETFIELD (JVM::FIELDCP "bbc"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (244 (ALOAD_0))
        (245 (GETFIELD (JVM::FIELDCP "stop"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (248 (JVM::IOR))
        (249 (ALOAD_0))
        (250 (GETFIELD (JVM::FIELDCP "parity"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (253 (JVM::IOR))
        (254 (ALOAD_0))
        (255 (GETFIELD (JVM::FIELDCP "rts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (258 (JVM::IOR))
        (259 (ALOAD_0))
        (260 (GETFIELD (JVM::FIELDCP "cts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (263 (JVM::IOR))
        (264 (ALOAD_0))
        (265 (GETFIELD (JVM::FIELDCP "blocking"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (268 (INVOKESTATIC (METHODCP "native_openByNumber"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (INT INT INT INT)
                                     INT)))
        (271 (PUTFIELD (JVM::FIELDCP "hPort"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (274 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
        (277 (IFNE 295))
        (280 (ALOAD_0))
        (281 (NEW (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")))
        (284 (DUP))
        (285 (ALOAD_0))
        (286 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                            ((CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                            VOID)))
        (289 (PUTFIELD (JVM::FIELDCP "inputStream"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (CLASS "java.io.InputStream"))))
        (292 (GOTO 310))
        (295 (ALOAD_0))
        (296
         (NEW
           (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")))
        (299 (DUP))
        (300 (ALOAD_0))
        (301 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
        (304
         (INVOKESPECIAL
           (METHODCP "<init>"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     ((CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                      INT)
                     VOID)))
        (307 (PUTFIELD (JVM::FIELDCP "inputStream"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (CLASS "java.io.InputStream"))))
        (310 (ALOAD_0))
        (311 (NEW (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream")))
        (314 (DUP))
        (315 (ALOAD_0))
        (316 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                            ((CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                            VOID)))
        (319 (PUTFIELD (JVM::FIELDCP "outputStream"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (CLASS "java.io.OutputStream"))))
        (322 (ALOAD_0))
        (323 (DUP))
        (324 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (327 (ICONST_1))
        (328 (IADD))
        (329 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (332 (ALOAD_0))
        (333 (ICONST_1))
        (334 (PUTFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     BOOLEAN)))
        (337 (RETURN))
        (ENDOFCODE 338))
       (EXCEPTIONS)
       (STACKMAP
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT NULL INT INT)
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT NULL INT INT)
                       (STACK)
                       NIL))
            (82 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT NULL INT INT)
                       (STACK)
                       NIL))
            (94 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (115 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (125 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (146 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (169 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (175 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (233 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (274 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (295 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (310 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL)))))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 15)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (GETFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (5 (ICONST_1))
             (6 (IADD))
             (7 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (10 (ALOAD_0))
             (11 (GETFIELD (JVM::FIELDCP "inputStream"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (CLASS "java.io.InputStream"))))
             (14 (ARETURN))
             (ENDOFCODE 15))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 15)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (GETFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (5 (ICONST_1))
             (6 (IADD))
             (7 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (10 (ALOAD_0))
             (11 (GETFIELD (JVM::FIELDCP "outputStream"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (CLASS "java.io.OutputStream"))))
             (14 (ARETURN))
             (ENDOFCODE 15))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.comm.Protocol"
                                       BOOLEAN)))
            (4 (IFEQ 16))
            (7 (ALOAD_0))
            (8 (ICONST_0))
            (9 (PUTFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.comm.Protocol"
                                       BOOLEAN)))
            (12 (ALOAD_0))
            (13 (INVOKEVIRTUAL (METHODCP "realClose"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         NIL VOID)))
            (16 (RETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP
            (16 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "realClose" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 22)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (GETFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (5 (ICONST_1))
             (6 (ISUB))
             (7 (DUP_X1))
             (8 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (11 (IFNE 21))
             (14 (ALOAD_0))
             (15 (GETFIELD (JVM::FIELDCP "hPort"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (18 (INVOKESTATIC (METHODCP "native_close"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (INT)
                                         VOID)))
             (21 (RETURN))
             (ENDOFCODE 22))
        (EXCEPTIONS)
        (STACKMAP
             (21 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                        (STACK)
                        NIL)))))
     (METHOD "native_openByNumber"
             (PARAMETERS INT INT INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "native_openByName"
             (PARAMETERS (CLASS "java.lang.String")
                         INT INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "native_close" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "native_readBytes"
             (PARAMETERS INT (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "native_available" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "native_writeBytes"
             (PARAMETERS INT (ARRAY BYTE) INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
            (0 (ICONST_0))
            (1 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
            (4 (LDC 46))
            (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
            (9 (ASTORE_0))
            (10 (ALOAD_0))
            (11 (IFNULL 28))
            (14 (ALOAD_0))
            (15 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                        ((CLASS "java.lang.String"))
                                        INT)))
            (18 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
            (21 (GOTO 28))
            (24 (ASTORE_1))
            (25 (GOTO 28))
            (28 (RETURN))
            (ENDOFCODE 29))
       (EXCEPTIONS (JVM::HANDLER 14 21 24
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK (CLASS "java.lang.NumberFormatException"))
                            NIL))
                 (28 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))))))
    (INTERFACES "javax.microedition.io.StreamConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "Stream closed")
                   (STRING "Read overrun in comm:"))
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_1))
        (6 (NEWARRAY BYTE))
        (8 (PUTFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (ARRAY BYTE))))
        (11 (ALOAD_0))
        (12 (ALOAD_1))
        (13
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream"))
              (STACK)
              NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 26)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (ARRAY BYTE))))
        (5 (ICONST_0))
        (6 (ICONST_1))
        (7 (INVOKEVIRTUAL
                (METHODCP "read"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          ((ARRAY BYTE) INT INT)
                          INT)))
        (10 (IFLE 24))
        (13 (ALOAD_0))
        (14 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                               (ARRAY BYTE))))
        (17 (ICONST_0))
        (18 (BALOAD))
        (19 (JVM::SIPUSH 255))
        (22 (JVM::IAND))
        (23 (IRETURN))
        (24 (ICONST_M1))
        (25 (IRETURN))
        (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP
        (24
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream"))
              (STACK)
              NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 108)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_1))
        (5 (IFNONNULL 16))
        (8 (NEW (CLASS "java.lang.NullPointerException")))
        (11 (DUP))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (15 (ATHROW))
        (16 (ILOAD_2))
        (17 (IFLT 44))
        (20 (ILOAD_2))
        (21 (ALOAD_1))
        (22 (ARRAYLENGTH))
        (23 (IF_ICMPGT 44))
        (26 (ILOAD_3))
        (27 (IFLT 44))
        (30 (ILOAD_2))
        (31 (ILOAD_3))
        (32 (IADD))
        (33 (ALOAD_1))
        (34 (ARRAYLENGTH))
        (35 (IF_ICMPGT 44))
        (38 (ILOAD_2))
        (39 (ILOAD_3))
        (40 (IADD))
        (41 (IFGE 52))
        (44 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (47 (DUP))
        (48 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     NIL VOID)))
        (51 (ATHROW))
        (52 (ALOAD_0))
        (53 (ALOAD_0))
        (54
           (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (57 (GETFIELD (JVM::FIELDCP "hPort"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    INT)))
        (60 (ALOAD_1))
        (61 (ILOAD_2))
        (62 (ILOAD_3))
        (63 (INVOKEVIRTUAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                           (INT (ARRAY BYTE) INT INT)
                           INT)))
        (66 (ISTORE 4))
        (68 (ILOAD 4))
        (70 (IFNE 83))
        (73 (ALOAD_0))
        (74
           (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (77 (GETFIELD (JVM::FIELDCP "blocking"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    INT)))
        (80 (IFNE 102))
        (83 (ILOAD 4))
        (85 (ILOAD_3))
        (86 (IF_ICMPLE 99))
        (89 (NEW (CLASS "java.io.IOException")))
        (92 (DUP))
        (93 (LDC 1))
        (95 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (98 (ATHROW))
        (99 (ILOAD 4))
        (101 (IRETURN))
        (102 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                     NIL VOID)))
        (105 (GOTO 52))
        (ENDOFCODE 108))
       (EXCEPTIONS)
       (STACKMAP
        (16
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT TOPX)
               (STACK)
               NIL))
        (44
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT TOPX)
               (STACK)
               NIL))
        (52
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT TOPX)
               (STACK)
               NIL))
        (83
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT INT)
               (STACK)
               NIL))
        (99
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT INT)
               (STACK)
               NIL))
        (102
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT INT)
               (STACK)
               NIL)))))
     (METHOD
      "read1"
      (PARAMETERS INT (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 5)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ILOAD_1))
              (1 (ALOAD_2))
              (2 (ILOAD_3))
              (3 (ILOAD 4))
              (5 (INVOKESTATIC (METHODCP "native_readBytes"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (INT (ARRAY BYTE) INT INT)
                                         INT)))
              (8 (IRETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 15)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (8 (GETFIELD (JVM::FIELDCP "hPort"
                                   "com.sun.cldc.io.j2me.comm.Protocol"
                                   INT)))
        (11 (INVOKESTATIC (METHODCP "native_available"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    (INT)
                                    INT)))
        (14 (IRETURN))
        (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNULL 19))
        (7 (ALOAD_0))
        (8 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (11 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     NIL VOID)))
        (14 (ALOAD_0))
        (15 (ACONST_NULL))
        (16
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (19 (RETURN))
        (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP
        (19
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream"))
              (STACK)
              NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
    "com.sun.cldc.io.j2me.comm.PrivateInputStream"
    (CONSTANT_POOL)
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "pos"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_1))
        (2 (INVOKESPECIAL
                (METHODCP "<init>"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          ((CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                          VOID)))
        (5 (ALOAD_0))
        (6 (ILOAD_2))
        (7 (NEWARRAY BYTE))
        (9 (PUTFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read1"
      (PARAMETERS INT (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 121)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (4 (IFNE 66))
        (7 (ILOAD 4))
        (9 (ALOAD_0))
        (10
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (13 (ARRAYLENGTH))
        (14 (IF_ICMPLT 27))
        (17 (ALOAD_0))
        (18 (ILOAD_1))
        (19 (ALOAD_2))
        (20 (ILOAD_3))
        (21 (ILOAD 4))
        (23 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                           (INT (ARRAY BYTE) INT INT)
                           INT)))
        (26 (IRETURN))
        (27 (ALOAD_0))
        (28 (ICONST_0))
        (29
           (PUTFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (32 (ALOAD_0))
        (33 (ILOAD_1))
        (34 (ALOAD_0))
        (35
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (38 (ALOAD_0))
        (39
           (GETFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (42 (ALOAD_0))
        (43
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (46 (ARRAYLENGTH))
        (47 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                           (INT (ARRAY BYTE) INT INT)
                           INT)))
        (50 (ISTORE 5))
        (52 (ILOAD 5))
        (54 (IFGT 60))
        (57 (ILOAD 5))
        (59 (IRETURN))
        (60 (ALOAD_0))
        (61 (ILOAD 5))
        (63
           (PUTFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (66 (ILOAD 4))
        (68 (ALOAD_0))
        (69
           (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (72 (IF_ICMPLE 81))
        (75 (ALOAD_0))
        (76
           (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (79 (ISTORE 4))
        (81 (ALOAD_0))
        (82
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (85 (ALOAD_0))
        (86
           (GETFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (89 (ALOAD_2))
        (90 (ILOAD_3))
        (91 (ILOAD 4))
        (93 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (96 (ALOAD_0))
        (97 (DUP))
        (98
           (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (101 (ILOAD 4))
        (103 (ISUB))
        (104
           (PUTFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (107 (ALOAD_0))
        (108 (DUP))
        (109
           (GETFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (112 (ILOAD 4))
        (114 (IADD))
        (115
           (PUTFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (118 (ILOAD 4))
        (120 (IRETURN))
        (ENDOFCODE 121))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT TOPX)
          (STACK)
          NIL))
        (60
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT INT)
          (STACK)
          NIL))
        (66
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT TOPX)
          (STACK)
          NIL))
        (81
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT TOPX)
          (STACK)
          NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_1))
        (6 (NEWARRAY BYTE))
        (8 (PUTFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (ARRAY BYTE))))
        (11 (ALOAD_0))
        (12 (ALOAD_1))
        (13
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream"))
             (STACK)
             NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 19)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (ARRAY BYTE))))
        (4 (ICONST_0))
        (5 (ILOAD_1))
        (6 (JVM::I2B))
        (7 (BASTORE))
        (8 (ALOAD_0))
        (9 (ALOAD_0))
        (10
           (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (ARRAY BYTE))))
        (13 (ICONST_0))
        (14 (ICONST_1))
        (15 (INVOKEVIRTUAL
                 (METHODCP "write"
                           "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                           ((ARRAY BYTE) INT INT)
                           VOID)))
        (18 (RETURN))
        (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                          NIL VOID)))
        (4 (ILOAD_3))
        (5 (IFGT 9))
        (8 (RETURN))
        (9 (ALOAD_1))
        (10 (ILOAD_2))
        (11 (BALOAD))
        (12 (ALOAD_1))
        (13 (ILOAD_2))
        (14 (ILOAD_3))
        (15 (IADD))
        (16 (ICONST_1))
        (17 (ISUB))
        (18 (BALOAD))
        (19 (IADD))
        (20 (ISTORE 4))
        (22 (ALOAD_0))
        (23
           (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (26 (GETFIELD (JVM::FIELDCP "hPort"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    INT)))
        (29 (ALOAD_1))
        (30 (ILOAD_2))
        (31 (ILOAD_3))
        (32 (INVOKESTATIC (METHODCP "native_writeBytes"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    (INT (ARRAY BYTE) INT INT)
                                    VOID)))
        (35 (RETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP
        (9
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream")
                      (ARRAY BYTE)
                      INT INT TOPX)
              (STACK)
              NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNULL 19))
        (7 (ALOAD_0))
        (8 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (11 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     NIL VOID)))
        (14 (ALOAD_0))
        (15 (ACONST_NULL))
        (16
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (19 (RETURN))
        (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP
        (19
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream"))
             (STACK)
             NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.datagram.DatagramObject"
    "com.sun.cldc.io.GeneralBase"
    (CONSTANT_POOL (INT 256)
                   (STRING "datagram://")
                   (STRING ":")
                   (STRING "Invalid datagram address")
                   (STRING "Illegal length or offset"))
    (FIELDS (FIELD "MAX_HOST_LENGTH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "off" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "len" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "ipNumber" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "host" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "port" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "pointer" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                  (ARRAY BYTE)
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 22)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "com.sun.cldc.io.GeneralBase"
                                    NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD
                (JVM::FIELDCP "off"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (9 (ALOAD_0))
        (10 (ALOAD_1))
        (11
         (PUTFIELD
            (JVM::FIELDCP "parent"
                          "com.sun.cldc.io.j2me.datagram.DatagramObject"
                          (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))))
        (14 (ALOAD_0))
        (15 (ALOAD_2))
        (16 (ICONST_0))
        (17 (ILOAD_3))
        (18 (INVOKEVIRTUAL
                 (METHODCP "setData"
                           "com.sun.cldc.io.j2me.datagram.DatagramObject"
                           ((ARRAY BYTE) INT INT)
                           VOID)))
        (21 (RETURN))
        (ENDOFCODE 22))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getAddress" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "host"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (CLASS "java.lang.String"))))
        (4 (IFNONNULL 56))
        (7 (ALOAD_0))
        (8 (GETFIELD
                (JVM::FIELDCP "ipNumber"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (11 (IFNE 16))
        (14 (ACONST_NULL))
        (15 (ARETURN))
        (16 (JVM::SIPUSH 256))
        (19 (NEWARRAY BYTE))
        (21 (ASTORE_1))
        (22 (ALOAD_0))
        (23
         (GETFIELD
            (JVM::FIELDCP "parent"
                          "com.sun.cldc.io.j2me.datagram.DatagramObject"
                          (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))))
        (26 (ALOAD_0))
        (27 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (30 (ALOAD_1))
        (31 (INVOKEVIRTUAL (METHODCP "getHostByAddr"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (INT (ARRAY BYTE))
                                     VOID)))
        (34 (ALOAD_0))
        (35 (NEW (CLASS "java.lang.String")))
        (38 (DUP))
        (39 (ALOAD_1))
        (40 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.String" ((ARRAY BYTE))
                                     VOID)))
        (43 (INVOKEVIRTUAL (METHODCP "trim" "java.lang.String"
                                     NIL (CLASS "java.lang.String"))))
        (46 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (49 (GOTO 56))
        (52 (ASTORE_1))
        (53 (GOTO 56))
        (56 (NEW (CLASS "java.lang.StringBuffer")))
        (59 (DUP))
        (60 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (63 (LDC 1))
        (65 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (68 (ALOAD_0))
        (69 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (72 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (75 (LDC 2))
        (77 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (80 (ALOAD_0))
        (81 (GETFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (84 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (87 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (90 (ARETURN))
        (ENDOFCODE 91))
       (EXCEPTIONS (JVM::HANDLER 16 49 52 (CLASS "java.io.IOException")))
       (STACKMAP
        (16
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX)
               (STACK)
               NIL))
        (52
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX)
               (STACK (CLASS "java.io.IOException"))
               NIL))
        (56
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "getData" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
         (4 (ARETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getOffset" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
         (4 (IRETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getLength" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
         (4 (IRETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setAddress"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 96)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_0))
        (2 (PUTFIELD
                (JVM::FIELDCP "ipNumber"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (5 (ALOAD_1))
        (6 (LDC 1))
        (8 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                    ((CLASS "java.lang.String"))
                                    BOOLEAN)))
        (11 (IFNE 41))
        (14 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (17 (DUP))
        (18 (NEW (CLASS "java.lang.StringBuffer")))
        (21 (DUP))
        (22 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (25 (LDC 3))
        (27 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (30 (ALOAD_1))
        (31 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (34 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (37 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (40 (ATHROW))
        (41 (ALOAD_1))
        (42 (BIPUSH 11))
        (44 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (47 (ASTORE_2))
        (48 (ALOAD_0))
        (49 (ALOAD_2))
        (50 (INVOKESTATIC (METHODCP "getAddress"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (53 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (56 (ALOAD_0))
        (57 (ALOAD_2))
        (58 (INVOKESTATIC (METHODCP "getPort"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (61 (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (64 (GOTO 95))
        (67 (ASTORE_3))
        (68 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (71 (DUP))
        (72 (NEW (CLASS "java.lang.StringBuffer")))
        (75 (DUP))
        (76 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (79 (LDC 3))
        (81 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (84 (ALOAD_1))
        (85 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (88 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (91 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (94 (ATHROW))
        (95 (RETURN))
        (ENDOFCODE 96))
       (EXCEPTIONS (JVM::HANDLER 48 64 67
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
        (41
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (CLASS "java.lang.String")
                       TOPX TOPX)
               (STACK)
               NIL))
        (67
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (CLASS "java.lang.String")
                       (CLASS "java.lang.String")
                       TOPX)
               (STACK (CLASS "java.lang.NumberFormatException"))
               NIL))
        (95
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (CLASS "java.lang.String")
                       (CLASS "java.lang.String")
                       TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "setAddress"
      (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 27)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1
          (CHECKCAST (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (4 (ASTORE_2))
        (5 (ALOAD_0))
        (6 (ALOAD_2))
        (7 (GETFIELD
                (JVM::FIELDCP "host"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (CLASS "java.lang.String"))))
        (10 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (13 (ALOAD_0))
        (14 (ALOAD_2))
        (15 (GETFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (18 (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (21 (ALOAD_0))
        (22 (ICONST_0))
        (23 (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (26 (RETURN))
        (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setData"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 42)
       (PARSEDCODE
        (0 (ILOAD_3))
        (1 (IFLT 16))
        (4 (ILOAD_2))
        (5 (IFLT 16))
        (8 (ILOAD_3))
        (9 (ILOAD_2))
        (10 (IADD))
        (11 (ALOAD_1))
        (12 (ARRAYLENGTH))
        (13 (IF_ICMPLE 26))
        (16 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (19 (DUP))
        (20 (LDC 4))
        (22 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (25 (ATHROW))
        (26 (ALOAD_0))
        (27 (ALOAD_1))
        (28 (PUTFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (31 (ALOAD_0))
        (32 (ILOAD_2))
        (33 (PUTFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (36 (ALOAD_0))
        (37 (ILOAD_3))
        (38 (PUTFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (41 (RETURN))
        (ENDOFCODE 42))
       (EXCEPTIONS)
       (STACKMAP
        (16
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (ARRAY BYTE)
                       INT INT)
               (STACK)
               NIL))
        (26
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (ARRAY BYTE)
                       INT INT)
               (STACK)
               NIL)))))
     (METHOD
      "setLength" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 14)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_0))
         (2 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
         (5 (ALOAD_0))
         (6 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
         (9 (ILOAD_1))
         (10 (INVOKEVIRTUAL
                  (METHODCP "setData"
                            "com.sun.cldc.io.j2me.datagram.DatagramObject"
                            ((ARRAY BYTE) INT INT)
                            VOID)))
         (13 (RETURN))
         (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 16)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (ARRAY BYTE))))
        (5 (ICONST_0))
        (6 (ICONST_0))
        (7 (INVOKEVIRTUAL
                (METHODCP "setData"
                          "com.sun.cldc.io.j2me.datagram.DatagramObject"
                          ((ARRAY BYTE) INT INT)
                          VOID)))
        (10 (ALOAD_0))
        (11 (ICONST_0))
        (12 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (15 (RETURN))
        (ENDOFCODE 16))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (JVM::LLOAD_1))
        (1 (JVM::L2I))
        (2 (ALOAD_0))
        (3 (GETFIELD
                (JVM::FIELDCP "len"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (6 (ALOAD_0))
        (7 (GETFIELD
                (JVM::FIELDCP "pointer"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (10 (ISUB))
        (11 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                    INT)))
        (14 (ISTORE_3))
        (15 (ALOAD_0))
        (16 (DUP))
        (17 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (20 (ILOAD_3))
        (21 (IADD))
        (22 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (25 (ILOAD_3))
        (26 (JVM::I2L))
        (27 (JVM::LRETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 39)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "pointer"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP "len"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (8 (IF_ICMPLT 13))
        (11 (ICONST_M1))
        (12 (IRETURN))
        (13 (ALOAD_0))
        (14 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (17 (ALOAD_0))
        (18 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (21 (ALOAD_0))
        (22 (DUP))
        (23 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (26 (DUP_X1))
        (27 (ICONST_1))
        (28 (IADD))
        (29 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (32 (IADD))
        (33 (BALOAD))
        (34 (JVM::SIPUSH 255))
        (37 (JVM::IAND))
        (38 (IRETURN))
        (ENDOFCODE 39))
       (EXCEPTIONS)
       (STACKMAP
        (13
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
              (STACK)
              NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 52)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "pointer"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (ARRAY BYTE))))
        (8 (ARRAYLENGTH))
        (9 (IF_ICMPLT 20))
        (12 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_0))
        (21 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (24 (ALOAD_0))
        (25 (DUP))
        (26 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (29 (DUP_X1))
        (30 (ICONST_1))
        (31 (IADD))
        (32 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (35 (ILOAD_1))
        (36 (JVM::I2B))
        (37 (BASTORE))
        (38 (ALOAD_0))
        (39 (ICONST_0))
        (40 (PUTFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (43 (ALOAD_0))
        (44 (ALOAD_0))
        (45 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (48 (PUTFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (51 (RETURN))
        (ENDOFCODE 52))
       (EXCEPTIONS)
       (STACKMAP
        (20
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT)
               (STACK)
               NIL))))))
    (INTERFACES "javax.microedition.io.Datagram")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.datagram.Protocol"
    "com.sun.cldc.io.NetworkConnectionBase"
    (CONSTANT_POOL (STRING "No n:n in protocol name ")
                   (INT 65535)
                   (STRING "Bad port number ")
                   (STRING "Protocol must start with \"//\" ")
                   (STRING "Bad port number \"//\" ")
                   (STRING "Connection closed")
                   (STRING "Function not implemented")
                   (STRING "localhost")
                   (STRING "Failed to send datagram")
                   (STRING "Socket closed")
                   (STRING "Bad datagram length"))
    (FIELDS (FIELD "handle"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "host" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "port"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "open"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
          (4 (ALOAD_0))
          (5 (ACONST_NULL))
          (6 (PUTFIELD (JVM::FIELDCP "host"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (CLASS "java.lang.String"))))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getAddress"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PROTECTED* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 51)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (BIPUSH 58))
        (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                    INT)))
        (6 (ISTORE_1))
        (7 (ILOAD_1))
        (8 (IFGE 38))
        (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (14 (DUP))
        (15 (NEW (CLASS "java.lang.StringBuffer")))
        (18 (DUP))
        (19 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (22 (LDC 0))
        (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (27 (ALOAD_0))
        (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (34 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (37 (ATHROW))
        (38 (ILOAD_1))
        (39 (IFNE 44))
        (42 (ACONST_NULL))
        (43 (ARETURN))
        (44 (ALOAD_0))
        (45 (ICONST_0))
        (46 (ILOAD_1))
        (47 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (50 (ARETURN))
        (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String") INT)
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.String") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getPort"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 88)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (BIPUSH 58))
            (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                        INT)))
            (6 (ISTORE_1))
            (7 (ILOAD_1))
            (8 (IFGE 38))
            (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (14 (DUP))
            (15 (NEW (CLASS "java.lang.StringBuffer")))
            (18 (DUP))
            (19 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (22 (LDC 0))
            (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (27 (ALOAD_0))
            (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (34 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (37 (ATHROW))
            (38 (ALOAD_0))
            (39 (ILOAD_1))
            (40 (ICONST_1))
            (41 (IADD))
            (42 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                         (CLASS "java.lang.String"))))
            (45 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                        ((CLASS "java.lang.String"))
                                        INT)))
            (48 (ISTORE_2))
            (49 (ILOAD_2))
            (50 (IFLT 59))
            (53 (ILOAD_2))
            (54 (LDC 1))
            (56 (IF_ICMPLE 86))
            (59 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (62 (DUP))
            (63 (NEW (CLASS "java.lang.StringBuffer")))
            (66 (DUP))
            (67 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (70 (LDC 2))
            (72 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (75 (ALOAD_0))
            (76 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (79 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (82 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (85 (ATHROW))
            (86 (ILOAD_2))
            (87 (IRETURN))
            (ENDOFCODE 88))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (86 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 134)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (ICONST_0))
        (2 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                    CHAR)))
        (5 (BIPUSH 47))
        (7 (IF_ICMPNE 20))
        (10 (ALOAD_1))
        (11 (ICONST_1))
        (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (15 (BIPUSH 47))
        (17 (IF_ICMPEQ 47))
        (20 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (23 (DUP))
        (24 (NEW (CLASS "java.lang.StringBuffer")))
        (27 (DUP))
        (28 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (31 (LDC 3))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (ALOAD_1))
        (37 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (40 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (43 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (46 (ATHROW))
        (47 (ALOAD_1))
        (48 (ICONST_2))
        (49 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (52 (ASTORE_1))
        (53 (ALOAD_0))
        (54 (ALOAD_1))
        (55 (INVOKESTATIC (METHODCP "getAddress"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (58 (PUTFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    (CLASS "java.lang.String"))))
        (61 (ALOAD_0))
        (62 (ALOAD_1))
        (63 (INVOKESTATIC (METHODCP "getPort"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (66 (PUTFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    INT)))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    INT)))
        (73 (IFGT 103))
        (76 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (79 (DUP))
        (80 (NEW (CLASS "java.lang.StringBuffer")))
        (83 (DUP))
        (84 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (87 (LDC 4))
        (89 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (92 (ALOAD_1))
        (93 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (96 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (99 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (102 (ATHROW))
        (103 (ALOAD_0))
        (104 (ILOAD_2))
        (105 (ILOAD_3))
        (106 (ALOAD_0))
        (107 (GETFIELD (JVM::FIELDCP "host"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (CLASS "java.lang.String"))))
        (110 (IFNONNULL 120))
        (113 (ALOAD_0))
        (114 (GETFIELD (JVM::FIELDCP "port"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     INT)))
        (117 (GOTO 121))
        (120 (ICONST_0))
        (121
            (INVOKEVIRTUAL (METHODCP "open0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (INT BOOLEAN INT)
                                     VOID)))
        (124 (ALOAD_0))
        (125
            (INVOKESPECIAL (METHODCP "registerCleanup"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
        (128 (ALOAD_0))
        (129 (ICONST_1))
        (130 (PUTFIELD (JVM::FIELDCP "open"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     BOOLEAN)))
        (133 (RETURN))
        (ENDOFCODE 134))
       (EXCEPTIONS)
       (STACKMAP
         (20 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "java.lang.String")
                            INT INT)
                    (STACK)
                    NIL))
         (47 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "java.lang.String")
                            INT INT)
                    (STACK)
                    NIL))
         (103 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (CLASS "java.lang.String")
                             INT INT)
                     (STACK)
                     NIL))
         (120 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (CLASS "java.lang.String")
                             INT INT)
                     (STACK INT INT
                            (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                     NIL))
         (121 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (CLASS "java.lang.String")
                             INT INT)
                     (STACK INT INT INT
                            (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                     NIL)))))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "open"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     BOOLEAN)))
          (4 (IFNE 17))
          (7 (NEW (CLASS "java.io.IOException")))
          (10 (DUP))
          (11 (LDC 5))
          (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
          (16 (ATHROW))
          (17 (RETURN))
          (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
         (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                    (STACK)
                    NIL)))))
     (METHOD
      "getAddress" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (NEW (CLASS "java.lang.RuntimeException")))
         (7 (DUP))
         (8 (LDC 6))
         (10 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (13 (ATHROW))
         (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getMaximumLength" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (INVOKEVIRTUAL (METHODCP "getMaximumLength0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL INT)))
         (8 (IRETURN))
         (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getNominalLength" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (INVOKEVIRTUAL (METHODCP "getNominalLength0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL INT)))
         (8 (IRETURN))
         (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "send"
      (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 133)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (DUP))
        (2 (ASTORE_2))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    NIL VOID)))
        (8 (ALOAD_1))
        (9
          (CHECKCAST (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (12 (ASTORE_3))
        (13 (ALOAD_3))
        (14 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (17 (IFNE 47))
        (20 (ALOAD_3))
        (21 (ALOAD_0))
        (22 (ALOAD_3))
        (23 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (26 (IFNONNULL 34))
        (29 (LDC 7))
        (31 (GOTO 38))
        (34 (ALOAD_3))
        (35 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (38 (INVOKEVIRTUAL (METHODCP "getIpNumber"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (41 (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (44 (GOTO 47))
        (47 (ALOAD_0))
        (48 (ALOAD_3))
        (49 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (52 (ALOAD_3))
        (53 (GETFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (56 (ALOAD_3))
        (57 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (60 (ALOAD_3))
        (61 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (64 (ALOAD_3))
        (65 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (68 (INVOKEVIRTUAL (METHODCP "send0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (INT INT (ARRAY BYTE) INT INT)
                                     INT)))
        (71 (ISTORE 4))
        (73 (ILOAD 4))
        (75 (ALOAD_3))
        (76 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (79 (IF_ICMPNE 85))
        (82 (GOTO 120))
        (85 (ILOAD 4))
        (87 (IFEQ 100))
        (90 (NEW (CLASS "java.io.IOException")))
        (93 (DUP))
        (94 (LDC 8))
        (96 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (99 (ATHROW))
        (100 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                     NIL VOID)))
        (103 (ALOAD_0))
        (104 (GETFIELD (JVM::FIELDCP "open"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     BOOLEAN)))
        (107 (IFNE 47))
        (110 (NEW (CLASS "java.io.InterruptedIOException")))
        (113 (DUP))
        (114 (LDC 9))
        (116 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.InterruptedIOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (119 (ATHROW))
        (120 (ALOAD_2))
        (121 (MONITOREXIT))
        (122 (GOTO 132))
        (125 (ASTORE 5))
        (127 (ALOAD_2))
        (128 (MONITOREXIT))
        (129 (ALOAD 5))
        (131 (ATHROW))
        (132 (RETURN))
        (ENDOFCODE 133))
       (EXCEPTIONS (JVM::HANDLER 4 122 125 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 125
                                 129 125 (CLASS "java.lang.Throwable")))
       (STACKMAP
        (34
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX)
               (STACK (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (38
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX)
               (STACK (CLASS "java.lang.String")
                      (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (47
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX)
               (STACK)
               NIL))
        (85
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL))
        (100
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL))
        (120
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL))
        (125 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "javax.microedition.io.Datagram")
                            (CLASS "javax.microedition.io.Datagram")
                            TOPX TOPX TOPX)
                    (STACK (CLASS "java.lang.Throwable"))
                    NIL))
        (132
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "receive"
      (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 162)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (DUP))
        (2 (ASTORE_2))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    NIL VOID)))
        (8 (ALOAD_1))
        (9
          (CHECKCAST (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (12 (ASTORE_3))
        (13 (ALOAD_3))
        (14 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (17 (IFNE 44))
        (20 (ALOAD_3))
        (21 (ALOAD_0))
        (22 (ALOAD_3))
        (23 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (26 (IFNONNULL 34))
        (29 (LDC 7))
        (31 (GOTO 38))
        (34 (ALOAD_3))
        (35 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (38 (INVOKEVIRTUAL (METHODCP "getIpNumber"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (41 (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (44 (ALOAD_3))
        (45 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (48 (IFNE 61))
        (51 (NEW (CLASS "java.io.IOException")))
        (54 (DUP))
        (55 (LDC 10))
        (57 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (60 (ATHROW))
        (61 (ALOAD_0))
        (62 (ALOAD_3))
        (63 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (66 (ALOAD_3))
        (67 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (70 (ALOAD_3))
        (71 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (74 (INVOKEVIRTUAL (METHODCP "receive0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     ((ARRAY BYTE) INT INT)
                                     LONG)))
        (77 (JVM::LSTORE 4))
        (79 (JVM::LLOAD 4))
        (81 (JVM::L2I))
        (82 (LDC 1))
        (84 (JVM::IAND))
        (85 (ISTORE 6))
        (87 (ILOAD 6))
        (89 (IFEQ 95))
        (92 (GOTO 115))
        (95 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                    NIL VOID)))
        (98 (ALOAD_0))
        (99 (GETFIELD (JVM::FIELDCP "open"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    BOOLEAN)))
        (102 (IFNE 61))
        (105 (NEW (CLASS "java.io.InterruptedIOException")))
        (108 (DUP))
        (109 (LDC 9))
        (111 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.InterruptedIOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (114 (ATHROW))
        (115 (ALOAD_3))
        (116 (ILOAD 6))
        (118
            (PUTFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (121 (ALOAD_3))
        (122 (JVM::LLOAD 4))
        (124 (BIPUSH 32))
        (126 (JVM::LSHR))
        (127 (JVM::L2I))
        (128
            (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (131 (ALOAD_3))
        (132 (JVM::LLOAD 4))
        (134 (BIPUSH 16))
        (136 (JVM::LSHR))
        (137 (JVM::L2I))
        (138 (LDC 1))
        (140 (JVM::IAND))
        (141
            (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (144 (ALOAD_3))
        (145 (ICONST_0))
        (146
            (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (149 (ALOAD_2))
        (150 (MONITOREXIT))
        (151 (GOTO 161))
        (154 (ASTORE 7))
        (156 (ALOAD_2))
        (157 (MONITOREXIT))
        (158 (ALOAD 7))
        (160 (ATHROW))
        (161 (RETURN))
        (ENDOFCODE 162))
       (EXCEPTIONS (JVM::HANDLER 4 151 154 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 154
                                 158 154 (CLASS "java.lang.Throwable")))
       (STACKMAP
        (34
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (38
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK (CLASS "java.lang.String")
                      (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (44
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK)
               NIL))
        (61
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK)
               NIL))
        (95
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       LONG TOPX INT TOPX)
               (STACK)
               NIL))
        (115
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       LONG TOPX INT TOPX)
               (STACK)
               NIL))
        (154 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "javax.microedition.io.Datagram")
                            (CLASS "javax.microedition.io.Datagram")
                            TOPX TOPX TOPX TOPX TOPX)
                    (STACK (CLASS "java.lang.Throwable"))
                    NIL))
        (161
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       LONG TOPX INT TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "open"
                                   "com.sun.cldc.io.j2me.datagram.Protocol"
                                   BOOLEAN)))
        (4 (IFEQ 16))
        (7 (ALOAD_0))
        (8 (ICONST_0))
        (9 (PUTFIELD (JVM::FIELDCP "open"
                                   "com.sun.cldc.io.j2me.datagram.Protocol"
                                   BOOLEAN)))
        (12 (ALOAD_0))
        (13 (INVOKEVIRTUAL (METHODCP "close0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP
         (16 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                    (STACK)
                    NIL)))))
     (METHOD
      "newDatagram" (PARAMETERS INT)
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (NEWARRAY BYTE))
        (4 (ILOAD_1))
        (5
         (INVOKEVIRTUAL (METHODCP "newDatagram"
                                  "com.sun.cldc.io.j2me.datagram.Protocol"
                                  ((ARRAY BYTE) INT)
                                  (CLASS "javax.microedition.io.Datagram"))))
        (8 (ARETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "newDatagram"
      (PARAMETERS INT (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (NEWARRAY BYTE))
        (4 (ILOAD_1))
        (5 (ALOAD_2))
        (6
         (INVOKEVIRTUAL (METHODCP "newDatagram"
                                  "com.sun.cldc.io.j2me.datagram.Protocol"
                                  ((ARRAY BYTE)
                                   INT (CLASS "java.lang.String"))
                                  (CLASS "javax.microedition.io.Datagram"))))
        (9 (ARETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "newDatagram"
      (PARAMETERS (ARRAY BYTE) INT)
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    NIL VOID)))
        (4 (NEW (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (7 (DUP))
        (8 (ALOAD_0))
        (9 (ALOAD_1))
        (10 (ILOAD_2))
        (11 (INVOKESPECIAL
                 (METHODCP "<init>"
                           "com.sun.cldc.io.j2me.datagram.DatagramObject"
                           ((CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (ARRAY BYTE)
                            INT)
                           VOID)))
        (14 (ASTORE_3))
        (15 (ALOAD_0))
        (16 (GETFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    (CLASS "java.lang.String"))))
        (19 (IFNULL 38))
        (22 (ALOAD_3))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    (CLASS "java.lang.String"))))
        (27 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (30 (ALOAD_3))
        (31 (ALOAD_0))
        (32 (GETFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    INT)))
        (35 (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (38 (ALOAD_3))
        (39 (ARETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP
        (38
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (ARRAY BYTE)
                      INT
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
              (STACK)
              NIL)))))
     (METHOD
      "newDatagram"
      (PARAMETERS (ARRAY BYTE)
                  INT (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 25)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (NEW (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
         (7 (DUP))
         (8 (ALOAD_0))
         (9 (ALOAD_1))
         (10 (ILOAD_2))
         (11 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.datagram.DatagramObject"
                            ((CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (ARRAY BYTE)
                             INT)
                            VOID)))
         (14 (ASTORE 4))
         (16 (ALOAD 4))
         (18 (ALOAD_3))
         (19 (INVOKEVIRTUAL
                  (METHODCP "setAddress"
                            "com.sun.cldc.io.j2me.datagram.DatagramObject"
                            ((CLASS "java.lang.String"))
                            VOID)))
         (22 (ALOAD 4))
         (24 (ARETURN))
         (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open0" (PARAMETERS INT BOOLEAN INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "send0"
             (PARAMETERS INT INT (ARRAY BYTE)
                         INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "receive0"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getHostByAddr"
             (PARAMETERS INT (ARRAY BYTE))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getIpNumber"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getMaximumLength0" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getNominalLength0" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "close0" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "registerCleanup" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES "javax.microedition.io.DatagramConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.debug.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (STRING "")
                   (STRING "Bad protocol option:")
                   (STRING "Stream already opened"))
    (FIELDS (FIELD "opened" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "com.sun.cldc.io.ConnectionBase"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (ICONST_0))
             (6 (PUTFIELD (JVM::FIELDCP "opened"
                                        "com.sun.cldc.io.j2me.debug.Protocol"
                                        BOOLEAN)))
             (9 (RETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 37)
       (PARSEDCODE
            (0 (ALOAD_1))
            (1 (LDC 0))
            (3 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                        ((CLASS "java.lang.Object"))
                                        BOOLEAN)))
            (6 (IFNE 36))
            (9 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (12 (DUP))
            (13 (NEW (CLASS "java.lang.StringBuffer")))
            (16 (DUP))
            (17 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (20 (LDC 1))
            (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (25 (ALOAD_1))
            (26 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (29 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (32 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (35 (ATHROW))
            (36 (RETURN))
            (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP
            (36 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 31)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "opened"
                                     "com.sun.cldc.io.j2me.debug.Protocol"
                                     BOOLEAN)))
          (4 (IFEQ 17))
          (7 (NEW (CLASS "java.io.IOException")))
          (10 (DUP))
          (11 (LDC 2))
          (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
          (16 (ATHROW))
          (17 (ALOAD_0))
          (18 (ICONST_1))
          (19 (PUTFIELD (JVM::FIELDCP "opened"
                                      "com.sun.cldc.io.j2me.debug.Protocol"
                                      BOOLEAN)))
          (22 (NEW (CLASS "com.sun.cldc.io.j2me.debug.PrivateOutputStream")))
          (25 (DUP))
          (26 (ALOAD_0))
          (27 (INVOKESPECIAL
                   (METHODCP "<init>"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             ((CLASS "com.sun.cldc.io.j2me.debug.Protocol"))
                             VOID)))
          (30 (ARETURN))
          (ENDOFCODE 31))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))
                       (STACK)
                       NIL))))))
    (INTERFACES "javax.microedition.io.OutputConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Connection closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.debug.Protocol")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6
          (PUTFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (9 (RETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 23)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (GETFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (ILOAD_1))
        (18 (JVM::I2C))
        (19 (INVOKESTATIC
                 (METHODCP "putchar"
                           "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                           (CHAR)
                           VOID)))
        (22 (RETURN))
        (ENDOFCODE 23))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.PrivateOutputStream")
                     INT)
             (STACK)
             NIL)))))
     (METHOD "putchar" (PARAMETERS CHAR)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 21)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (GETFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (4 (IFNULL 20))
        (7 (ALOAD_0))
        (8
          (GETFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (11 (ICONST_0))
        (12 (PUTFIELD (JVM::FIELDCP "opened"
                                    "com.sun.cldc.io.j2me.debug.Protocol"
                                    BOOLEAN)))
        (15 (ALOAD_0))
        (16 (ACONST_NULL))
        (17
          (PUTFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (20 (RETURN))
        (ENDOFCODE 21))
       (EXCEPTIONS)
       (STACKMAP
        (20
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.PrivateOutputStream"))
            (STACK)
            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.events.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.io.ConnectionBase"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "open"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
           (0 (NEW (CLASS "com.sun.cldc.io.j2me.events.PrivateInputStream")))
           (3 (DUP))
           (4 (INVOKESPECIAL
                   (METHODCP "<init>"
                             "com.sun.cldc.io.j2me.events.PrivateInputStream"
                             NIL VOID)))
           (7 (ARETURN))
           (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "readByteArray"
      (PARAMETERS (CLASS "java.io.DataInput"))
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 8)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (CHECKCAST
                   (CLASS "com.sun.cldc.io.j2me.events.PrivateInputStream")))
           (4 (INVOKEVIRTUAL
                   (METHODCP "readByteArray"
                             "com.sun.cldc.io.j2me.events.PrivateInputStream"
                             NIL (ARRAY BYTE))))
           (7 (ARETURN))
           (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES "javax.microedition.io.InputConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.events.PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "events: function not implemented"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.io.InputStream" NIL VOID)))
           (4 (ALOAD_0))
           (5 (INVOKESPECIAL
                   (METHODCP "open"
                             "com.sun.cldc.io.j2me.events.PrivateInputStream"
                             NIL VOID)))
           (8 (RETURN))
           (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "readInt" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "readByteArray" (PARAMETERS)
             (RETURNTYPE ARRAY BYTE)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "readFully" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readFully"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skipBytes" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readBoolean" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readByte" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readUnsignedByte" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readShort" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readUnsignedShort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readChar" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "readUTF" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE)))
    (INTERFACES "java.io.DataInput")
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "transfer-encoding")
                   (STRING "chunked")
                   (STRING "connection is not open")
                   (LONG -1)
                   (STRING "No Chunk Size")
                   (STRING "Bogus chunk size")
                   (STRING "missing CRLF"))
    (FIELDS (FIELD "bytesleft" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "bytesread" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "chunked" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "eof" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "this$0"
                   (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 85)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6 (PUTFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (9 (ALOAD_0))
        (10 (ICONST_0))
        (11 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (14 (ALOAD_0))
        (15 (ICONST_0))
        (16 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (19 (ALOAD_0))
        (20 (ICONST_0))
        (21 (PUTFIELD
                 (JVM::FIELDCP
                      "chunked"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (24 (ALOAD_0))
        (25 (ICONST_0))
        (26 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (29 (ALOAD_1))
        (30 (INVOKESTATIC
                 (METHODCP "access$000"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.util.Hashtable"))))
        (33 (LDC 0))
        (35 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                     ((CLASS "java.lang.Object"))
                                     (CLASS "java.lang.Object"))))
        (38 (CHECKCAST (CLASS "java.lang.String")))
        (41 (ASTORE_2))
        (42 (ALOAD_2))
        (43 (IFNULL 84))
        (46 (ALOAD_2))
        (47 (LDC 1))
        (49 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (52 (IFEQ 84))
        (55 (ALOAD_0))
        (56 (ICONST_1))
        (57 (PUTFIELD
                 (JVM::FIELDCP
                      "chunked"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (60 (ALOAD_0))
        (61 (ALOAD_0))
        (62
         (INVOKESPECIAL
            (METHODCP "readChunkSize"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      NIL INT)))
        (65 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (68 (ALOAD_0))
        (69 (ALOAD_0))
        (70 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (73 (IFNE 80))
        (76 (ICONST_1))
        (77 (GOTO 81))
        (80 (ICONST_0))
        (81 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (84 (RETURN))
        (ENDOFCODE 85))
       (EXCEPTIONS)
       (STACKMAP
        (80
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (CLASS "com.sun.cldc.io.j2me.http.Protocol")
              (CLASS "java.lang.String"))
          (STACK
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (81
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (CLASS "com.sun.cldc.io.j2me.http.Protocol")
              (CLASS "java.lang.String"))
          (STACK
             INT
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (84
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (CLASS "com.sun.cldc.io.j2me.http.Protocol")
              (CLASS "java.lang.String"))
          (STACK)
          NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 25)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKESTATIC
                (METHODCP "access$100"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          BOOLEAN)))
        (7 (IFEQ 15))
        (10 (ALOAD_0))
        (11 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (14 (IRETURN))
        (15 (NEW (CLASS "java.io.IOException")))
        (18 (DUP))
        (19 (LDC 2))
        (21 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (24 (ATHROW))
        (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP
        (15
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          (STACK)
          NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 96)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "eof"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     BOOLEAN)))
        (4 (IFEQ 9))
        (7 (ICONST_M1))
        (8 (IRETURN))
        (9 (ALOAD_0))
        (10 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (13 (IFGT 49))
        (16 (ALOAD_0))
        (17 (GETFIELD
                 (JVM::FIELDCP
                      "chunked"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (20 (IFEQ 49))
        (23 (ALOAD_0))
        (24
         (INVOKESPECIAL
            (METHODCP "readCRLF"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      NIL VOID)))
        (27 (ALOAD_0))
        (28 (ALOAD_0))
        (29
         (INVOKESPECIAL
            (METHODCP "readChunkSize"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      NIL INT)))
        (32 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (35 (ALOAD_0))
        (36 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (39 (IFNE 49))
        (42 (ALOAD_0))
        (43 (ICONST_1))
        (44 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (47 (ICONST_M1))
        (48 (IRETURN))
        (49 (ALOAD_0))
        (50 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (53 (INVOKESTATIC
                 (METHODCP "access$200"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.io.DataInputStream"))))
        (56 (INVOKEVIRTUAL (METHODCP "read"
                                     "java.io.DataInputStream" NIL INT)))
        (59 (ISTORE_1))
        (60 (ALOAD_0))
        (61 (ILOAD_1))
        (62 (ICONST_M1))
        (63 (IF_ICMPNE 70))
        (66 (ICONST_1))
        (67 (GOTO 71))
        (70 (ICONST_0))
        (71 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (74 (ALOAD_0))
        (75 (DUP))
        (76 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (79 (ICONST_1))
        (80 (ISUB))
        (81 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (84 (ALOAD_0))
        (85 (DUP))
        (86 (GETFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (89 (ICONST_1))
        (90 (IADD))
        (91 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (94 (ILOAD_1))
        (95 (IRETURN))
        (ENDOFCODE 96))
       (EXCEPTIONS)
       (STACKMAP
        (9
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              TOPX)
          (STACK)
          NIL))
        (49
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              TOPX)
          (STACK)
          NIL))
        (70
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (71
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK
             INT
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKEVIRTUAL (METHODCP "getLength"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    NIL LONG)))
        (7 (JVM::LSTORE_2))
        (8 (JVM::LLOAD_2))
        (9 (JVM::LDC2_W 3))
        (12 (LCMP))
        (13 (IFEQ 27))
        (16 (JVM::LLOAD_2))
        (17 (ALOAD_0))
        (18 (GETFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (21 (JVM::I2L))
        (22 (JVM::LSUB))
        (23 (JVM::LSTORE_2))
        (24 (GOTO 31))
        (27 (ALOAD_1))
        (28 (ARRAYLENGTH))
        (29 (JVM::I2L))
        (30 (JVM::LSTORE_2))
        (31 (JVM::LLOAD_2))
        (32 (LCONST_0))
        (33 (LCMP))
        (34 (IFNE 44))
        (37 (ALOAD_0))
        (38 (ICONST_1))
        (39 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (42 (ICONST_M1))
        (43 (IRETURN))
        (44 (ALOAD_0))
        (45 (ALOAD_1))
        (46 (ICONST_0))
        (47 (JVM::LLOAD_2))
        (48 (ALOAD_1))
        (49 (ARRAYLENGTH))
        (50 (JVM::I2L))
        (51 (LCMP))
        (52 (IFGE 59))
        (55 (JVM::LLOAD_2))
        (56 (GOTO 62))
        (59 (ALOAD_1))
        (60 (ARRAYLENGTH))
        (61 (JVM::I2L))
        (62 (JVM::L2I))
        (63 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (66 (IRETURN))
        (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK)
          NIL))
        (31
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK)
          NIL))
        (44
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK)
          NIL))
        (59
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK
             INT (ARRAY BYTE)
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (62
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK
             TOPX LONG INT (ARRAY BYTE)
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL)))))
     (METHOD
      "readChunkSize" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 96)
       (PARSEDCODE
        (0 (ICONST_M1))
        (1 (ISTORE_1))
        (2 (ALOAD_0))
        (3 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (6 (ALOAD_0))
        (7 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (10 (INVOKESTATIC
                 (METHODCP "access$200"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.io.DataInputStream"))))
        (13 (INVOKESTATIC
                 (METHODCP "access$300"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol")
                            (CLASS "java.io.InputStream"))
                           (CLASS "java.lang.String"))))
        (16 (ASTORE_2))
        (17 (ALOAD_2))
        (18 (IFNONNULL 31))
        (21 (NEW (CLASS "java.io.IOException")))
        (24 (DUP))
        (25 (LDC 4))
        (27 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (30 (ATHROW))
        (31 (ICONST_0))
        (32 (ISTORE_3))
        (33 (GOTO 60))
        (36 (ALOAD_2))
        (37 (ILOAD_3))
        (38 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (41 (ISTORE 4))
        (43 (ILOAD 4))
        (45 (BIPUSH 16))
        (47 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                    INT)))
        (50 (ICONST_M1))
        (51 (IF_ICMPNE 57))
        (54 (GOTO 68))
        (57 (IINC 3 1))
        (60 (ILOAD_3))
        (61 (ALOAD_2))
        (62 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (65 (IF_ICMPLT 36))
        (68 (ALOAD_2))
        (69 (ICONST_0))
        (70 (ILOAD_3))
        (71 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (74 (BIPUSH 16))
        (76 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String") INT)
                                    INT)))
        (79 (ISTORE_1))
        (80 (GOTO 94))
        (83 (ASTORE_2))
        (84 (NEW (CLASS "java.io.IOException")))
        (87 (DUP))
        (88 (LDC 5))
        (90 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (93 (ATHROW))
        (94 (ILOAD_1))
        (95 (IRETURN))
        (ENDOFCODE 96))
       (EXCEPTIONS (JVM::HANDLER 2 80 83
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
        (31
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              TOPX TOPX)
          (STACK)
          NIL))
        (36
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL))
        (57
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT INT)
          (STACK)
          NIL))
        (60
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL))
        (68
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL))
        (83
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT TOPX TOPX TOPX)
          (STACK (CLASS "java.lang.NumberFormatException"))
          NIL))
        (94
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL)))))
     (METHOD
      "readCRLF" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 55)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKESTATIC
                (METHODCP "access$200"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          (CLASS "java.io.DataInputStream"))))
        (7 (INVOKEVIRTUAL (METHODCP "read"
                                    "java.io.DataInputStream" NIL INT)))
        (10 (ISTORE_1))
        (11 (ILOAD_1))
        (12 (BIPUSH 13))
        (14 (IF_ICMPEQ 27))
        (17 (NEW (CLASS "java.io.IOException")))
        (20 (DUP))
        (21 (LDC 6))
        (23 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (26 (ATHROW))
        (27 (ALOAD_0))
        (28 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (31 (INVOKESTATIC
                 (METHODCP "access$200"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.io.DataInputStream"))))
        (34 (INVOKEVIRTUAL (METHODCP "read"
                                     "java.io.DataInputStream" NIL INT)))
        (37 (ISTORE_1))
        (38 (ILOAD_1))
        (39 (BIPUSH 10))
        (41 (IF_ICMPEQ 54))
        (44 (NEW (CLASS "java.io.IOException")))
        (47 (DUP))
        (48 (LDC 6))
        (50 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (53 (ATHROW))
        (54 (RETURN))
        (ENDOFCODE 55))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK)
          NIL))
        (54
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK)
          NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKESTATIC
                (METHODCP "access$406"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          INT)))
        (7 (IFNE 27))
        (10 (ALOAD_0))
        (11 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (14 (INVOKESTATIC
                 (METHODCP "access$100"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           BOOLEAN)))
        (17 (IFEQ 27))
        (20 (ALOAD_0))
        (21 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (24 (INVOKEVIRTUAL (METHODCP "disconnect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          (STACK)
          NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
    "java.io.OutputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "output"
                   (CLASS "java.io.ByteArrayOutputStream")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "this$0"
                   (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 21)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6 (PUTFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (9 (ALOAD_0))
        (10 (NEW (CLASS "java.io.ByteArrayOutputStream")))
        (13 (DUP))
        (14 (INVOKESPECIAL (METHODCP "<init>" "java.io.ByteArrayOutputStream"
                                     NIL VOID)))
        (17
           (PUTFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (20 (RETURN))
        (ENDOFCODE 21))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (ILOAD_1))
        (5 (INVOKEVIRTUAL (METHODCP "write"
                                    "java.io.ByteArrayOutputStream" (INT)
                                    VOID)))
        (8 (RETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "size" "java.io.ByteArrayOutputStream"
                                    NIL INT)))
        (7 (IFLE 17))
        (10 (ALOAD_0))
        (11
           (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (14 (INVOKEVIRTUAL (METHODCP "connect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
          (LOCALS
            (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))
          (STACK)
          NIL)))))
     (METHOD
      "toByteArray" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "toByteArray"
                                    "java.io.ByteArrayOutputStream"
                                    NIL (ARRAY BYTE))))
        (7 (ARETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "size" "java.io.ByteArrayOutputStream"
                                    NIL INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 32)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (INVOKEVIRTUAL
           (METHODCP "flush"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (8 (INVOKESTATIC
                (METHODCP "access$406"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          INT)))
        (11 (IFNE 31))
        (14 (ALOAD_0))
        (15
           (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (18 (INVOKESTATIC
                 (METHODCP "access$100"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           BOOLEAN)))
        (21 (IFEQ 31))
        (24 (ALOAD_0))
        (25
           (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (28 (INVOKEVIRTUAL (METHODCP "disconnect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (31 (RETURN))
        (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP
        (31
         (FRAME
          (LOCALS
            (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))
          (STACK)
          NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.http.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (STRING "HTTP/1.1")
                   (STRING "GET")
                   (STRING "http")
                   (STRING "already connected")
                   (STRING "illegal mode: ")
                   (STRING "already open")
                   (STRING "connection is closed")
                   (STRING "write-only connection")
                   (STRING "read-only connection")
                   (STRING ":")
                   (STRING "connection already open")
                   (STRING "HEAD")
                   (STRING "POST")
                   (STRING "unsupported method: ")
                   (LONG -1)
                   (STRING "content-length")
                   (STRING "content-type")
                   (STRING "content-encoding")
                   (STRING "expires")
                   (STRING "date")
                   (STRING "last-modified")
                   (STRING "socket://")
                   (STRING "Content-Length")
                   (STRING "")
                   (STRING " ")
                   (STRING "#")
                   (STRING "?")
                   (STRING "rn")
                   (STRING "Host")
                   (STRING ": ")
                   (STRING "HTTP")
                   (STRING "malformed response message")
                   (STRING "malformed header field")
                   (STRING "malformed URL")
                   (STRING "protocol must be nhttpn")
                   (STRING "//")
                   (STRING "invalid port")
                   (STRING "/")
                   (STRING "invalid path")
                   (STRING "invalid ref"))
    (FIELDS
      (FIELD "index"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "url" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "protocol" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "host" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "file" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "ref" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "query" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "port"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "responseCode"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "responseMsg" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "reqProperties"
             (CLASS "java.util.Hashtable")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "headerFields"
             (CLASS "java.util.Hashtable")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "headerFieldNames"
             (ARRAY (CLASS "java.lang.String"))
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "headerFieldValues"
             (ARRAY (CLASS "java.lang.String"))
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "method" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "opens"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "mode"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "connected"
             BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "in"
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "out"
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "appDataIn"
             (CLASS "java.io.DataInputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "appDataOut"
             (CLASS "java.io.DataOutputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "streamConnnection"
             (CLASS "javax.microedition.io.StreamConnection")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "streamOutput"
             (CLASS "java.io.DataOutputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "streamInput"
             (CLASS "java.io.DataInputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "stringbuffer"
             (CLASS "java.lang.StringBuffer")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "http_version"
             (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 79)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "com.sun.cldc.io.ConnectionBase"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (BIPUSH 80))
         (7 (PUTFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
         (10 (ALOAD_0))
         (11 (LDC 0))
         (13 (PUTFIELD (JVM::FIELDCP "http_version"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (16 (ALOAD_0))
         (17 (NEW (CLASS "java.util.Hashtable")))
         (20 (DUP))
         (21 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.Hashtable" NIL VOID)))
         (24 (PUTFIELD (JVM::FIELDCP "reqProperties"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (27 (ALOAD_0))
         (28 (NEW (CLASS "java.util.Hashtable")))
         (31 (DUP))
         (32 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.Hashtable" NIL VOID)))
         (35 (PUTFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (38 (ALOAD_0))
         (39 (NEW (CLASS "java.lang.StringBuffer")))
         (42 (DUP))
         (43 (BIPUSH 32))
         (45 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                      VOID)))
         (48 (PUTFIELD (JVM::FIELDCP "stringbuffer"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.StringBuffer"))))
         (51 (ALOAD_0))
         (52 (ICONST_0))
         (53 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (56 (ALOAD_0))
         (57 (ICONST_0))
         (58 (PUTFIELD (JVM::FIELDCP "connected"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     BOOLEAN)))
         (61 (ALOAD_0))
         (62 (LDC 1))
         (64 (PUTFIELD (JVM::FIELDCP "method"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (67 (ALOAD_0))
         (68 (ICONST_M1))
         (69 (PUTFIELD (JVM::FIELDCP "responseCode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (72 (ALOAD_0))
         (73 (LDC 2))
         (75 (PUTFIELD (JVM::FIELDCP "protocol"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (78 (RETURN))
         (ENDOFCODE 79))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 84)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
         (4 (IFLE 17))
         (7 (NEW (CLASS "java.io.IOException")))
         (10 (DUP))
         (11 (LDC 3))
         (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (16 (ATHROW))
         (17 (ALOAD_0))
         (18 (DUP))
         (19 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (22 (ICONST_1))
         (23 (IADD))
         (24 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (27 (ILOAD_2))
         (28 (ICONST_1))
         (29 (IF_ICMPEQ 69))
         (32 (ILOAD_2))
         (33 (ICONST_2))
         (34 (IF_ICMPEQ 69))
         (37 (ILOAD_2))
         (38 (ICONST_3))
         (39 (IF_ICMPEQ 69))
         (42 (NEW (CLASS "java.io.IOException")))
         (45 (DUP))
         (46 (NEW (CLASS "java.lang.StringBuffer")))
         (49 (DUP))
         (50 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (53 (LDC 4))
         (55 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (58 (ILOAD_2))
         (59 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (62 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (65 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (68 (ATHROW))
         (69 (ALOAD_0))
         (70 (ALOAD_1))
         (71 (PUTFIELD (JVM::FIELDCP "url"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (74 (ALOAD_0))
         (75 (ILOAD_2))
         (76 (PUTFIELD (JVM::FIELDCP "mode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (79 (ALOAD_0))
         (80 (INVOKEVIRTUAL (METHODCP "parseURL"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL VOID)))
         (83 (RETURN))
         (ENDOFCODE 84))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (69 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 26)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (DUP))
            (2 (GETFIELD (JVM::FIELDCP "opens"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       INT)))
            (5 (ICONST_1))
            (6 (ISUB))
            (7 (DUP_X1))
            (8 (PUTFIELD (JVM::FIELDCP "opens"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       INT)))
            (11 (IFNE 25))
            (14 (ALOAD_0))
            (15 (GETFIELD (JVM::FIELDCP "connected"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        BOOLEAN)))
            (18 (IFEQ 25))
            (21 (ALOAD_0))
            (22 (INVOKEVIRTUAL (METHODCP "disconnect"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
            (25 (RETURN))
            (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP
            (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (4 (IFNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 5))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (ALOAD_0))
        (18 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (21 (IFNE 34))
        (24 (NEW (CLASS "java.io.IOException")))
        (27 (DUP))
        (28 (LDC 6))
        (30 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (33 (ATHROW))
        (34 (ALOAD_0))
        (35 (GETFIELD (JVM::FIELDCP "mode"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (38 (ICONST_1))
        (39 (IF_ICMPEQ 60))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "mode"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (46 (ICONST_3))
        (47 (IF_ICMPEQ 60))
        (50 (NEW (CLASS "java.io.IOException")))
        (53 (DUP))
        (54 (LDC 7))
        (56 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (59 (ATHROW))
        (60 (ALOAD_0))
        (61 (INVOKEVIRTUAL (METHODCP "connect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (64 (ALOAD_0))
        (65 (DUP))
        (66 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (69 (ICONST_1))
        (70 (IADD))
        (71 (PUTFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (74 (ALOAD_0))
        (75
         (NEW
            (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")))
        (78 (DUP))
        (79 (ALOAD_0))
        (80
         (INVOKESPECIAL
            (METHODCP "<init>"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                      VOID)))
        (83
         (PUTFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (86 (ALOAD_0))
        (87
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (90 (ARETURN))
        (ENDOFCODE 91))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (34 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openDataInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 49)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "appDataIn"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.io.DataInputStream"))))
        (4 (IFNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 5))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (ALOAD_0))
        (18
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (21 (IFNONNULL 29))
        (24 (ALOAD_0))
        (25 (INVOKEVIRTUAL (METHODCP "openInputStream"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL (CLASS "java.io.InputStream"))))
        (28 (POP))
        (29 (ALOAD_0))
        (30 (NEW (CLASS "java.io.DataInputStream")))
        (33 (DUP))
        (34 (ALOAD_0))
        (35
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (38 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataInputStream"
                                     ((CLASS "java.io.InputStream"))
                                     VOID)))
        (41 (PUTFIELD (JVM::FIELDCP "appDataIn"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataInputStream"))))
        (44 (ALOAD_0))
        (45 (GETFIELD (JVM::FIELDCP "appDataIn"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataInputStream"))))
        (48 (ARETURN))
        (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "openDataOutputStream"
                                     "com.sun.cldc.io.j2me.http.Protocol" NIL
                                     (CLASS "java.io.DataOutputStream"))))
         (4 (ARETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openDataOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataOutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 94)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "mode"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (4 (ICONST_2))
        (5 (IF_ICMPEQ 26))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "mode"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (12 (ICONST_3))
        (13 (IF_ICMPEQ 26))
        (16 (NEW (CLASS "java.io.IOException")))
        (19 (DUP))
        (20 (LDC 8))
        (22 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (25 (ATHROW))
        (26 (ALOAD_0))
        (27 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (30 (IFNE 43))
        (33 (NEW (CLASS "java.io.IOException")))
        (36 (DUP))
        (37 (LDC 6))
        (39 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (42 (ATHROW))
        (43 (ALOAD_0))
        (44
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (47 (IFNULL 60))
        (50 (NEW (CLASS "java.io.IOException")))
        (53 (DUP))
        (54 (LDC 5))
        (56 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (59 (ATHROW))
        (60 (ALOAD_0))
        (61 (DUP))
        (62 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (65 (ICONST_1))
        (66 (IADD))
        (67 (PUTFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (70 (ALOAD_0))
        (71
         (NEW
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream")))
        (74 (DUP))
        (75 (ALOAD_0))
        (76
         (INVOKESPECIAL
           (METHODCP "<init>"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                     VOID)))
        (79
         (PUTFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (82 (NEW (CLASS "java.io.DataOutputStream")))
        (85 (DUP))
        (86 (ALOAD_0))
        (87
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (90 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataOutputStream"
                                     ((CLASS "java.io.OutputStream"))
                                     VOID)))
        (93 (ARETURN))
        (ENDOFCODE 94))
       (EXCEPTIONS)
       (STACKMAP
            (26 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (43 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getURL" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 30)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (ALOAD_0))
             (8 (GETFIELD (JVM::FIELDCP "protocol"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
             (11 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (14 (LDC 9))
             (16 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (19 (ALOAD_0))
             (20 (GETFIELD (JVM::FIELDCP "url"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.lang.String"))))
             (23 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (26 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (29 (ARETURN))
             (ENDOFCODE 30))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getProtocol" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "protocol"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.lang.String"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "getHost" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "host"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "host"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getFile" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "file"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "file"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getRef" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "ref"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "ref"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getQuery" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "query"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "query"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getPort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "port"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "getRequestMethod" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "method"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.lang.String"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "setRequestMethod"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 84)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "connected"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       BOOLEAN)))
            (4 (IFEQ 17))
            (7 (NEW (CLASS "java.io.IOException")))
            (10 (DUP))
            (11 (LDC 10))
            (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (16 (ATHROW))
            (17 (ALOAD_1))
            (18 (LDC 11))
            (20 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (23 (IFNE 71))
            (26 (ALOAD_1))
            (27 (LDC 1))
            (29 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (32 (IFNE 71))
            (35 (ALOAD_1))
            (36 (LDC 12))
            (38 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (41 (IFNE 71))
            (44 (NEW (CLASS "java.io.IOException")))
            (47 (DUP))
            (48 (NEW (CLASS "java.lang.StringBuffer")))
            (51 (DUP))
            (52 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (55 (LDC 13))
            (57 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (60 (ALOAD_1))
            (61 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (64 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (67 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (70 (ATHROW))
            (71 (ALOAD_0))
            (72 (NEW (CLASS "java.lang.String")))
            (75 (DUP))
            (76 (ALOAD_1))
            (77 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (80 (PUTFIELD (JVM::FIELDCP "method"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (83 (RETURN))
            (ENDOFCODE 84))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String"))
                       (STACK)
                       NIL))
            (71 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getRequestProperty"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 12)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "reqProperties"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.util.Hashtable"))))
              (4 (ALOAD_1))
              (5 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                          ((CLASS "java.lang.Object"))
                                          (CLASS "java.lang.Object"))))
              (8 (CHECKCAST (CLASS "java.lang.String")))
              (11 (ARETURN))
              (ENDOFCODE 12))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "setRequestProperty"
      (PARAMETERS (CLASS "java.lang.String")
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 28)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "connected"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        BOOLEAN)))
             (4 (IFEQ 17))
             (7 (NEW (CLASS "java.io.IOException")))
             (10 (DUP))
             (11 (LDC 10))
             (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                          ((CLASS "java.lang.String"))
                                          VOID)))
             (16 (ATHROW))
             (17 (ALOAD_0))
             (18 (GETFIELD (JVM::FIELDCP "reqProperties"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.util.Hashtable"))))
             (21 (ALOAD_1))
             (22 (ALOAD_2))
             (23 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                          ((CLASS "java.lang.Object")
                                           (CLASS "java.lang.Object"))
                                          (CLASS "java.lang.Object"))))
             (26 (POP))
             (27 (RETURN))
             (ENDOFCODE 28))
        (EXCEPTIONS)
        (STACKMAP
             (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.lang.String"))
                        (STACK)
                        NIL)))))
     (METHOD
      "getResponseCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "connect"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "responseCode"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        INT)))
             (8 (IRETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getResponseMessage" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "connect"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "responseMsg"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
             (8 (ARETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getLength" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 21)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 12))
            (7 (ASTORE_1))
            (8 (JVM::LDC2_W 14))
            (11 (JVM::LRETURN))
            (12 (ALOAD_0))
            (13 (LDC 15))
            (15 (ICONST_M1))
            (16 (INVOKEVIRTUAL (METHODCP "getHeaderFieldInt"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") INT)
                                         INT)))
            (19 (JVM::I2L))
            (20 (JVM::LRETURN))
            (ENDOFCODE 21))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (12 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getType" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_1))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (LDC 16))
            (13 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (16 (ARETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getEncoding" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_1))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (LDC 17))
            (13 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (16 (ARETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getExpiration" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (LDC 18))
             (3 (LCONST_0))
             (4 (INVOKEVIRTUAL (METHODCP "getHeaderFieldDate"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") LONG)
                                         LONG)))
             (7 (JVM::LRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getDate" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (LDC 19))
             (3 (LCONST_0))
             (4 (INVOKEVIRTUAL (METHODCP "getHeaderFieldDate"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") LONG)
                                         LONG)))
             (7 (JVM::LRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getLastModified" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (LDC 20))
             (3 (LCONST_0))
             (4 (INVOKEVIRTUAL (METHODCP "getHeaderFieldDate"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") LONG)
                                         LONG)))
             (7 (JVM::LRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getHeaderField"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 26)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_2))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "headerFields"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.util.Hashtable"))))
            (14 (ALOAD_0))
            (15 (ALOAD_1))
            (16 (INVOKESPECIAL (METHODCP "toLowerCase"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (19 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                         ((CLASS "java.lang.Object"))
                                         (CLASS "java.lang.Object"))))
            (22 (CHECKCAST (CLASS "java.lang.String")))
            (25 (ARETURN))
            (ENDOFCODE 26))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.lang.String")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderField" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 39)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_2))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (14 (IFNONNULL 21))
            (17 (ALOAD_0))
            (18 (INVOKESPECIAL (METHODCP "makeHeaderFieldValues"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
            (21 (ILOAD_1))
            (22 (ALOAD_0))
            (23 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (26 (ARRAYLENGTH))
            (27 (IF_ICMPLT 32))
            (30 (ACONST_NULL))
            (31 (ARETURN))
            (32 (ALOAD_0))
            (33 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (36 (ILOAD_1))
            (37 (AALOAD))
            (38 (ARETURN))
            (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              INT TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (21 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderFieldKey" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 39)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_2))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (14 (IFNONNULL 21))
            (17 (ALOAD_0))
            (18 (INVOKESPECIAL (METHODCP "makeHeaderFields"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
            (21 (ILOAD_1))
            (22 (ALOAD_0))
            (23 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (26 (ARRAYLENGTH))
            (27 (IF_ICMPLT 32))
            (30 (ACONST_NULL))
            (31 (ARETURN))
            (32 (ALOAD_0))
            (33 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (36 (ILOAD_1))
            (37 (AALOAD))
            (38 (ARETURN))
            (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              INT TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (21 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "makeHeaderFields" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 55)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_1))
         (2 (ALOAD_0))
         (3 (ALOAD_0))
         (4 (GETFIELD (JVM::FIELDCP "headerFields"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.util.Hashtable"))))
         (7 (INVOKEVIRTUAL (METHODCP "size" "java.util.Hashtable" NIL INT)))
         (10 (ANEWARRAY (CLASS "java.lang.String")))
         (13 (PUTFIELD (JVM::FIELDCP "headerFieldNames"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (16 (ALOAD_0))
         (17 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (20 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (23 (ASTORE_2))
         (24 (GOTO 45))
         (27 (ALOAD_0))
         (28 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (31 (ILOAD_1))
         (32 (IINC 1 1))
         (35 (ALOAD_2))
         (36 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (41 (CHECKCAST (CLASS "java.lang.String")))
         (44 (AASTORE))
         (45 (ALOAD_2))
         (46 (INVOKEINTERFACE (METHODCP "hasMoreElements"
                                        "java.util.Enumeration" NIL BOOLEAN)
                              1))
         (51 (IFNE 27))
         (54 (RETURN))
         (ENDOFCODE 55))
       (EXCEPTIONS)
       (STACKMAP
            (27 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL))
            (45 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL)))))
     (METHOD
      "makeHeaderFieldValues" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 62)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_1))
         (2 (ALOAD_0))
         (3 (ALOAD_0))
         (4 (GETFIELD (JVM::FIELDCP "headerFields"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.util.Hashtable"))))
         (7 (INVOKEVIRTUAL (METHODCP "size" "java.util.Hashtable" NIL INT)))
         (10 (ANEWARRAY (CLASS "java.lang.String")))
         (13 (PUTFIELD (JVM::FIELDCP "headerFieldValues"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (16 (ALOAD_0))
         (17 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (20 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (23 (ASTORE_2))
         (24 (GOTO 52))
         (27 (ALOAD_0))
         (28 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (31 (ILOAD_1))
         (32 (IINC 1 1))
         (35 (ALOAD_0))
         (36 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (39 (ALOAD_2))
         (40 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (45 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
         (48 (CHECKCAST (CLASS "java.lang.String")))
         (51 (AASTORE))
         (52 (ALOAD_2))
         (53 (INVOKEINTERFACE (METHODCP "hasMoreElements"
                                        "java.util.Enumeration" NIL BOOLEAN)
                              1))
         (58 (IFNE 27))
         (61 (RETURN))
         (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP
            (27 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL))
            (52 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderFieldInt"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 25)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_3))
            (8 (ILOAD_2))
            (9 (IRETURN))
            (10 (ALOAD_0))
            (11 (ALOAD_1))
            (12 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (15 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                        ((CLASS "java.lang.String"))
                                        INT)))
            (18 (IRETURN))
            (19 (ASTORE_3))
            (20 (GOTO 23))
            (23 (ILOAD_2))
            (24 (IRETURN))
            (ENDOFCODE 25))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 10 18 19 (CLASS "java.lang.Throwable")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.lang.String")
                              INT TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (19 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK (CLASS "java.lang.Throwable"))
                       NIL))
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT (CLASS "java.lang.Throwable"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderFieldDate"
      (PARAMETERS (CLASS "java.lang.String")
                  LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 27)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 11))
            (7 (ASTORE 4))
            (9 (JVM::LLOAD_2))
            (10 (JVM::LRETURN))
            (11 (ALOAD_0))
            (12 (ALOAD_1))
            (13 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (16 (INVOKESTATIC (METHODCP "parse" "com.sun.cldc.io.DateParser"
                                        ((CLASS "java.lang.String"))
                                        LONG)))
            (19 (JVM::LRETURN))
            (20 (ASTORE 4))
            (22 (GOTO 25))
            (25 (JVM::LLOAD_2))
            (26 (JVM::LRETURN))
            (ENDOFCODE 27))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 11 19 20 (CLASS "java.lang.Throwable")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.lang.String")
                              LONG TOPX TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (11 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               LONG TOPX TOPX)
                       (STACK)
                       NIL))
            (20 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               LONG TOPX TOPX)
                       (STACK (CLASS "java.lang.Throwable"))
                       NIL))
            (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               LONG TOPX (CLASS "java.lang.Throwable"))
                       (STACK)
                       NIL)))))
     (METHOD
      "connect" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 462)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "connected"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   BOOLEAN)))
        (4 (IFEQ 8))
        (7 (RETURN))
        (8 (ALOAD_0))
        (9 (NEW (CLASS "java.lang.StringBuffer")))
        (12 (DUP))
        (13 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (16 (LDC 21))
        (18 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (LDC 9))
        (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (33 (ALOAD_0))
        (34 (GETFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (37 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (40 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (43 (INVOKESTATIC
                 (METHODCP "open" "javax.microedition.io.Connector"
                           ((CLASS "java.lang.String"))
                           (CLASS "javax.microedition.io.Connection"))))
        (46 (CHECKCAST (CLASS "javax.microedition.io.StreamConnection")))
        (49
         (PUTFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (52 (ALOAD_0))
        (53 (ALOAD_0))
        (54
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (57
          (INVOKEINTERFACE (METHODCP "openDataOutputStream"
                                     "javax.microedition.io.OutputConnection"
                                     NIL (CLASS "java.io.DataOutputStream"))
                           1))
        (62 (PUTFIELD (JVM::FIELDCP "streamOutput"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataOutputStream"))))
        (65 (ALOAD_0))
        (66 (LDC 22))
        (68 (INVOKEVIRTUAL (METHODCP "getRequestProperty"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.String"))))
        (71 (IFNONNULL 116))
        (74 (ALOAD_0))
        (75 (LDC 22))
        (77 (NEW (CLASS "java.lang.StringBuffer")))
        (80 (DUP))
        (81 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (84 (LDC 23))
        (86 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (89 (ALOAD_0))
        (90
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (93 (IFNONNULL 100))
        (96 (ICONST_0))
        (97 (GOTO 107))
        (100 (ALOAD_0))
        (101
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (104
         (INVOKEVIRTUAL
           (METHODCP "size"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     NIL INT)))
        (107 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (110 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (113 (INVOKEVIRTUAL (METHODCP "setRequestProperty"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.lang.String")
                                       (CLASS "java.lang.String"))
                                      VOID)))
        (116 (NEW (CLASS "java.lang.StringBuffer")))
        (119 (DUP))
        (120 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (123 (ALOAD_0))
        (124 (GETFIELD (JVM::FIELDCP "method"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (127 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (130 (LDC 24))
        (132 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (135 (ALOAD_0))
        (136 (INVOKEVIRTUAL (METHODCP "getFile"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (139 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (142 (ALOAD_0))
        (143 (INVOKEVIRTUAL (METHODCP "getRef"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (146 (IFNONNULL 154))
        (149 (LDC 23))
        (151 (GOTO 176))
        (154 (NEW (CLASS "java.lang.StringBuffer")))
        (157 (DUP))
        (158 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (161 (LDC 25))
        (163 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (166 (ALOAD_0))
        (167 (INVOKEVIRTUAL (METHODCP "getRef"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (170 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (173 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (176 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (179 (ALOAD_0))
        (180 (INVOKEVIRTUAL (METHODCP "getQuery"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (183 (IFNONNULL 191))
        (186 (LDC 23))
        (188 (GOTO 213))
        (191 (NEW (CLASS "java.lang.StringBuffer")))
        (194 (DUP))
        (195 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (198 (LDC 26))
        (200 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (203 (ALOAD_0))
        (204 (INVOKEVIRTUAL (METHODCP "getQuery"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (207 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (210 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (213 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (216 (LDC 24))
        (218 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (221 (ALOAD_0))
        (222 (GETFIELD (JVM::FIELDCP "http_version"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (225 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (228 (LDC 27))
        (230 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (233 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (236 (ASTORE_1))
        (237 (ALOAD_0))
        (238 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (241 (ALOAD_1))
        (242 (INVOKEVIRTUAL (METHODCP "getBytes"
                                      "java.lang.String" NIL (ARRAY BYTE))))
        (245 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (248 (ALOAD_0))
        (249 (LDC 28))
        (251 (NEW (CLASS "java.lang.StringBuffer")))
        (254 (DUP))
        (255 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (258 (ALOAD_0))
        (259 (GETFIELD (JVM::FIELDCP "host"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (262 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (265 (LDC 9))
        (267 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "port"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (274 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (277 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (280 (INVOKEVIRTUAL (METHODCP "setRequestProperty"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.lang.String")
                                       (CLASS "java.lang.String"))
                                      VOID)))
        (283 (ALOAD_0))
        (284 (GETFIELD (JVM::FIELDCP "reqProperties"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
        (287 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
        (290 (ASTORE_2))
        (291 (GOTO 353))
        (294 (ALOAD_2))
        (295 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
        (300 (CHECKCAST (CLASS "java.lang.String")))
        (303 (ASTORE_3))
        (304 (NEW (CLASS "java.lang.StringBuffer")))
        (307 (DUP))
        (308 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (311 (ALOAD_3))
        (312 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (315 (LDC 29))
        (317 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (320 (ALOAD_0))
        (321 (GETFIELD (JVM::FIELDCP "reqProperties"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
        (324 (ALOAD_3))
        (325 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (328 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.StringBuffer"))))
        (331 (LDC 27))
        (333 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (336 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (339 (ASTORE 4))
        (341 (ALOAD_0))
        (342 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (345 (ALOAD 4))
        (347 (INVOKEVIRTUAL (METHODCP "getBytes"
                                      "java.lang.String" NIL (ARRAY BYTE))))
        (350 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (353 (ALOAD_2))
        (354 (INVOKEINTERFACE (METHODCP "hasMoreElements"
                                        "java.util.Enumeration" NIL BOOLEAN)
                              1))
        (359 (IFNE 294))
        (362 (ALOAD_0))
        (363 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (366 (LDC 27))
        (368 (INVOKEVIRTUAL (METHODCP "getBytes"
                                      "java.lang.String" NIL (ARRAY BYTE))))
        (371 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (374 (ALOAD_0))
        (375
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (378 (IFNULL 395))
        (381 (ALOAD_0))
        (382 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (385 (ALOAD_0))
        (386
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (389
         (INVOKEVIRTUAL
           (METHODCP "toByteArray"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     NIL (ARRAY BYTE))))
        (392 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (395 (ALOAD_0))
        (396 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (399 (INVOKEVIRTUAL (METHODCP "flush"
                                      "java.io.DataOutputStream" NIL VOID)))
        (402 (ALOAD_0))
        (403 (ALOAD_0))
        (404
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (407
           (INVOKEINTERFACE (METHODCP "openDataInputStream"
                                      "javax.microedition.io.InputConnection"
                                      NIL (CLASS "java.io.DataInputStream"))
                            1))
        (412 (PUTFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (415 (ALOAD_0))
        (416 (ALOAD_0))
        (417 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (420 (INVOKESPECIAL (METHODCP "readResponseMessage"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (423 (ALOAD_0))
        (424 (ALOAD_0))
        (425 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (428 (INVOKESPECIAL (METHODCP "readHeaders"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (431 (ALOAD_0))
        (432 (GETFIELD (JVM::FIELDCP "responseCode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (435 (BIPUSH 100))
        (437 (IF_ICMPNE 456))
        (440 (ALOAD_0))
        (441 (ALOAD_0))
        (442 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (445 (INVOKESPECIAL (METHODCP "readResponseMessage"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (448 (ALOAD_0))
        (449 (ALOAD_0))
        (450 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (453 (INVOKESPECIAL (METHODCP "readHeaders"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (456 (ALOAD_0))
        (457 (ICONST_1))
        (458 (PUTFIELD (JVM::FIELDCP "connected"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     BOOLEAN)))
        (461 (RETURN))
        (ENDOFCODE 462))
       (EXCEPTIONS)
       (STACKMAP
            (8 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX TOPX TOPX TOPX)
                      (STACK)
                      NIL))
            (100 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.StringBuffer")
                               (CLASS "java.lang.String")
                               (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                        NIL))
            (107 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK INT (CLASS "java.lang.StringBuffer")
                               (CLASS "java.lang.String")
                               (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                        NIL))
            (116 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (154 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.StringBuffer"))
                        NIL))
            (176 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.String")
                               (CLASS "java.lang.StringBuffer"))
                        NIL))
            (191 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.StringBuffer"))
                        NIL))
            (213 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.String")
                               (CLASS "java.lang.StringBuffer"))
                        NIL))
            (294 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL))
            (353 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL))
            (395 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL))
            (456 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "readResponseMessage"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 158)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_1))
        (2 (INVOKESPECIAL (METHODCP "readLine"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    ((CLASS "java.io.InputStream"))
                                    (CLASS "java.lang.String"))))
        (5 (ASTORE_2))
        (6 (ALOAD_0))
        (7 (ICONST_M1))
        (8 (PUTFIELD (JVM::FIELDCP "responseCode"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (11 (ALOAD_0))
        (12 (ACONST_NULL))
        (13 (PUTFIELD (JVM::FIELDCP "responseMsg"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (16 (ALOAD_2))
        (17 (IFNONNULL 23))
        (20 (GOTO 148))
        (23 (ALOAD_2))
        (24 (BIPUSH 32))
        (26 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (29 (ISTORE_3))
        (30 (ILOAD_3))
        (31 (IFGE 37))
        (34 (GOTO 148))
        (37 (ALOAD_2))
        (38 (ICONST_0))
        (39 (ILOAD_3))
        (40 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (43 (ASTORE 5))
        (45 (ALOAD 5))
        (47 (LDC 30))
        (49 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (52 (IFNE 58))
        (55 (GOTO 148))
        (58 (ALOAD_2))
        (59 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (62 (ILOAD_3))
        (63 (IF_ICMPGT 69))
        (66 (GOTO 148))
        (69 (ALOAD_2))
        (70 (ILOAD_3))
        (71 (ICONST_1))
        (72 (IADD))
        (73 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (76 (BIPUSH 32))
        (78 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (81 (ISTORE 4))
        (83 (ILOAD 4))
        (85 (IFGE 91))
        (88 (GOTO 148))
        (91 (ILOAD 4))
        (93 (ILOAD_3))
        (94 (ICONST_1))
        (95 (IADD))
        (96 (IADD))
        (97 (ISTORE 4))
        (99 (ALOAD_2))
        (100 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (103 (ILOAD 4))
        (105 (IF_ICMPGT 111))
        (108 (GOTO 148))
        (111 (ALOAD_0))
        (112 (ALOAD_2))
        (113 (ILOAD_3))
        (114 (ICONST_1))
        (115 (IADD))
        (116 (ILOAD 4))
        (118
            (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (121 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (124 (PUTFIELD (JVM::FIELDCP "responseCode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (127 (GOTO 135))
        (130 (ASTORE 6))
        (132 (GOTO 148))
        (135 (ALOAD_0))
        (136 (ALOAD_2))
        (137 (ILOAD 4))
        (139 (ICONST_1))
        (140 (IADD))
        (141 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                      (CLASS "java.lang.String"))))
        (144 (PUTFIELD (JVM::FIELDCP "responseMsg"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (147 (RETURN))
        (148 (NEW (CLASS "java.io.IOException")))
        (151 (DUP))
        (152 (LDC 31))
        (154 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (157 (ATHROW))
        (ENDOFCODE 158))
       (EXCEPTIONS (JVM::HANDLER 111 127 130
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (58 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT TOPX (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (69 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT TOPX (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (91 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT INT (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (111 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                TOPX)
                        (STACK)
                        NIL))
            (130 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                TOPX)
                        (STACK (CLASS "java.lang.NumberFormatException"))
                        NIL))
            (135 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                TOPX)
                        (STACK)
                        NIL))
            (148 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "readHeaders"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 117)
       (PARSEDCODE
        (0 (GOTO 3))
        (3 (ALOAD_0))
        (4 (ALOAD_1))
        (5 (INVOKESPECIAL (METHODCP "readLine"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    ((CLASS "java.io.InputStream"))
                                    (CLASS "java.lang.String"))))
        (8 (ASTORE_2))
        (9 (ALOAD_2))
        (10 (IFNULL 22))
        (13 (ALOAD_2))
        (14 (LDC 23))
        (16 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (19 (IFEQ 23))
        (22 (RETURN))
        (23 (ALOAD_2))
        (24 (BIPUSH 58))
        (26 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (29 (ISTORE 5))
        (31 (ILOAD 5))
        (33 (IFGE 46))
        (36 (NEW (CLASS "java.io.IOException")))
        (39 (DUP))
        (40 (LDC 32))
        (42 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (45 (ATHROW))
        (46 (ALOAD_2))
        (47 (ICONST_0))
        (48 (ILOAD 5))
        (50 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (53 (ASTORE_3))
        (54 (ALOAD_3))
        (55 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (58 (IFNE 71))
        (61 (NEW (CLASS "java.io.IOException")))
        (64 (DUP))
        (65 (LDC 32))
        (67 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (70 (ATHROW))
        (71 (ALOAD_2))
        (72 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (75 (ILOAD 5))
        (77 (ICONST_2))
        (78 (IADD))
        (79 (IF_ICMPGT 89))
        (82 (LDC 23))
        (84 (ASTORE 4))
        (86 (GOTO 99))
        (89 (ALOAD_2))
        (90 (ILOAD 5))
        (92 (ICONST_2))
        (93 (IADD))
        (94 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (97 (ASTORE 4))
        (99 (ALOAD_0))
        (100 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
        (103 (ALOAD_0))
        (104 (ALOAD_3))
        (105 (INVOKESPECIAL (METHODCP "toLowerCase"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.String"))))
        (108 (ALOAD 4))
        (110 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (113 (POP))
        (114 (GOTO 3))
        (ENDOFCODE 117))
       (EXCEPTIONS)
       (STACKMAP
            (3 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.io.InputStream")
                              TOPX TOPX TOPX TOPX)
                      (STACK)
                      NIL))
            (22 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (46 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX INT)
                       (STACK)
                       NIL))
            (71 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX INT)
                       (STACK)
                       NIL))
            (89 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX INT)
                       (STACK)
                       NIL))
            (99 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "readLine"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.StringBuffer"))))
        (4 (ICONST_0))
        (5 (INVOKEVIRTUAL (METHODCP "setLength"
                                    "java.lang.StringBuffer" (INT)
                                    VOID)))
        (8 (GOTO 11))
        (11 (ALOAD_1))
        (12 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
        (15 (ISTORE_2))
        (16 (ILOAD_2))
        (17 (IFGE 22))
        (20 (ACONST_NULL))
        (21 (ARETURN))
        (22 (ILOAD_2))
        (23 (BIPUSH 13))
        (25 (IF_ICMPNE 31))
        (28 (GOTO 11))
        (31 (GOTO 37))
        (34 (ASTORE_3))
        (35 (ACONST_NULL))
        (36 (ARETURN))
        (37 (ILOAD_2))
        (38 (BIPUSH 10))
        (40 (IF_ICMPNE 46))
        (43 (GOTO 59))
        (46 (ALOAD_0))
        (47 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (50 (ILOAD_2))
        (51 (JVM::I2C))
        (52 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (55 (POP))
        (56 (GOTO 11))
        (59 (ALOAD_0))
        (60 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (63 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (66 (ARETURN))
        (ENDOFCODE 67))
       (EXCEPTIONS (JVM::HANDLER 11 21 34 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 22 28 34 (CLASS "java.io.IOException")))
       (STACKMAP
            (11 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (22 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (31 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (34 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               TOPX TOPX)
                       (STACK (CLASS "java.io.IOException"))
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (46 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (59 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "disconnect" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 51)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (4 (IFNULL 35))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "streamInput"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.io.DataInputStream"))))
        (11 (INVOKEVIRTUAL (METHODCP "close"
                                     "java.io.DataInputStream" NIL VOID)))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "streamOutput"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataOutputStream"))))
        (18 (INVOKEVIRTUAL (METHODCP "close"
                                     "java.io.DataOutputStream" NIL VOID)))
        (21 (ALOAD_0))
        (22
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (25 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (30 (ALOAD_0))
        (31 (ACONST_NULL))
        (32
         (PUTFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (35 (ALOAD_0))
        (36 (ICONST_M1))
        (37 (PUTFIELD (JVM::FIELDCP "responseCode"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (40 (ALOAD_0))
        (41 (ACONST_NULL))
        (42 (PUTFIELD (JVM::FIELDCP "responseMsg"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (45 (ALOAD_0))
        (46 (ICONST_0))
        (47 (PUTFIELD (JVM::FIELDCP "connected"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    BOOLEAN)))
        (50 (RETURN))
        (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP
            (35 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "parseProtocol" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 62)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (BIPUSH 58))
        (6 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                    INT)))
        (9 (ISTORE_1))
        (10 (ILOAD_1))
        (11 (IFGT 24))
        (14 (NEW (CLASS "java.io.IOException")))
        (17 (DUP))
        (18 (LDC 33))
        (20 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (23 (ATHROW))
        (24 (ALOAD_0))
        (25 (GETFIELD (JVM::FIELDCP "url"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (28 (ICONST_0))
        (29 (ILOAD_1))
        (30 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (33 (ASTORE_2))
        (34 (ALOAD_2))
        (35 (LDC 2))
        (37 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (40 (IFNE 53))
        (43 (NEW (CLASS "java.io.IOException")))
        (46 (DUP))
        (47 (LDC 34))
        (49 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (52 (ATHROW))
        (53 (ALOAD_0))
        (54 (ILOAD_1))
        (55 (ICONST_1))
        (56 (IADD))
        (57 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (60 (ALOAD_2))
        (61 (ARETURN))
        (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP
            (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (53 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String"))
                       (STACK)
                       NIL)))))
     (METHOD
      "parseHostname" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 83)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (8 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                    (CLASS "java.lang.String"))))
        (11 (ASTORE_1))
        (12 (ALOAD_1))
        (13 (LDC 35))
        (15 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (18 (IFEQ 37))
        (21 (ALOAD_1))
        (22 (ICONST_2))
        (23 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (26 (ASTORE_1))
        (27 (ALOAD_0))
        (28 (DUP))
        (29 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (32 (ICONST_2))
        (33 (IADD))
        (34 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (37 (ALOAD_1))
        (38 (BIPUSH 58))
        (40 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (43 (ISTORE_2))
        (44 (ILOAD_2))
        (45 (IFGE 55))
        (48 (ALOAD_1))
        (49 (BIPUSH 47))
        (51 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (54 (ISTORE_2))
        (55 (ILOAD_2))
        (56 (IFGE 64))
        (59 (ALOAD_1))
        (60 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (63 (ISTORE_2))
        (64 (ALOAD_1))
        (65 (ICONST_0))
        (66 (ILOAD_2))
        (67 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (70 (ASTORE_3))
        (71 (ALOAD_0))
        (72 (DUP))
        (73 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (76 (ILOAD_2))
        (77 (IADD))
        (78 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (81 (ALOAD_3))
        (82 (ARETURN))
        (ENDOFCODE 83))
       (EXCEPTIONS)
       (STACKMAP
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (55 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (64 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "parsePort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 107)
       (PARSEDCODE
        (0 (BIPUSH 80))
        (2 (ISTORE_1))
        (3 (ALOAD_0))
        (4 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (11 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (14 (ASTORE_2))
        (15 (ALOAD_2))
        (16 (LDC 9))
        (18 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (21 (IFNE 26))
        (24 (ILOAD_1))
        (25 (IRETURN))
        (26 (ALOAD_2))
        (27 (ICONST_1))
        (28 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (31 (ASTORE_2))
        (32 (ALOAD_0))
        (33 (DUP))
        (34 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (37 (ICONST_1))
        (38 (IADD))
        (39 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (42 (ALOAD_2))
        (43 (BIPUSH 47))
        (45 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (48 (ISTORE_3))
        (49 (ILOAD_3))
        (50 (IFGE 58))
        (53 (ALOAD_2))
        (54 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (57 (ISTORE_3))
        (58 (ALOAD_2))
        (59 (ICONST_0))
        (60 (ILOAD_3))
        (61 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (64 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (67 (ISTORE_1))
        (68 (ILOAD_1))
        (69 (IFGT 80))
        (72 (NEW (CLASS "java.lang.NumberFormatException")))
        (75 (DUP))
        (76 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     NIL VOID)))
        (79 (ATHROW))
        (80 (GOTO 95))
        (83 (ASTORE 4))
        (85 (NEW (CLASS "java.io.IOException")))
        (88 (DUP))
        (89 (LDC 36))
        (91 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (94 (ATHROW))
        (95 (ALOAD_0))
        (96 (DUP))
        (97 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (100 (ILOAD_3))
        (101 (IADD))
        (102 (PUTFIELD (JVM::FIELDCP "index"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (105 (ILOAD_1))
        (106 (IRETURN))
        (ENDOFCODE 107))
       (EXCEPTIONS (JVM::HANDLER 58 80 83
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
            (26 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (58 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (80 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (83 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK (CLASS "java.lang.NumberFormatException"))
                       NIL))
            (95 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseFile" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 112)
       (PARSEDCODE
        (0 (LDC 23))
        (2 (ASTORE_1))
        (3 (ALOAD_0))
        (4 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (11 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (14 (ASTORE_2))
        (15 (ALOAD_2))
        (16 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (19 (IFNE 24))
        (22 (ALOAD_1))
        (23 (ARETURN))
        (24 (ALOAD_2))
        (25 (LDC 37))
        (27 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (30 (IFNE 43))
        (33 (NEW (CLASS "java.io.IOException")))
        (36 (DUP))
        (37 (LDC 38))
        (39 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (42 (ATHROW))
        (43 (ALOAD_2))
        (44 (BIPUSH 35))
        (46 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (49 (ISTORE_3))
        (50 (ALOAD_2))
        (51 (BIPUSH 63))
        (53 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (56 (ISTORE 4))
        (58 (ILOAD_3))
        (59 (IFGE 75))
        (62 (ILOAD 4))
        (64 (IFGE 75))
        (67 (ALOAD_2))
        (68 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (71 (ISTORE_3))
        (72 (GOTO 93))
        (75 (ILOAD_3))
        (76 (IFLT 90))
        (79 (ILOAD 4))
        (81 (IFLE 93))
        (84 (ILOAD 4))
        (86 (ILOAD_3))
        (87 (IF_ICMPGE 93))
        (90 (ILOAD 4))
        (92 (ISTORE_3))
        (93 (ALOAD_2))
        (94 (ICONST_0))
        (95 (ILOAD_3))
        (96 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (99 (ASTORE_1))
        (100 (ALOAD_0))
        (101 (DUP))
        (102 (GETFIELD (JVM::FIELDCP "index"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (105 (ILOAD_3))
        (106 (IADD))
        (107 (PUTFIELD (JVM::FIELDCP "index"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (110 (ALOAD_1))
        (111 (ARETURN))
        (ENDOFCODE 112))
       (EXCEPTIONS)
       (STACKMAP
            (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (43 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (75 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (90 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (93 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseRef" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 84)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (8 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                    (CLASS "java.lang.String"))))
        (11 (ASTORE_1))
        (12 (ALOAD_1))
        (13 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (16 (IFEQ 29))
        (19 (ALOAD_1))
        (20 (ICONST_0))
        (21 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (24 (BIPUSH 63))
        (26 (IF_ICMPNE 32))
        (29 (LDC 23))
        (31 (ARETURN))
        (32 (ALOAD_1))
        (33 (LDC 25))
        (35 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (38 (IFNE 51))
        (41 (NEW (CLASS "java.io.IOException")))
        (44 (DUP))
        (45 (LDC 39))
        (47 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (50 (ATHROW))
        (51 (ALOAD_1))
        (52 (BIPUSH 63))
        (54 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (57 (ISTORE_2))
        (58 (ILOAD_2))
        (59 (IFGE 67))
        (62 (ALOAD_1))
        (63 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (66 (ISTORE_2))
        (67 (ALOAD_0))
        (68 (DUP))
        (69 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (72 (ILOAD_2))
        (73 (IADD))
        (74 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (77 (ALOAD_1))
        (78 (ICONST_1))
        (79 (ILOAD_2))
        (80 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (83 (ARETURN))
        (ENDOFCODE 84))
       (EXCEPTIONS)
       (STACKMAP
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (51 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (67 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseQuery" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 70)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (8 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                    (CLASS "java.lang.String"))))
        (11 (ASTORE_1))
        (12 (ALOAD_1))
        (13 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (16 (IFNE 22))
        (19 (LDC 23))
        (21 (ARETURN))
        (22 (ALOAD_1))
        (23 (LDC 26))
        (25 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (28 (IFEQ 67))
        (31 (ALOAD_1))
        (32 (ICONST_1))
        (33 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (36 (ASTORE_2))
        (37 (ALOAD_1))
        (38 (BIPUSH 35))
        (40 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (43 (ISTORE_3))
        (44 (ILOAD_3))
        (45 (IFLE 65))
        (48 (ALOAD_1))
        (49 (ICONST_1))
        (50 (ILOAD_3))
        (51 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (54 (ASTORE_2))
        (55 (ALOAD_0))
        (56 (DUP))
        (57 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (60 (ILOAD_3))
        (61 (IADD))
        (62 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (65 (ALOAD_2))
        (66 (ARETURN))
        (67 (LDC 23))
        (69 (ARETURN))
        (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP
            (22 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (65 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (67 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseURL" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*
                   *PROTECTED* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 46)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ICONST_0))
            (2 (PUTFIELD (JVM::FIELDCP "index"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       INT)))
            (5 (ALOAD_0))
            (6 (ALOAD_0))
            (7 (INVOKESPECIAL (METHODCP "parseHostname"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL (CLASS "java.lang.String"))))
            (10 (PUTFIELD (JVM::FIELDCP "host"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (13 (ALOAD_0))
            (14 (ALOAD_0))
            (15 (INVOKESPECIAL (METHODCP "parsePort"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL INT)))
            (18 (PUTFIELD (JVM::FIELDCP "port"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        INT)))
            (21 (ALOAD_0))
            (22 (ALOAD_0))
            (23 (INVOKESPECIAL (METHODCP "parseFile"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL (CLASS "java.lang.String"))))
            (26 (PUTFIELD (JVM::FIELDCP "file"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (29 (ALOAD_0))
            (30 (ALOAD_0))
            (31 (INVOKESPECIAL (METHODCP "parseQuery"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL (CLASS "java.lang.String"))))
            (34 (PUTFIELD (JVM::FIELDCP "query"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (37 (ALOAD_0))
            (38 (ALOAD_0))
            (39 (INVOKESPECIAL (METHODCP "parseRef"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL (CLASS "java.lang.String"))))
            (42 (PUTFIELD (JVM::FIELDCP "ref"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (45 (RETURN))
            (ENDOFCODE 46))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toLowerCase"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 48)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.StringBuffer"))))
        (4 (ICONST_0))
        (5 (INVOKEVIRTUAL (METHODCP "setLength"
                                    "java.lang.StringBuffer" (INT)
                                    VOID)))
        (8 (ICONST_0))
        (9 (ISTORE_2))
        (10 (GOTO 32))
        (13 (ALOAD_0))
        (14 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (17 (ALOAD_1))
        (18 (ILOAD_2))
        (19 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (22 (INVOKESTATIC (METHODCP "toLowerCase"
                                    "java.lang.Character" (CHAR)
                                    CHAR)))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (POP))
        (29 (IINC 2 1))
        (32 (ILOAD_2))
        (33 (ALOAD_1))
        (34 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (37 (IF_ICMPLT 13))
        (40 (ALOAD_0))
        (41 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (44 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (47 (ARETURN))
        (ENDOFCODE 48))
       (EXCEPTIONS)
       (STACKMAP
            (13 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "access$000"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE CLASS "java.util.Hashtable")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "headerFields"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.util.Hashtable"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "access$100"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "connected"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         BOOLEAN)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "access$200"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "streamInput"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.io.DataInputStream"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "access$300"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                  (CLASS "java.io.InputStream"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "readLine"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.io.InputStream"))
                                         (CLASS "java.lang.String"))))
             (5 (ARETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "access$406"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 12)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (DUP))
              (2 (GETFIELD (JVM::FIELDCP "opens"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         INT)))
              (5 (ICONST_1))
              (6 (ISUB))
              (7 (DUP_X1))
              (8 (PUTFIELD (JVM::FIELDCP "opens"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         INT)))
              (11 (IRETURN))
              (ENDOFCODE 12))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES "com.sun.cldc.io.connections.HttpConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.resource.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (STRING "Should not be called"))
    (FIELDS (FIELD "name" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.io.ConnectionBase"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (PUTFIELD (JVM::FIELDCP "name"
                                     "com.sun.cldc.io.j2me.resource.Protocol"
                                     (CLASS "java.lang.String"))))
          (5 (ALOAD_0))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
         (0 (NEW (CLASS "com.sun.cldc.io.j2me.resource.PrivateInputStream")))
         (3 (DUP))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "name"
                                    "com.sun.cldc.io.j2me.resource.Protocol"
                                    (CLASS "java.lang.String"))))
         (8 (INVOKESPECIAL
                 (METHODCP "<init>"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           ((CLASS "java.lang.String"))
                           VOID)))
         (11 (ARETURN))
         (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES "javax.microedition.io.InputConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.resource.PrivateInputStream"
    "java.io.InputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "handle" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5
         (GETFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (8 (IFNULL 19))
        (11 (NEW (CLASS "java.io.IOException")))
        (14 (DUP))
        (15 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.IOException" NIL VOID)))
        (18 (ATHROW))
        (19 (ALOAD_0))
        (20 (ALOAD_1))
        (21 (INVOKESTATIC
                 (METHODCP "open"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           ((CLASS "java.lang.String"))
                           (CLASS "java.lang.Object"))))
        (24
         (PUTFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
        (19
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2me.resource.PrivateInputStream")
                   (CLASS "java.lang.String"))
           (STACK)
           NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (4 (INVOKESTATIC
                (METHODCP "read"
                          "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                          ((CLASS "java.lang.Object"))
                          INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (4 (INVOKESTATIC
                (METHODCP "close"
                          "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                          ((CLASS "java.lang.Object"))
                          VOID)))
        (7 (ALOAD_0))
        (8 (ACONST_NULL))
        (9
         (PUTFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.lang.Object")
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "read"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "close"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.serversocket.Protocol"
    "com.sun.cldc.io.NetworkConnectionBase"
    (CONSTANT_POOL)
    (FIELDS (FIELD "handle" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 4)
          (JVM::MAX_LOCALS . 4)
          (CODE_LENGTH . 12)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ALOAD_1))
               (2 (ILOAD_2))
               (3 (ILOAD_3))
               (4 (INVOKEVIRTUAL
                       (METHODCP "open0"
                                 "com.sun.cldc.io.j2me.serversocket.Protocol"
                                 ((CLASS "java.lang.String") INT BOOLEAN)
                                 VOID)))
               (7 (ALOAD_0))
               (8 (INVOKESPECIAL
                       (METHODCP "registerCleanup"
                                 "com.sun.cldc.io.j2me.serversocket.Protocol"
                                 NIL VOID)))
               (11 (RETURN))
               (ENDOFCODE 12))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD "open0"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "acceptAndOpen" (PARAMETERS)
      (RETURNTYPE CLASS
                  "javax.microedition.io.StreamConnection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 37)
       (PARSEDCODE
          (0 (GOTO 3))
          (3 (ALOAD_0))
          (4 (INVOKESPECIAL
                  (METHODCP "accept"
                            "com.sun.cldc.io.j2me.serversocket.Protocol"
                            NIL INT)))
          (7 (ISTORE_2))
          (8 (ILOAD_2))
          (9 (IFLT 29))
          (12 (NEW (CLASS "com.sun.cldc.io.j2me.socket.Protocol")))
          (15 (DUP))
          (16 (INVOKESPECIAL (METHODCP "<init>"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       NIL VOID)))
          (19 (ASTORE_1))
          (20 (ALOAD_1))
          (21 (ILOAD_2))
          (22 (ICONST_3))
          (23 (INVOKEVIRTUAL (METHODCP "open"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       (INT INT)
                                       VOID)))
          (26 (GOTO 35))
          (29 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                      NIL VOID)))
          (32 (GOTO 3))
          (35 (ALOAD_1))
          (36 (ARETURN))
          (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP
        (3
          (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")
                         TOPX TOPX)
                 (STACK)
                 NIL))
        (29
          (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")
                         TOPX INT)
                 (STACK)
                 NIL))
        (35
          (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")
                         (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                         INT)
                 (STACK)
                 NIL)))))
     (METHOD "accept" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "registerCleanup" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES "javax.microedition.io.StreamConnectionNotifier")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.Protocol"
    "com.sun.cldc.io.NetworkConnectionBase"
    (CONSTANT_POOL (STRING "Should not be called")
                   (STRING "Connection closed")
                   (STRING "Connection not open for reading")
                   (STRING "Input stream already opened")
                   (STRING "Connection not open for writing")
                   (STRING "Output stream already opened")
                   (STRING "com.sun.cldc.io.j2me.socket.buffersize"))
    (FIELDS (FIELD "handle" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "iocb" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "mode"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "opens" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "copen"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "isopen" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "osopen" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "bufferSize" INT
                   (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 25)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
          (9 (ALOAD_0))
          (10 (ICONST_0))
          (11 (PUTFIELD (JVM::FIELDCP "copen"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      BOOLEAN)))
          (14 (ALOAD_0))
          (15 (ICONST_0))
          (16 (PUTFIELD (JVM::FIELDCP "isopen"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      BOOLEAN)))
          (19 (ALOAD_0))
          (20 (ICONST_0))
          (21 (PUTFIELD (JVM::FIELDCP "osopen"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      BOOLEAN)))
          (24 (RETURN))
          (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 55)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_1))
         (2 (ILOAD_2))
         (3 (ILOAD_3))
         (4 (INVOKEVIRTUAL (METHODCP "open0"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     ((CLASS "java.lang.String") INT BOOLEAN)
                                     VOID)))
         (7 (ALOAD_0))
         (8 (INVOKESPECIAL (METHODCP "registerCleanup"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
         (11 (ALOAD_0))
         (12 (DUP))
         (13 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (16 (ICONST_1))
         (17 (IADD))
         (18 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (21 (ALOAD_0))
         (22 (ICONST_1))
         (23 (PUTFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
         (26 (ALOAD_0))
         (27 (ILOAD_2))
         (28 (PUTFIELD (JVM::FIELDCP "mode"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (31 (ALOAD_0))
         (32 (ARETURN))
         (33 (ASTORE 4))
         (35 (NEW (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")))
         (38 (DUP))
         (39 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.serversocket.Protocol"
                            NIL VOID)))
         (42 (ASTORE 5))
         (44 (ALOAD 5))
         (46 (ALOAD_1))
         (47 (ILOAD_2))
         (48 (ILOAD_3))
         (49 (INVOKEVIRTUAL
                  (METHODCP "open"
                            "com.sun.cldc.io.j2me.serversocket.Protocol"
                            ((CLASS "java.lang.String") INT BOOLEAN)
                            VOID)))
         (52 (ALOAD 5))
         (54 (ARETURN))
         (ENDOFCODE 55))
       (EXCEPTIONS (JVM::HANDLER 0 32 33
                                 (CLASS "java.lang.InterruptedException")))
       (STACKMAP
            (33 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                               (CLASS "java.lang.String")
                               INT INT TOPX TOPX)
                       (STACK (CLASS "java.lang.InterruptedException"))
                       NIL)))))
     (METHOD
      "open" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 26)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ILOAD_1))
           (2 (PUTFIELD (JVM::FIELDCP "handle"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      INT)))
           (5 (ALOAD_0))
           (6 (DUP))
           (7 (GETFIELD (JVM::FIELDCP "opens"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      INT)))
           (10 (ICONST_1))
           (11 (IADD))
           (12 (PUTFIELD (JVM::FIELDCP "opens"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       INT)))
           (15 (ALOAD_0))
           (16 (ICONST_1))
           (17 (PUTFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       BOOLEAN)))
           (20 (ALOAD_0))
           (21 (ILOAD_2))
           (22 (PUTFIELD (JVM::FIELDCP "mode"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       INT)))
           (25 (RETURN))
           (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       BOOLEAN)))
            (4 (IFNE 17))
            (7 (NEW (CLASS "java.io.IOException")))
            (10 (DUP))
            (11 (LDC 1))
            (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (16 (ATHROW))
            (17 (RETURN))
            (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
           (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                      (STACK)
                      NIL)))))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 87)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "mode"
                                   "com.sun.cldc.io.j2me.socket.Protocol"
                                   INT)))
        (8 (ICONST_1))
        (9 (JVM::IAND))
        (10 (IFNE 23))
        (13 (NEW (CLASS "java.io.IOException")))
        (16 (DUP))
        (17 (LDC 2))
        (19 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (22 (ATHROW))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "isopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (27 (IFEQ 40))
        (30 (NEW (CLASS "java.io.IOException")))
        (33 (DUP))
        (34 (LDC 3))
        (36 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (39 (ATHROW))
        (40 (ALOAD_0))
        (41 (ICONST_1))
        (42 (PUTFIELD (JVM::FIELDCP "isopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (45 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
        (48 (IFNE 63))
        (51 (NEW (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")))
        (54 (DUP))
        (55 (ALOAD_0))
        (56 (INVOKESPECIAL
                 (METHODCP "<init>"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                           VOID)))
        (59 (ASTORE_1))
        (60 (GOTO 75))
        (63
         (NEW
           (CLASS
                "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")))
        (66 (DUP))
        (67 (ALOAD_0))
        (68 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
        (71
         (INVOKESPECIAL
              (METHODCP
                   "<init>"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   ((CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                    INT)
                   VOID)))
        (74 (ASTORE_1))
        (75 (ALOAD_0))
        (76 (DUP))
        (77 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    INT)))
        (80 (ICONST_1))
        (81 (IADD))
        (82 (PUTFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    INT)))
        (85 (ALOAD_1))
        (86 (ARETURN))
        (ENDOFCODE 87))
       (EXCEPTIONS)
       (STACKMAP
        (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                           TOPX)
                   (STACK)
                   NIL))
        (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                           TOPX)
                   (STACK)
                   NIL))
        (63 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                           TOPX)
                   (STACK)
                   NIL))
        (75
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                    (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream"))
            (STACK)
            NIL)))))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 66)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "mode"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    INT)))
         (8 (ICONST_2))
         (9 (JVM::IAND))
         (10 (IFNE 23))
         (13 (NEW (CLASS "java.io.IOException")))
         (16 (DUP))
         (17 (LDC 4))
         (19 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (22 (ATHROW))
         (23 (ALOAD_0))
         (24 (GETFIELD (JVM::FIELDCP "osopen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
         (27 (IFEQ 40))
         (30 (NEW (CLASS "java.io.IOException")))
         (33 (DUP))
         (34 (LDC 5))
         (36 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (39 (ATHROW))
         (40 (ALOAD_0))
         (41 (ICONST_1))
         (42 (PUTFIELD (JVM::FIELDCP "osopen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
         (45 (NEW (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")))
         (48 (DUP))
         (49 (ALOAD_0))
         (50 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            ((CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                            VOID)))
         (53 (ASTORE_1))
         (54 (ALOAD_0))
         (55 (DUP))
         (56 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (59 (ICONST_1))
         (60 (IADD))
         (61 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (64 (ALOAD_1))
         (65 (ARETURN))
         (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                               TOPX)
                       (STACK)
                       NIL))
            (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
          (4 (IFEQ 16))
          (7 (ALOAD_0))
          (8 (ICONST_0))
          (9 (PUTFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
          (12 (ALOAD_0))
          (13 (INVOKEVIRTUAL (METHODCP "realClose"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       NIL VOID)))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP
           (16 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                      (STACK)
                      NIL)))))
     (METHOD
      "realClose" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (DUP))
          (2 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
          (5 (ICONST_1))
          (6 (ISUB))
          (7 (DUP_X1))
          (8 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
          (11 (IFNE 18))
          (14 (ALOAD_0))
          (15 (INVOKEVIRTUAL (METHODCP "close0"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       NIL VOID)))
          (18 (RETURN))
          (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
           (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                      (STACK)
                      NIL)))))
     (METHOD "open0"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "read0"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "write0"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "available0" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "close0" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "registerCleanup" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
          (0 (ICONST_0))
          (1 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      INT)))
          (4 (LDC 6))
          (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.String"))))
          (9 (ASTORE_0))
          (10 (ALOAD_0))
          (11 (IFNULL 28))
          (14 (ALOAD_0))
          (15 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                      ((CLASS "java.lang.String"))
                                      INT)))
          (18 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       INT)))
          (21 (GOTO 28))
          (24 (ASTORE_1))
          (25 (GOTO 28))
          (28 (RETURN))
          (ENDOFCODE 29))
       (EXCEPTIONS (JVM::HANDLER 14 21 24
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK (CLASS "java.lang.NumberFormatException"))
                            NIL))
                 (28 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))))))
    (INTERFACES "javax.microedition.io.StreamConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "eof" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "bytebuf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 15)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6
          (PUTFIELD
               (JVM::FIELDCP "eof"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             BOOLEAN)))
        (9 (ALOAD_0))
        (10 (ALOAD_1))
        (11
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (14 (RETURN))
        (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream"))
            (STACK)
            NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 43)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (GETFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (4 (IFNONNULL 14))
        (7 (ALOAD_0))
        (8 (ICONST_1))
        (9 (NEWARRAY BYTE))
        (11
          (PUTFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (14 (ALOAD_0))
        (15 (ALOAD_0))
        (16
          (GETFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (19 (ICONST_0))
        (20 (ICONST_1))
        (21 (INVOKEVIRTUAL
                 (METHODCP "read"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (24 (ISTORE_1))
        (25 (ILOAD_1))
        (26 (ICONST_1))
        (27 (IF_ICMPNE 41))
        (30 (ALOAD_0))
        (31
          (GETFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (34 (ICONST_0))
        (35 (BALOAD))
        (36 (JVM::SIPUSH 255))
        (39 (JVM::IAND))
        (40 (IRETURN))
        (41 (ILOAD_1))
        (42 (IRETURN))
        (ENDOFCODE 43))
       (EXCEPTIONS)
       (STACKMAP
        (14
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     TOPX)
             (STACK)
             NIL))
        (41
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     INT)
             (STACK)
             NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5
          (GETFIELD
               (JVM::FIELDCP "eof"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             BOOLEAN)))
        (8 (IFEQ 13))
        (11 (ICONST_M1))
        (12 (IRETURN))
        (13 (ALOAD_1))
        (14 (IFNONNULL 25))
        (17 (NEW (CLASS "java.lang.NullPointerException")))
        (20 (DUP))
        (21 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (24 (ATHROW))
        (25 (ILOAD_3))
        (26 (IFNE 31))
        (29 (ICONST_0))
        (30 (IRETURN))
        (31 (ILOAD_3))
        (32 (IFGE 43))
        (35 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (38 (DUP))
        (39 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     NIL VOID)))
        (42 (ATHROW))
        (43 (ALOAD_0))
        (44 (ALOAD_1))
        (45 (ILOAD_2))
        (46 (ILOAD_3))
        (47 (INVOKEVIRTUAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (50 (ISTORE 4))
        (52 (ALOAD_0))
        (53
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (56 (IFNONNULL 67))
        (59 (NEW (CLASS "java.io.InterruptedIOException")))
        (62 (DUP))
        (63 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.InterruptedIOException"
                                     NIL VOID)))
        (66 (ATHROW))
        (67 (ILOAD 4))
        (69 (IFEQ 85))
        (72 (ILOAD 4))
        (74 (IFGE 82))
        (77 (ALOAD_0))
        (78 (ICONST_1))
        (79
          (PUTFIELD
               (JVM::FIELDCP "eof"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             BOOLEAN)))
        (82 (ILOAD 4))
        (84 (IRETURN))
        (85 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                    NIL VOID)))
        (88 (GOTO 43))
        (ENDOFCODE 91))
       (EXCEPTIONS)
       (STACKMAP
        (13
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (25
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (31
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (43
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (67
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT INT)
             (STACK)
             NIL))
        (82
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT INT)
             (STACK)
             NIL))
        (85
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT INT)
             (STACK)
             NIL)))))
     (METHOD
      "read1"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 20)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNULL 18))
        (7 (ALOAD_0))
        (8
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (11 (ALOAD_1))
        (12 (ILOAD_2))
        (13 (ILOAD_3))
        (14 (INVOKEVIRTUAL (METHODCP "read0"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (17 (IRETURN))
        (18 (ICONST_M1))
        (19 (IRETURN))
        (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP
        (18
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT)
             (STACK)
             NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (8 (INVOKEVIRTUAL (METHODCP "available0"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    NIL INT)))
        (11 (IRETURN))
        (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 32)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNULL 31))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (11 (ALOAD_0))
        (12
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (15 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
        (18 (ALOAD_0))
        (19
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (22 (ICONST_0))
        (23 (PUTFIELD (JVM::FIELDCP "isopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (26 (ALOAD_0))
        (27 (ACONST_NULL))
        (28
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (31 (RETURN))
        (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP
        (31
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream"))
            (STACK)
            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
    "com.sun.cldc.io.j2me.socket.PrivateInputStream"
    (CONSTANT_POOL)
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "pos"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_1))
        (2 (INVOKESPECIAL
                (METHODCP "<init>"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          ((CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                          VOID)))
        (5 (ALOAD_0))
        (6 (ILOAD_2))
        (7 (NEWARRAY BYTE))
        (9
         (PUTFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read1"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 111)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (4 (IFNE 62))
        (7 (ILOAD_3))
        (8 (ALOAD_0))
        (9
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (12 (ARRAYLENGTH))
        (13 (IF_ICMPLT 24))
        (16 (ALOAD_0))
        (17 (ALOAD_1))
        (18 (ILOAD_2))
        (19 (ILOAD_3))
        (20 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (23 (IRETURN))
        (24 (ALOAD_0))
        (25 (ICONST_0))
        (26
         (PUTFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (29 (ALOAD_0))
        (30 (ALOAD_0))
        (31
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (34 (ALOAD_0))
        (35
         (GETFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (38 (ALOAD_0))
        (39
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (42 (ARRAYLENGTH))
        (43 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (46 (ISTORE 4))
        (48 (ILOAD 4))
        (50 (IFGT 56))
        (53 (ILOAD 4))
        (55 (IRETURN))
        (56 (ALOAD_0))
        (57 (ILOAD 4))
        (59
         (PUTFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (62 (ILOAD_3))
        (63 (ALOAD_0))
        (64
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (67 (IF_ICMPLE 75))
        (70 (ALOAD_0))
        (71
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (74 (ISTORE_3))
        (75 (ALOAD_0))
        (76
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (79 (ALOAD_0))
        (80
         (GETFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (83 (ALOAD_1))
        (84 (ILOAD_2))
        (85 (ILOAD_3))
        (86 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (89 (ALOAD_0))
        (90 (DUP))
        (91
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (94 (ILOAD_3))
        (95 (ISUB))
        (96
         (PUTFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (99 (ALOAD_0))
        (100 (DUP))
        (101
         (GETFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (104 (ILOAD_3))
        (105 (IADD))
        (106
         (PUTFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (109 (ILOAD_3))
        (110 (IRETURN))
        (ENDOFCODE 111))
       (EXCEPTIONS)
       (STACKMAP
        (24
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT TOPX)
          (STACK)
          NIL))
        (56
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT INT)
          (STACK)
          NIL))
        (62
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT TOPX)
          (STACK)
          NIL))
        (75
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT TOPX)
          (STACK)
          NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (8 (ALOAD_0))
        (9 (INVOKESPECIAL
                (METHODCP "available"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL INT)))
        (12 (IADD))
        (13 (IRETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "bytebuf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (9 (RETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream"))
           (STACK)
           NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (4 (IFNONNULL 14))
        (7 (ALOAD_0))
        (8 (ICONST_1))
        (9 (NEWARRAY BYTE))
        (11
         (PUTFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (14 (ALOAD_0))
        (15
         (GETFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (18 (ICONST_0))
        (19 (ILOAD_1))
        (20 (JVM::I2B))
        (21 (BASTORE))
        (22 (ALOAD_0))
        (23 (ALOAD_0))
        (24
         (GETFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (27 (ICONST_0))
        (28 (ICONST_1))
        (29 (INVOKEVIRTUAL
                 (METHODCP "write"
                           "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                           ((ARRAY BYTE) INT INT)
                           VOID)))
        (32 (RETURN))
        (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP
        (14
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    INT)
            (STACK)
            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 70)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL
                 (METHODCP "ensureOpen"
                           "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                           NIL VOID)))
         (4 (ALOAD_1))
         (5 (IFNONNULL 16))
         (8 (NEW (CLASS "java.lang.NullPointerException")))
         (11 (DUP))
         (12 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NullPointerException"
                                      NIL VOID)))
         (15 (ATHROW))
         (16 (ILOAD_3))
         (17 (IFNE 21))
         (20 (RETURN))
         (21 (ICONST_0))
         (22 (ISTORE 4))
         (24 (GOTO 27))
         (27 (ALOAD_0))
         (28 (ALOAD_1))
         (29 (ILOAD_2))
         (30 (ILOAD 4))
         (32 (IADD))
         (33 (ILOAD_3))
         (34 (ILOAD 4))
         (36 (ISUB))
         (37 (INVOKEVIRTUAL
                  (METHODCP "write1"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            ((ARRAY BYTE) INT INT)
                            INT)))
         (40 (ISTORE 5))
         (42 (ILOAD 4))
         (44 (ILOAD 5))
         (46 (IADD))
         (47 (ISTORE 4))
         (49 (ILOAD 4))
         (51 (ILOAD_3))
         (52 (IF_ICMPNE 58))
         (55 (GOTO 69))
         (58 (ILOAD 5))
         (60 (IFNE 27))
         (63 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                     NIL VOID)))
         (66 (GOTO 27))
         (69 (RETURN))
         (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP
        (16
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT TOPX TOPX)
            (STACK)
            NIL))
        (21
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT TOPX TOPX)
            (STACK)
            NIL))
        (27
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT INT TOPX)
            (STACK)
            NIL))
        (58
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT INT INT)
            (STACK)
            NIL))
        (69
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT INT INT)
            (STACK)
            NIL)))))
     (METHOD
      "write1"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 26)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNONNULL 15))
        (7 (NEW (CLASS "java.io.InterruptedIOException")))
        (10 (DUP))
        (11 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.InterruptedIOException"
                                     NIL VOID)))
        (14 (ATHROW))
        (15 (ALOAD_0))
        (16
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (19 (ALOAD_1))
        (20 (ILOAD_2))
        (21 (ILOAD_3))
        (22 (INVOKEVIRTUAL (METHODCP "write0"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (25 (IRETURN))
        (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP
        (15
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT)
            (STACK)
            NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNULL 35))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                          NIL VOID)))
        (11 (ALOAD_0))
        (12 (INVOKEVIRTUAL (METHODCP "flush"
                                     "java.io.OutputStream" NIL VOID)))
        (15 (ALOAD_0))
        (16
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (19 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
        (22 (ALOAD_0))
        (23
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (26 (ICONST_0))
        (27 (PUTFIELD (JVM::FIELDCP "osopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (30 (ALOAD_0))
        (31 (ACONST_NULL))
        (32
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (35 (RETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP
        (35
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream"))
           (STACK)
           NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2se.UniversalFilterInputStream"
    "java.io.InputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "in" (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "marked" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "con"
                   (CLASS "javax.microedition.io.Connection")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 42)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6
         (PUTFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (9 (ALOAD_0))
        (10 (ALOAD_1))
        (11
         (PUTFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (14 (ALOAD_1))
        (15 (INVOKEVIRTUAL (METHODCP "markSupported"
                                     "java.io.InputStream" NIL BOOLEAN)))
        (18 (IFEQ 41))
        (21 (ALOAD_1))
        (22 (ALOAD_1))
        (23 (INVOKEVIRTUAL (METHODCP "available"
                                     "java.io.InputStream" NIL INT)))
        (26 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                     VOID)))
        (29 (ALOAD_0))
        (30 (ICONST_1))
        (31
         (PUTFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (34 (GOTO 41))
        (37 (ASTORE_2))
        (38 (GOTO 41))
        (41 (RETURN))
        (ENDOFCODE 42))
       (EXCEPTIONS (JVM::HANDLER 21 34 37 (CLASS "java.io.IOException")))
       (STACKMAP
        (37
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    (CLASS "java.io.InputStream")
                    TOPX)
            (STACK (CLASS "java.io.IOException"))
            NIL))
        (41
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    (CLASS "java.io.InputStream")
                    TOPX)
            (STACK)
            NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "javax.microedition.io.Connection")
                  (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 11)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_2))
        (2 (INVOKESPECIAL
                (METHODCP "<init>"
                          "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                          ((CLASS "java.io.InputStream"))
                          VOID)))
        (5 (ALOAD_0))
        (6 (ALOAD_1))
        (7
         (PUTFIELD
              (JVM::FIELDCP "con"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "javax.microedition.io.Connection"))))
        (10 (RETURN))
        (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 11)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (ALOAD_1))
        (5 (ILOAD_2))
        (6 (ILOAD_3))
        (7 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                    ((ARRAY BYTE) INT INT)
                                    INT)))
        (10 (IRETURN))
        (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (JVM::LLOAD_1))
        (5 (INVOKEVIRTUAL (METHODCP "skip" "java.io.InputStream" (LONG)
                                    LONG)))
        (8 (JVM::LRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "available"
                                    "java.io.InputStream" NIL INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 24)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "close"
                                    "java.io.InputStream" NIL VOID)))
        (7 (ALOAD_0))
        (8
         (GETFIELD
              (JVM::FIELDCP "con"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "javax.microedition.io.Connection"))))
        (11 (IFNULL 23))
        (14 (ALOAD_0))
        (15
         (GETFIELD
              (JVM::FIELDCP "con"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "javax.microedition.io.Connection"))))
        (18 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (23 (RETURN))
        (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP
        (23
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream"))
           (STACK)
           NIL)))))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_0))
        (2
         (PUTFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (5 (ALOAD_0))
        (6
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (9 (ILOAD_1))
        (10 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                     VOID)))
        (13 (RETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "reset"
                                    "java.io.InputStream" NIL VOID)))
        (7 (RETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "markSupported" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                    "java.io.InputStream" NIL BOOLEAN)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "seek" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 37)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (4 (IFEQ 28))
        (7 (ALOAD_0))
        (8
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (11 (INVOKEVIRTUAL (METHODCP "reset"
                                     "java.io.InputStream" NIL VOID)))
        (14 (ALOAD_0))
        (15
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (18 (JVM::LLOAD_1))
        (19 (JVM::L2I))
        (20 (JVM::I2L))
        (21 (INVOKEVIRTUAL (METHODCP "skip" "java.io.InputStream" (LONG)
                                     LONG)))
        (24 (POP2))
        (25 (GOTO 36))
        (28 (NEW (CLASS "java.lang.IllegalAccessException")))
        (31 (DUP))
        (32 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalAccessException"
                                     NIL VOID)))
        (35 (ATHROW))
        (36 (RETURN))
        (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP
        (28
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    LONG TOPX)
            (STACK)
            NIL))
        (36
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    LONG TOPX)
            (STACK)
            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.util.TimeZoneImplementation"
    "java.util.TimeZone" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "java.util.TimeZone" NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "getIDs" (PARAMETERS)
             (RETURNTYPE ARRAY (CLASS "java.lang.String"))
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "getInstance"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.util.TimeZone")
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.util.j2me.CalendarImpl"
    "java.util.Calendar"
    (CONSTANT_POOL (STRING "00")
                   (STRING "0")
                   (STRING "Sun, ")
                   (STRING "Mon, ")
                   (STRING "Tue, ")
                   (STRING "Wed, ")
                   (STRING "Thu, ")
                   (STRING "Fri, ")
                   (STRING "Sat, ")
                   (STRING ", ")
                   (STRING " ")
                   (STRING ":")
                   (STRING "Jan")
                   (STRING "Feb")
                   (STRING "Mar")
                   (STRING "Apr")
                   (STRING "May")
                   (STRING "Jun")
                   (STRING "Jul")
                   (STRING "Aug")
                   (STRING "Sep")
                   (STRING "Oct")
                   (STRING "Nov")
                   (STRING "Dec"))
    (FIELDS (FIELD "months"
                   (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "java.util.Calendar" NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "getMilliseconds" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 2)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                 (4 (JVM::LRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "setMilliseconds" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 6)
          (PARSEDCODE (0 (ALOAD_0))
                      (1 (JVM::LLOAD_1))
                      (2 (INVOKEVIRTUAL (METHODCP "setTimeInMillis"
                                                  "java.util.Calendar" (LONG)
                                                  VOID)))
                      (5 (RETURN))
                      (ENDOFCODE 6))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.io.DataOutput"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 75)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (BIPUSH 11))
         (3 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                     INT)))
         (6 (BIPUSH 22))
         (8 (JVM::ISHL))
         (9 (ALOAD_0))
         (10 (BIPUSH 12))
         (12 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (15 (BIPUSH 16))
         (17 (JVM::ISHL))
         (18 (JVM::IOR))
         (19 (ALOAD_0))
         (20 (BIPUSH 13))
         (22 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (25 (BIPUSH 10))
         (27 (JVM::ISHL))
         (28 (JVM::IOR))
         (29 (ALOAD_0))
         (30 (BIPUSH 14))
         (32 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (35 (JVM::IOR))
         (36 (ISTORE_2))
         (37 (ALOAD_0))
         (38 (ICONST_1))
         (39 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (42 (BIPUSH 9))
         (44 (JVM::ISHL))
         (45 (ALOAD_0))
         (46 (ICONST_2))
         (47 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (50 (ICONST_5))
         (51 (JVM::ISHL))
         (52 (JVM::IOR))
         (53 (ALOAD_0))
         (54 (ICONST_5))
         (55 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (58 (JVM::IOR))
         (59 (ISTORE_3))
         (60 (ALOAD_1))
         (61 (ILOAD_2))
         (62 (INVOKEINTERFACE (METHODCP "writeInt" "java.io.DataOutput" (INT)
                                        VOID)
                              2))
         (67 (ALOAD_1))
         (68 (ILOAD_3))
         (69 (INVOKEINTERFACE (METHODCP "writeInt" "java.io.DataOutput" (INT)
                                        VOID)
                              2))
         (74 (RETURN))
         (ENDOFCODE 75))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read"
      (PARAMETERS (CLASS "java.io.DataInput"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 75)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (INVOKEINTERFACE (METHODCP "readInt" "java.io.DataInput" NIL INT)
                             1))
         (6 (ISTORE_2))
         (7 (ALOAD_1))
         (8 (INVOKEINTERFACE (METHODCP "readInt" "java.io.DataInput" NIL INT)
                             1))
         (13 (ISTORE_3))
         (14 (ALOAD_0))
         (15 (BIPUSH 11))
         (17 (ILOAD_2))
         (18 (BIPUSH 22))
         (20 (JVM::ISHR))
         (21 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (24 (ALOAD_0))
         (25 (BIPUSH 12))
         (27 (ILOAD_2))
         (28 (BIPUSH 16))
         (30 (JVM::ISHR))
         (31 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (34 (ALOAD_0))
         (35 (BIPUSH 13))
         (37 (ILOAD_2))
         (38 (BIPUSH 10))
         (40 (JVM::ISHR))
         (41 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (44 (ALOAD_0))
         (45 (BIPUSH 14))
         (47 (ILOAD_2))
         (48 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (51 (ALOAD_0))
         (52 (ICONST_1))
         (53 (ILOAD_3))
         (54 (BIPUSH 9))
         (56 (JVM::ISHR))
         (57 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (60 (ALOAD_0))
         (61 (ICONST_2))
         (62 (ILOAD_3))
         (63 (ICONST_5))
         (64 (JVM::ISHR))
         (65 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (68 (ALOAD_0))
         (69 (ICONST_5))
         (70 (ILOAD_3))
         (71 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (74 (RETURN))
         (ENDOFCODE 75))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "twoDigitString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 41)
       (PARSEDCODE
            (0 (ILOAD_1))
            (1 (IFNE 7))
            (4 (LDC 0))
            (6 (ARETURN))
            (7 (ILOAD_1))
            (8 (BIPUSH 10))
            (10 (IF_ICMPGE 36))
            (13 (NEW (CLASS "java.lang.StringBuffer")))
            (16 (DUP))
            (17 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (20 (LDC 1))
            (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (25 (ILOAD_1))
            (26 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                        (CLASS "java.lang.String"))))
            (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (35 (ARETURN))
            (36 (ILOAD_1))
            (37 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                        (CLASS "java.lang.String"))))
            (40 (ARETURN))
            (ENDOFCODE 41))
       (EXCEPTIONS)
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                              INT)
                      (STACK)
                      NIL))
            (36 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 241)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (BIPUSH 7))
        (3 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                    INT)))
        (6 (JVM::TABLESWITCH (JVM::TABLESWITCHINFO 90 (1 . 7)
                                                   (48 54 60 66 72 78 84))))
        (48 (LDC 2))
        (50 (ASTORE_1))
        (51 (GOTO 115))
        (54 (LDC 3))
        (56 (ASTORE_1))
        (57 (GOTO 115))
        (60 (LDC 4))
        (62 (ASTORE_1))
        (63 (GOTO 115))
        (66 (LDC 5))
        (68 (ASTORE_1))
        (69 (GOTO 115))
        (72 (LDC 6))
        (74 (ASTORE_1))
        (75 (GOTO 115))
        (78 (LDC 7))
        (80 (ASTORE_1))
        (81 (GOTO 115))
        (84 (LDC 8))
        (86 (ASTORE_1))
        (87 (GOTO 115))
        (90 (NEW (CLASS "java.lang.StringBuffer")))
        (93 (DUP))
        (94 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (97 (ALOAD_0))
        (98 (BIPUSH 7))
        (100 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (103 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (106 (LDC 9))
        (108 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (111 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (114 (ASTORE_1))
        (115 (NEW (CLASS "java.lang.StringBuffer")))
        (118 (DUP))
        (119 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (122 (ALOAD_1))
        (123 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (126 (ALOAD_0))
        (127 (ALOAD_0))
        (128 (ICONST_5))
        (129 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (132 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (135 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (138 (LDC 10))
        (140 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (143 (GETSTATIC (JVM::FIELDCP "months"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
        (146 (ALOAD_0))
        (147 (ICONST_2))
        (148 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (151 (AALOAD))
        (152 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (155 (LDC 10))
        (157 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (160 (ALOAD_0))
        (161 (ICONST_1))
        (162 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (165 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (168 (LDC 10))
        (170 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (173 (ALOAD_0))
        (174 (ALOAD_0))
        (175 (BIPUSH 11))
        (177 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (180 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (183 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (186 (LDC 11))
        (188 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (191 (ALOAD_0))
        (192 (ALOAD_0))
        (193 (BIPUSH 12))
        (195 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (198 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (201 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (204 (LDC 11))
        (206 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (209 (ALOAD_0))
        (210 (ALOAD_0))
        (211 (BIPUSH 13))
        (213 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (216 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (219 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (222 (LDC 10))
        (224 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (227 (ALOAD_0))
        (228 (INVOKEVIRTUAL (METHODCP "getTimeZone" "java.util.Calendar"
                                      NIL (CLASS "java.util.TimeZone"))))
        (231 (INVOKEVIRTUAL (METHODCP "getID" "java.util.TimeZone"
                                      NIL (CLASS "java.lang.String"))))
        (234 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (237 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (240 (ARETURN))
        (ENDOFCODE 241))
       (EXCEPTIONS)
       (STACKMAP
            (48 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (54 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (66 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (72 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (78 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (84 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (90 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (115 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                                (CLASS "java.lang.String"))
                        (STACK)
                        NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 75)
       (PARSEDCODE
           (0 (BIPUSH 12))
           (2 (ANEWARRAY (CLASS "java.lang.String")))
           (5 (DUP))
           (6 (ICONST_0))
           (7 (LDC 12))
           (9 (AASTORE))
           (10 (DUP))
           (11 (ICONST_1))
           (12 (LDC 13))
           (14 (AASTORE))
           (15 (DUP))
           (16 (ICONST_2))
           (17 (LDC 14))
           (19 (AASTORE))
           (20 (DUP))
           (21 (ICONST_3))
           (22 (LDC 15))
           (24 (AASTORE))
           (25 (DUP))
           (26 (ICONST_4))
           (27 (LDC 16))
           (29 (AASTORE))
           (30 (DUP))
           (31 (ICONST_5))
           (32 (LDC 17))
           (34 (AASTORE))
           (35 (DUP))
           (36 (BIPUSH 6))
           (38 (LDC 18))
           (40 (AASTORE))
           (41 (DUP))
           (42 (BIPUSH 7))
           (44 (LDC 19))
           (46 (AASTORE))
           (47 (DUP))
           (48 (BIPUSH 8))
           (50 (LDC 20))
           (52 (AASTORE))
           (53 (DUP))
           (54 (BIPUSH 9))
           (56 (LDC 21))
           (58 (AASTORE))
           (59 (DUP))
           (60 (BIPUSH 10))
           (62 (LDC 22))
           (64 (AASTORE))
           (65 (DUP))
           (66 (BIPUSH 11))
           (68 (LDC 23))
           (70 (AASTORE))
           (71 (PUTSTATIC (JVM::FIELDCP "months"
                                        "com.sun.cldc.util.j2me.CalendarImpl"
                                        (ARRAY (CLASS "java.lang.String")))))
           (74 (RETURN))
           (ENDOFCODE 75))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.util.j2me.TimeZoneImpl"
    "com.sun.cldc.util.TimeZoneImplementation"
    (CONSTANT_POOL (INT 60000)
                   (INT 3600000)
                   (INT 86400000)
                   (INT 1)
                   (INT 2)
                   (INT 3)
                   (INT 4)
                   (STRING "Illegal DST savings")
                   (STRING "Illegal month ")
                   (STRING "com.sun.cldc.util.j2me.TimeZoneImpl.timezone")
                   (STRING "UTC")
                   (STRING "Illegal start month ")
                   (STRING "Illegal start time ")
                   (STRING "Illegal start day of week ")
                   (STRING "Illegal start day of week in month ")
                   (STRING "Illegal start day ")
                   (STRING "Illegal end month ")
                   (STRING "Illegal end time ")
                   (STRING "Illegal end day of week ")
                   (STRING "Illegal end day of week in month ")
                   (STRING "Illegal end day ")
                   (STRING "GMT"))
    (FIELDS (FIELD "HOME_ID" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1)
            (FIELD "ONE_MINUTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "ONE_HOUR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "ONE_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "ID" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "ids" (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1)
            (FIELD "startMonth"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startDay"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startDayOfWeek"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startTime"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endMonth"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endDay"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endDayOfWeek"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endTime"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startYear"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "rawOffset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "useDaylight"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "millisPerHour" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "millisPerDay" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "monthLength" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1)
            (FIELD "staticMonthLength" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "startMode"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endMode"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "dstSavings"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "DOM_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   3)
            (FIELD "DOW_IN_MONTH_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   4)
            (FIELD "DOW_GE_DOM_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   5)
            (FIELD "DOW_LE_DOM_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   6)
            (FIELD "zones"
                   (ARRAY (CLASS "java.util.TimeZone"))
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (INVOKESPECIAL (METHODCP "<init>"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   BOOLEAN)))
        (9 (ALOAD_0))
        (10 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (13 (PUTFIELD (JVM::FIELDCP "monthLength"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY BYTE))))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS INT (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (INVOKESPECIAL (METHODCP "<init>"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   BOOLEAN)))
        (9 (ALOAD_0))
        (10 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (13 (PUTFIELD (JVM::FIELDCP "monthLength"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY BYTE))))
        (16 (ALOAD_0))
        (17 (ILOAD_1))
        (18 (PUTFIELD (JVM::FIELDCP "rawOffset"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (21 (ALOAD_0))
        (22 (ALOAD_2))
        (23 (PUTFIELD (JVM::FIELDCP "ID"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (CLASS "java.lang.String"))))
        (26 (ALOAD_0))
        (27 (LDC 1))
        (29 (PUTFIELD (JVM::FIELDCP "dstSavings"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (32 (RETURN))
        (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS INT (CLASS "java.lang.String")
                  INT INT INT INT INT INT INT INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 12)
       (CODE_LENGTH . 99)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (INVOKESPECIAL (METHODCP "<init>"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   BOOLEAN)))
        (9 (ALOAD_0))
        (10 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (13 (PUTFIELD (JVM::FIELDCP "monthLength"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY BYTE))))
        (16 (ALOAD_0))
        (17 (ALOAD_2))
        (18 (PUTFIELD (JVM::FIELDCP "ID"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (CLASS "java.lang.String"))))
        (21 (ALOAD_0))
        (22 (ILOAD_1))
        (23 (PUTFIELD (JVM::FIELDCP "rawOffset"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (26 (ALOAD_0))
        (27 (ILOAD_3))
        (28 (PUTFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (31 (ALOAD_0))
        (32 (ILOAD 4))
        (34 (PUTFIELD (JVM::FIELDCP "startDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (37 (ALOAD_0))
        (38 (ILOAD 5))
        (40 (PUTFIELD (JVM::FIELDCP "startDayOfWeek"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (43 (ALOAD_0))
        (44 (ILOAD 6))
        (46 (PUTFIELD (JVM::FIELDCP "startTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (49 (ALOAD_0))
        (50 (ILOAD 7))
        (52 (PUTFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (55 (ALOAD_0))
        (56 (ILOAD 8))
        (58 (PUTFIELD (JVM::FIELDCP "endDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (61 (ALOAD_0))
        (62 (ILOAD 9))
        (64 (PUTFIELD (JVM::FIELDCP "endDayOfWeek"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (67 (ALOAD_0))
        (68 (ILOAD 10))
        (70 (PUTFIELD (JVM::FIELDCP "endTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (73 (ALOAD_0))
        (74 (ILOAD 11))
        (76 (PUTFIELD (JVM::FIELDCP "dstSavings"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (79 (ALOAD_0))
        (80 (INVOKESPECIAL (METHODCP "decodeRules"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     NIL VOID)))
        (83 (ILOAD 11))
        (85 (IFGT 98))
        (88 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (91 (DUP))
        (92 (LDC 7))
        (94 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (97 (ATHROW))
        (98 (RETURN))
        (ENDOFCODE 99))
       (EXCEPTIONS)
       (STACKMAP
            (98 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT (CLASS "java.lang.String")
                               INT INT INT INT INT INT INT INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "getOffset"
      (PARAMETERS INT INT INT INT INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 9)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ILOAD_3))
         (1 (IFLT 10))
         (4 (ILOAD_3))
         (5 (BIPUSH 11))
         (7 (IF_ICMPLE 37))
         (10 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (13 (DUP))
         (14 (NEW (CLASS "java.lang.StringBuffer")))
         (17 (DUP))
         (18 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (21 (LDC 8))
         (23 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (26 (ILOAD_3))
         (27 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (30 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (33 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (36 (ATHROW))
         (37 (ALOAD_0))
         (38 (ILOAD_1))
         (39 (ILOAD_2))
         (40 (ILOAD_3))
         (41 (ILOAD 4))
         (43 (ILOAD 5))
         (45 (ILOAD 6))
         (47 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY BYTE))))
         (50 (ILOAD_3))
         (51 (BALOAD))
         (52 (INVOKEVIRTUAL (METHODCP "getOffset"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (INT INT INT INT INT INT INT)
                                      INT)))
         (55 (IRETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT INT INT INT INT)
                       (STACK)
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT INT INT INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "getOffset"
      (PARAMETERS INT INT INT INT INT INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 10)
       (JVM::MAX_LOCALS . 12)
       (CODE_LENGTH . 305)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFEQ 9))
        (4 (ILOAD_1))
        (5 (ICONST_1))
        (6 (IF_ICMPNE 71))
        (9 (ILOAD_3))
        (10 (IFLT 71))
        (13 (ILOAD_3))
        (14 (BIPUSH 11))
        (16 (IF_ICMPGT 71))
        (19 (ILOAD 4))
        (21 (ICONST_1))
        (22 (IF_ICMPLT 71))
        (25 (ILOAD 4))
        (27 (ILOAD 7))
        (29 (IF_ICMPGT 71))
        (32 (ILOAD 5))
        (34 (ICONST_1))
        (35 (IF_ICMPLT 71))
        (38 (ILOAD 5))
        (40 (BIPUSH 7))
        (42 (IF_ICMPGT 71))
        (45 (ILOAD 6))
        (47 (IFLT 71))
        (50 (ILOAD 6))
        (52 (LDC 2))
        (54 (IF_ICMPGE 71))
        (57 (ILOAD 7))
        (59 (BIPUSH 28))
        (61 (IF_ICMPLT 71))
        (64 (ILOAD 7))
        (66 (BIPUSH 31))
        (68 (IF_ICMPLE 79))
        (71 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (74 (DUP))
        (75 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     NIL VOID)))
        (78 (ATHROW))
        (79 (ALOAD_0))
        (80 (GETFIELD (JVM::FIELDCP "rawOffset"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (83 (ISTORE 8))
        (85 (ALOAD_0))
        (86 (GETFIELD (JVM::FIELDCP "useDaylight"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    BOOLEAN)))
        (89 (IFEQ 105))
        (92 (ILOAD_2))
        (93 (ALOAD_0))
        (94 (GETFIELD (JVM::FIELDCP "startYear"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (97 (IF_ICMPLT 105))
        (100 (ILOAD_1))
        (101 (ICONST_1))
        (102 (IF_ICMPEQ 108))
        (105 (ILOAD 8))
        (107 (IRETURN))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "startMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (112 (ALOAD_0))
        (113 (GETFIELD (JVM::FIELDCP "endMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (116 (IF_ICMPLE 123))
        (119 (ICONST_1))
        (120 (GOTO 124))
        (123 (ICONST_0))
        (124 (ISTORE 9))
        (126 (ILOAD_3))
        (127 (ILOAD 7))
        (129 (ILOAD 4))
        (131 (ILOAD 5))
        (133 (ILOAD 6))
        (135 (ALOAD_0))
        (136 (GETFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (139 (ALOAD_0))
        (140 (GETFIELD (JVM::FIELDCP "startMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (143 (ALOAD_0))
        (144 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (147 (ALOAD_0))
        (148 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (151 (ALOAD_0))
        (152 (GETFIELD (JVM::FIELDCP "startTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (155
            (INVOKESTATIC (METHODCP "compareToRule"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (INT INT INT INT INT INT INT INT INT INT)
                                    INT)))
        (158 (ISTORE 10))
        (160 (ICONST_0))
        (161 (ISTORE 11))
        (163 (ILOAD 9))
        (165 (ILOAD 10))
        (167 (IFLT 174))
        (170 (ICONST_1))
        (171 (GOTO 175))
        (174 (ICONST_0))
        (175 (IF_ICMPEQ 263))
        (178 (ILOAD 6))
        (180 (ALOAD_0))
        (181 (GETFIELD (JVM::FIELDCP "dstSavings"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (184 (IADD))
        (185 (ISTORE 6))
        (187 (GOTO 222))
        (190 (ILOAD 6))
        (192 (LDC 2))
        (194 (ISUB))
        (195 (ISTORE 6))
        (197 (IINC 4 1))
        (200 (ICONST_1))
        (201 (ILOAD 5))
        (203 (BIPUSH 7))
        (205 (IREM))
        (206 (IADD))
        (207 (ISTORE 5))
        (209 (ILOAD 4))
        (211 (ILOAD 7))
        (213 (IF_ICMPLE 222))
        (216 (ICONST_1))
        (217 (ISTORE 4))
        (219 (IINC 3 1))
        (222 (ILOAD 6))
        (224 (LDC 2))
        (226 (IF_ICMPGE 190))
        (229 (ILOAD_3))
        (230 (ILOAD 7))
        (232 (ILOAD 4))
        (234 (ILOAD 5))
        (236 (ILOAD 6))
        (238 (ALOAD_0))
        (239 (GETFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (242 (ALOAD_0))
        (243 (GETFIELD (JVM::FIELDCP "endMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (246 (ALOAD_0))
        (247 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (250 (ALOAD_0))
        (251 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (254 (ALOAD_0))
        (255 (GETFIELD (JVM::FIELDCP "endTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (258
            (INVOKESTATIC (METHODCP "compareToRule"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (INT INT INT INT INT INT INT INT INT INT)
                                    INT)))
        (261 (ISTORE 11))
        (263 (ILOAD 9))
        (265 (IFNE 278))
        (268 (ILOAD 10))
        (270 (IFLT 278))
        (273 (ILOAD 11))
        (275 (IFLT 293))
        (278 (ILOAD 9))
        (280 (IFEQ 302))
        (283 (ILOAD 10))
        (285 (IFGE 293))
        (288 (ILOAD 11))
        (290 (IFGE 302))
        (293 (ILOAD 8))
        (295 (ALOAD_0))
        (296 (GETFIELD (JVM::FIELDCP "dstSavings"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (299 (IADD))
        (300 (ISTORE 8))
        (302 (ILOAD 8))
        (304 (IRETURN))
        (ENDOFCODE 305))
       (EXCEPTIONS)
       (STACKMAP
            (9 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                              INT INT
                              INT INT INT INT INT TOPX TOPX TOPX TOPX)
                      (STACK)
                      NIL))
            (71 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT
                               INT INT INT INT INT TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (79 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT
                               INT INT INT INT INT TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (105 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (108 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (123 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (124 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK INT)
                        NIL))
            (174 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK INT)
                        NIL))
            (175 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK INT INT)
                        NIL))
            (190 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (222 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (263 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (278 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (293 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (302 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL)))))
     (METHOD
      "compareToRule"
      (PARAMETERS INT INT INT INT INT INT INT INT INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 11)
       (CODE_LENGTH . 201)
       (PARSEDCODE
            (0 (ILOAD_0))
            (1 (ILOAD 6))
            (3 (IF_ICMPGE 8))
            (6 (ICONST_M1))
            (7 (IRETURN))
            (8 (ILOAD_0))
            (9 (ILOAD 6))
            (11 (IF_ICMPLE 16))
            (14 (ICONST_1))
            (15 (IRETURN))
            (16 (ICONST_0))
            (17 (ISTORE 10))
            (19 (ILOAD 5))
            (21 (JVM::TABLESWITCH (JVM::TABLESWITCHINFO 165 (1 . 4)
                                                        (52 59 122 145))))
            (52 (ILOAD 8))
            (54 (ISTORE 10))
            (56 (GOTO 165))
            (59 (ILOAD 8))
            (61 (IFLE 93))
            (64 (ICONST_1))
            (65 (ILOAD 8))
            (67 (ICONST_1))
            (68 (ISUB))
            (69 (BIPUSH 7))
            (71 (IMUL))
            (72 (IADD))
            (73 (BIPUSH 7))
            (75 (ILOAD 7))
            (77 (IADD))
            (78 (ILOAD_3))
            (79 (ILOAD_2))
            (80 (ISUB))
            (81 (ICONST_1))
            (82 (IADD))
            (83 (ISUB))
            (84 (BIPUSH 7))
            (86 (IREM))
            (87 (IADD))
            (88 (ISTORE 10))
            (90 (GOTO 165))
            (93 (ILOAD_1))
            (94 (ILOAD 8))
            (96 (ICONST_1))
            (97 (IADD))
            (98 (BIPUSH 7))
            (100 (IMUL))
            (101 (IADD))
            (102 (BIPUSH 7))
            (104 (ILOAD_3))
            (105 (ILOAD_1))
            (106 (IADD))
            (107 (ILOAD_2))
            (108 (ISUB))
            (109 (IADD))
            (110 (ILOAD 7))
            (112 (ISUB))
            (113 (BIPUSH 7))
            (115 (IREM))
            (116 (ISUB))
            (117 (ISTORE 10))
            (119 (GOTO 165))
            (122 (ILOAD 8))
            (124 (BIPUSH 49))
            (126 (ILOAD 7))
            (128 (IADD))
            (129 (ILOAD 8))
            (131 (ISUB))
            (132 (ILOAD_3))
            (133 (ISUB))
            (134 (ILOAD_2))
            (135 (IADD))
            (136 (BIPUSH 7))
            (138 (IREM))
            (139 (IADD))
            (140 (ISTORE 10))
            (142 (GOTO 165))
            (145 (ILOAD 8))
            (147 (BIPUSH 49))
            (149 (ILOAD 7))
            (151 (ISUB))
            (152 (ILOAD 8))
            (154 (IADD))
            (155 (ILOAD_3))
            (156 (IADD))
            (157 (ILOAD_2))
            (158 (ISUB))
            (159 (BIPUSH 7))
            (161 (IREM))
            (162 (ISUB))
            (163 (ISTORE 10))
            (165 (ILOAD_2))
            (166 (ILOAD 10))
            (168 (IF_ICMPGE 173))
            (171 (ICONST_M1))
            (172 (IRETURN))
            (173 (ILOAD_2))
            (174 (ILOAD 10))
            (176 (IF_ICMPLE 181))
            (179 (ICONST_1))
            (180 (IRETURN))
            (181 (ILOAD 4))
            (183 (ILOAD 9))
            (185 (IF_ICMPGE 190))
            (188 (ICONST_M1))
            (189 (IRETURN))
            (190 (ILOAD 4))
            (192 (ILOAD 9))
            (194 (IF_ICMPLE 199))
            (197 (ICONST_1))
            (198 (IRETURN))
            (199 (ICONST_0))
            (200 (IRETURN))
            (ENDOFCODE 201))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS INT INT
                                   INT INT INT INT INT INT INT INT TOPX)
                           (STACK)
                           NIL))
                 (16 (FRAME (LOCALS INT INT
                                    INT INT INT INT INT INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (52 (FRAME (LOCALS INT
                                    INT INT INT INT INT INT INT INT INT INT)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS INT
                                    INT INT INT INT INT INT INT INT INT INT)
                            (STACK)
                            NIL))
                 (93 (FRAME (LOCALS INT
                                    INT INT INT INT INT INT INT INT INT INT)
                            (STACK)
                            NIL))
                 (122 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (145 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (165 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (173 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (181 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (190 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (199 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "getRawOffset" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "rawOffset"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        INT)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "useDaylightTime" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "useDaylight"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        BOOLEAN)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getID" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "ID"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        (CLASS "java.lang.String"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getInstance"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 72)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 33))
         (4 (GETSTATIC (JVM::FIELDCP "HOME_ID"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (CLASS "java.lang.String"))))
         (7 (IFNONNULL 29))
         (10 (LDC 9))
         (12 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.String"))))
         (15 (PUTSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (18 (GETSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (21 (IFNONNULL 29))
         (24 (LDC 10))
         (26 (PUTSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (29 (GETSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (32 (ASTORE_1))
         (33 (ICONST_0))
         (34 (ISTORE_2))
         (35 (GOTO 62))
         (38 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (41 (ILOAD_2))
         (42 (AALOAD))
         (43 (INVOKEVIRTUAL (METHODCP "getID" "java.util.TimeZone"
                                      NIL (CLASS "java.lang.String"))))
         (46 (ALOAD_1))
         (47 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (50 (IFEQ 59))
         (53 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (56 (ILOAD_2))
         (57 (AALOAD))
         (58 (ARETURN))
         (59 (IINC 2 1))
         (62 (ILOAD_2))
         (63 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (66 (ARRAYLENGTH))
         (67 (IF_ICMPLT 38))
         (70 (ACONST_NULL))
         (71 (ARETURN))
         (ENDOFCODE 72))
       (EXCEPTIONS)
       (STACKMAP
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (33 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (38 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (59 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (62 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "getIDs" (PARAMETERS)
      (RETURNTYPE ARRAY (CLASS "java.lang.String"))
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 49)
       (PARSEDCODE
         (0 (GETSTATIC (JVM::FIELDCP "ids"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY (CLASS "java.lang.String")))))
         (3 (IFNONNULL 45))
         (6 (GETSTATIC (JVM::FIELDCP "zones"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY (CLASS "java.util.TimeZone")))))
         (9 (ARRAYLENGTH))
         (10 (ANEWARRAY (CLASS "java.lang.String")))
         (13 (PUTSTATIC (JVM::FIELDCP "ids"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
         (16 (ICONST_0))
         (17 (ISTORE_1))
         (18 (GOTO 37))
         (21 (GETSTATIC (JVM::FIELDCP "ids"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
         (24 (ILOAD_1))
         (25 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (28 (ILOAD_1))
         (29 (AALOAD))
         (30 (INVOKEVIRTUAL (METHODCP "getID" "java.util.TimeZone"
                                      NIL (CLASS "java.lang.String"))))
         (33 (AASTORE))
         (34 (IINC 1 1))
         (37 (ILOAD_1))
         (38 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (41 (ARRAYLENGTH))
         (42 (IF_ICMPLT 21))
         (45 (GETSTATIC (JVM::FIELDCP "ids"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
         (48 (ARETURN))
         (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP
            (21 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT)
                       (STACK)
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT)
                       (STACK)
                       NIL))
            (45 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "decodeRules" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "decodeStartRule"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        NIL VOID)))
            (4 (ALOAD_0))
            (5 (INVOKESPECIAL (METHODCP "decodeEndRule"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        NIL VOID)))
            (8 (RETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "decodeStartRule" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 330)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "startDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (5 (IFEQ 19))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "endDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (12 (IFEQ 19))
        (15 (ICONST_1))
        (16 (GOTO 20))
        (19 (ICONST_0))
        (20 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    BOOLEAN)))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "startDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (27 (IFEQ 329))
        (30 (ALOAD_0))
        (31 (GETFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (34 (IFLT 46))
        (37 (ALOAD_0))
        (38 (GETFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (41 (BIPUSH 11))
        (43 (IF_ICMPLE 76))
        (46 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (49 (DUP))
        (50 (NEW (CLASS "java.lang.StringBuffer")))
        (53 (DUP))
        (54 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (57 (LDC 11))
        (59 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (62 (ALOAD_0))
        (63 (GETFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (66 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (69 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (72 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (75 (ATHROW))
        (76 (ALOAD_0))
        (77 (GETFIELD (JVM::FIELDCP "startTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (80 (IFLT 92))
        (83 (ALOAD_0))
        (84 (GETFIELD (JVM::FIELDCP "startTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (87 (LDC 2))
        (89 (IF_ICMPLE 122))
        (92 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (95 (DUP))
        (96 (NEW (CLASS "java.lang.StringBuffer")))
        (99 (DUP))
        (100 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (103 (LDC 12))
        (105 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "startTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (112 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (115 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (118 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (121 (ATHROW))
        (122 (ALOAD_0))
        (123 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (126 (IFNE 137))
        (129 (ALOAD_0))
        (130 (ICONST_1))
        (131 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (134 (GOTO 229))
        (137 (ALOAD_0))
        (138 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (141 (IFLE 152))
        (144 (ALOAD_0))
        (145 (ICONST_2))
        (146 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (149 (GOTO 190))
        (152 (ALOAD_0))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (157 (INEG))
        (158 (PUTFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (161 (ALOAD_0))
        (162 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (165 (IFLE 176))
        (168 (ALOAD_0))
        (169 (ICONST_3))
        (170 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (173 (GOTO 190))
        (176 (ALOAD_0))
        (177 (ALOAD_0))
        (178 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (181 (INEG))
        (182 (PUTFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (185 (ALOAD_0))
        (186 (ICONST_4))
        (187 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (190 (ALOAD_0))
        (191 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (194 (BIPUSH 7))
        (196 (IF_ICMPLE 229))
        (199 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (202 (DUP))
        (203 (NEW (CLASS "java.lang.StringBuffer")))
        (206 (DUP))
        (207 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (210 (LDC 13))
        (212 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (215 (ALOAD_0))
        (216 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (219 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (222 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (225 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (228 (ATHROW))
        (229 (ALOAD_0))
        (230 (GETFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (233 (ICONST_2))
        (234 (IF_ICMPNE 284))
        (237 (ALOAD_0))
        (238 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (241 (BIPUSH -5))
        (243 (IF_ICMPLT 254))
        (246 (ALOAD_0))
        (247 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (250 (ICONST_5))
        (251 (IF_ICMPLE 329))
        (254 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (257 (DUP))
        (258 (NEW (CLASS "java.lang.StringBuffer")))
        (261 (DUP))
        (262 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (265 (LDC 14))
        (267 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (274 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (277 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (280 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (283 (ATHROW))
        (284 (ALOAD_0))
        (285 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (288 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY BYTE))))
        (291 (ALOAD_0))
        (292 (GETFIELD (JVM::FIELDCP "startMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (295 (BALOAD))
        (296 (IF_ICMPLE 329))
        (299 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (302 (DUP))
        (303 (NEW (CLASS "java.lang.StringBuffer")))
        (306 (DUP))
        (307 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (310 (LDC 15))
        (312 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (315 (ALOAD_0))
        (316 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (319 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (322 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (325 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (328 (ATHROW))
        (329 (RETURN))
        (ENDOFCODE 330))
       (EXCEPTIONS)
       (STACKMAP
           (19 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (20 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK INT
                             (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (46 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (76 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (92 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (122 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (137 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (152 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (176 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (190 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (229 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (254 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (284 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (329 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL)))))
     (METHOD
      "decodeEndRule" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 330)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "startDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (5 (IFEQ 19))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "endDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (12 (IFEQ 19))
        (15 (ICONST_1))
        (16 (GOTO 20))
        (19 (ICONST_0))
        (20 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    BOOLEAN)))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "endDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (27 (IFEQ 329))
        (30 (ALOAD_0))
        (31 (GETFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (34 (IFLT 46))
        (37 (ALOAD_0))
        (38 (GETFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (41 (BIPUSH 11))
        (43 (IF_ICMPLE 76))
        (46 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (49 (DUP))
        (50 (NEW (CLASS "java.lang.StringBuffer")))
        (53 (DUP))
        (54 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (57 (LDC 16))
        (59 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (62 (ALOAD_0))
        (63 (GETFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (66 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (69 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (72 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (75 (ATHROW))
        (76 (ALOAD_0))
        (77 (GETFIELD (JVM::FIELDCP "endTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (80 (IFLT 92))
        (83 (ALOAD_0))
        (84 (GETFIELD (JVM::FIELDCP "endTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (87 (LDC 2))
        (89 (IF_ICMPLE 122))
        (92 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (95 (DUP))
        (96 (NEW (CLASS "java.lang.StringBuffer")))
        (99 (DUP))
        (100 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (103 (LDC 17))
        (105 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "endTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (112 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (115 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (118 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (121 (ATHROW))
        (122 (ALOAD_0))
        (123 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (126 (IFNE 137))
        (129 (ALOAD_0))
        (130 (ICONST_1))
        (131 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (134 (GOTO 229))
        (137 (ALOAD_0))
        (138 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (141 (IFLE 152))
        (144 (ALOAD_0))
        (145 (ICONST_2))
        (146 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (149 (GOTO 190))
        (152 (ALOAD_0))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (157 (INEG))
        (158 (PUTFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (161 (ALOAD_0))
        (162 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (165 (IFLE 176))
        (168 (ALOAD_0))
        (169 (ICONST_3))
        (170 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (173 (GOTO 190))
        (176 (ALOAD_0))
        (177 (ALOAD_0))
        (178 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (181 (INEG))
        (182 (PUTFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (185 (ALOAD_0))
        (186 (ICONST_4))
        (187 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (190 (ALOAD_0))
        (191 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (194 (BIPUSH 7))
        (196 (IF_ICMPLE 229))
        (199 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (202 (DUP))
        (203 (NEW (CLASS "java.lang.StringBuffer")))
        (206 (DUP))
        (207 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (210 (LDC 18))
        (212 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (215 (ALOAD_0))
        (216 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (219 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (222 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (225 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (228 (ATHROW))
        (229 (ALOAD_0))
        (230 (GETFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (233 (ICONST_2))
        (234 (IF_ICMPNE 284))
        (237 (ALOAD_0))
        (238 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (241 (BIPUSH -5))
        (243 (IF_ICMPLT 254))
        (246 (ALOAD_0))
        (247 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (250 (ICONST_5))
        (251 (IF_ICMPLE 329))
        (254 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (257 (DUP))
        (258 (NEW (CLASS "java.lang.StringBuffer")))
        (261 (DUP))
        (262 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (265 (LDC 19))
        (267 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (274 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (277 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (280 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (283 (ATHROW))
        (284 (ALOAD_0))
        (285 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (288 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY BYTE))))
        (291 (ALOAD_0))
        (292 (GETFIELD (JVM::FIELDCP "endMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (295 (BALOAD))
        (296 (IF_ICMPLE 329))
        (299 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (302 (DUP))
        (303 (NEW (CLASS "java.lang.StringBuffer")))
        (306 (DUP))
        (307 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (310 (LDC 20))
        (312 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (315 (ALOAD_0))
        (316 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (319 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (322 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (325 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (328 (ATHROW))
        (329 (RETURN))
        (ENDOFCODE 330))
       (EXCEPTIONS)
       (STACKMAP
           (19 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (20 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK INT
                             (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (46 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (76 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (92 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (122 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (137 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (152 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (176 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (190 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (229 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (254 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (284 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (329 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 115)
       (PARSEDCODE
        (0 (ACONST_NULL))
        (1 (PUTSTATIC (JVM::FIELDCP "HOME_ID"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (CLASS "java.lang.String"))))
        (4 (ACONST_NULL))
        (5 (PUTSTATIC (JVM::FIELDCP "ids"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY (CLASS "java.lang.String")))))
        (8 (BIPUSH 12))
        (10 (NEWARRAY BYTE))
        (12 (DUP))
        (13 (ICONST_0))
        (14 (BIPUSH 31))
        (16 (BASTORE))
        (17 (DUP))
        (18 (ICONST_1))
        (19 (BIPUSH 29))
        (21 (BASTORE))
        (22 (DUP))
        (23 (ICONST_2))
        (24 (BIPUSH 31))
        (26 (BASTORE))
        (27 (DUP))
        (28 (ICONST_3))
        (29 (BIPUSH 30))
        (31 (BASTORE))
        (32 (DUP))
        (33 (ICONST_4))
        (34 (BIPUSH 31))
        (36 (BASTORE))
        (37 (DUP))
        (38 (ICONST_5))
        (39 (BIPUSH 30))
        (41 (BASTORE))
        (42 (DUP))
        (43 (BIPUSH 6))
        (45 (BIPUSH 31))
        (47 (BASTORE))
        (48 (DUP))
        (49 (BIPUSH 7))
        (51 (BIPUSH 31))
        (53 (BASTORE))
        (54 (DUP))
        (55 (BIPUSH 8))
        (57 (BIPUSH 30))
        (59 (BASTORE))
        (60 (DUP))
        (61 (BIPUSH 9))
        (63 (BIPUSH 31))
        (65 (BASTORE))
        (66 (DUP))
        (67 (BIPUSH 10))
        (69 (BIPUSH 30))
        (71 (BASTORE))
        (72 (DUP))
        (73 (BIPUSH 11))
        (75 (BIPUSH 31))
        (77 (BASTORE))
        (78 (PUTSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (81 (ICONST_2))
        (82 (ANEWARRAY (CLASS "java.util.TimeZone")))
        (85 (DUP))
        (86 (ICONST_0))
        (87 (NEW (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")))
        (90 (DUP))
        (91 (ICONST_0))
        (92 (LDC 21))
        (94 (INVOKESPECIAL (METHODCP "<init>"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (INT (CLASS "java.lang.String"))
                                     VOID)))
        (97 (AASTORE))
        (98 (DUP))
        (99 (ICONST_1))
        (100 (NEW (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")))
        (103 (DUP))
        (104 (ICONST_0))
        (105 (LDC 10))
        (107 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (INT (CLASS "java.lang.String"))
                                      VOID)))
        (110 (AASTORE))
        (111 (PUTSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
        (114 (RETURN))
        (ENDOFCODE 115))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Object" ""
    (CONSTANT_POOL (STRING "@")
                   (STRING "timeout value is negative")
                   (INT 999999)
                   (STRING "nanosecond timeout value out of range")
                   (INT 500000))
    (FIELDS)
    (METHODS
     (METHOD "<init>" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "getClass" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.Class")
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "hashCode" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "equals"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ALOAD_1))
                               (2 (JVM::IF_ACMPNE 9))
                               (5 (ICONST_1))
                               (6 (GOTO 10))
                               (9 (ICONST_0))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object")
                                               (CLASS "java.lang.Object"))
                                       (STACK)
                                       NIL))
                             (10 (FRAME (LOCALS (CLASS "java.lang.Object")
                                                (CLASS "java.lang.Object"))
                                        (STACK INT)
                                        NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                    NIL (CLASS "java.lang.Class"))))
        (11 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (17 (LDC 0))
        (19 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (22 (ALOAD_0))
        (23 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (26 (INVOKESTATIC (METHODCP "toHexString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (35 (ARETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "notify" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "notifyAll" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "wait" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "wait" (PARAMETERS LONG INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 62)
       (PARSEDCODE
            (0 (JVM::LLOAD_1))
            (1 (LCONST_0))
            (2 (LCMP))
            (3 (IFGE 16))
            (6 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (9 (DUP))
            (10 (LDC 1))
            (12 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (15 (ATHROW))
            (16 (ILOAD_3))
            (17 (IFLT 26))
            (20 (ILOAD_3))
            (21 (LDC 2))
            (23 (IF_ICMPLE 36))
            (26 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (29 (DUP))
            (30 (LDC 3))
            (32 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (35 (ATHROW))
            (36 (ILOAD_3))
            (37 (LDC 4))
            (39 (IF_ICMPGE 52))
            (42 (ILOAD_3))
            (43 (IFEQ 56))
            (46 (JVM::LLOAD_1))
            (47 (LCONST_0))
            (48 (LCMP))
            (49 (IFNE 56))
            (52 (JVM::LLOAD_1))
            (53 (LCONST_1))
            (54 (JVM::LADD))
            (55 (JVM::LSTORE_1))
            (56 (ALOAD_0))
            (57 (JVM::LLOAD_1))
            (58 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                         VOID)))
            (61 (RETURN))
            (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (36 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (52 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "wait" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 6)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (LCONST_0))
                 (2 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                             VOID)))
                 (5 (RETURN))
                 (ENDOFCODE 6))
            (EXCEPTIONS)
            (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Class" "java.lang.Object"
    (CONSTANT_POOL (STRING "interface ")
                   (STRING "class ")
                   (STRING "resource:"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 35)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (ALOAD_0))
             (8 (INVOKEVIRTUAL (METHODCP "isInterface"
                                         "java.lang.Class" NIL BOOLEAN)))
             (11 (IFEQ 19))
             (14 (LDC 0))
             (16 (GOTO 21))
             (19 (LDC 1))
             (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (24 (ALOAD_0))
             (25 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                          NIL (CLASS "java.lang.String"))))
             (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (34 (ARETURN))
             (ENDOFCODE 35))
        (EXCEPTIONS)
        (STACKMAP (19 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.StringBuffer"))
                             NIL))
                  (21 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer"))
                             NIL)))))
     (METHOD "forName"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.lang.Class")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "newInstance" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.Object")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isInstance"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isAssignableFrom"
             (PARAMETERS (CLASS "java.lang.Class"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isInterface" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isArray" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "getName" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "getResourceAsStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 101)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (4 (IFLE 26))
        (7 (ALOAD_1))
        (8 (ICONST_0))
        (9 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                    CHAR)))
        (12 (BIPUSH 47))
        (14 (IF_ICMPNE 26))
        (17 (ALOAD_1))
        (18 (ICONST_1))
        (19 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (22 (ASTORE_1))
        (23 (GOTO 75))
        (26 (ALOAD_0))
        (27 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (30 (ASTORE_2))
        (31 (ALOAD_2))
        (32 (BIPUSH 46))
        (34 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.lang.String" (INT)
                                     INT)))
        (37 (ISTORE_3))
        (38 (ILOAD_3))
        (39 (IFLT 75))
        (42 (NEW (CLASS "java.lang.StringBuffer")))
        (45 (DUP))
        (46 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (49 (ALOAD_2))
        (50 (ICONST_0))
        (51 (ILOAD_3))
        (52 (ICONST_1))
        (53 (IADD))
        (54 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (57 (BIPUSH 46))
        (59 (BIPUSH 47))
        (61 (INVOKEVIRTUAL (METHODCP "replace" "java.lang.String" (CHAR CHAR)
                                     (CLASS "java.lang.String"))))
        (64 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (67 (ALOAD_1))
        (68 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (71 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (74 (ASTORE_1))
        (75 (NEW (CLASS "java.lang.StringBuffer")))
        (78 (DUP))
        (79 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (82 (LDC 2))
        (84 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (87 (ALOAD_1))
        (88 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (91 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (94 (INVOKESTATIC (METHODCP "openInputStream"
                                    "javax.microedition.io.Connector"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.io.InputStream"))))
        (97 (ARETURN))
        (98 (ASTORE_2))
        (99 (ACONST_NULL))
        (100 (ARETURN))
        (ENDOFCODE 101))
       (EXCEPTIONS (JVM::HANDLER 0 97 98 (CLASS "java.io.IOException")))
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (75 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL)))))
     (METHOD "runCustomCode" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 0)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.String" "java.lang.Object"
    (CONSTANT_POOL (STRING "null")
                   (STRING "true")
                   (STRING "false"))
    (FIELDS (FIELD "value" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "offset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (NEWARRAY CHAR))
          (8 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (11 (RETURN))
          (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 37)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (9 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (12 (ALOAD_0))
          (13 (ALOAD_0))
          (14 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (17 (NEWARRAY CHAR))
          (19 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (22 (ALOAD_1))
          (23 (ICONST_0))
          (24 (ALOAD_0))
          (25 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (28 (ALOAD_0))
          (29 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (32 (ICONST_0))
          (33 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                       (INT INT (ARRAY CHAR) INT)
                                       VOID)))
          (36 (RETURN))
          (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (ARRAYLENGTH))
          (7 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (10 (ALOAD_0))
          (11 (ALOAD_0))
          (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (15 (NEWARRAY CHAR))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_1))
          (21 (ICONST_0))
          (22 (ALOAD_0))
          (23 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (26 (ICONST_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (31 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                      ((CLASS "java.lang.Object")
                                       INT (CLASS "java.lang.Object")
                                       INT INT)
                                      VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 73)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
        (4 (ILOAD_2))
        (5 (IFGE 17))
        (8 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (ILOAD_2))
        (13
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (16 (ATHROW))
        (17 (ILOAD_3))
        (18 (IFGE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_3))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_2))
        (31 (ALOAD_1))
        (32 (ARRAYLENGTH))
        (33 (ILOAD_3))
        (34 (ISUB))
        (35 (IF_ICMPLE 49))
        (38 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (41 (DUP))
        (42 (ILOAD_2))
        (43 (ILOAD_3))
        (44 (IADD))
        (45
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (48 (ATHROW))
        (49 (ALOAD_0))
        (50 (ILOAD_3))
        (51 (NEWARRAY CHAR))
        (53 (PUTFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (56 (ALOAD_0))
        (57 (ILOAD_3))
        (58 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (61 (ALOAD_1))
        (62 (ILOAD_2))
        (63 (ALOAD_0))
        (64 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (67 (ICONST_0))
        (68 (ILOAD_3))
        (69 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (72 (RETURN))
        (ENDOFCODE 73))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 5)
         (JVM::MAX_LOCALS . 5)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ALOAD_1))
              (2 (ILOAD_2))
              (3 (ILOAD_3))
              (4 (ALOAD 4))
              (6 (INVOKESTATIC (METHODCP "byteToCharArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY CHAR))))
              (9 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.lang.String" ((ARRAY CHAR))
                                          VOID)))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE)
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (ICONST_0))
             (3 (ALOAD_1))
             (4 (ARRAYLENGTH))
             (5 (ALOAD_2))
             (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         VOID)))
             (9 (RETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 4)
           (CODE_LENGTH . 11)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ILOAD_2))
                (3 (ILOAD_3))
                (4 (INVOKESTATIC (METHODCP "byteToCharArray"
                                           "com.sun.cldc.i18n.Helper"
                                           ((ARRAY BYTE) INT INT)
                                           (ARRAY CHAR))))
                (7 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (10 (RETURN))
                (ENDOFCODE 11))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 4)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE (0 (ALOAD_0))
                      (1 (ALOAD_1))
                      (2 (ICONST_0))
                      (3 (ALOAD_1))
                      (4 (ARRAYLENGTH))
                      (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY BYTE) INT INT)
                                                  VOID)))
                      (8 (RETURN))
                      (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.StringBuffer"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 44)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_1))
          (5 (DUP))
          (6 (ASTORE_2))
          (7 (MONITORENTER))
          (8 (ALOAD_1))
          (9 (INVOKEVIRTUAL (METHODCP "setShared"
                                      "java.lang.StringBuffer" NIL VOID)))
          (12 (ALOAD_0))
          (13 (ALOAD_1))
          (14 (INVOKEVIRTUAL (METHODCP "getValue" "java.lang.StringBuffer"
                                       NIL (ARRAY CHAR))))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_0))
          (21 (ICONST_0))
          (22 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (25 (ALOAD_0))
          (26 (ALOAD_1))
          (27 (INVOKEVIRTUAL (METHODCP "length"
                                       "java.lang.StringBuffer" NIL INT)))
          (30 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (33 (ALOAD_2))
          (34 (MONITOREXIT))
          (35 (GOTO 43))
          (38 (ASTORE_3))
          (39 (ALOAD_2))
          (40 (MONITOREXIT))
          (41 (ALOAD_3))
          (42 (ATHROW))
          (43 (RETURN))
          (ENDOFCODE 44))
       (EXCEPTIONS (JVM::HANDLER 8 35 38 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 38 41 38 (CLASS "java.lang.Throwable")))
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS INT INT (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_3))
          (6 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (9 (ALOAD_0))
          (10 (ILOAD_1))
          (11 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (14 (ALOAD_0))
          (15 (ILOAD_2))
          (16 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (19 (RETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "length" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (4 (IRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "charAt" (PARAMETERS INT)
             (RETURNTYPE . CHAR)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "getChars"
      (PARAMETERS INT INT (ARRAY CHAR) INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 66)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ALOAD_0))
        (47 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (50 (ALOAD_0))
        (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ALOAD_3))
        (57 (ILOAD 4))
        (59 (ILOAD_2))
        (60 (ILOAD_1))
        (61 (ISUB))
        (62 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (65 (RETURN))
        (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getBytes"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 17)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value"
                                        "java.lang.String" (ARRAY CHAR))))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (8 (ALOAD_0))
             (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (12 (ALOAD_1))
             (13 (INVOKESTATIC (METHODCP "charToByteArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY CHAR)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY BYTE))))
             (16 (ARETURN))
             (ENDOFCODE 17))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getBytes" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 16)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (4 (ALOAD_0))
                (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (8 (ALOAD_0))
                (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (12 (INVOKESTATIC (METHODCP "charToByteArray"
                                            "com.sun.cldc.i18n.Helper"
                                            ((ARRAY CHAR) INT INT)
                                            (ARRAY BYTE))))
                (15 (ARETURN))
                (ENDOFCODE 16))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD "equals"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "compareTo"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 11)
          (CODE_LENGTH . 91)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (ISTORE_2))
               (5 (ALOAD_1))
               (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (9 (ISTORE_3))
               (10 (ILOAD_2))
               (11 (ILOAD_3))
               (12 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                           INT)))
               (15 (ISTORE 4))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (21 (ASTORE 5))
               (23 (ALOAD_1))
               (24 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (27 (ASTORE 6))
               (29 (ALOAD_0))
               (30 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (33 (ISTORE 7))
               (35 (ALOAD_1))
               (36 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (39 (ISTORE 8))
               (41 (GOTO 77))
               (44 (ALOAD 5))
               (46 (ILOAD 7))
               (48 (IINC 7 1))
               (51 (CALOAD))
               (52 (ISTORE 9))
               (54 (ALOAD 6))
               (56 (ILOAD 8))
               (58 (IINC 8 1))
               (61 (CALOAD))
               (62 (ISTORE 10))
               (64 (ILOAD 9))
               (66 (ILOAD 10))
               (68 (IF_ICMPEQ 77))
               (71 (ILOAD 9))
               (73 (ILOAD 10))
               (75 (ISUB))
               (76 (IRETURN))
               (77 (ILOAD 4))
               (79 (DUP))
               (80 (ICONST_1))
               (81 (ISUB))
               (82 (ISTORE 4))
               (84 (IFNE 44))
               (87 (ILOAD_2))
               (88 (ILOAD_3))
               (89 (ISUB))
               (90 (IRETURN))
               (ENDOFCODE 91))
          (EXCEPTIONS)
          (STACKMAP (44 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL))
                    (77 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL)))))
     (METHOD
      "regionMatches"
      (PARAMETERS BOOLEAN INT (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 6)
          (JVM::MAX_LOCALS . 15)
          (CODE_LENGTH . 170)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE 6))
               (6 (ALOAD_0))
               (7 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (10 (ILOAD_2))
               (11 (IADD))
               (12 (ISTORE 7))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (22 (IADD))
               (23 (ISTORE 8))
               (25 (ALOAD_3))
               (26 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (29 (ASTORE 9))
               (31 (ALOAD_3))
               (32 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (35 (ILOAD 4))
               (37 (IADD))
               (38 (ISTORE 10))
               (40 (ILOAD 4))
               (42 (IFLT 80))
               (45 (ILOAD_2))
               (46 (IFLT 80))
               (49 (ILOAD_2))
               (50 (JVM::I2L))
               (51 (ALOAD_0))
               (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (55 (JVM::I2L))
               (56 (ILOAD 5))
               (58 (JVM::I2L))
               (59 (JVM::LSUB))
               (60 (LCMP))
               (61 (IFGT 80))
               (64 (ILOAD 4))
               (66 (JVM::I2L))
               (67 (ALOAD_3))
               (68 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (71 (JVM::I2L))
               (72 (ILOAD 5))
               (74 (JVM::I2L))
               (75 (JVM::LSUB))
               (76 (LCMP))
               (77 (IFLE 158))
               (80 (ICONST_0))
               (81 (IRETURN))
               (82 (ALOAD 6))
               (84 (ILOAD 7))
               (86 (IINC 7 1))
               (89 (CALOAD))
               (90 (ISTORE 11))
               (92 (ALOAD 9))
               (94 (ILOAD 10))
               (96 (IINC 10 1))
               (99 (CALOAD))
               (100 (ISTORE 12))
               (102 (ILOAD 11))
               (104 (ILOAD 12))
               (106 (IF_ICMPNE 112))
               (109 (GOTO 158))
               (112 (ILOAD_1))
               (113 (IFEQ 156))
               (116 (ILOAD 11))
               (118 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (121 (ISTORE 13))
               (123 (ILOAD 12))
               (125 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (128 (ISTORE 14))
               (130 (ILOAD 13))
               (132 (ILOAD 14))
               (134 (IF_ICMPNE 140))
               (137 (GOTO 158))
               (140 (ILOAD 13))
               (142 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (145 (ILOAD 14))
               (147 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (150 (IF_ICMPNE 156))
               (153 (GOTO 158))
               (156 (ICONST_0))
               (157 (IRETURN))
               (158 (ILOAD 5))
               (160 (DUP))
               (161 (ICONST_1))
               (162 (ISUB))
               (163 (ISTORE 5))
               (165 (IFGT 82))
               (168 (ICONST_1))
               (169 (IRETURN))
               (ENDOFCODE 170))
          (EXCEPTIONS)
          (STACKMAP (80 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (112 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (140 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT INT INT)
                                (STACK)
                                NIL))
                    (156 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (158 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT TOPX TOPX TOPX TOPX)
                                (STACK)
                                NIL)))))
     (METHOD
      "startsWith"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 9)
          (CODE_LENGTH . 89)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (9 (ILOAD_2))
               (10 (IADD))
               (11 (ISTORE 4))
               (13 (ALOAD_0))
               (14 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (21 (IADD))
               (22 (ISTORE 5))
               (24 (ALOAD_1))
               (25 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (28 (ASTORE 6))
               (30 (ALOAD_1))
               (31 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (34 (ISTORE 7))
               (36 (ALOAD_1))
               (37 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (40 (ISTORE 8))
               (42 (ILOAD_2))
               (43 (IFLT 57))
               (46 (ILOAD_2))
               (47 (ALOAD_0))
               (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (51 (ILOAD 8))
               (53 (ISUB))
               (54 (IF_ICMPLE 79))
               (57 (ICONST_0))
               (58 (IRETURN))
               (59 (ALOAD_3))
               (60 (ILOAD 4))
               (62 (IINC 4 1))
               (65 (CALOAD))
               (66 (ALOAD 6))
               (68 (ILOAD 7))
               (70 (IINC 7 1))
               (73 (CALOAD))
               (74 (IF_ICMPEQ 79))
               (77 (ICONST_0))
               (78 (IRETURN))
               (79 (IINC 8 -1))
               (82 (ILOAD 8))
               (84 (IFGE 59))
               (87 (ICONST_1))
               (88 (IRETURN))
               (ENDOFCODE 89))
          (EXCEPTIONS)
          (STACKMAP (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (79 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "startsWith"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "endsWith"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 15)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (6 (ALOAD_1))
                (7 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (10 (ISUB))
                (11 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                (14 (IRETURN))
                (ENDOFCODE 15))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 6)
           (CODE_LENGTH . 48)
           (PARSEDCODE
                (0 (ICONST_0))
                (1 (ISTORE_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (6 (ISTORE_2))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (11 (ASTORE_3))
                (12 (ALOAD_0))
                (13 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (16 (ISTORE 4))
                (18 (ICONST_0))
                (19 (ISTORE 5))
                (21 (GOTO 39))
                (24 (BIPUSH 31))
                (26 (ILOAD_1))
                (27 (IMUL))
                (28 (ALOAD_3))
                (29 (ILOAD_2))
                (30 (IINC 2 1))
                (33 (CALOAD))
                (34 (IADD))
                (35 (ISTORE_1))
                (36 (IINC 5 1))
                (39 (ILOAD 5))
                (41 (ILOAD 4))
                (43 (IF_ICMPLT 24))
                (46 (ILOAD_1))
                (47 (IRETURN))
                (ENDOFCODE 48))
           (EXCEPTIONS)
           (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL))
                     (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL)))))
     (METHOD "indexOf" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "indexOf" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "lastIndexOf" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 12)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ILOAD_1))
                 (2 (ALOAD_0))
                 (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (6 (ICONST_1))
                 (7 (ISUB))
                 (8 (INVOKEVIRTUAL (METHODCP "lastIndexOf"
                                             "java.lang.String" (INT INT)
                                             INT)))
                 (11 (IRETURN))
                 (ENDOFCODE 12))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "lastIndexOf" (PARAMETERS INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 6)
          (CODE_LENGTH . 67)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (4 (ISTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (9 (ASTORE 4))
               (11 (ALOAD_0))
               (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (15 (ILOAD_2))
               (16 (ALOAD_0))
               (17 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (20 (IF_ICMPLT 32))
               (23 (ALOAD_0))
               (24 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (27 (ICONST_1))
               (28 (ISUB))
               (29 (GOTO 33))
               (32 (ILOAD_2))
               (33 (IADD))
               (34 (ISTORE 5))
               (36 (GOTO 59))
               (39 (ALOAD 4))
               (41 (ILOAD 5))
               (43 (CALOAD))
               (44 (ILOAD_1))
               (45 (IF_ICMPNE 56))
               (48 (ILOAD 5))
               (50 (ALOAD_0))
               (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (54 (ISUB))
               (55 (IRETURN))
               (56 (IINC 5 -1))
               (59 (ILOAD 5))
               (61 (ILOAD_3))
               (62 (IF_ICMPGE 39))
               (65 (ICONST_M1))
               (66 (IRETURN))
               (ENDOFCODE 67))
          (EXCEPTIONS)
          (STACKMAP (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT)
                               NIL))
                    (33 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT INT)
                               NIL))
                    (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (56 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             INT)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 12)
         (CODE_LENGTH . 189)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (4 (ASTORE_3))
              (5 (ALOAD_1))
              (6 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (9 (ASTORE 4))
              (11 (ALOAD_0))
              (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (15 (ALOAD_0))
              (16 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (19 (ALOAD_1))
              (20 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (23 (ISUB))
              (24 (IADD))
              (25 (ISTORE 5))
              (27 (ILOAD_2))
              (28 (ALOAD_0))
              (29 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (32 (IF_ICMPLT 57))
              (35 (ALOAD_0))
              (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (39 (IFNE 55))
              (42 (ILOAD_2))
              (43 (IFNE 55))
              (46 (ALOAD_1))
              (47 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (50 (IFNE 55))
              (53 (ICONST_0))
              (54 (IRETURN))
              (55 (ICONST_M1))
              (56 (IRETURN))
              (57 (ILOAD_2))
              (58 (IFGE 63))
              (61 (ICONST_0))
              (62 (ISTORE_2))
              (63 (ALOAD_1))
              (64 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (67 (IFNE 72))
              (70 (ILOAD_2))
              (71 (IRETURN))
              (72 (ALOAD_1))
              (73 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (76 (ISTORE 6))
              (78 (ALOAD 4))
              (80 (ILOAD 6))
              (82 (CALOAD))
              (83 (ISTORE 7))
              (85 (ALOAD_0))
              (86 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (89 (ILOAD_2))
              (90 (IADD))
              (91 (ISTORE 8))
              (93 (GOTO 99))
              (96 (IINC 8 1))
              (99 (ILOAD 8))
              (101 (ILOAD 5))
              (103 (IF_ICMPGT 115))
              (106 (ALOAD_3))
              (107 (ILOAD 8))
              (109 (CALOAD))
              (110 (ILOAD 7))
              (112 (IF_ICMPNE 96))
              (115 (ILOAD 8))
              (117 (ILOAD 5))
              (119 (IF_ICMPLE 124))
              (122 (ICONST_M1))
              (123 (IRETURN))
              (124 (ILOAD 8))
              (126 (ICONST_1))
              (127 (IADD))
              (128 (ISTORE 9))
              (130 (ILOAD 9))
              (132 (ALOAD_1))
              (133 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (136 (IADD))
              (137 (ICONST_1))
              (138 (ISUB))
              (139 (ISTORE 10))
              (141 (ILOAD 6))
              (143 (ICONST_1))
              (144 (IADD))
              (145 (ISTORE 11))
              (147 (GOTO 174))
              (150 (ALOAD_3))
              (151 (ILOAD 9))
              (153 (IINC 9 1))
              (156 (CALOAD))
              (157 (ALOAD 4))
              (159 (ILOAD 11))
              (161 (IINC 11 1))
              (164 (CALOAD))
              (165 (IF_ICMPEQ 174))
              (168 (IINC 8 1))
              (171 (GOTO 99))
              (174 (ILOAD 9))
              (176 (ILOAD 10))
              (178 (IF_ICMPLT 150))
              (181 (ILOAD 8))
              (183 (ALOAD_0))
              (184 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (187 (ISUB))
              (188 (IRETURN))
              (ENDOFCODE 189))
         (EXCEPTIONS)
         (STACKMAP (55 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (63 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (72 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (96 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (99 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (115 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (124 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (150 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL))
                   (174 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "substring" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (ALOAD_0))
         (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
         (6 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
         (9 (ARETURN))
         (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "substring" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 83)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ILOAD_1))
        (47 (IFNE 62))
        (50 (ILOAD_2))
        (51 (ALOAD_0))
        (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (55 (IF_ICMPNE 62))
        (58 (ALOAD_0))
        (59 (GOTO 82))
        (62 (NEW (CLASS "java.lang.String")))
        (65 (DUP))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (70 (ILOAD_1))
        (71 (IADD))
        (72 (ILOAD_2))
        (73 (ILOAD_1))
        (74 (ISUB))
        (75 (ALOAD_0))
        (76 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (79 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                     (INT INT (ARRAY CHAR))
                                     VOID)))
        (82 (ARETURN))
        (ENDOFCODE 83))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "concat"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 58)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (4 (ISTORE_2))
           (5 (ILOAD_2))
           (6 (IFNE 11))
           (9 (ALOAD_0))
           (10 (ARETURN))
           (11 (ALOAD_0))
           (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (15 (ILOAD_2))
           (16 (IADD))
           (17 (NEWARRAY CHAR))
           (19 (ASTORE_3))
           (20 (ALOAD_0))
           (21 (ICONST_0))
           (22 (ALOAD_0))
           (23 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (26 (ALOAD_3))
           (27 (ICONST_0))
           (28 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (31 (ALOAD_1))
           (32 (ICONST_0))
           (33 (ILOAD_2))
           (34 (ALOAD_3))
           (35 (ALOAD_0))
           (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (39 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (42 (NEW (CLASS "java.lang.String")))
           (45 (DUP))
           (46 (ICONST_0))
           (47 (ALOAD_0))
           (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (51 (ILOAD_2))
           (52 (IADD))
           (53 (ALOAD_3))
           (54 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                        (INT INT (ARRAY CHAR))
                                        VOID)))
           (57 (ARETURN))
           (ENDOFCODE 58))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "replace" (PARAMETERS CHAR CHAR)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (JVM::MAX_LOCALS . 10)
        (CODE_LENGTH . 145)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ILOAD_2))
             (2 (IF_ICMPEQ 143))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (9 (ISTORE_3))
             (10 (ICONST_M1))
             (11 (ISTORE 4))
             (13 (ALOAD_0))
             (14 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
             (17 (ASTORE 5))
             (19 (ALOAD_0))
             (20 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (23 (ISTORE 6))
             (25 (GOTO 43))
             (28 (ALOAD 5))
             (30 (ILOAD 6))
             (32 (ILOAD 4))
             (34 (IADD))
             (35 (CALOAD))
             (36 (ILOAD_1))
             (37 (IF_ICMPNE 43))
             (40 (GOTO 52))
             (43 (IINC 4 1))
             (46 (ILOAD 4))
             (48 (ILOAD_3))
             (49 (IF_ICMPLT 28))
             (52 (ILOAD 4))
             (54 (ILOAD_3))
             (55 (IF_ICMPGE 143))
             (58 (ILOAD_3))
             (59 (NEWARRAY CHAR))
             (61 (ASTORE 7))
             (63 (ICONST_0))
             (64 (ISTORE 8))
             (66 (GOTO 85))
             (69 (ALOAD 7))
             (71 (ILOAD 8))
             (73 (ALOAD 5))
             (75 (ILOAD 6))
             (77 (ILOAD 8))
             (79 (IADD))
             (80 (CALOAD))
             (81 (CASTORE))
             (82 (IINC 8 1))
             (85 (ILOAD 8))
             (87 (ILOAD 4))
             (89 (IF_ICMPLT 69))
             (92 (GOTO 125))
             (95 (ALOAD 5))
             (97 (ILOAD 6))
             (99 (ILOAD 4))
             (101 (IADD))
             (102 (CALOAD))
             (103 (ISTORE 9))
             (105 (ALOAD 7))
             (107 (ILOAD 4))
             (109 (ILOAD 9))
             (111 (ILOAD_1))
             (112 (IF_ICMPNE 119))
             (115 (ILOAD_2))
             (116 (GOTO 121))
             (119 (ILOAD 9))
             (121 (CASTORE))
             (122 (IINC 4 1))
             (125 (ILOAD 4))
             (127 (ILOAD_3))
             (128 (IF_ICMPLT 95))
             (131 (NEW (CLASS "java.lang.String")))
             (134 (DUP))
             (135 (ICONST_0))
             (136 (ILOAD_3))
             (137 (ALOAD 7))
             (139 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           (INT INT (ARRAY CHAR))
                                           VOID)))
             (142 (ARETURN))
             (143 (ALOAD_0))
             (144 (ARETURN))
             (ENDOFCODE 145))
        (EXCEPTIONS)
        (STACKMAP (28 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (52 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (69 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (95 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (119 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT (ARRAY CHAR))
                              NIL))
                  (121 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT INT (ARRAY CHAR))
                              NIL))
                  (125 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT TOPX)
                              (STACK)
                              NIL))
                  (143 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL)))))
     (METHOD
      "toLowerCase" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toLowerCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "toUpperCase" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toUpperCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "trim" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 87)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (4 (ISTORE_1))
        (5 (ICONST_0))
        (6 (ISTORE_2))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (11 (ISTORE_3))
        (12 (ALOAD_0))
        (13 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (16 (ASTORE 4))
        (18 (GOTO 24))
        (21 (IINC 2 1))
        (24 (ILOAD_2))
        (25 (ILOAD_1))
        (26 (IF_ICMPGE 46))
        (29 (ALOAD 4))
        (31 (ILOAD_3))
        (32 (ILOAD_2))
        (33 (IADD))
        (34 (CALOAD))
        (35 (BIPUSH 32))
        (37 (IF_ICMPLE 21))
        (40 (GOTO 46))
        (43 (IINC 1 -1))
        (46 (ILOAD_2))
        (47 (ILOAD_1))
        (48 (IF_ICMPGE 64))
        (51 (ALOAD 4))
        (53 (ILOAD_3))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ICONST_1))
        (57 (ISUB))
        (58 (CALOAD))
        (59 (BIPUSH 32))
        (61 (IF_ICMPLE 43))
        (64 (ILOAD_2))
        (65 (IFGT 76))
        (68 (ILOAD_1))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (73 (IF_ICMPGE 85))
        (76 (ALOAD_0))
        (77 (ILOAD_2))
        (78 (ILOAD_1))
        (79 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (82 (GOTO 86))
        (85 (ALOAD_0))
        (86 (ARETURN))
        (ENDOFCODE 87))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (64 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (76 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (86 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD "toString" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ARETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "toCharArray" (PARAMETERS)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 5)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 20)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (4 (NEWARRAY CHAR))
                (6 (ASTORE_1))
                (7 (ALOAD_0))
                (8 (ICONST_0))
                (9 (ALOAD_0))
                (10 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (13 (ALOAD_1))
                (14 (ICONST_0))
                (15 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                             (INT INT (ARRAY CHAR) INT)
                                             VOID)))
                (18 (ALOAD_1))
                (19 (ARETURN))
                (ENDOFCODE 20))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 14)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (IFNONNULL 9))
               (4 (LDC 0))
               (6 (GOTO 13))
               (9 (ALOAD_0))
               (10 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                            NIL (CLASS "java.lang.String"))))
               (13 (ARETURN))
               (ENDOFCODE 14))
          (EXCEPTIONS)
          (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object"))
                              (STACK)
                              NIL))
                    (13 (FRAME (LOCALS (CLASS "java.lang.Object"))
                               (STACK (CLASS "java.lang.String"))
                               NIL)))))
     (METHOD
      "valueOf" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 9)
           (PARSEDCODE
                (0 (NEW (CLASS "java.lang.String")))
                (3 (DUP))
                (4 (ALOAD_0))
                (5 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (8 (ARETURN))
                (ENDOFCODE 9))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 11)
          (PARSEDCODE (0 (NEW (CLASS "java.lang.String")))
                      (3 (DUP))
                      (4 (ALOAD_0))
                      (5 (ILOAD_1))
                      (6 (ILOAD_2))
                      (7 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY CHAR) INT INT)
                                                  VOID)))
                      (10 (ARETURN))
                      (ENDOFCODE 11))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD "valueOf" (PARAMETERS BOOLEAN)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFEQ 9))
                               (4 (LDC 1))
                               (6 (GOTO 11))
                               (9 (LDC 2))
                               (11 (ARETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT) (STACK) NIL))
                             (11 (FRAME (LOCALS INT)
                                        (STACK (CLASS "java.lang.String"))
                                        NIL)))))
     (METHOD
      "valueOf" (PARAMETERS CHAR)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 5)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 19)
         (PARSEDCODE (0 (ICONST_1))
                     (1 (NEWARRAY CHAR))
                     (3 (DUP))
                     (4 (ICONST_0))
                     (5 (ILOAD_0))
                     (6 (CASTORE))
                     (7 (ASTORE_1))
                     (8 (NEW (CLASS "java.lang.String")))
                     (11 (DUP))
                     (12 (ICONST_0))
                     (13 (ICONST_1))
                     (14 (ALOAD_1))
                     (15 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  (INT INT (ARRAY CHAR))
                                                  VOID)))
                     (18 (ARETURN))
                     (ENDOFCODE 19))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "valueOf" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ILOAD_0))
          (1 (BIPUSH 10))
          (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT INT)
                                     (CLASS "java.lang.String"))))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "valueOf" (PARAMETERS LONG)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (JVM::LLOAD_0))
            (1 (BIPUSH 10))
            (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Long" (LONG INT)
                                       (CLASS "java.lang.String"))))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Exception"
    "java.lang.Throwable" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Throwable" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Throwable"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Throwable" "java.lang.Object"
    (CONSTANT_POOL (STRING ": "))
    (FIELDS (FIELD "detailMessage"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "backtrace" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                     (CLASS "java.lang.String"))))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getMessage" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                        (CLASS "java.lang.String"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 45)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                        NIL (CLASS "java.lang.Class"))))
            (4 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                        NIL (CLASS "java.lang.String"))))
            (7 (ASTORE_1))
            (8 (ALOAD_0))
            (9 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                        NIL (CLASS "java.lang.String"))))
            (12 (ASTORE_2))
            (13 (ALOAD_2))
            (14 (IFNULL 43))
            (17 (NEW (CLASS "java.lang.StringBuffer")))
            (20 (DUP))
            (21 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (24 (ALOAD_1))
            (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (28 (LDC 0))
            (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (33 (ALOAD_2))
            (34 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (37 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (40 (GOTO 44))
            (43 (ALOAD_1))
            (44 (ARETURN))
            (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (43 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "printStackTrace" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 57)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                    (CLASS "java.io.PrintStream"))))
        (3 (ASTORE_1))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                    NIL (CLASS "java.lang.String"))))
        (8 (ASTORE_2))
        (9 (ALOAD_1))
        (10 (ALOAD_0))
        (11 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                     NIL (CLASS "java.lang.Class"))))
        (14 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (17 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (20 (ALOAD_2))
        (21 (IFNULL 38))
        (24 (ALOAD_1))
        (25 (LDC 0))
        (27 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (30 (ALOAD_1))
        (31 (ALOAD_2))
        (32 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (35 (GOTO 42))
        (38 (ALOAD_1))
        (39 (INVOKEVIRTUAL (METHODCP "println"
                                     "java.io.PrintStream" NIL VOID)))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "backtrace" "java.lang.Throwable"
                                    (CLASS "java.lang.Object"))))
        (46 (IFNULL 56))
        (49 (ALOAD_0))
        (50 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                     (CLASS "java.io.PrintStream"))))
        (53 (INVOKESPECIAL (METHODCP "printStackTrace0" "java.lang.Throwable"
                                     ((CLASS "java.lang.Object"))
                                     VOID)))
        (56 (RETURN))
        (ENDOFCODE 57))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (42 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "printStackTrace0"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.StringBuffer"
    "java.lang.Object"
    (CONSTANT_POOL (INT 2147483647)
                   (STRING "srcBegin > srcEnd"))
    (FIELDS (FIELD "value" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "shared"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (BIPUSH 16))
          (3 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                      VOID)))
          (6 (RETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (NEWARRAY CHAR))
          (8 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (11 (ALOAD_0))
          (12 (ICONST_0))
          (13 (PUTFIELD (JVM::FIELDCP "shared"
                                      "java.lang.StringBuffer" BOOLEAN)))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 18)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (5 (BIPUSH 16))
          (7 (IADD))
          (8 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                      VOID)))
          (11 (ALOAD_0))
          (12 (ALOAD_1))
          (13 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.StringBuffer"))))
          (16 (POP))
          (17 (RETURN))
          (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "length" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
           (4 (IRETURN))
           (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "capacity" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (4 (ARRAYLENGTH))
          (5 (IRETURN))
          (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "copy" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 33)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (4 (ARRAYLENGTH))
         (5 (NEWARRAY CHAR))
         (7 (ASTORE_1))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (12 (ICONST_0))
         (13 (ALOAD_1))
         (14 (ICONST_0))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (19 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (22 (ALOAD_0))
         (23 (ALOAD_1))
         (24 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (27 (ALOAD_0))
         (28 (ICONST_0))
         (29 (PUTFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
         (32 (RETURN))
         (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureCapacity" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 15)
       (PARSEDCODE
          (0 (ILOAD_1))
          (1 (ALOAD_0))
          (2 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (5 (ARRAYLENGTH))
          (6 (IF_ICMPLE 14))
          (9 (ALOAD_0))
          (10 (ILOAD_1))
          (11 (INVOKESPECIAL (METHODCP "expandCapacity"
                                       "java.lang.StringBuffer" (INT)
                                       VOID)))
          (14 (RETURN))
          (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "expandCapacity" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (4 (ARRAYLENGTH))
         (5 (ICONST_1))
         (6 (IADD))
         (7 (ICONST_2))
         (8 (IMUL))
         (9 (ISTORE_2))
         (10 (ILOAD_2))
         (11 (IFGE 20))
         (14 (LDC 0))
         (16 (ISTORE_2))
         (17 (GOTO 27))
         (20 (ILOAD_1))
         (21 (ILOAD_2))
         (22 (IF_ICMPLE 27))
         (25 (ILOAD_1))
         (26 (ISTORE_2))
         (27 (ILOAD_2))
         (28 (NEWARRAY CHAR))
         (30 (ASTORE_3))
         (31 (ALOAD_0))
         (32 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (35 (ICONST_0))
         (36 (ALOAD_3))
         (37 (ICONST_0))
         (38 (ALOAD_0))
         (39 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (42 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (45 (ALOAD_0))
         (46 (ALOAD_3))
         (47 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (50 (ALOAD_0))
         (51 (ICONST_0))
         (52 (PUTFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
         (55 (RETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "setLength" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 117)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_1))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (18 (ARRAYLENGTH))
        (19 (IF_ICMPLE 27))
        (22 (ALOAD_0))
        (23 (ILOAD_1))
        (24 (INVOKESPECIAL (METHODCP "expandCapacity"
                                     "java.lang.StringBuffer" (INT)
                                     VOID)))
        (27 (ALOAD_0))
        (28 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (31 (ILOAD_1))
        (32 (IF_ICMPGE 80))
        (35 (ALOAD_0))
        (36 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (39 (IFEQ 69))
        (42 (ALOAD_0))
        (43 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (46 (GOTO 69))
        (49 (ALOAD_0))
        (50 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (53 (ALOAD_0))
        (54 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (57 (ICONST_0))
        (58 (CASTORE))
        (59 (ALOAD_0))
        (60 (DUP))
        (61 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (64 (ICONST_1))
        (65 (IADD))
        (66 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (73 (ILOAD_1))
        (74 (IF_ICMPLT 49))
        (77 (GOTO 116))
        (80 (ALOAD_0))
        (81 (ILOAD_1))
        (82 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (85 (ALOAD_0))
        (86 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (89 (IFEQ 116))
        (92 (ILOAD_1))
        (93 (IFLE 103))
        (96 (ALOAD_0))
        (97 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (100 (GOTO 116))
        (103 (ALOAD_0))
        (104 (BIPUSH 16))
        (106 (NEWARRAY CHAR))
        (108 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
        (111 (ALOAD_0))
        (112 (ICONST_0))
        (113 (PUTFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
        (116 (RETURN))
        (ENDOFCODE 117))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (69 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (80 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (103 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                     INT)
                             (STACK)
                             NIL))
                 (116 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "charAt" (PARAMETERS INT)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLT 21))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16 (ILOAD_1))
        (17
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (20 (ATHROW))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (25 (ILOAD_1))
        (26 (CALOAD))
        (27 (IRETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (21 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getChars"
      (PARAMETERS INT INT (ARRAY CHAR) INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 64)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (IFLT 25))
        (17 (ILOAD_2))
        (18 (ALOAD_0))
        (19 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (22 (IF_ICMPLE 34))
        (25 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (28 (DUP))
        (29 (ILOAD_2))
        (30
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (33 (ATHROW))
        (34 (ILOAD_1))
        (35 (ILOAD_2))
        (36 (IF_ICMPLE 49))
        (39 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (42 (DUP))
        (43 (LDC 1))
        (45
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  ((CLASS "java.lang.String"))
                                  VOID)))
        (48 (ATHROW))
        (49 (ALOAD_0))
        (50 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (53 (ILOAD_1))
        (54 (ALOAD_3))
        (55 (ILOAD 4))
        (57 (ILOAD_2))
        (58 (ILOAD_1))
        (59 (ISUB))
        (60 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (63 (RETURN))
        (ENDOFCODE 64))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (34 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "setCharAt" (PARAMETERS INT CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLT 21))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16 (ILOAD_1))
        (17
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (20 (ATHROW))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (25 (IFEQ 32))
        (28 (ALOAD_0))
        (29 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (32 (ALOAD_0))
        (33 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (36 (ILOAD_1))
        (37 (ILOAD_2))
        (38 (CASTORE))
        (39 (RETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (21 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ALOAD_1))
              (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         (CLASS "java.lang.String"))))
              (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (8 (ARETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "append"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 9))
         (4 (ALOAD_1))
         (5 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                    ((CLASS "java.lang.Object"))
                                    (CLASS "java.lang.String"))))
         (8 (ASTORE_1))
         (9 (ALOAD_1))
         (10 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
         (13 (ISTORE_2))
         (14 (ALOAD_0))
         (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (18 (ILOAD_2))
         (19 (IADD))
         (20 (ISTORE_3))
         (21 (ILOAD_3))
         (22 (ALOAD_0))
         (23 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (26 (ARRAYLENGTH))
         (27 (IF_ICMPLE 35))
         (30 (ALOAD_0))
         (31 (ILOAD_3))
         (32 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (35 (ALOAD_1))
         (36 (ICONST_0))
         (37 (ILOAD_2))
         (38 (ALOAD_0))
         (39 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (42 (ALOAD_0))
         (43 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (46 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                      (INT INT (ARRAY CHAR) INT)
                                      VOID)))
         (49 (ALOAD_0))
         (50 (ILOAD_3))
         (51 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (54 (ALOAD_0))
         (55 (ARETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                   (CLASS "java.lang.String")
                                   TOPX TOPX)
                           (STACK)
                           NIL))
                 (35 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 45)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (ARRAYLENGTH))
         (2 (ISTORE_2))
         (3 (ALOAD_0))
         (4 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (7 (ILOAD_2))
         (8 (IADD))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (15 (ARRAYLENGTH))
         (16 (IF_ICMPLE 24))
         (19 (ALOAD_0))
         (20 (ILOAD_3))
         (21 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (24 (ALOAD_1))
         (25 (ICONST_0))
         (26 (ALOAD_0))
         (27 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (30 (ALOAD_0))
         (31 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (34 (ILOAD_2))
         (35 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (38 (ALOAD_0))
         (39 (ILOAD_3))
         (40 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (43 (ALOAD_0))
         (44 (ARETURN))
         (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 46)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (4 (ILOAD_3))
         (5 (IADD))
         (6 (ISTORE 4))
         (8 (ILOAD 4))
         (10 (ALOAD_0))
         (11 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (14 (ARRAYLENGTH))
         (15 (IF_ICMPLE 24))
         (18 (ALOAD_0))
         (19 (ILOAD 4))
         (21 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (24 (ALOAD_1))
         (25 (ILOAD_2))
         (26 (ALOAD_0))
         (27 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (30 (ALOAD_0))
         (31 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (34 (ILOAD_3))
         (35 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (38 (ALOAD_0))
         (39 (ILOAD 4))
         (41 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (44 (ALOAD_0))
         (45 (ARETURN))
         (ENDOFCODE 46))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    (ARRAY CHAR)
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append" (PARAMETERS BOOLEAN)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ILOAD_1))
            (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (BOOLEAN)
                                       (CLASS "java.lang.String"))))
            (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
            (8 (ARETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "append" (PARAMETERS CHAR)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 40)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (4 (ICONST_1))
         (5 (IADD))
         (6 (ISTORE_2))
         (7 (ILOAD_2))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (12 (ARRAYLENGTH))
         (13 (IF_ICMPLE 21))
         (16 (ALOAD_0))
         (17 (ILOAD_2))
         (18 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (21 (ALOAD_0))
         (22 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (25 (ALOAD_0))
         (26 (DUP))
         (27 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (30 (DUP_X1))
         (31 (ICONST_1))
         (32 (IADD))
         (33 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (36 (ILOAD_1))
         (37 (CASTORE))
         (38 (ALOAD_0))
         (39 (ARETURN))
         (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                         (CLASS "java.lang.String"))))
              (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (8 (ARETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "append" (PARAMETERS LONG)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (JVM::LLOAD_1))
              (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                         (CLASS "java.lang.String"))))
              (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (8 (ARETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "delete" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (18 (IF_ICMPLE 26))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (25 (ISTORE_2))
        (26 (ILOAD_1))
        (27 (ILOAD_2))
        (28 (IF_ICMPLE 39))
        (31 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (34 (DUP))
        (35
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (38 (ATHROW))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42 (ISTORE_3))
        (43 (ILOAD_3))
        (44 (IFLE 89))
        (47 (ALOAD_0))
        (48 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (51 (IFEQ 58))
        (54 (ALOAD_0))
        (55 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (58 (ALOAD_0))
        (59 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (62 (ILOAD_1))
        (63 (ILOAD_3))
        (64 (IADD))
        (65 (ALOAD_0))
        (66 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (69 (ILOAD_1))
        (70 (ALOAD_0))
        (71 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (74 (ILOAD_2))
        (75 (ISUB))
        (76 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (79 (ALOAD_0))
        (80 (DUP))
        (81 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (84 (ILOAD_3))
        (85 (ISUB))
        (86 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (89 (ALOAD_0))
        (90 (ARETURN))
        (ENDOFCODE 91))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (39 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (58 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (89 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "deleteCharAt" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 66)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLT 20))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_0))
        (21 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (24 (IFEQ 31))
        (27 (ALOAD_0))
        (28 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (31 (ALOAD_0))
        (32 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (35 (ILOAD_1))
        (36 (ICONST_1))
        (37 (IADD))
        (38 (ALOAD_0))
        (39 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (42 (ILOAD_1))
        (43 (ALOAD_0))
        (44 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (47 (ILOAD_1))
        (48 (ISUB))
        (49 (ICONST_1))
        (50 (ISUB))
        (51 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (54 (ALOAD_0))
        (55 (DUP))
        (56 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (59 (ICONST_1))
        (60 (ISUB))
        (61 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (64 (ALOAD_0))
        (65 (ARETURN))
        (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (31 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert"
      (PARAMETERS INT (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 10)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (ALOAD_2))
              (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         (CLASS "java.lang.String"))))
              (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                          (INT (CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (9 (ARETURN))
              (ENDOFCODE 10))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "insert"
      (PARAMETERS INT (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 112)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLE 20))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_2))
        (21 (IFNONNULL 29))
        (24 (ALOAD_2))
        (25 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                    ((CLASS "java.lang.Object"))
                                    (CLASS "java.lang.String"))))
        (28 (ASTORE_2))
        (29 (ALOAD_2))
        (30 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (33 (ISTORE_3))
        (34 (ALOAD_0))
        (35 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (38 (ILOAD_3))
        (39 (IADD))
        (40 (ISTORE 4))
        (42 (ILOAD 4))
        (44 (ALOAD_0))
        (45 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (48 (ARRAYLENGTH))
        (49 (IF_ICMPLE 61))
        (52 (ALOAD_0))
        (53 (ILOAD 4))
        (55 (INVOKESPECIAL (METHODCP "expandCapacity"
                                     "java.lang.StringBuffer" (INT)
                                     VOID)))
        (58 (GOTO 72))
        (61 (ALOAD_0))
        (62 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (65 (IFEQ 72))
        (68 (ALOAD_0))
        (69 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (72 (ALOAD_0))
        (73 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (76 (ILOAD_1))
        (77 (ALOAD_0))
        (78 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (81 (ILOAD_1))
        (82 (ILOAD_3))
        (83 (IADD))
        (84 (ALOAD_0))
        (85 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (88 (ILOAD_1))
        (89 (ISUB))
        (90 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (93 (ALOAD_2))
        (94 (ICONST_0))
        (95 (ILOAD_3))
        (96 (ALOAD_0))
        (97 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (100 (ILOAD_1))
        (101 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                      (INT INT (ARRAY CHAR) INT)
                                      VOID)))
        (104 (ALOAD_0))
        (105 (ILOAD 4))
        (107 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (110 (ALOAD_0))
        (111 (ARETURN))
        (ENDOFCODE 112))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (61 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert" (PARAMETERS INT (ARRAY CHAR))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 101)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLE 20))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_2))
        (21 (ARRAYLENGTH))
        (22 (ISTORE_3))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (27 (ILOAD_3))
        (28 (IADD))
        (29 (ISTORE 4))
        (31 (ILOAD 4))
        (33 (ALOAD_0))
        (34 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (37 (ARRAYLENGTH))
        (38 (IF_ICMPLE 50))
        (41 (ALOAD_0))
        (42 (ILOAD 4))
        (44 (INVOKESPECIAL (METHODCP "expandCapacity"
                                     "java.lang.StringBuffer" (INT)
                                     VOID)))
        (47 (GOTO 61))
        (50 (ALOAD_0))
        (51 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (54 (IFEQ 61))
        (57 (ALOAD_0))
        (58 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (61 (ALOAD_0))
        (62 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (65 (ILOAD_1))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (70 (ILOAD_1))
        (71 (ILOAD_3))
        (72 (IADD))
        (73 (ALOAD_0))
        (74 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (77 (ILOAD_1))
        (78 (ISUB))
        (79 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (82 (ALOAD_2))
        (83 (ICONST_0))
        (84 (ALOAD_0))
        (85 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (88 (ILOAD_1))
        (89 (ILOAD_3))
        (90 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (93 (ALOAD_0))
        (94 (ILOAD 4))
        (96 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (99 (ALOAD_0))
        (100 (ARETURN))
        (ENDOFCODE 101))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (50 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (61 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert" (PARAMETERS INT BOOLEAN)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ILOAD_1))
            (2 (ILOAD_2))
            (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (BOOLEAN)
                                       (CLASS "java.lang.String"))))
            (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                        (INT (CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
            (9 (ARETURN))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "insert" (PARAMETERS INT CHAR)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 70)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (4 (ICONST_1))
         (5 (IADD))
         (6 (ISTORE_3))
         (7 (ILOAD_3))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (12 (ARRAYLENGTH))
         (13 (IF_ICMPLE 24))
         (16 (ALOAD_0))
         (17 (ILOAD_3))
         (18 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (21 (GOTO 35))
         (24 (ALOAD_0))
         (25 (GETFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
         (28 (IFEQ 35))
         (31 (ALOAD_0))
         (32 (INVOKESPECIAL (METHODCP "copy"
                                      "java.lang.StringBuffer" NIL VOID)))
         (35 (ALOAD_0))
         (36 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (39 (ILOAD_1))
         (40 (ALOAD_0))
         (41 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (44 (ILOAD_1))
         (45 (ICONST_1))
         (46 (IADD))
         (47 (ALOAD_0))
         (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (51 (ILOAD_1))
         (52 (ISUB))
         (53 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (56 (ALOAD_0))
         (57 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (60 (ILOAD_1))
         (61 (ILOAD_2))
         (62 (CASTORE))
         (63 (ALOAD_0))
         (64 (ILOAD_3))
         (65 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (68 (ALOAD_0))
         (69 (ARETURN))
         (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 10)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (ILOAD_2))
              (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                         (CLASS "java.lang.String"))))
              (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                          (INT (CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (9 (ARETURN))
              (ENDOFCODE 10))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "insert" (PARAMETERS INT LONG)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 4)
         (CODE_LENGTH . 10)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (JVM::LLOAD_2))
              (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                         (CLASS "java.lang.String"))))
              (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                          (INT (CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (9 (ARETURN))
              (ENDOFCODE 10))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "reverse" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 66)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
         (4 (IFEQ 11))
         (7 (ALOAD_0))
         (8 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (15 (ICONST_1))
         (16 (ISUB))
         (17 (ISTORE_1))
         (18 (ILOAD_1))
         (19 (ICONST_1))
         (20 (ISUB))
         (21 (ICONST_1))
         (22 (JVM::ISHR))
         (23 (ISTORE_2))
         (24 (GOTO 60))
         (27 (ALOAD_0))
         (28 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (31 (ILOAD_2))
         (32 (CALOAD))
         (33 (ISTORE_3))
         (34 (ALOAD_0))
         (35 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (38 (ILOAD_2))
         (39 (ALOAD_0))
         (40 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (43 (ILOAD_1))
         (44 (ILOAD_2))
         (45 (ISUB))
         (46 (CALOAD))
         (47 (CASTORE))
         (48 (ALOAD_0))
         (49 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (52 (ILOAD_1))
         (53 (ILOAD_2))
         (54 (ISUB))
         (55 (ILOAD_3))
         (56 (CASTORE))
         (57 (IINC 2 -1))
         (60 (ILOAD_2))
         (61 (IFGE 27))
         (64 (ALOAD_0))
         (65 (ARETURN))
         (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (60 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (NEW (CLASS "java.lang.String")))
               (3 (DUP))
               (4 (ALOAD_0))
               (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           ((CLASS "java.lang.StringBuffer"))
                                           VOID)))
               (8 (ARETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "setShared" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 6)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ICONST_1))
               (2 (PUTFIELD (JVM::FIELDCP "shared"
                                          "java.lang.StringBuffer" BOOLEAN)))
               (5 (RETURN))
               (ENDOFCODE 6))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getValue" (PARAMETERS)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *FINAL*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (4 (ARETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ClassNotFoundException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.InstantiationException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalAccessException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.InterruptedException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Integer" "java.lang.Object"
    (CONSTANT_POOL (INT -2147483648)
                   (INT 2147483647)
                   (STRING "null")
                   (STRING "radix ")
                   (STRING " less than Character.MIN_RADIX")
                   (STRING " greater than Character.MAX_RADIX")
                   (INT -2147483647))
    (FIELDS (FIELD "MIN_VALUE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "digits" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *FINAL* *STATIC*)
                   -1)
            (FIELD "value"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "toString" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 6)
        (JVM::MAX_LOCALS . 5)
        (CODE_LENGTH . 109)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ICONST_2))
             (2 (IF_ICMPLT 11))
             (5 (ILOAD_1))
             (6 (BIPUSH 36))
             (8 (IF_ICMPLE 14))
             (11 (BIPUSH 10))
             (13 (ISTORE_1))
             (14 (BIPUSH 33))
             (16 (NEWARRAY CHAR))
             (18 (ASTORE_2))
             (19 (ILOAD_0))
             (20 (IFGE 27))
             (23 (ICONST_1))
             (24 (GOTO 28))
             (27 (ICONST_0))
             (28 (ISTORE_3))
             (29 (BIPUSH 32))
             (31 (ISTORE 4))
             (33 (ILOAD_3))
             (34 (IFNE 64))
             (37 (ILOAD_0))
             (38 (INEG))
             (39 (ISTORE_0))
             (40 (GOTO 64))
             (43 (ALOAD_2))
             (44 (ILOAD 4))
             (46 (DUP))
             (47 (ICONST_1))
             (48 (ISUB))
             (49 (ISTORE 4))
             (51 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (54 (ILOAD_0))
             (55 (ILOAD_1))
             (56 (IREM))
             (57 (INEG))
             (58 (CALOAD))
             (59 (CASTORE))
             (60 (ILOAD_0))
             (61 (ILOAD_1))
             (62 (IDIV))
             (63 (ISTORE_0))
             (64 (ILOAD_0))
             (65 (ILOAD_1))
             (66 (INEG))
             (67 (IF_ICMPLE 43))
             (70 (ALOAD_2))
             (71 (ILOAD 4))
             (73 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (76 (ILOAD_0))
             (77 (INEG))
             (78 (CALOAD))
             (79 (CASTORE))
             (80 (ILOAD_3))
             (81 (IFEQ 93))
             (84 (ALOAD_2))
             (85 (IINC 4 -1))
             (88 (ILOAD 4))
             (90 (BIPUSH 45))
             (92 (CASTORE))
             (93 (NEW (CLASS "java.lang.String")))
             (96 (DUP))
             (97 (ALOAD_2))
             (98 (ILOAD 4))
             (100 (BIPUSH 33))
             (102 (ILOAD 4))
             (104 (ISUB))
             (105 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           ((ARRAY CHAR) INT INT)
                                           VOID)))
             (108 (ARETURN))
             (ENDOFCODE 109))
        (EXCEPTIONS)
        (STACKMAP (11 (FRAME (LOCALS INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (14 (FRAME (LOCALS INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (27 (FRAME (LOCALS INT INT (ARRAY CHAR) TOPX TOPX)
                             (STACK)
                             NIL))
                  (28 (FRAME (LOCALS INT INT (ARRAY CHAR) TOPX TOPX)
                             (STACK INT)
                             NIL))
                  (43 (FRAME (LOCALS INT INT (ARRAY CHAR) INT INT)
                             (STACK)
                             NIL))
                  (64 (FRAME (LOCALS INT INT (ARRAY CHAR) INT INT)
                             (STACK)
                             NIL))
                  (93 (FRAME (LOCALS INT INT (ARRAY CHAR) INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "toHexString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (ICONST_4))
                     (2 (INVOKESTATIC (METHODCP "toUnsignedString"
                                                "java.lang.Integer" (INT INT)
                                                (CLASS "java.lang.String"))))
                     (5 (ARETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "toOctalString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (ICONST_3))
                     (2 (INVOKESTATIC (METHODCP "toUnsignedString"
                                                "java.lang.Integer" (INT INT)
                                                (CLASS "java.lang.String"))))
                     (5 (ARETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "toBinaryString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (ICONST_1))
                     (2 (INVOKESTATIC (METHODCP "toUnsignedString"
                                                "java.lang.Integer" (INT INT)
                                                (CLASS "java.lang.String"))))
                     (5 (ARETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "toUnsignedString" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
        (MAX_STACK . 6)
        (JVM::MAX_LOCALS . 6)
        (CODE_LENGTH . 55)
        (PARSEDCODE
             (0 (BIPUSH 32))
             (2 (NEWARRAY CHAR))
             (4 (ASTORE_2))
             (5 (BIPUSH 32))
             (7 (ISTORE_3))
             (8 (ICONST_1))
             (9 (ILOAD_1))
             (10 (JVM::ISHL))
             (11 (ISTORE 4))
             (13 (ILOAD 4))
             (15 (ICONST_1))
             (16 (ISUB))
             (17 (ISTORE 5))
             (19 (ALOAD_2))
             (20 (IINC 3 -1))
             (23 (ILOAD_3))
             (24 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (27 (ILOAD_0))
             (28 (ILOAD 5))
             (30 (JVM::IAND))
             (31 (CALOAD))
             (32 (CASTORE))
             (33 (ILOAD_0))
             (34 (ILOAD_1))
             (35 (JVM::IUSHR))
             (36 (ISTORE_0))
             (37 (ILOAD_0))
             (38 (IFNE 19))
             (41 (NEW (CLASS "java.lang.String")))
             (44 (DUP))
             (45 (ALOAD_2))
             (46 (ILOAD_3))
             (47 (BIPUSH 32))
             (49 (ILOAD_3))
             (50 (ISUB))
             (51 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                          ((ARRAY CHAR) INT INT)
                                          VOID)))
             (54 (ARETURN))
             (ENDOFCODE 55))
        (EXCEPTIONS)
        (STACKMAP (19 (FRAME (LOCALS INT INT (ARRAY CHAR)
                                     INT INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "toString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ILOAD_0))
          (1 (BIPUSH 10))
          (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT INT)
                                     (CLASS "java.lang.String"))))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "parseInt"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 296)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 14))
        (4 (NEW (CLASS "java.lang.NumberFormatException")))
        (7 (DUP))
        (8 (LDC 2))
        (10 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (13 (ATHROW))
        (14 (ILOAD_1))
        (15 (ICONST_2))
        (16 (IF_ICMPGE 51))
        (19 (NEW (CLASS "java.lang.NumberFormatException")))
        (22 (DUP))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (LDC 3))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (ILOAD_1))
        (36 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (39 (LDC 4))
        (41 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (44 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (47 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (50 (ATHROW))
        (51 (ILOAD_1))
        (52 (BIPUSH 36))
        (54 (IF_ICMPLE 89))
        (57 (NEW (CLASS "java.lang.NumberFormatException")))
        (60 (DUP))
        (61 (NEW (CLASS "java.lang.StringBuffer")))
        (64 (DUP))
        (65 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (68 (LDC 3))
        (70 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (73 (ILOAD_1))
        (74 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (77 (LDC 5))
        (79 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (82 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (85 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (88 (ATHROW))
        (89 (ICONST_0))
        (90 (ISTORE_2))
        (91 (ICONST_0))
        (92 (ISTORE_3))
        (93 (ICONST_0))
        (94 (ISTORE 4))
        (96 (ALOAD_0))
        (97 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (100 (ISTORE 5))
        (102 (ILOAD 5))
        (104 (IFLE 263))
        (107 (ALOAD_0))
        (108 (ICONST_0))
        (109 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (112 (BIPUSH 45))
        (114 (IF_ICMPNE 129))
        (117 (ICONST_1))
        (118 (ISTORE_3))
        (119 (LDC 0))
        (121 (ISTORE 6))
        (123 (IINC 4 1))
        (126 (GOTO 133))
        (129 (LDC 6))
        (131 (ISTORE 6))
        (133 (ILOAD 6))
        (135 (ILOAD_1))
        (136 (IDIV))
        (137 (ISTORE 7))
        (139 (ILOAD 4))
        (141 (ILOAD 5))
        (143 (IF_ICMPGE 253))
        (146 (ALOAD_0))
        (147 (ILOAD 4))
        (149 (IINC 4 1))
        (152 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (155 (ILOAD_1))
        (156 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (159 (ISTORE 8))
        (161 (ILOAD 8))
        (163 (IFGE 175))
        (166 (NEW (CLASS "java.lang.NumberFormatException")))
        (169 (DUP))
        (170 (ALOAD_0))
        (171 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (174 (ATHROW))
        (175 (ILOAD 8))
        (177 (INEG))
        (178 (ISTORE_2))
        (179 (GOTO 253))
        (182 (ALOAD_0))
        (183 (ILOAD 4))
        (185 (IINC 4 1))
        (188 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (191 (ILOAD_1))
        (192 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (195 (ISTORE 8))
        (197 (ILOAD 8))
        (199 (IFGE 211))
        (202 (NEW (CLASS "java.lang.NumberFormatException")))
        (205 (DUP))
        (206 (ALOAD_0))
        (207 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (210 (ATHROW))
        (211 (ILOAD_2))
        (212 (ILOAD 7))
        (214 (IF_ICMPGE 226))
        (217 (NEW (CLASS "java.lang.NumberFormatException")))
        (220 (DUP))
        (221 (ALOAD_0))
        (222 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (225 (ATHROW))
        (226 (ILOAD_2))
        (227 (ILOAD_1))
        (228 (IMUL))
        (229 (ISTORE_2))
        (230 (ILOAD_2))
        (231 (ILOAD 6))
        (233 (ILOAD 8))
        (235 (IADD))
        (236 (IF_ICMPGE 248))
        (239 (NEW (CLASS "java.lang.NumberFormatException")))
        (242 (DUP))
        (243 (ALOAD_0))
        (244 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (247 (ATHROW))
        (248 (ILOAD_2))
        (249 (ILOAD 8))
        (251 (ISUB))
        (252 (ISTORE_2))
        (253 (ILOAD 4))
        (255 (ILOAD 5))
        (257 (IF_ICMPLT 182))
        (260 (GOTO 272))
        (263 (NEW (CLASS "java.lang.NumberFormatException")))
        (266 (DUP))
        (267 (ALOAD_0))
        (268 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (271 (ATHROW))
        (272 (ILOAD_3))
        (273 (IFEQ 293))
        (276 (ILOAD 4))
        (278 (ICONST_1))
        (279 (IF_ICMPLE 284))
        (282 (ILOAD_2))
        (283 (IRETURN))
        (284 (NEW (CLASS "java.lang.NumberFormatException")))
        (287 (DUP))
        (288 (ALOAD_0))
        (289 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (292 (ATHROW))
        (293 (ILOAD_2))
        (294 (INEG))
        (295 (IRETURN))
        (ENDOFCODE 296))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (89 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (129 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (133 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (175 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (182 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (211 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (226 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (248 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (253 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (263 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (272 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (284 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (293 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
       "parseInt"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                             ((CLASS "java.lang.String") INT)
                                             INT)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE CLASS "java.lang.Integer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 4)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 13)
          (PARSEDCODE
               (0 (NEW (CLASS "java.lang.Integer")))
               (3 (DUP))
               (4 (ALOAD_0))
               (5 (ILOAD_1))
               (6 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                          ((CLASS "java.lang.String") INT)
                                          INT)))
               (9 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                           VOID)))
               (12 (ARETURN))
               (ENDOFCODE 13))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.Integer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 14)
         (PARSEDCODE
              (0 (NEW (CLASS "java.lang.Integer")))
              (3 (DUP))
              (4 (ALOAD_0))
              (5 (BIPUSH 10))
              (7 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                         ((CLASS "java.lang.String") INT)
                                         INT)))
              (10 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                           VOID)))
              (13 (ARETURN))
              (ENDOFCODE 14))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "byteValue" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 6)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (JVM::I2B))
                (5 (IRETURN))
                (ENDOFCODE 6))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "shortValue" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 6)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (JVM::I2S))
                (5 (IRETURN))
                (ENDOFCODE 6))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "intValue" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "longValue" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 6)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (JVM::I2L))
                (5 (JVM::LRETURN))
                (ENDOFCODE 6))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (7 (ARETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 29)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.lang.Integer")))
                (4 (IFEQ 27))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.lang.Integer")))
                (15 (INVOKEVIRTUAL (METHODCP "intValue"
                                             "java.lang.Integer" NIL INT)))
                (18 (IF_ICMPNE 25))
                (21 (ICONST_1))
                (22 (GOTO 26))
                (25 (ICONST_0))
                (26 (IRETURN))
                (27 (ICONST_0))
                (28 (IRETURN))
                (ENDOFCODE 29))
           (EXCEPTIONS)
           (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Integer")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (26 (FRAME (LOCALS (CLASS "java.lang.Integer")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.lang.Integer")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 218)
       (PARSEDCODE
            (0 (BIPUSH 36))
            (2 (NEWARRAY CHAR))
            (4 (DUP))
            (5 (ICONST_0))
            (6 (BIPUSH 48))
            (8 (CASTORE))
            (9 (DUP))
            (10 (ICONST_1))
            (11 (BIPUSH 49))
            (13 (CASTORE))
            (14 (DUP))
            (15 (ICONST_2))
            (16 (BIPUSH 50))
            (18 (CASTORE))
            (19 (DUP))
            (20 (ICONST_3))
            (21 (BIPUSH 51))
            (23 (CASTORE))
            (24 (DUP))
            (25 (ICONST_4))
            (26 (BIPUSH 52))
            (28 (CASTORE))
            (29 (DUP))
            (30 (ICONST_5))
            (31 (BIPUSH 53))
            (33 (CASTORE))
            (34 (DUP))
            (35 (BIPUSH 6))
            (37 (BIPUSH 54))
            (39 (CASTORE))
            (40 (DUP))
            (41 (BIPUSH 7))
            (43 (BIPUSH 55))
            (45 (CASTORE))
            (46 (DUP))
            (47 (BIPUSH 8))
            (49 (BIPUSH 56))
            (51 (CASTORE))
            (52 (DUP))
            (53 (BIPUSH 9))
            (55 (BIPUSH 57))
            (57 (CASTORE))
            (58 (DUP))
            (59 (BIPUSH 10))
            (61 (BIPUSH 97))
            (63 (CASTORE))
            (64 (DUP))
            (65 (BIPUSH 11))
            (67 (BIPUSH 98))
            (69 (CASTORE))
            (70 (DUP))
            (71 (BIPUSH 12))
            (73 (BIPUSH 99))
            (75 (CASTORE))
            (76 (DUP))
            (77 (BIPUSH 13))
            (79 (BIPUSH 100))
            (81 (CASTORE))
            (82 (DUP))
            (83 (BIPUSH 14))
            (85 (BIPUSH 101))
            (87 (CASTORE))
            (88 (DUP))
            (89 (BIPUSH 15))
            (91 (BIPUSH 102))
            (93 (CASTORE))
            (94 (DUP))
            (95 (BIPUSH 16))
            (97 (BIPUSH 103))
            (99 (CASTORE))
            (100 (DUP))
            (101 (BIPUSH 17))
            (103 (BIPUSH 104))
            (105 (CASTORE))
            (106 (DUP))
            (107 (BIPUSH 18))
            (109 (BIPUSH 105))
            (111 (CASTORE))
            (112 (DUP))
            (113 (BIPUSH 19))
            (115 (BIPUSH 106))
            (117 (CASTORE))
            (118 (DUP))
            (119 (BIPUSH 20))
            (121 (BIPUSH 107))
            (123 (CASTORE))
            (124 (DUP))
            (125 (BIPUSH 21))
            (127 (BIPUSH 108))
            (129 (CASTORE))
            (130 (DUP))
            (131 (BIPUSH 22))
            (133 (BIPUSH 109))
            (135 (CASTORE))
            (136 (DUP))
            (137 (BIPUSH 23))
            (139 (BIPUSH 110))
            (141 (CASTORE))
            (142 (DUP))
            (143 (BIPUSH 24))
            (145 (BIPUSH 111))
            (147 (CASTORE))
            (148 (DUP))
            (149 (BIPUSH 25))
            (151 (BIPUSH 112))
            (153 (CASTORE))
            (154 (DUP))
            (155 (BIPUSH 26))
            (157 (BIPUSH 113))
            (159 (CASTORE))
            (160 (DUP))
            (161 (BIPUSH 27))
            (163 (BIPUSH 114))
            (165 (CASTORE))
            (166 (DUP))
            (167 (BIPUSH 28))
            (169 (BIPUSH 115))
            (171 (CASTORE))
            (172 (DUP))
            (173 (BIPUSH 29))
            (175 (BIPUSH 116))
            (177 (CASTORE))
            (178 (DUP))
            (179 (BIPUSH 30))
            (181 (BIPUSH 117))
            (183 (CASTORE))
            (184 (DUP))
            (185 (BIPUSH 31))
            (187 (BIPUSH 118))
            (189 (CASTORE))
            (190 (DUP))
            (191 (BIPUSH 32))
            (193 (BIPUSH 119))
            (195 (CASTORE))
            (196 (DUP))
            (197 (BIPUSH 33))
            (199 (BIPUSH 120))
            (201 (CASTORE))
            (202 (DUP))
            (203 (BIPUSH 34))
            (205 (BIPUSH 121))
            (207 (CASTORE))
            (208 (DUP))
            (209 (BIPUSH 35))
            (211 (BIPUSH 122))
            (213 (CASTORE))
            (214 (PUTSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
            (217 (RETURN))
            (ENDOFCODE 218))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.NumberFormatException"
    "java.lang.IllegalArgumentException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         NIL VOID)))
             (4 (RETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalArgumentException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.RuntimeException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.System" "java.lang.Object"
    (CONSTANT_POOL (STRING "debug:")
                   (STRING "Could not open debug stream")
                   (STRING "key cannt be null")
                   (STRING "")
                   (STRING "key cannt be empty"))
    (FIELDS (FIELD "out" (CLASS "java.io.PrintStream")
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   -1)
            (FIELD "err" (CLASS "java.io.PrintStream")
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "getOutput" (PARAMETERS)
             (RETURNTYPE CLASS "java.io.PrintStream")
             (ACCESSFLAGS *CLASS* *PRIVATE* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "currentTimeMillis" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "arraycopy"
             (PARAMETERS (CLASS "java.lang.Object")
                         INT (CLASS "java.lang.Object")
                         INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "identityHashCode"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD
      "getProperty"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 38)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (IFNONNULL 14))
            (4 (NEW (CLASS "java.lang.NullPointerException")))
            (7 (DUP))
            (8 (LDC 2))
            (10 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.NullPointerException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (13 (ATHROW))
            (14 (ALOAD_0))
            (15 (LDC 3))
            (17 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (20 (IFEQ 33))
            (23 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (26 (DUP))
            (27 (LDC 4))
            (29 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (32 (ATHROW))
            (33 (ALOAD_0))
            (34 (INVOKESTATIC (METHODCP "getProperty0" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (37 (ARETURN))
            (ENDOFCODE 38))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (33 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "getProperty0"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD
      "exit" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                           NIL (CLASS "java.lang.Runtime"))))
                (3 (ILOAD_0))
                (4 (INVOKEVIRTUAL (METHODCP "exit" "java.lang.Runtime" (INT)
                                            VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "gc" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 0)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                        NIL (CLASS "java.lang.Runtime"))))
             (3 (INVOKEVIRTUAL (METHODCP "gc" "java.lang.Runtime" NIL VOID)))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 0)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (INVOKESTATIC (METHODCP "getOutput" "java.lang.System"
                                         NIL (CLASS "java.io.PrintStream"))))
              (3 (PUTSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (6 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (9 (PUTSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.NullPointerException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ClassCastException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IndexOutOfBoundsException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Character" "java.lang.Object"
    (CONSTANT_POOL (INT 2)
                   (INT 36)
                   (INT 0)
                   (INT 65535)
                   (STRING "?")
                   (STRING "java.lang.Character.caseConverter")
                   (STRING "com.sun.cldc.i18n.uclc.DefaultCaseConverter")
                   (STRING "Cannot find case converter class ")
                   (STRING " -> "))
    (FIELDS (FIELD "MIN_RADIX" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_RADIX" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "MIN_VALUE" CHAR
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "MAX_VALUE" CHAR
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "value"
                   CHAR (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "cc"
                   (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter")
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "charValue" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 29)
        (PARSEDCODE
             (0 (ALOAD_1))
             (1 (JVM::INSTANCEOF (CLASS "java.lang.Character")))
             (4 (IFEQ 27))
             (7 (ALOAD_0))
             (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (11 (ALOAD_1))
             (12 (CHECKCAST (CLASS "java.lang.Character")))
             (15 (INVOKEVIRTUAL (METHODCP "charValue"
                                          "java.lang.Character" NIL CHAR)))
             (18 (IF_ICMPNE 25))
             (21 (ICONST_1))
             (22 (GOTO 26))
             (25 (ICONST_0))
             (26 (IRETURN))
             (27 (ICONST_0))
             (28 (IRETURN))
             (ENDOFCODE 29))
        (EXCEPTIONS)
        (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Character")
                                     (CLASS "java.lang.Object"))
                             (STACK)
                             NIL))
                  (26 (FRAME (LOCALS (CLASS "java.lang.Character")
                                     (CLASS "java.lang.Object"))
                             (STACK INT)
                             NIL))
                  (27 (FRAME (LOCALS (CLASS "java.lang.Character")
                                     (CLASS "java.lang.Object"))
                             (STACK)
                             NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 16)
        (PARSEDCODE
             (0 (ICONST_1))
             (1 (NEWARRAY CHAR))
             (3 (DUP))
             (4 (ICONST_0))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (9 (CASTORE))
             (10 (ASTORE_1))
             (11 (ALOAD_1))
             (12 (INVOKESTATIC (METHODCP "valueOf"
                                         "java.lang.String" ((ARRAY CHAR))
                                         (CLASS "java.lang.String"))))
             (15 (ARETURN))
             (ENDOFCODE 16))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "isLowerCase" (PARAMETERS CHAR)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "isLowerCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          BOOLEAN)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "isUpperCase" (PARAMETERS CHAR)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "isUpperCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          BOOLEAN)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "isDigit" (PARAMETERS CHAR)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "isDigit"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          BOOLEAN)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toLowerCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "toLowerCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          CHAR)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toUpperCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "toUpperCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          CHAR)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "digit" (PARAMETERS CHAR INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (ILOAD_1))
        (6 (INVOKESTATIC
                (METHODCP "digit"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR INT)
                          INT)))
        (9 (IRETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "caseConverter" (PARAMETERS)
      (RETURNTYPE CLASS
                  "com.sun.cldc.i18n.uclc.DefaultCaseConverter")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 88)
       (PARSEDCODE
        (0 (GETSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (IFNULL 10))
        (6 (GETSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (9 (ARETURN))
        (10 (LDC 4))
        (12 (ASTORE_0))
        (13 (LDC 5))
        (15 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (18 (ASTORE_0))
        (19 (ALOAD_0))
        (20 (IFNONNULL 26))
        (23 (LDC 6))
        (25 (ASTORE_0))
        (26 (ALOAD_0))
        (27 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (30 (ASTORE_1))
        (31 (ALOAD_1))
        (32 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (35
           (CHECKCAST (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter")))
        (38
           (PUTSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (41 (GOTO 84))
        (44 (ASTORE_1))
        (45 (NEW (CLASS "java.lang.RuntimeException")))
        (48 (DUP))
        (49 (NEW (CLASS "java.lang.StringBuffer")))
        (52 (DUP))
        (53 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (56 (LDC 7))
        (58 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (61 (ALOAD_0))
        (62 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (65 (LDC 8))
        (67 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (70 (ALOAD_1))
        (71 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                     NIL (CLASS "java.lang.String"))))
        (74 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (77 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (80 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (83 (ATHROW))
        (84
           (GETSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (87 (ARETURN))
        (ENDOFCODE 88))
       (EXCEPTIONS (JVM::HANDLER 13 41 44 (CLASS "java.lang.Exception")))
       (STACKMAP (10 (FRAME (LOCALS TOPX TOPX) (STACK) NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK (CLASS "java.lang.Exception"))
                            NIL))
                 (84 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.Class"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Error"
    "java.lang.Throwable" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Throwable" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Throwable"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.StringIndexOutOfBoundsException"
    "java.lang.IndexOutOfBoundsException"
    (CONSTANT_POOL (STRING "String index out of range: "))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (NEW (CLASS "java.lang.StringBuffer")))
         (4 (DUP))
         (5 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
         (8 (LDC 0))
         (10 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (13 (ILOAD_1))
         (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (17 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (23 (RETURN))
         (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Math"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*STRICT*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "abs" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFGE 9))
                               (4 (ILOAD_0))
                               (5 (INEG))
                               (6 (GOTO 10))
                               (9 (ILOAD_0))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT) (STACK) NIL))
                             (10 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD "abs" (PARAMETERS LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 13)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_0))
                               (2 (LCMP))
                               (3 (IFGE 11))
                               (6 (JVM::LLOAD_0))
                               (7 (JVM::LNEG))
                               (8 (GOTO 12))
                               (11 (JVM::LLOAD_0))
                               (12 (JVM::LRETURN))
                               (ENDOFCODE 13))
                   (EXCEPTIONS)
                   (STACKMAP (11 (FRAME (LOCALS LONG TOPX) (STACK) NIL))
                             (12 (FRAME (LOCALS LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD "max" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (ILOAD_1))
                               (2 (IF_ICMPLT 9))
                               (5 (ILOAD_0))
                               (6 (GOTO 10))
                               (9 (ILOAD_1))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT INT) (STACK) NIL))
                             (10 (FRAME (LOCALS INT INT)
                                        (STACK INT)
                                        NIL)))))
     (METHOD "max" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (JVM::LLOAD_2))
                               (2 (LCMP))
                               (3 (IFLT 10))
                               (6 (JVM::LLOAD_0))
                               (7 (GOTO 11))
                               (10 (JVM::LLOAD_2))
                               (11 (JVM::LRETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (10 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (11 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD "min" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (ILOAD_1))
                               (2 (IF_ICMPGT 9))
                               (5 (ILOAD_0))
                               (6 (GOTO 10))
                               (9 (ILOAD_1))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT INT) (STACK) NIL))
                             (10 (FRAME (LOCALS INT INT)
                                        (STACK INT)
                                        NIL)))))
     (METHOD "min" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (JVM::LLOAD_2))
                               (2 (LCMP))
                               (3 (IFGT 10))
                               (6 (JVM::LLOAD_0))
                               (7 (GOTO 11))
                               (10 (JVM::LLOAD_2))
                               (11 (JVM::LRETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (10 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (11 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Long" "java.lang.Object"
    (CONSTANT_POOL (LONG -9223372036854775808)
                   (LONG 9223372036854775807)
                   (STRING "null")
                   (STRING "radix ")
                   (STRING " less than Character.MIN_RADIX")
                   (STRING " greater than Character.MAX_RADIX")
                   (LONG -9223372036854775807))
    (FIELDS (FIELD "MIN_VALUE" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "value"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "toString" (PARAMETERS LONG INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 7)
        (JVM::MAX_LOCALS . 6)
        (CODE_LENGTH . 120)
        (PARSEDCODE
             (0 (ILOAD_2))
             (1 (ICONST_2))
             (2 (IF_ICMPLT 11))
             (5 (ILOAD_2))
             (6 (BIPUSH 36))
             (8 (IF_ICMPLE 14))
             (11 (BIPUSH 10))
             (13 (ISTORE_2))
             (14 (BIPUSH 65))
             (16 (NEWARRAY CHAR))
             (18 (ASTORE_3))
             (19 (BIPUSH 64))
             (21 (ISTORE 4))
             (23 (JVM::LLOAD_0))
             (24 (LCONST_0))
             (25 (LCMP))
             (26 (IFGE 33))
             (29 (ICONST_1))
             (30 (GOTO 34))
             (33 (ICONST_0))
             (34 (ISTORE 5))
             (36 (ILOAD 5))
             (38 (IFNE 71))
             (41 (JVM::LLOAD_0))
             (42 (JVM::LNEG))
             (43 (JVM::LSTORE_0))
             (44 (GOTO 71))
             (47 (ALOAD_3))
             (48 (ILOAD 4))
             (50 (DUP))
             (51 (ICONST_1))
             (52 (ISUB))
             (53 (ISTORE 4))
             (55 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (58 (JVM::LLOAD_0))
             (59 (ILOAD_2))
             (60 (JVM::I2L))
             (61 (JVM::LREM))
             (62 (JVM::LNEG))
             (63 (JVM::L2I))
             (64 (CALOAD))
             (65 (CASTORE))
             (66 (JVM::LLOAD_0))
             (67 (ILOAD_2))
             (68 (JVM::I2L))
             (69 (JVM::LDIV))
             (70 (JVM::LSTORE_0))
             (71 (JVM::LLOAD_0))
             (72 (ILOAD_2))
             (73 (INEG))
             (74 (JVM::I2L))
             (75 (LCMP))
             (76 (IFLE 47))
             (79 (ALOAD_3))
             (80 (ILOAD 4))
             (82 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (85 (JVM::LLOAD_0))
             (86 (JVM::LNEG))
             (87 (JVM::L2I))
             (88 (CALOAD))
             (89 (CASTORE))
             (90 (ILOAD 5))
             (92 (IFEQ 104))
             (95 (ALOAD_3))
             (96 (IINC 4 -1))
             (99 (ILOAD 4))
             (101 (BIPUSH 45))
             (103 (CASTORE))
             (104 (NEW (CLASS "java.lang.String")))
             (107 (DUP))
             (108 (ALOAD_3))
             (109 (ILOAD 4))
             (111 (BIPUSH 65))
             (113 (ILOAD 4))
             (115 (ISUB))
             (116 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           ((ARRAY CHAR) INT INT)
                                           VOID)))
             (119 (ARETURN))
             (ENDOFCODE 120))
        (EXCEPTIONS)
        (STACKMAP (11 (FRAME (LOCALS LONG TOPX INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (14 (FRAME (LOCALS LONG TOPX INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (33 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (34 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK INT)
                             NIL))
                  (47 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT INT)
                             (STACK)
                             NIL))
                  (71 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT INT)
                             (STACK)
                             NIL))
                  (104 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                      INT INT)
                              (STACK)
                              NIL)))))
     (METHOD
      "toString" (PARAMETERS LONG)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (JVM::LLOAD_0))
            (1 (BIPUSH 10))
            (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Long" (LONG INT)
                                       (CLASS "java.lang.String"))))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "parseLong"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 12)
       (CODE_LENGTH . 308)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 14))
        (4 (NEW (CLASS "java.lang.NumberFormatException")))
        (7 (DUP))
        (8 (LDC 2))
        (10 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (13 (ATHROW))
        (14 (ILOAD_1))
        (15 (ICONST_2))
        (16 (IF_ICMPGE 51))
        (19 (NEW (CLASS "java.lang.NumberFormatException")))
        (22 (DUP))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (LDC 3))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (ILOAD_1))
        (36 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (39 (LDC 4))
        (41 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (44 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (47 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (50 (ATHROW))
        (51 (ILOAD_1))
        (52 (BIPUSH 36))
        (54 (IF_ICMPLE 89))
        (57 (NEW (CLASS "java.lang.NumberFormatException")))
        (60 (DUP))
        (61 (NEW (CLASS "java.lang.StringBuffer")))
        (64 (DUP))
        (65 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (68 (LDC 3))
        (70 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (73 (ILOAD_1))
        (74 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (77 (LDC 5))
        (79 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (82 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (85 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (88 (ATHROW))
        (89 (LCONST_0))
        (90 (JVM::LSTORE_2))
        (91 (ICONST_0))
        (92 (ISTORE 4))
        (94 (ICONST_0))
        (95 (ISTORE 5))
        (97 (ALOAD_0))
        (98 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (101 (ISTORE 6))
        (103 (ILOAD 6))
        (105 (IFLE 274))
        (108 (ALOAD_0))
        (109 (ICONST_0))
        (110 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (113 (BIPUSH 45))
        (115 (IF_ICMPNE 132))
        (118 (ICONST_1))
        (119 (ISTORE 4))
        (121 (JVM::LDC2_W 0))
        (124 (JVM::LSTORE 7))
        (126 (IINC 5 1))
        (129 (GOTO 137))
        (132 (JVM::LDC2_W 6))
        (135 (JVM::LSTORE 7))
        (137 (JVM::LLOAD 7))
        (139 (ILOAD_1))
        (140 (JVM::I2L))
        (141 (JVM::LDIV))
        (142 (JVM::LSTORE 9))
        (144 (ILOAD 5))
        (146 (ILOAD 6))
        (148 (IF_ICMPGE 264))
        (151 (ALOAD_0))
        (152 (ILOAD 5))
        (154 (IINC 5 1))
        (157 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (160 (ILOAD_1))
        (161 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (164 (ISTORE 11))
        (166 (ILOAD 11))
        (168 (IFGE 180))
        (171 (NEW (CLASS "java.lang.NumberFormatException")))
        (174 (DUP))
        (175 (ALOAD_0))
        (176 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (179 (ATHROW))
        (180 (ILOAD 11))
        (182 (INEG))
        (183 (JVM::I2L))
        (184 (JVM::LSTORE_2))
        (185 (GOTO 264))
        (188 (ALOAD_0))
        (189 (ILOAD 5))
        (191 (IINC 5 1))
        (194 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (197 (ILOAD_1))
        (198 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (201 (ISTORE 11))
        (203 (ILOAD 11))
        (205 (IFGE 217))
        (208 (NEW (CLASS "java.lang.NumberFormatException")))
        (211 (DUP))
        (212 (ALOAD_0))
        (213 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (216 (ATHROW))
        (217 (JVM::LLOAD_2))
        (218 (JVM::LLOAD 9))
        (220 (LCMP))
        (221 (IFGE 233))
        (224 (NEW (CLASS "java.lang.NumberFormatException")))
        (227 (DUP))
        (228 (ALOAD_0))
        (229 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (232 (ATHROW))
        (233 (JVM::LLOAD_2))
        (234 (ILOAD_1))
        (235 (JVM::I2L))
        (236 (JVM::LMUL))
        (237 (JVM::LSTORE_2))
        (238 (JVM::LLOAD_2))
        (239 (JVM::LLOAD 7))
        (241 (ILOAD 11))
        (243 (JVM::I2L))
        (244 (JVM::LADD))
        (245 (LCMP))
        (246 (IFGE 258))
        (249 (NEW (CLASS "java.lang.NumberFormatException")))
        (252 (DUP))
        (253 (ALOAD_0))
        (254 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (257 (ATHROW))
        (258 (JVM::LLOAD_2))
        (259 (ILOAD 11))
        (261 (JVM::I2L))
        (262 (JVM::LSUB))
        (263 (JVM::LSTORE_2))
        (264 (ILOAD 5))
        (266 (ILOAD 6))
        (268 (IF_ICMPLT 188))
        (271 (GOTO 283))
        (274 (NEW (CLASS "java.lang.NumberFormatException")))
        (277 (DUP))
        (278 (ALOAD_0))
        (279 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (282 (ATHROW))
        (283 (ILOAD 4))
        (285 (IFEQ 305))
        (288 (ILOAD 5))
        (290 (ICONST_1))
        (291 (IF_ICMPLE 296))
        (294 (JVM::LLOAD_2))
        (295 (JVM::LRETURN))
        (296 (NEW (CLASS "java.lang.NumberFormatException")))
        (299 (DUP))
        (300 (ALOAD_0))
        (301 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (304 (ATHROW))
        (305 (JVM::LLOAD_2))
        (306 (JVM::LNEG))
        (307 (JVM::LRETURN))
        (ENDOFCODE 308))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (89 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (132 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (180 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (188 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (217 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (233 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (258 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (264 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (274 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (283 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (296 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (305 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
       "parseLong"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . LONG)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseLong" "java.lang.Long"
                                             ((CLASS "java.lang.String") INT)
                                             LONG)))
                  (6 (JVM::LRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::LLOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "longValue" (PARAMETERS)
       (RETURNTYPE . LONG)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 5)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
                  (4 (JVM::LRETURN))
                  (ENDOFCODE 5))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
               (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                          (CLASS "java.lang.String"))))
               (7 (ARETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
       "hashCode" (PARAMETERS)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 5)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 14)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
                  (4 (ALOAD_0))
                  (5 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
                  (8 (BIPUSH 32))
                  (10 (JVM::LSHR))
                  (11 (JVM::LXOR))
                  (12 (JVM::L2I))
                  (13 (IRETURN))
                  (ENDOFCODE 14))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 30)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (JVM::INSTANCEOF (CLASS "java.lang.Long")))
        (4 (IFEQ 28))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
        (11 (ALOAD_1))
        (12 (CHECKCAST (CLASS "java.lang.Long")))
        (15 (INVOKEVIRTUAL (METHODCP "longValue" "java.lang.Long" NIL LONG)))
        (18 (LCMP))
        (19 (IFNE 26))
        (22 (ICONST_1))
        (23 (GOTO 27))
        (26 (ICONST_0))
        (27 (IRETURN))
        (28 (ICONST_0))
        (29 (IRETURN))
        (ENDOFCODE 30))
       (EXCEPTIONS)
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.lang.Long")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.Long")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL))
                 (28 (FRAME (LOCALS (CLASS "java.lang.Long")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Runtime"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "currentRuntime"
                   (CLASS "java.lang.Runtime")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "getRuntime" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Runtime")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 0)
        (CODE_LENGTH . 4)
        (PARSEDCODE
             (0 (GETSTATIC (JVM::FIELDCP "currentRuntime" "java.lang.Runtime"
                                         (CLASS "java.lang.Runtime"))))
             (3 (ARETURN))
             (ENDOFCODE 4))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "exitInternal" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "exit" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (INVOKESPECIAL (METHODCP "exitInternal" "java.lang.Runtime" (INT)
                                     VOID)))
         (5 (RETURN))
         (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "freeMemory" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "totalMemory" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "gc" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 11)
       (PARSEDCODE
         (0 (NEW (CLASS "java.lang.Runtime")))
         (3 (DUP))
         (4 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Runtime" NIL VOID)))
         (7 (PUTSTATIC (JVM::FIELDCP "currentRuntime" "java.lang.Runtime"
                                     (CLASS "java.lang.Runtime"))))
         (10 (RETURN))
         (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ArrayIndexOutOfBoundsException"
    "java.lang.IndexOutOfBoundsException"
    (CONSTANT_POOL (STRING "Array index out of range: "))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (NEW (CLASS "java.lang.StringBuffer")))
         (4 (DUP))
         (5 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
         (8 (LDC 0))
         (10 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (13 (ILOAD_1))
         (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (17 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (23 (RETURN))
         (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ArithmeticException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ArrayStoreException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Boolean" "java.lang.Object"
    (CONSTANT_POOL (STRING "true")
                   (STRING "false"))
    (FIELDS (FIELD "value"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "booleanValue" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (4 (IRETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 15)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (4 (IFEQ 12))
            (7 (LDC 0))
            (9 (GOTO 14))
            (12 (LDC 1))
            (14 (ARETURN))
            (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK)
                            NIL))
                 (14 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (4 (IFEQ 13))
            (7 (JVM::SIPUSH 1231))
            (10 (GOTO 16))
            (13 (JVM::SIPUSH 1237))
            (16 (IRETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK)
                            NIL))
                 (16 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
            (0 (ALOAD_1))
            (1 (JVM::INSTANCEOF (CLASS "java.lang.Boolean")))
            (4 (IFEQ 27))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (11 (ALOAD_1))
            (12 (CHECKCAST (CLASS "java.lang.Boolean")))
            (15 (INVOKEVIRTUAL (METHODCP "booleanValue"
                                         "java.lang.Boolean" NIL BOOLEAN)))
            (18 (IF_ICMPNE 25))
            (21 (ICONST_1))
            (22 (GOTO 26))
            (25 (ICONST_0))
            (26 (IRETURN))
            (27 (ICONST_0))
            (28 (IRETURN))
            (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Boolean")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Boolean")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.Boolean")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Byte" "java.lang.Object"
    (CONSTANT_POOL (INT -128) (INT 127))
    (FIELDS (FIELD "MIN_VALUE" BYTE
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" BYTE
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "value"
                   BYTE (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
       "parseByte"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . BYTE)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseByte" "java.lang.Byte"
                                             ((CLASS "java.lang.String") INT)
                                             BYTE)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "parseByte"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 29)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ILOAD_1))
               (2 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                          ((CLASS "java.lang.String") INT)
                                          INT)))
               (5 (ISTORE_2))
               (6 (ILOAD_2))
               (7 (BIPUSH -128))
               (9 (IF_ICMPLT 18))
               (12 (ILOAD_2))
               (13 (BIPUSH 127))
               (15 (IF_ICMPLE 26))
               (18 (NEW (CLASS "java.lang.NumberFormatException")))
               (21 (DUP))
               (22 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.NumberFormatException"
                                            NIL VOID)))
               (25 (ATHROW))
               (26 (ILOAD_2))
               (27 (JVM::I2B))
               (28 (IRETURN))
               (ENDOFCODE 29))
          (EXCEPTIONS)
          (STACKMAP (18 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL))
                    (26 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "<init>" (PARAMETERS BYTE)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "byteValue" (PARAMETERS)
       (RETURNTYPE . BYTE)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 1)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 5)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
                  (4 (IRETURN))
                  (ENDOFCODE 5))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
                (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (7 (ARETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
       "hashCode" (PARAMETERS)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 1)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 5)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
                  (4 (IRETURN))
                  (ENDOFCODE 5))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (JVM::INSTANCEOF (CLASS "java.lang.Byte")))
        (4 (IFEQ 27))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
        (11 (ALOAD_1))
        (12 (CHECKCAST (CLASS "java.lang.Byte")))
        (15 (INVOKEVIRTUAL (METHODCP "byteValue" "java.lang.Byte" NIL BYTE)))
        (18 (IF_ICMPNE 25))
        (21 (ICONST_1))
        (22 (GOTO 26))
        (25 (ICONST_0))
        (26 (IRETURN))
        (27 (ICONST_0))
        (28 (IRETURN))
        (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Byte")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Byte")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.Byte")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalMonitorStateException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalThreadStateException"
    "java.lang.IllegalArgumentException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         NIL VOID)))
             (4 (RETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.NegativeArraySizeException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.OutOfMemoryError"
    "java.lang.VirtualMachineError"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.VirtualMachineError"
                                     NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_1))
         (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.VirtualMachineError"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
         (5 (RETURN))
         (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.VirtualMachineError"
    "java.lang.Error" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Error" NIL VOID)))
           (4 (RETURN))
           (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ALOAD_0))
                     (1 (ALOAD_1))
                     (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Error"
                                                 ((CLASS "java.lang.String"))
                                                 VOID)))
                     (5 (RETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.lang.Runnable"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "run" (PARAMETERS)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.lang.SecurityException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Short" "java.lang.Object"
    (CONSTANT_POOL (INT -32768) (INT 32767))
    (FIELDS (FIELD "MIN_VALUE" SHORT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" SHORT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "value"
                   SHORT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
       "parseShort"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . SHORT)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseShort" "java.lang.Short"
                                             ((CLASS "java.lang.String") INT)
                                             SHORT)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "parseShort"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 31)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ILOAD_1))
               (2 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                          ((CLASS "java.lang.String") INT)
                                          INT)))
               (5 (ISTORE_2))
               (6 (ILOAD_2))
               (7 (JVM::SIPUSH -32768))
               (10 (IF_ICMPLT 20))
               (13 (ILOAD_2))
               (14 (JVM::SIPUSH 32767))
               (17 (IF_ICMPLE 28))
               (20 (NEW (CLASS "java.lang.NumberFormatException")))
               (23 (DUP))
               (24 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.NumberFormatException"
                                            NIL VOID)))
               (27 (ATHROW))
               (28 (ILOAD_2))
               (29 (JVM::I2S))
               (30 (IRETURN))
               (ENDOFCODE 31))
          (EXCEPTIONS)
          (STACKMAP (20 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL))
                    (28 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "<init>" (PARAMETERS SHORT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "shortValue" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (7 (ARETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 29)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.lang.Short")))
                (4 (IFEQ 27))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.lang.Short")))
                (15 (INVOKEVIRTUAL (METHODCP "shortValue"
                                             "java.lang.Short" NIL SHORT)))
                (18 (IF_ICMPNE 25))
                (21 (ICONST_1))
                (22 (GOTO 26))
                (25 (ICONST_0))
                (26 (IRETURN))
                (27 (ICONST_0))
                (28 (IRETURN))
                (ENDOFCODE 29))
           (EXCEPTIONS)
           (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Short")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (26 (FRAME (LOCALS (CLASS "java.lang.Short")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.lang.Short")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Thread" "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 5)
                   (INT 10)
                   (STRING "Thread[@")
                   (STRING ",")
                   (STRING "]"))
    (FIELDS (FIELD "priority"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "threadQ" (CLASS "java.lang.Thread")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "target" (CLASS "java.lang.Runnable")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "MIN_PRIORITY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "NORM_PRIORITY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "MAX_PRIORITY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2))
    (METHODS
     (METHOD "currentThread" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.Thread")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "yield" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "sleep" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ACONST_NULL))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread"
                                               ((CLASS "java.lang.Runnable"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.Runnable"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_5))
          (6 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (9 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                     NIL (CLASS "java.lang.Thread"))))
          (12 (ASTORE_2))
          (13 (ALOAD_0))
          (14 (ALOAD_2))
          (15 (INVOKEVIRTUAL (METHODCP "getPriority"
                                       "java.lang.Thread" NIL INT)))
          (18 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (21 (ALOAD_0))
          (22 (ALOAD_1))
          (23 (PUTFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                      (CLASS "java.lang.Runnable"))))
          (26 (ALOAD_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (31 (INVOKEVIRTUAL (METHODCP "setPriority" "java.lang.Thread" (INT)
                                       VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "start" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*
                          *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (4 (IFNULL 16))
          (7 (ALOAD_0))
          (8 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (11 (INVOKEINTERFACE (METHODCP "run" "java.lang.Runnable" NIL VOID)
                               1))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD "isAlive" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "setPriority" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 30)
       (PARSEDCODE
         (0 (ILOAD_1))
         (1 (BIPUSH 10))
         (3 (IF_ICMPGT 11))
         (6 (ILOAD_1))
         (7 (ICONST_1))
         (8 (IF_ICMPGE 19))
         (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (14 (DUP))
         (15 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
         (18 (ATHROW))
         (19 (ALOAD_0))
         (20 (ALOAD_0))
         (21 (ILOAD_1))
         (22 (DUP_X1))
         (23 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
         (26 (INVOKESPECIAL (METHODCP "setPriority0" "java.lang.Thread" (INT)
                                      VOID)))
         (29 (RETURN))
         (ENDOFCODE 30))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getPriority" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD "activeCount" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD
      "join" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                       NIL (CLASS "java.lang.Thread"))))
            (4 (JVM::IF_ACMPNE 11))
            (7 (RETURN))
            (8 (INVOKESTATIC (METHODCP "yield" "java.lang.Thread" NIL VOID)))
            (11 (ALOAD_0))
            (12 (INVOKEVIRTUAL (METHODCP "isAlive"
                                         "java.lang.Thread" NIL BOOLEAN)))
            (15 (IFNE 8))
            (18 (RETURN))
            (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (LDC 3))
        (9 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.StringBuffer"))))
        (12 (ALOAD_0))
        (13 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (16 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (19 (LDC 4))
        (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (24 (ALOAD_0))
        (25 (INVOKEVIRTUAL (METHODCP "getPriority"
                                     "java.lang.Thread" NIL INT)))
        (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (31 (LDC 5))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (39 (ARETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "setPriority0" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES "java.lang.Runnable")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.UnsupportedEncodingException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.IOException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.InputStream" "java.lang.Object"
    (CONSTANT_POOL (STRING "mark/reset not supported"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "read" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 9)
         (PARSEDCODE (0 (ALOAD_0))
                     (1 (ALOAD_1))
                     (2 (ICONST_0))
                     (3 (ALOAD_1))
                     (4 (ARRAYLENGTH))
                     (5 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                                 ((ARRAY BYTE) INT INT)
                                                 INT)))
                     (8 (IRETURN))
                     (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 128)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 12))
         (4 (NEW (CLASS "java.lang.NullPointerException")))
         (7 (DUP))
         (8 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
         (11 (ATHROW))
         (12 (ILOAD_2))
         (13 (IFLT 40))
         (16 (ILOAD_2))
         (17 (ALOAD_1))
         (18 (ARRAYLENGTH))
         (19 (IF_ICMPGT 40))
         (22 (ILOAD_3))
         (23 (IFLT 40))
         (26 (ILOAD_2))
         (27 (ILOAD_3))
         (28 (IADD))
         (29 (ALOAD_1))
         (30 (ARRAYLENGTH))
         (31 (IF_ICMPGT 40))
         (34 (ILOAD_2))
         (35 (ILOAD_3))
         (36 (IADD))
         (37 (IFGE 48))
         (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (43 (DUP))
         (44 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      NIL VOID)))
         (47 (ATHROW))
         (48 (ILOAD_3))
         (49 (IFNE 54))
         (52 (ICONST_0))
         (53 (IRETURN))
         (54 (ALOAD_0))
         (55 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
         (58 (ISTORE 4))
         (60 (ILOAD 4))
         (62 (ICONST_M1))
         (63 (IF_ICMPNE 68))
         (66 (ICONST_M1))
         (67 (IRETURN))
         (68 (ALOAD_1))
         (69 (ILOAD_2))
         (70 (ILOAD 4))
         (72 (JVM::I2B))
         (73 (BASTORE))
         (74 (ICONST_1))
         (75 (ISTORE 5))
         (77 (GOTO 111))
         (80 (ALOAD_0))
         (81 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
         (84 (ISTORE 4))
         (86 (ILOAD 4))
         (88 (ICONST_M1))
         (89 (IF_ICMPNE 95))
         (92 (GOTO 117))
         (95 (ALOAD_1))
         (96 (IFNULL 108))
         (99 (ALOAD_1))
         (100 (ILOAD_2))
         (101 (ILOAD 5))
         (103 (IADD))
         (104 (ILOAD 4))
         (106 (JVM::I2B))
         (107 (BASTORE))
         (108 (IINC 5 1))
         (111 (ILOAD 5))
         (113 (ILOAD_3))
         (114 (IF_ICMPLT 80))
         (117 (GOTO 125))
         (120 (ASTORE 6))
         (122 (GOTO 125))
         (125 (ILOAD 5))
         (127 (IRETURN))
         (ENDOFCODE 128))
       (EXCEPTIONS (JVM::HANDLER 77
                                 117 120 (CLASS "java.io.IOException")))
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (68 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (80 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (95 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (108 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (111 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (117 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (120 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL))
                 (125 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 29)
       (PARSEDCODE
          (0 (JVM::LLOAD_1))
          (1 (JVM::LSTORE_3))
          (2 (GOTO 19))
          (5 (ALOAD_0))
          (6 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
          (9 (IFGE 15))
          (12 (GOTO 25))
          (15 (JVM::LLOAD_3))
          (16 (LCONST_1))
          (17 (JVM::LSUB))
          (18 (JVM::LSTORE_3))
          (19 (JVM::LLOAD_3))
          (20 (LCONST_0))
          (21 (LCMP))
          (22 (IFGT 5))
          (25 (JVM::LLOAD_1))
          (26 (JVM::LLOAD_3))
          (27 (JVM::LSUB))
          (28 (JVM::LRETURN))
          (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (5 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                   LONG TOPX LONG TOPX)
                           (STACK)
                           NIL))
                 (15 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL)))))
     (METHOD "available" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "mark" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE (0 (NEW (CLASS "java.io.IOException")))
                   (3 (DUP))
                   (4 (LDC 0))
                   (6 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (9 (ATHROW))
                   (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "markSupported" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.Reader" "java.lang.Object"
    (CONSTANT_POOL (INT 8192)
                   (STRING "skip value is negative")
                   (LONG 8192)
                   (STRING "mark() not supported")
                   (STRING "reset() not supported"))
    (FIELDS (FIELD "lock" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "maxSkipBufferSize" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "skipBuffer" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 15)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ACONST_NULL))
          (6 (PUTFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
          (9 (ALOAD_0))
          (10 (ALOAD_0))
          (11 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Reader"
                                      (CLASS "java.lang.Object"))))
          (14 (RETURN))
          (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 27)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ACONST_NULL))
          (6 (PUTFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
          (9 (ALOAD_1))
          (10 (IFNONNULL 21))
          (13 (NEW (CLASS "java.lang.NullPointerException")))
          (16 (DUP))
          (17 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
          (20 (ATHROW))
          (21 (ALOAD_0))
          (22 (ALOAD_1))
          (23 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Reader"
                                      (CLASS "java.lang.Object"))))
          (26 (RETURN))
          (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 21)
       (PARSEDCODE
          (0 (ICONST_1))
          (1 (NEWARRAY CHAR))
          (3 (ASTORE_1))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (ICONST_0))
          (7 (ICONST_1))
          (8 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
          (11 (ICONST_M1))
          (12 (IF_ICMPNE 17))
          (15 (ICONST_M1))
          (16 (IRETURN))
          (17 (ALOAD_1))
          (18 (ICONST_0))
          (19 (CALOAD))
          (20 (IRETURN))
          (ENDOFCODE 21))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    (ARRAY CHAR))
                            (STACK)
                            NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (ICONST_0))
          (3 (ALOAD_1))
          (4 (ARRAYLENGTH))
          (5 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
          (8 (IRETURN))
          (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "read" (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 121)
       (PARSEDCODE
         (0 (JVM::LLOAD_1))
         (1 (LCONST_0))
         (2 (LCMP))
         (3 (IFGE 16))
         (6 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (9 (DUP))
         (10 (LDC 1))
         (12 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (15 (ATHROW))
         (16 (JVM::LLOAD_1))
         (17 (JVM::LDC2_W 2))
         (20 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (LONG LONG)
                                     LONG)))
         (23 (JVM::L2I))
         (24 (ISTORE_3))
         (25 (ALOAD_0))
         (26 (GETFIELD (JVM::FIELDCP "lock" "java.io.Reader"
                                     (CLASS "java.lang.Object"))))
         (29 (DUP))
         (30 (ASTORE 4))
         (32 (MONITORENTER))
         (33 (ALOAD_0))
         (34 (GETFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (37 (IFNULL 49))
         (40 (ALOAD_0))
         (41 (GETFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (44 (ARRAYLENGTH))
         (45 (ILOAD_3))
         (46 (IF_ICMPGE 56))
         (49 (ALOAD_0))
         (50 (ILOAD_3))
         (51 (NEWARRAY CHAR))
         (53 (PUTFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (56 (JVM::LLOAD_1))
         (57 (JVM::LSTORE 5))
         (59 (GOTO 98))
         (62 (ALOAD_0))
         (63 (ALOAD_0))
         (64 (GETFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (67 (ICONST_0))
         (68 (JVM::LLOAD 5))
         (70 (ILOAD_3))
         (71 (JVM::I2L))
         (72 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (LONG LONG)
                                     LONG)))
         (75 (JVM::L2I))
         (76 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
         (79 (ISTORE 7))
         (81 (ILOAD 7))
         (83 (ICONST_M1))
         (84 (IF_ICMPNE 90))
         (87 (GOTO 105))
         (90 (JVM::LLOAD 5))
         (92 (ILOAD 7))
         (94 (JVM::I2L))
         (95 (JVM::LSUB))
         (96 (JVM::LSTORE 5))
         (98 (JVM::LLOAD 5))
         (100 (LCONST_0))
         (101 (LCMP))
         (102 (IFGT 62))
         (105 (JVM::LLOAD_1))
         (106 (JVM::LLOAD 5))
         (108 (JVM::LSUB))
         (109 (ALOAD 4))
         (111 (MONITOREXIT))
         (112 (JVM::LRETURN))
         (113 (ASTORE 8))
         (115 (ALOAD 4))
         (117 (MONITOREXIT))
         (118 (ALOAD 8))
         (120 (ATHROW))
         (ENDOFCODE 121))
       (EXCEPTIONS (JVM::HANDLER 33
                                 112 113 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 113
                                 118 113 (CLASS "java.lang.Throwable")))
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    LONG TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (90 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    LONG TOPX INT TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    LONG TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (105 (FRAME (LOCALS (CLASS "java.io.Reader")
                                     LONG TOPX INT (CLASS "java.lang.Object")
                                     LONG TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (113 (FRAME (LOCALS (CLASS "java.io.Reader")
                                     LONG TOPX INT (CLASS "java.lang.Object")
                                     TOPX TOPX TOPX TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL)))))
     (METHOD "ready" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "markSupported" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE (0 (NEW (CLASS "java.io.IOException")))
                   (3 (DUP))
                   (4 (LDC 3))
                   (6 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (9 (ATHROW))
                   (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE (0 (NEW (CLASS "java.io.IOException")))
                   (3 (DUP))
                   (4 (LDC 4))
                   (6 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (9 (ATHROW))
                   (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.OutputStream"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "write" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "write" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (ICONST_0))
                   (3 (ALOAD_1))
                   (4 (ARRAYLENGTH))
                   (5 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream"
                                               ((ARRAY BYTE) INT INT)
                                               VOID)))
                   (8 (RETURN))
                   (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 79)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (IFNONNULL 12))
           (4 (NEW (CLASS "java.lang.NullPointerException")))
           (7 (DUP))
           (8 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
           (11 (ATHROW))
           (12 (ILOAD_2))
           (13 (IFLT 40))
           (16 (ILOAD_2))
           (17 (ALOAD_1))
           (18 (ARRAYLENGTH))
           (19 (IF_ICMPGT 40))
           (22 (ILOAD_3))
           (23 (IFLT 40))
           (26 (ILOAD_2))
           (27 (ILOAD_3))
           (28 (IADD))
           (29 (ALOAD_1))
           (30 (ARRAYLENGTH))
           (31 (IF_ICMPGT 40))
           (34 (ILOAD_2))
           (35 (ILOAD_3))
           (36 (IADD))
           (37 (IFGE 48))
           (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
           (43 (DUP))
           (44 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
           (47 (ATHROW))
           (48 (ILOAD_3))
           (49 (IFNE 53))
           (52 (RETURN))
           (53 (ICONST_0))
           (54 (ISTORE 4))
           (56 (GOTO 72))
           (59 (ALOAD_0))
           (60 (ALOAD_1))
           (61 (ILOAD_2))
           (62 (ILOAD 4))
           (64 (IADD))
           (65 (BALOAD))
           (66 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                        VOID)))
           (69 (IINC 4 1))
           (72 (ILOAD 4))
           (74 (ILOAD_3))
           (75 (IF_ICMPLT 59))
           (78 (RETURN))
           (ENDOFCODE 79))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD "flush" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.Writer"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "writeBuffer" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "writeBufferSize" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1)
            (FIELD "lock" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::SIPUSH 1024))
          (8 (PUTFIELD (JVM::FIELDCP "writeBufferSize"
                                     "java.io.Writer" INT)))
          (11 (ALOAD_0))
          (12 (ALOAD_0))
          (13 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                      (CLASS "java.lang.Object"))))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::SIPUSH 1024))
          (8 (PUTFIELD (JVM::FIELDCP "writeBufferSize"
                                     "java.io.Writer" INT)))
          (11 (ALOAD_1))
          (12 (IFNONNULL 23))
          (15 (NEW (CLASS "java.lang.NullPointerException")))
          (18 (DUP))
          (19 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
          (22 (ATHROW))
          (23 (ALOAD_0))
          (24 (ALOAD_1))
          (25 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                      (CLASS "java.lang.Object"))))
          (28 (RETURN))
          (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (23 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 52)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                    (CLASS "java.lang.Object"))))
         (4 (DUP))
         (5 (ASTORE_2))
         (6 (MONITORENTER))
         (7 (ALOAD_0))
         (8 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                    "java.io.Writer" (ARRAY CHAR))))
         (11 (IFNONNULL 23))
         (14 (ALOAD_0))
         (15 (JVM::SIPUSH 1024))
         (18 (NEWARRAY CHAR))
         (20 (PUTFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (23 (ALOAD_0))
         (24 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (27 (ICONST_0))
         (28 (ILOAD_1))
         (29 (JVM::I2C))
         (30 (CASTORE))
         (31 (ALOAD_0))
         (32 (ALOAD_0))
         (33 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (36 (ICONST_0))
         (37 (ICONST_1))
         (38 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
         (41 (ALOAD_2))
         (42 (MONITOREXIT))
         (43 (GOTO 51))
         (46 (ASTORE_3))
         (47 (ALOAD_2))
         (48 (MONITOREXIT))
         (49 (ALOAD_3))
         (50 (ATHROW))
         (51 (RETURN))
         (ENDOFCODE 52))
       (EXCEPTIONS (JVM::HANDLER 7 43 46 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 46 49 46 (CLASS "java.lang.Throwable")))
       (STACKMAP (23 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (ICONST_0))
          (3 (ALOAD_1))
          (4 (ARRAYLENGTH))
          (5 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
          (8 (RETURN))
          (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "write"
             (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 11)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ALOAD_1))
           (2 (ICONST_0))
           (3 (ALOAD_1))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer"
                                       ((CLASS "java.lang.String") INT INT)
                                       VOID)))
           (10 (RETURN))
           (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 79)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                    (CLASS "java.lang.Object"))))
         (4 (DUP))
         (5 (ASTORE 4))
         (7 (MONITORENTER))
         (8 (ILOAD_3))
         (9 (JVM::SIPUSH 1024))
         (12 (IF_ICMPGT 40))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (19 (IFNONNULL 31))
         (22 (ALOAD_0))
         (23 (JVM::SIPUSH 1024))
         (26 (NEWARRAY CHAR))
         (28 (PUTFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (31 (ALOAD_0))
         (32 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (35 (ASTORE 5))
         (37 (GOTO 45))
         (40 (ILOAD_3))
         (41 (NEWARRAY CHAR))
         (43 (ASTORE 5))
         (45 (ALOAD_1))
         (46 (ILOAD_2))
         (47 (ILOAD_2))
         (48 (ILOAD_3))
         (49 (IADD))
         (50 (ALOAD 5))
         (52 (ICONST_0))
         (53 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                      (INT INT (ARRAY CHAR) INT)
                                      VOID)))
         (56 (ALOAD_0))
         (57 (ALOAD 5))
         (59 (ICONST_0))
         (60 (ILOAD_3))
         (61 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
         (64 (ALOAD 4))
         (66 (MONITOREXIT))
         (67 (GOTO 78))
         (70 (ASTORE 6))
         (72 (ALOAD 4))
         (74 (MONITOREXIT))
         (75 (ALOAD 6))
         (77 (ATHROW))
         (78 (RETURN))
         (ENDOFCODE 79))
       (EXCEPTIONS (JVM::HANDLER 8 67 70 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 70 75 70 (CLASS "java.lang.Throwable")))
       (STACKMAP (31 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    (ARRAY CHAR)
                                    TOPX)
                            (STACK)
                            NIL))
                 (70 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    TOPX TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (78 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    (ARRAY CHAR)
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD "flush" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.PrintStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Null output stream")
                   (STRING "Stream closed")
                   (STRING "true")
                   (STRING "false")
                   (STRING "null"))
    (FIELDS (FIELD "trouble"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "charOut"
                   (CLASS "java.io.OutputStreamWriter")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "byteOut" (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "closing"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 46)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.OutputStream" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (PUTFIELD (JVM::FIELDCP "trouble"
                                     "java.io.PrintStream" BOOLEAN)))
          (9 (ALOAD_0))
          (10 (ICONST_0))
          (11 (PUTFIELD (JVM::FIELDCP "closing"
                                      "java.io.PrintStream" BOOLEAN)))
          (14 (ALOAD_1))
          (15 (IFNONNULL 28))
          (18 (NEW (CLASS "java.lang.NullPointerException")))
          (21 (DUP))
          (22 (LDC 0))
          (24 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
          (27 (ATHROW))
          (28 (ALOAD_0))
          (29 (ALOAD_1))
          (30 (PUTFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStream"))))
          (33 (ALOAD_0))
          (34 (NEW (CLASS "java.io.OutputStreamWriter")))
          (37 (DUP))
          (38 (ALOAD_1))
          (39 (INVOKESPECIAL (METHODCP "<init>" "java.io.OutputStreamWriter"
                                       ((CLASS "java.io.OutputStream"))
                                       VOID)))
          (42 (PUTFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStreamWriter"))))
          (45 (RETURN))
          (ENDOFCODE 46))
       (EXCEPTIONS)
       (STACKMAP (28 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.OutputStream"))
                            (STACK)
                            NIL)))))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStreamWriter"))))
           (4 (IFNONNULL 17))
           (7 (NEW (CLASS "java.io.IOException")))
           (10 (DUP))
           (11 (LDC 1))
           (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (16 (ATHROW))
           (17 (RETURN))
           (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.PrintStream"))
                            (STACK)
                            NIL)))))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 38)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (DUP))
        (2 (ASTORE_1))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (INVOKESPECIAL (METHODCP "ensureOpen"
                                    "java.io.PrintStream" NIL VOID)))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                   (CLASS "java.io.OutputStreamWriter"))))
        (12 (INVOKEVIRTUAL (METHODCP "flush"
                                     "java.io.OutputStreamWriter" NIL VOID)))
        (15 (GOTO 27))
        (18 (ASTORE_2))
        (19 (ALOAD_0))
        (20 (ICONST_1))
        (21 (PUTFIELD (JVM::FIELDCP "trouble"
                                    "java.io.PrintStream" BOOLEAN)))
        (24 (GOTO 27))
        (27 (ALOAD_1))
        (28 (MONITOREXIT))
        (29 (GOTO 37))
        (32 (ASTORE_3))
        (33 (ALOAD_1))
        (34 (MONITOREXIT))
        (35 (ALOAD_3))
        (36 (ATHROW))
        (37 (RETURN))
        (ENDOFCODE 38))
       (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 4 29 32 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 32 35 32 (CLASS "java.lang.Throwable")))
       (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (37 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (DUP))
        (2 (ASTORE_1))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "closing"
                                   "java.io.PrintStream" BOOLEAN)))
        (8 (IFNE 45))
        (11 (ALOAD_0))
        (12 (ICONST_1))
        (13 (PUTFIELD (JVM::FIELDCP "closing"
                                    "java.io.PrintStream" BOOLEAN)))
        (16 (ALOAD_0))
        (17 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStreamWriter"))))
        (20 (INVOKEVIRTUAL (METHODCP "close"
                                     "java.io.OutputStreamWriter" NIL VOID)))
        (23 (GOTO 35))
        (26 (ASTORE_2))
        (27 (ALOAD_0))
        (28 (ICONST_1))
        (29 (PUTFIELD (JVM::FIELDCP "trouble"
                                    "java.io.PrintStream" BOOLEAN)))
        (32 (GOTO 35))
        (35 (ALOAD_0))
        (36 (ACONST_NULL))
        (37 (PUTFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStreamWriter"))))
        (40 (ALOAD_0))
        (41 (ACONST_NULL))
        (42 (PUTFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStream"))))
        (45 (ALOAD_1))
        (46 (MONITOREXIT))
        (47 (GOTO 55))
        (50 (ASTORE_3))
        (51 (ALOAD_1))
        (52 (MONITOREXIT))
        (53 (ALOAD_3))
        (54 (ATHROW))
        (55 (RETURN))
        (ENDOFCODE 56))
       (EXCEPTIONS (JVM::HANDLER 16 23 26 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 4 47 50 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 50 53 50 (CLASS "java.lang.Throwable")))
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (50 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (55 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "checkError" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 16)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStreamWriter"))))
           (4 (IFNULL 11))
           (7 (ALOAD_0))
           (8 (INVOKEVIRTUAL (METHODCP "flush"
                                       "java.io.PrintStream" NIL VOID)))
           (11 (ALOAD_0))
           (12 (GETFIELD (JVM::FIELDCP "trouble"
                                       "java.io.PrintStream" BOOLEAN)))
           (15 (IRETURN))
           (ENDOFCODE 16))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.io.PrintStream"))
                            (STACK)
                            NIL)))))
     (METHOD
       "setError" (PARAMETERS)
       (RETURNTYPE . VOID)
       (ACCESSFLAGS *CLASS* *PROTECTED*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 6)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (ICONST_1))
                  (2 (PUTFIELD (JVM::FIELDCP "trouble"
                                             "java.io.PrintStream" BOOLEAN)))
                  (5 (RETURN))
                  (ENDOFCODE 6))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 39)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (DUP))
            (2 (ASTORE_2))
            (3 (MONITORENTER))
            (4 (ALOAD_0))
            (5 (INVOKESPECIAL (METHODCP "ensureOpen"
                                        "java.io.PrintStream" NIL VOID)))
            (8 (ALOAD_0))
            (9 (GETFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                       (CLASS "java.io.OutputStream"))))
            (12 (ILOAD_1))
            (13 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                         VOID)))
            (16 (ALOAD_2))
            (17 (MONITOREXIT))
            (18 (GOTO 26))
            (21 (ASTORE_3))
            (22 (ALOAD_2))
            (23 (MONITOREXIT))
            (24 (ALOAD_3))
            (25 (ATHROW))
            (26 (GOTO 38))
            (29 (ASTORE_2))
            (30 (ALOAD_0))
            (31 (ICONST_1))
            (32 (PUTFIELD (JVM::FIELDCP "trouble"
                                        "java.io.PrintStream" BOOLEAN)))
            (35 (GOTO 38))
            (38 (RETURN))
            (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 4 18 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 21 24 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 0 26 29 (CLASS "java.io.IOException")))
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (38 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 6)
           (CODE_LENGTH . 47)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (DUP))
                (2 (ASTORE 4))
                (4 (MONITORENTER))
                (5 (ALOAD_0))
                (6 (INVOKESPECIAL (METHODCP "ensureOpen"
                                            "java.io.PrintStream" NIL VOID)))
                (9 (ALOAD_0))
                (10 (GETFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                            (CLASS "java.io.OutputStream"))))
                (13 (ALOAD_1))
                (14 (ILOAD_2))
                (15 (ILOAD_3))
                (16 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream"
                                             ((ARRAY BYTE) INT INT)
                                             VOID)))
                (19 (ALOAD 4))
                (21 (MONITOREXIT))
                (22 (GOTO 33))
                (25 (ASTORE 5))
                (27 (ALOAD 4))
                (29 (MONITOREXIT))
                (30 (ALOAD 5))
                (32 (ATHROW))
                (33 (GOTO 46))
                (36 (ASTORE 4))
                (38 (ALOAD_0))
                (39 (ICONST_1))
                (40 (PUTFIELD (JVM::FIELDCP "trouble"
                                            "java.io.PrintStream" BOOLEAN)))
                (43 (GOTO 46))
                (46 (RETURN))
                (ENDOFCODE 47))
           (EXCEPTIONS (JVM::HANDLER 5 22 25 (CLASS "java.lang.Throwable"))
                       (JVM::HANDLER 25 30 25 (CLASS "java.lang.Throwable"))
                       (JVM::HANDLER 0 33 36 (CLASS "java.io.IOException")))
           (STACKMAP (25 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT (CLASS "java.io.PrintStream")
                                        TOPX)
                                (STACK (CLASS "java.lang.Throwable"))
                                NIL))
                     (33 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT (CLASS "java.io.PrintStream")
                                        TOPX)
                                (STACK)
                                NIL))
                     (36 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT TOPX TOPX)
                                (STACK (CLASS "java.io.IOException"))
                                NIL))
                     (46 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT (CLASS "java.lang.Object")
                                        TOPX)
                                (STACK)
                                NIL)))))
     (METHOD
      "write" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 39)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (DUP))
         (2 (ASTORE_2))
         (3 (MONITORENTER))
         (4 (ALOAD_0))
         (5 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.PrintStream" NIL VOID)))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStreamWriter"))))
         (12 (ALOAD_1))
         (13 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer" ((ARRAY CHAR))
                                      VOID)))
         (16 (ALOAD_2))
         (17 (MONITOREXIT))
         (18 (GOTO 26))
         (21 (ASTORE_3))
         (22 (ALOAD_2))
         (23 (MONITOREXIT))
         (24 (ALOAD_3))
         (25 (ATHROW))
         (26 (GOTO 38))
         (29 (ASTORE_2))
         (30 (ALOAD_0))
         (31 (ICONST_1))
         (32 (PUTFIELD (JVM::FIELDCP "trouble"
                                     "java.io.PrintStream" BOOLEAN)))
         (35 (GOTO 38))
         (38 (RETURN))
         (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 4 18 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 21 24 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 0 26 29 (CLASS "java.io.IOException")))
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (38 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD "write"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD "newLine" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "print" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 16)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ILOAD_1))
                   (2 (IFEQ 10))
                   (5 (LDC 2))
                   (7 (GOTO 12))
                   (10 (LDC 3))
                   (12 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                                ((CLASS "java.lang.String"))
                                                VOID)))
                   (15 (RETURN))
                   (ENDOFCODE 16))
       (EXCEPTIONS)
       (STACKMAP (10 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT)
                            (STACK (CLASS "java.io.PrintStream"))
                            NIL))
                 (12 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT)
                            (STACK (CLASS "java.lang.String")
                                   (CLASS "java.io.PrintStream"))
                            NIL)))))
     (METHOD
      "print" (PARAMETERS CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ILOAD_1))
               (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (CHAR)
                                          (CLASS "java.lang.String"))))
               (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                           ((CLASS "java.lang.String"))
                                           VOID)))
               (8 (RETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "print" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 9)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ILOAD_1))
                (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                            ((CLASS "java.lang.String"))
                                            VOID)))
                (8 (RETURN))
                (ENDOFCODE 9))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "print" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (JVM::LLOAD_1))
               (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                          (CLASS "java.lang.String"))))
               (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                           ((CLASS "java.lang.String"))
                                           VOID)))
               (8 (RETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "print" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "write"
                                         "java.io.PrintStream" ((ARRAY CHAR))
                                         VOID)))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "print"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 13)
        (PARSEDCODE (0 (ALOAD_1))
                    (1 (IFNONNULL 7))
                    (4 (LDC 4))
                    (6 (ASTORE_1))
                    (7 (ALOAD_0))
                    (8 (ALOAD_1))
                    (9 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                                ((CLASS "java.lang.String"))
                                                VOID)))
                    (12 (RETURN))
                    (ENDOFCODE 13))
        (EXCEPTIONS)
        (STACKMAP (7 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD
      "print"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE (0 (ALOAD_0))
                    (1 (ALOAD_1))
                    (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                               ((CLASS "java.lang.Object"))
                                               (CLASS "java.lang.String"))))
                    (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                                ((CLASS "java.lang.String"))
                                                VOID)))
                    (8 (RETURN))
                    (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "println" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "newLine"
                                            "java.io.PrintStream" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "println" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 24)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (DUP))
          (2 (ASTORE_2))
          (3 (MONITORENTER))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (BOOLEAN)
                                      VOID)))
          (9 (ALOAD_0))
          (10 (INVOKESPECIAL (METHODCP "newLine"
                                       "java.io.PrintStream" NIL VOID)))
          (13 (ALOAD_2))
          (14 (MONITOREXIT))
          (15 (GOTO 23))
          (18 (ASTORE_3))
          (19 (ALOAD_2))
          (20 (MONITOREXIT))
          (21 (ALOAD_3))
          (22 (ATHROW))
          (23 (RETURN))
          (ENDOFCODE 24))
       (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
       (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "println" (PARAMETERS CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 4)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (ASTORE_2))
             (3 (MONITORENTER))
             (4 (ALOAD_0))
             (5 (ILOAD_1))
             (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (CHAR)
                                         VOID)))
             (9 (ALOAD_0))
             (10 (INVOKESPECIAL (METHODCP "newLine"
                                          "java.io.PrintStream" NIL VOID)))
             (13 (ALOAD_2))
             (14 (MONITOREXIT))
             (15 (GOTO 23))
             (18 (ASTORE_3))
             (19 (ALOAD_2))
             (20 (MONITOREXIT))
             (21 (ALOAD_3))
             (22 (ATHROW))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                    (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
        (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     INT (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL))
                  (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     INT (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "println" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 4)
         (CODE_LENGTH . 24)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (DUP))
              (2 (ASTORE_2))
              (3 (MONITORENTER))
              (4 (ALOAD_0))
              (5 (ILOAD_1))
              (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (INT)
                                          VOID)))
              (9 (ALOAD_0))
              (10 (INVOKESPECIAL (METHODCP "newLine"
                                           "java.io.PrintStream" NIL VOID)))
              (13 (ALOAD_2))
              (14 (MONITOREXIT))
              (15 (GOTO 23))
              (18 (ASTORE_3))
              (19 (ALOAD_2))
              (20 (MONITOREXIT))
              (21 (ALOAD_3))
              (22 (ATHROW))
              (23 (RETURN))
              (ENDOFCODE 24))
         (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                     (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
         (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                      INT (CLASS "java.io.PrintStream")
                                      TOPX)
                              (STACK (CLASS "java.lang.Throwable"))
                              NIL))
                   (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                      INT (CLASS "java.io.PrintStream")
                                      TOPX)
                              (STACK)
                              NIL)))))
     (METHOD
      "println" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 5)
        (CODE_LENGTH . 26)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (ASTORE_3))
             (3 (MONITORENTER))
             (4 (ALOAD_0))
             (5 (JVM::LLOAD_1))
             (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (LONG)
                                         VOID)))
             (9 (ALOAD_0))
             (10 (INVOKESPECIAL (METHODCP "newLine"
                                          "java.io.PrintStream" NIL VOID)))
             (13 (ALOAD_3))
             (14 (MONITOREXIT))
             (15 (GOTO 25))
             (18 (ASTORE 4))
             (20 (ALOAD_3))
             (21 (MONITOREXIT))
             (22 (ALOAD 4))
             (24 (ATHROW))
             (25 (RETURN))
             (ENDOFCODE 26))
        (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                    (JVM::HANDLER 18 22 18 (CLASS "java.lang.Throwable")))
        (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     LONG TOPX (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL))
                  (25 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     LONG TOPX (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "println" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 4)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (ASTORE_2))
             (3 (MONITORENTER))
             (4 (ALOAD_0))
             (5 (ALOAD_1))
             (6 (INVOKEVIRTUAL (METHODCP "print"
                                         "java.io.PrintStream" ((ARRAY CHAR))
                                         VOID)))
             (9 (ALOAD_0))
             (10 (INVOKESPECIAL (METHODCP "newLine"
                                          "java.io.PrintStream" NIL VOID)))
             (13 (ALOAD_2))
             (14 (MONITOREXIT))
             (15 (GOTO 23))
             (18 (ASTORE_3))
             (19 (ALOAD_2))
             (20 (MONITOREXIT))
             (21 (ALOAD_3))
             (22 (ATHROW))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                    (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
        (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     (ARRAY CHAR)
                                     (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL))
                  (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     (ARRAY CHAR)
                                     (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "println"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 4)
          (CODE_LENGTH . 24)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (DUP))
               (2 (ASTORE_2))
               (3 (MONITORENTER))
               (4 (ALOAD_0))
               (5 (ALOAD_1))
               (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                           ((CLASS "java.lang.String"))
                                           VOID)))
               (9 (ALOAD_0))
               (10 (INVOKESPECIAL (METHODCP "newLine"
                                            "java.io.PrintStream" NIL VOID)))
               (13 (ALOAD_2))
               (14 (MONITOREXIT))
               (15 (GOTO 23))
               (18 (ASTORE_3))
               (19 (ALOAD_2))
               (20 (MONITOREXIT))
               (21 (ALOAD_3))
               (22 (ATHROW))
               (23 (RETURN))
               (ENDOFCODE 24))
          (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
          (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.String")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK (CLASS "java.lang.Throwable"))
                               NIL))
                    (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.String")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK)
                               NIL)))))
     (METHOD
      "println"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 4)
          (CODE_LENGTH . 24)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (DUP))
               (2 (ASTORE_2))
               (3 (MONITORENTER))
               (4 (ALOAD_0))
               (5 (ALOAD_1))
               (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                           ((CLASS "java.lang.Object"))
                                           VOID)))
               (9 (ALOAD_0))
               (10 (INVOKESPECIAL (METHODCP "newLine"
                                            "java.io.PrintStream" NIL VOID)))
               (13 (ALOAD_2))
               (14 (MONITOREXIT))
               (15 (GOTO 23))
               (18 (ASTORE_3))
               (19 (ALOAD_2))
               (20 (MONITOREXIT))
               (21 (ALOAD_3))
               (22 (ATHROW))
               (23 (RETURN))
               (ENDOFCODE 24))
          (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
          (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.Object")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK (CLASS "java.lang.Throwable"))
                               NIL))
                    (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.Object")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK)
                               NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.OutputStreamWriter"
    "java.io.Writer"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "out" (CLASS "java.io.Writer")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 13)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Writer" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ALOAD_1))
            (6 (INVOKESTATIC (METHODCP "getStreamWriter"
                                       "com.sun.cldc.i18n.Helper"
                                       ((CLASS "java.io.OutputStream"))
                                       (CLASS "java.io.Writer"))))
            (9 (PUTFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                       (CLASS "java.io.Writer"))))
            (12 (RETURN))
            (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 14)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Writer" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ALOAD_1))
            (6 (ALOAD_2))
            (7 (INVOKESTATIC (METHODCP "getStreamWriter"
                                       "com.sun.cldc.i18n.Helper"
                                       ((CLASS "java.io.OutputStream")
                                        (CLASS "java.lang.String"))
                                       (CLASS "java.io.Writer"))))
            (10 (PUTFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                        (CLASS "java.io.Writer"))))
            (13 (RETURN))
            (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 18)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                           (CLASS "java.io.Writer"))))
                (4 (IFNONNULL 17))
                (7 (NEW (CLASS "java.io.IOException")))
                (10 (DUP))
                (11 (LDC 0))
                (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                             ((CLASS "java.lang.String"))
                                             VOID)))
                (16 (ATHROW))
                (17 (RETURN))
                (ENDOFCODE 18))
           (EXCEPTIONS)
           (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter"))
                                (STACK)
                                NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 13)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                    (CLASS "java.io.Writer"))))
         (8 (ILOAD_1))
         (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer" (INT)
                                     VOID)))
         (12 (RETURN))
         (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ILOAD_2))
         (5 (IFLT 32))
         (8 (ILOAD_2))
         (9 (ALOAD_1))
         (10 (ARRAYLENGTH))
         (11 (IF_ICMPGT 32))
         (14 (ILOAD_3))
         (15 (IFLT 32))
         (18 (ILOAD_2))
         (19 (ILOAD_3))
         (20 (IADD))
         (21 (ALOAD_1))
         (22 (ARRAYLENGTH))
         (23 (IF_ICMPGT 32))
         (26 (ILOAD_2))
         (27 (ILOAD_3))
         (28 (IADD))
         (29 (IFGE 40))
         (32 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (35 (DUP))
         (36 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      NIL VOID)))
         (39 (ATHROW))
         (40 (ILOAD_3))
         (41 (IFNE 45))
         (44 (RETURN))
         (45 (ALOAD_0))
         (46 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                     (CLASS "java.io.Writer"))))
         (49 (ALOAD_1))
         (50 (ILOAD_2))
         (51 (ILOAD_3))
         (52 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
         (55 (RETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (32 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 60)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ILOAD_2))
         (5 (IFLT 36))
         (8 (ILOAD_2))
         (9 (ALOAD_1))
         (10 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
         (13 (IF_ICMPGT 36))
         (16 (ILOAD_3))
         (17 (IFLT 36))
         (20 (ILOAD_2))
         (21 (ILOAD_3))
         (22 (IADD))
         (23 (ALOAD_1))
         (24 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
         (27 (IF_ICMPGT 36))
         (30 (ILOAD_2))
         (31 (ILOAD_3))
         (32 (IADD))
         (33 (IFGE 44))
         (36 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (39 (DUP))
         (40 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      NIL VOID)))
         (43 (ATHROW))
         (44 (ILOAD_3))
         (45 (IFNE 49))
         (48 (RETURN))
         (49 (ALOAD_0))
         (50 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                     (CLASS "java.io.Writer"))))
         (53 (ALOAD_1))
         (54 (ILOAD_2))
         (55 (ILOAD_3))
         (56 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer"
                                      ((CLASS "java.lang.String") INT INT)
                                      VOID)))
         (59 (RETURN))
         (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (36 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                    (CLASS "java.io.Writer"))))
         (8 (INVOKEVIRTUAL (METHODCP "flush" "java.io.Writer" NIL VOID)))
         (11 (RETURN))
         (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                       (CLASS "java.io.Writer"))))
            (4 (IFNULL 19))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                       (CLASS "java.io.Writer"))))
            (11 (INVOKEVIRTUAL (METHODCP "close" "java.io.Writer" NIL VOID)))
            (14 (ALOAD_0))
            (15 (ACONST_NULL))
            (16 (PUTFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                        (CLASS "java.io.Writer"))))
            (19 (RETURN))
            (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP (19 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.ByteArrayInputStream"
    "java.io.InputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "pos"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "mark"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 26)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.io.InputStream" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ICONST_0))
            (6 (PUTFIELD (JVM::FIELDCP "mark"
                                       "java.io.ByteArrayInputStream" INT)))
            (9 (ALOAD_0))
            (10 (ALOAD_1))
            (11 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                        (ARRAY BYTE))))
            (14 (ALOAD_0))
            (15 (ICONST_0))
            (16 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (19 (ALOAD_0))
            (20 (ALOAD_1))
            (21 (ARRAYLENGTH))
            (22 (PUTFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
            (25 (RETURN))
            (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 37)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.io.InputStream" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ICONST_0))
            (6 (PUTFIELD (JVM::FIELDCP "mark"
                                       "java.io.ByteArrayInputStream" INT)))
            (9 (ALOAD_0))
            (10 (ALOAD_1))
            (11 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                        (ARRAY BYTE))))
            (14 (ALOAD_0))
            (15 (ILOAD_2))
            (16 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (19 (ALOAD_0))
            (20 (ILOAD_2))
            (21 (ILOAD_3))
            (22 (IADD))
            (23 (ALOAD_1))
            (24 (ARRAYLENGTH))
            (25 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                        INT)))
            (28 (PUTFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
            (31 (ALOAD_0))
            (32 (ILOAD_2))
            (33 (PUTFIELD (JVM::FIELDCP "mark"
                                        "java.io.ByteArrayInputStream" INT)))
            (36 (RETURN))
            (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
            (4 (ALOAD_0))
            (5 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
            (8 (IF_ICMPGE 34))
            (11 (ALOAD_0))
            (12 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                        (ARRAY BYTE))))
            (15 (ALOAD_0))
            (16 (DUP))
            (17 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (20 (DUP_X1))
            (21 (ICONST_1))
            (22 (IADD))
            (23 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (26 (BALOAD))
            (27 (JVM::SIPUSH 255))
            (30 (JVM::IAND))
            (31 (GOTO 35))
            (34 (ICONST_M1))
            (35 (IRETURN))
            (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP (34 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream"))
                            (STACK)
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 116)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (IFNONNULL 12))
           (4 (NEW (CLASS "java.lang.NullPointerException")))
           (7 (DUP))
           (8 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
           (11 (ATHROW))
           (12 (ILOAD_2))
           (13 (IFLT 40))
           (16 (ILOAD_2))
           (17 (ALOAD_1))
           (18 (ARRAYLENGTH))
           (19 (IF_ICMPGT 40))
           (22 (ILOAD_3))
           (23 (IFLT 40))
           (26 (ILOAD_2))
           (27 (ILOAD_3))
           (28 (IADD))
           (29 (ALOAD_1))
           (30 (ARRAYLENGTH))
           (31 (IF_ICMPGT 40))
           (34 (ILOAD_2))
           (35 (ILOAD_3))
           (36 (IADD))
           (37 (IFGE 48))
           (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
           (43 (DUP))
           (44 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
           (47 (ATHROW))
           (48 (ALOAD_0))
           (49 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (52 (ALOAD_0))
           (53 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
           (56 (IF_ICMPLT 61))
           (59 (ICONST_M1))
           (60 (IRETURN))
           (61 (ALOAD_0))
           (62 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (65 (ILOAD_3))
           (66 (IADD))
           (67 (ALOAD_0))
           (68 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
           (71 (IF_ICMPLE 84))
           (74 (ALOAD_0))
           (75 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
           (78 (ALOAD_0))
           (79 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (82 (ISUB))
           (83 (ISTORE_3))
           (84 (ILOAD_3))
           (85 (IFGT 90))
           (88 (ICONST_0))
           (89 (IRETURN))
           (90 (ALOAD_0))
           (91 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                       (ARRAY BYTE))))
           (94 (ALOAD_0))
           (95 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (98 (ALOAD_1))
           (99 (ILOAD_2))
           (100 (ILOAD_3))
           (101 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                        ((CLASS "java.lang.Object")
                                         INT (CLASS "java.lang.Object")
                                         INT INT)
                                        VOID)))
           (104 (ALOAD_0))
           (105 (DUP))
           (106 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
           (109 (ILOAD_3))
           (110 (IADD))
           (111 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
           (114 (ILOAD_3))
           (115 (IRETURN))
           (ENDOFCODE 116))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (61 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (84 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (90 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 49)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
            (4 (JVM::I2L))
            (5 (JVM::LLOAD_1))
            (6 (JVM::LADD))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
            (11 (JVM::I2L))
            (12 (LCMP))
            (13 (IFLE 27))
            (16 (ALOAD_0))
            (17 (GETFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
            (20 (ALOAD_0))
            (21 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (24 (ISUB))
            (25 (JVM::I2L))
            (26 (JVM::LSTORE_1))
            (27 (JVM::LLOAD_1))
            (28 (LCONST_0))
            (29 (LCMP))
            (30 (IFGE 35))
            (33 (LCONST_0))
            (34 (JVM::LRETURN))
            (35 (ALOAD_0))
            (36 (DUP))
            (37 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (40 (JVM::I2L))
            (41 (JVM::LLOAD_1))
            (42 (JVM::LADD))
            (43 (JVM::L2I))
            (44 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (47 (JVM::LLOAD_1))
            (48 (JVM::LRETURN))
            (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP (27 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    LONG TOPX)
                            (STACK)
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    LONG TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
             (8 (ISUB))
             (9 (IRETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD "markSupported" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_1))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
             (5 (PUTFIELD (JVM::FIELDCP "mark"
                                        "java.io.ByteArrayInputStream" INT)))
             (8 (RETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "mark"
                                        "java.io.ByteArrayInputStream" INT)))
             (5 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
             (8 (RETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.ByteArrayOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Writing to closed ByteArrayOutputStream")
                   (STRING "Negative initial size: "))
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "isClosed"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "isClosed"
                                      "java.io.ByteArrayOutputStream"
                                      BOOLEAN)))
           (4 (IFEQ 17))
           (7 (NEW (CLASS "java.lang.RuntimeException")))
           (10 (DUP))
           (11 (LDC 0))
           (13 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (16 (ATHROW))
           (17 (RETURN))
           (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream"))
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (BIPUSH 32))
            (3 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.io.ByteArrayOutputStream" (INT)
                                        VOID)))
            (6 (RETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 48)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.OutputStream" NIL VOID)))
         (4 (ALOAD_0))
         (5 (ICONST_0))
         (6 (PUTFIELD (JVM::FIELDCP "isClosed"
                                    "java.io.ByteArrayOutputStream"
                                    BOOLEAN)))
         (9 (ILOAD_1))
         (10 (IFGE 40))
         (13 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (16 (DUP))
         (17 (NEW (CLASS "java.lang.StringBuffer")))
         (20 (DUP))
         (21 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (24 (LDC 1))
         (26 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (29 (ILOAD_1))
         (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (33 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (36 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (39 (ATHROW))
         (40 (ALOAD_0))
         (41 (ILOAD_1))
         (42 (NEWARRAY BYTE))
         (44 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                     (ARRAY BYTE))))
         (47 (RETURN))
         (ENDOFCODE 48))
       (EXCEPTIONS)
       (STACKMAP (40 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 70)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                       "java.io.ByteArrayOutputStream"
                                       NIL VOID)))
           (4 (ALOAD_0))
           (5 (GETFIELD (JVM::FIELDCP "count"
                                      "java.io.ByteArrayOutputStream" INT)))
           (8 (ICONST_1))
           (9 (IADD))
           (10 (ISTORE_2))
           (11 (ILOAD_2))
           (12 (ALOAD_0))
           (13 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (16 (ARRAYLENGTH))
           (17 (IF_ICMPLE 53))
           (20 (ALOAD_0))
           (21 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (24 (ARRAYLENGTH))
           (25 (ICONST_1))
           (26 (JVM::ISHL))
           (27 (ILOAD_2))
           (28 (INVOKESTATIC (METHODCP "max" "java.lang.Math" (INT INT)
                                       INT)))
           (31 (NEWARRAY BYTE))
           (33 (ASTORE_3))
           (34 (ALOAD_0))
           (35 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (38 (ICONST_0))
           (39 (ALOAD_3))
           (40 (ICONST_0))
           (41 (ALOAD_0))
           (42 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (45 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                       ((CLASS "java.lang.Object")
                                        INT (CLASS "java.lang.Object")
                                        INT INT)
                                       VOID)))
           (48 (ALOAD_0))
           (49 (ALOAD_3))
           (50 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (53 (ALOAD_0))
           (54 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (57 (ALOAD_0))
           (58 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (61 (ILOAD_1))
           (62 (JVM::I2B))
           (63 (BASTORE))
           (64 (ALOAD_0))
           (65 (ILOAD_2))
           (66 (PUTFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (69 (RETURN))
           (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP (53 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 121)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                      "java.io.ByteArrayOutputStream"
                                      NIL VOID)))
          (4 (ILOAD_2))
          (5 (IFLT 32))
          (8 (ILOAD_2))
          (9 (ALOAD_1))
          (10 (ARRAYLENGTH))
          (11 (IF_ICMPGT 32))
          (14 (ILOAD_3))
          (15 (IFLT 32))
          (18 (ILOAD_2))
          (19 (ILOAD_3))
          (20 (IADD))
          (21 (ALOAD_1))
          (22 (ARRAYLENGTH))
          (23 (IF_ICMPGT 32))
          (26 (ILOAD_2))
          (27 (ILOAD_3))
          (28 (IADD))
          (29 (IFGE 40))
          (32 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
          (35 (DUP))
          (36 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.IndexOutOfBoundsException"
                                       NIL VOID)))
          (39 (ATHROW))
          (40 (ILOAD_3))
          (41 (IFNE 45))
          (44 (RETURN))
          (45 (ALOAD_0))
          (46 (GETFIELD (JVM::FIELDCP "count"
                                      "java.io.ByteArrayOutputStream" INT)))
          (49 (ILOAD_3))
          (50 (IADD))
          (51 (ISTORE 4))
          (53 (ILOAD 4))
          (55 (ALOAD_0))
          (56 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (59 (ARRAYLENGTH))
          (60 (IF_ICMPLE 100))
          (63 (ALOAD_0))
          (64 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (67 (ARRAYLENGTH))
          (68 (ICONST_1))
          (69 (JVM::ISHL))
          (70 (ILOAD 4))
          (72 (INVOKESTATIC (METHODCP "max" "java.lang.Math" (INT INT)
                                      INT)))
          (75 (NEWARRAY BYTE))
          (77 (ASTORE 5))
          (79 (ALOAD_0))
          (80 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (83 (ICONST_0))
          (84 (ALOAD 5))
          (86 (ICONST_0))
          (87 (ALOAD_0))
          (88 (GETFIELD (JVM::FIELDCP "count"
                                      "java.io.ByteArrayOutputStream" INT)))
          (91 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                      ((CLASS "java.lang.Object")
                                       INT (CLASS "java.lang.Object")
                                       INT INT)
                                      VOID)))
          (94 (ALOAD_0))
          (95 (ALOAD 5))
          (97 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (100 (ALOAD_1))
          (101 (ILOAD_2))
          (102 (ALOAD_0))
          (103 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
          (106 (ALOAD_0))
          (107 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
          (110 (ILOAD_3))
          (111 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                       ((CLASS "java.lang.Object")
                                        INT (CLASS "java.lang.Object")
                                        INT INT)
                                       VOID)))
          (114 (ALOAD_0))
          (115 (ILOAD 4))
          (117 (PUTFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
          (120 (RETURN))
          (ENDOFCODE 121))
       (EXCEPTIONS)
       (STACKMAP (32 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (100 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                     (ARRAY BYTE)
                                     INT INT INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                        "java.io.ByteArrayOutputStream"
                                        NIL VOID)))
            (4 (ALOAD_0))
            (5 (ICONST_0))
            (6 (PUTFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
            (9 (RETURN))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toByteArray" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 47)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "isClosed"
                                      "java.io.ByteArrayOutputStream"
                                      BOOLEAN)))
           (4 (IFEQ 24))
           (7 (ALOAD_0))
           (8 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
           (11 (ARRAYLENGTH))
           (12 (ALOAD_0))
           (13 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (16 (IF_ICMPNE 24))
           (19 (ALOAD_0))
           (20 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (23 (ARETURN))
           (24 (ALOAD_0))
           (25 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (28 (NEWARRAY BYTE))
           (30 (ASTORE_1))
           (31 (ALOAD_0))
           (32 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (35 (ICONST_0))
           (36 (ALOAD_1))
           (37 (ICONST_0))
           (38 (ALOAD_0))
           (39 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (42 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                       ((CLASS "java.lang.Object")
                                        INT (CLASS "java.lang.Object")
                                        INT INT)
                                       VOID)))
           (45 (ALOAD_1))
           (46 (ARETURN))
           (ENDOFCODE 47))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
            (4 (IRETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
           (0 (NEW (CLASS "java.lang.String")))
           (3 (DUP))
           (4 (ALOAD_0))
           (5 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
           (8 (ICONST_0))
           (9 (ALOAD_0))
           (10 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (13 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                        ((ARRAY BYTE) INT INT)
                                        VOID)))
           (16 (ARETURN))
           (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ICONST_1))
                   (2 (PUTFIELD (JVM::FIELDCP "isClosed"
                                              "java.io.ByteArrayOutputStream"
                                              BOOLEAN)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.DataInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (LONG 4294967295))
    (FIELDS (FIELD "in" (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 10)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.InputStream" NIL VOID)))
                (4 (ALOAD_0))
                (5 (ALOAD_1))
                (6 (PUTFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                           (CLASS "java.io.InputStream"))))
                (9 (RETURN))
                (ENDOFCODE 10))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                     (CLASS "java.io.InputStream"))))
          (4 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
          (7 (IRETURN))
          (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "read" (PARAMETERS (ARRAY BYTE))
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
       (CODE (MAX_STACK . 4)
             (JVM::MAX_LOCALS . 2)
             (CODE_LENGTH . 12)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                             (CLASS "java.io.InputStream"))))
                  (4 (ALOAD_1))
                  (5 (ICONST_0))
                  (6 (ALOAD_1))
                  (7 (ARRAYLENGTH))
                  (8 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                              ((ARRAY BYTE) INT INT)
                                              INT)))
                  (11 (IRETURN))
                  (ENDOFCODE 12))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
       "read" (PARAMETERS (ARRAY BYTE) INT INT)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
       (CODE (MAX_STACK . 4)
             (JVM::MAX_LOCALS . 4)
             (CODE_LENGTH . 11)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                             (CLASS "java.io.InputStream"))))
                  (4 (ALOAD_1))
                  (5 (ILOAD_2))
                  (6 (ILOAD_3))
                  (7 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                              ((ARRAY BYTE) INT INT)
                                              INT)))
                  (10 (IRETURN))
                  (ENDOFCODE 11))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "readFully" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (ICONST_0))
            (3 (ALOAD_1))
            (4 (ARRAYLENGTH))
            (5 (INVOKEVIRTUAL (METHODCP "readFully" "java.io.DataInputStream"
                                        ((ARRAY BYTE) INT INT)
                                        VOID)))
            (8 (RETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readFully"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 60)
       (PARSEDCODE
            (0 (ILOAD_3))
            (1 (IFGE 12))
            (4 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
            (7 (DUP))
            (8 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
            (11 (ATHROW))
            (12 (ICONST_0))
            (13 (ISTORE 4))
            (15 (GOTO 53))
            (18 (ALOAD_0))
            (19 (ALOAD_1))
            (20 (ILOAD_2))
            (21 (ILOAD 4))
            (23 (IADD))
            (24 (ILOAD_3))
            (25 (ILOAD 4))
            (27 (ISUB))
            (28 (INVOKEVIRTUAL (METHODCP "read" "java.io.DataInputStream"
                                         ((ARRAY BYTE) INT INT)
                                         INT)))
            (31 (ISTORE 5))
            (33 (ILOAD 5))
            (35 (IFGE 46))
            (38 (NEW (CLASS "java.io.EOFException")))
            (41 (DUP))
            (42 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.io.EOFException" NIL VOID)))
            (45 (ATHROW))
            (46 (ILOAD 4))
            (48 (ILOAD 5))
            (50 (IADD))
            (51 (ISTORE 4))
            (53 (ILOAD 4))
            (55 (ILOAD_3))
            (56 (IF_ICMPLT 18))
            (59 (RETURN))
            (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (18 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT INT INT)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "skipBytes" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 32)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_2))
         (2 (ICONST_0))
         (3 (ISTORE_3))
         (4 (GOTO 11))
         (7 (ILOAD_2))
         (8 (ILOAD_3))
         (9 (IADD))
         (10 (ISTORE_2))
         (11 (ILOAD_2))
         (12 (ILOAD_1))
         (13 (IF_ICMPGE 30))
         (16 (ALOAD_0))
         (17 (ILOAD_1))
         (18 (ILOAD_2))
         (19 (ISUB))
         (20 (JVM::I2L))
         (21 (INVOKEVIRTUAL (METHODCP "skip" "java.io.DataInputStream" (LONG)
                                      LONG)))
         (24 (JVM::L2I))
         (25 (DUP))
         (26 (ISTORE_3))
         (27 (IFGT 7))
         (30 (ILOAD_2))
         (31 (IRETURN))
         (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (7 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                   INT INT INT)
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readBoolean" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 27)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ILOAD_1))
             (6 (IFGE 17))
             (9 (NEW (CLASS "java.io.EOFException")))
             (12 (DUP))
             (13 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (16 (ATHROW))
             (17 (ILOAD_1))
             (18 (IFEQ 25))
             (21 (ICONST_1))
             (22 (GOTO 26))
             (25 (ICONST_0))
             (26 (IRETURN))
             (ENDOFCODE 27))
        (EXCEPTIONS)
        (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL))
                  (25 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL))
                  (26 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK INT)
                             NIL)))))
     (METHOD
      "readByte" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 20)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ILOAD_1))
             (6 (IFGE 17))
             (9 (NEW (CLASS "java.io.EOFException")))
             (12 (DUP))
             (13 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (16 (ATHROW))
             (17 (ILOAD_1))
             (18 (JVM::I2B))
             (19 (IRETURN))
             (ENDOFCODE 20))
        (EXCEPTIONS)
        (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "readUnsignedByte" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ILOAD_1))
             (6 (IFGE 17))
             (9 (NEW (CLASS "java.io.EOFException")))
             (12 (DUP))
             (13 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (16 (ATHROW))
             (17 (ILOAD_1))
             (18 (IRETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS)
        (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "readShort" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "readUnsignedShort"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (JVM::I2S))
             (5 (IRETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readUnsignedShort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 33)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ALOAD_0))
             (6 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (9 (ISTORE_2))
             (10 (ILOAD_1))
             (11 (ILOAD_2))
             (12 (JVM::IOR))
             (13 (IFGE 24))
             (16 (NEW (CLASS "java.io.EOFException")))
             (19 (DUP))
             (20 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (23 (ATHROW))
             (24 (ILOAD_1))
             (25 (BIPUSH 8))
             (27 (JVM::ISHL))
             (28 (ILOAD_2))
             (29 (ICONST_0))
             (30 (JVM::ISHL))
             (31 (IADD))
             (32 (IRETURN))
             (ENDOFCODE 33))
        (EXCEPTIONS)
        (STACKMAP (24 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "readChar" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "readUnsignedShort"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (JVM::I2C))
             (5 (IRETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readInt" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 60)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "read"
                                        "java.io.DataInputStream" NIL INT)))
            (4 (ISTORE_1))
            (5 (ALOAD_0))
            (6 (INVOKEVIRTUAL (METHODCP "read"
                                        "java.io.DataInputStream" NIL INT)))
            (9 (ISTORE_2))
            (10 (ALOAD_0))
            (11 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
            (14 (ISTORE_3))
            (15 (ALOAD_0))
            (16 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
            (19 (ISTORE 4))
            (21 (ILOAD_1))
            (22 (ILOAD_2))
            (23 (JVM::IOR))
            (24 (ILOAD_3))
            (25 (JVM::IOR))
            (26 (ILOAD 4))
            (28 (JVM::IOR))
            (29 (IFGE 40))
            (32 (NEW (CLASS "java.io.EOFException")))
            (35 (DUP))
            (36 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.io.EOFException" NIL VOID)))
            (39 (ATHROW))
            (40 (ILOAD_1))
            (41 (BIPUSH 24))
            (43 (JVM::ISHL))
            (44 (ILOAD_2))
            (45 (BIPUSH 16))
            (47 (JVM::ISHL))
            (48 (IADD))
            (49 (ILOAD_3))
            (50 (BIPUSH 8))
            (52 (JVM::ISHL))
            (53 (IADD))
            (54 (ILOAD 4))
            (56 (ICONST_0))
            (57 (JVM::ISHL))
            (58 (IADD))
            (59 (IRETURN))
            (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (40 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    INT INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 6)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "readInt"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (JVM::I2L))
             (5 (BIPUSH 32))
             (7 (JVM::LSHL))
             (8 (ALOAD_0))
             (9 (INVOKEVIRTUAL (METHODCP "readInt"
                                         "java.io.DataInputStream" NIL INT)))
             (12 (JVM::I2L))
             (13 (JVM::LDC2_W 0))
             (16 (JVM::LAND))
             (17 (JVM::LADD))
             (18 (JVM::LRETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readUTF" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESTATIC (METHODCP "readUTF" "java.io.DataInputStream"
                                          ((CLASS "java.io.DataInput"))
                                          (CLASS "java.lang.String"))))
               (4 (ARETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "readUTF"
      (PARAMETERS (CLASS "java.io.DataInput"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 328)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEINTERFACE (METHODCP "readUnsignedShort"
                                      "java.io.DataInput" NIL INT)
                            1))
        (6 (ISTORE_1))
        (7 (NEW (CLASS "java.lang.StringBuffer")))
        (10 (DUP))
        (11 (ILOAD_1))
        (12 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                     VOID)))
        (15 (ASTORE_2))
        (16 (ILOAD_1))
        (17 (NEWARRAY BYTE))
        (19 (ASTORE_3))
        (20 (ICONST_0))
        (21 (ISTORE 7))
        (23 (ALOAD_0))
        (24 (ALOAD_3))
        (25 (ICONST_0))
        (26 (ILOAD_1))
        (27 (INVOKEINTERFACE (METHODCP "readFully" "java.io.DataInput"
                                       ((ARRAY BYTE) INT INT)
                                       VOID)
                             4))
        (32 (GOTO 313))
        (35 (ALOAD_3))
        (36 (ILOAD 7))
        (38 (BALOAD))
        (39 (JVM::SIPUSH 255))
        (42 (JVM::IAND))
        (43 (ISTORE 4))
        (45 (ILOAD 4))
        (47 (ICONST_4))
        (48 (JVM::ISHR))
        (49
         (JVM::TABLESWITCH
           (JVM::TABLESWITCHINFO 305 (0 . 14)
                                 (124 124 124 124 124 124
                                      124 124 305 305 305 305 138 138 206))))
        (124 (IINC 7 1))
        (127 (ALOAD_2))
        (128 (ILOAD 4))
        (130 (JVM::I2C))
        (131
            (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (134 (POP))
        (135 (GOTO 313))
        (138 (IINC 7 2))
        (141 (ILOAD 7))
        (143 (ILOAD_1))
        (144 (IF_ICMPLE 155))
        (147 (NEW (CLASS "java.io.UTFDataFormatException")))
        (150 (DUP))
        (151 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (154 (ATHROW))
        (155 (ALOAD_3))
        (156 (ILOAD 7))
        (158 (ICONST_1))
        (159 (ISUB))
        (160 (BALOAD))
        (161 (ISTORE 5))
        (163 (ILOAD 5))
        (165 (JVM::SIPUSH 192))
        (168 (JVM::IAND))
        (169 (JVM::SIPUSH 128))
        (172 (IF_ICMPEQ 183))
        (175 (NEW (CLASS "java.io.UTFDataFormatException")))
        (178 (DUP))
        (179 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (182 (ATHROW))
        (183 (ALOAD_2))
        (184 (ILOAD 4))
        (186 (BIPUSH 31))
        (188 (JVM::IAND))
        (189 (BIPUSH 6))
        (191 (JVM::ISHL))
        (192 (ILOAD 5))
        (194 (BIPUSH 63))
        (196 (JVM::IAND))
        (197 (JVM::IOR))
        (198 (JVM::I2C))
        (199
            (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (202 (POP))
        (203 (GOTO 313))
        (206 (IINC 7 3))
        (209 (ILOAD 7))
        (211 (ILOAD_1))
        (212 (IF_ICMPLE 223))
        (215 (NEW (CLASS "java.io.UTFDataFormatException")))
        (218 (DUP))
        (219 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (222 (ATHROW))
        (223 (ALOAD_3))
        (224 (ILOAD 7))
        (226 (ICONST_2))
        (227 (ISUB))
        (228 (BALOAD))
        (229 (ISTORE 5))
        (231 (ALOAD_3))
        (232 (ILOAD 7))
        (234 (ICONST_1))
        (235 (ISUB))
        (236 (BALOAD))
        (237 (ISTORE 6))
        (239 (ILOAD 5))
        (241 (JVM::SIPUSH 192))
        (244 (JVM::IAND))
        (245 (JVM::SIPUSH 128))
        (248 (IF_ICMPNE 263))
        (251 (ILOAD 6))
        (253 (JVM::SIPUSH 192))
        (256 (JVM::IAND))
        (257 (JVM::SIPUSH 128))
        (260 (IF_ICMPEQ 271))
        (263 (NEW (CLASS "java.io.UTFDataFormatException")))
        (266 (DUP))
        (267 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (270 (ATHROW))
        (271 (ALOAD_2))
        (272 (ILOAD 4))
        (274 (BIPUSH 15))
        (276 (JVM::IAND))
        (277 (BIPUSH 12))
        (279 (JVM::ISHL))
        (280 (ILOAD 5))
        (282 (BIPUSH 63))
        (284 (JVM::IAND))
        (285 (BIPUSH 6))
        (287 (JVM::ISHL))
        (288 (JVM::IOR))
        (289 (ILOAD 6))
        (291 (BIPUSH 63))
        (293 (JVM::IAND))
        (294 (ICONST_0))
        (295 (JVM::ISHL))
        (296 (JVM::IOR))
        (297 (JVM::I2C))
        (298
            (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (301 (POP))
        (302 (GOTO 313))
        (305 (NEW (CLASS "java.io.UTFDataFormatException")))
        (308 (DUP))
        (309 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (312 (ATHROW))
        (313 (ILOAD 7))
        (315 (ILOAD_1))
        (316 (IF_ICMPLT 35))
        (319 (NEW (CLASS "java.lang.String")))
        (322 (DUP))
        (323 (ALOAD_2))
        (324 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                      ((CLASS "java.lang.StringBuffer"))
                                      VOID)))
        (327 (ARETURN))
        (ENDOFCODE 328))
       (EXCEPTIONS)
       (STACKMAP (35 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (ARRAY BYTE)
                                    TOPX TOPX TOPX INT)
                            (STACK)
                            NIL))
                 (124 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (138 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (155 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (183 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT INT TOPX INT)
                             (STACK)
                             NIL))
                 (206 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (223 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (263 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (271 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (305 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (313 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     TOPX TOPX TOPX INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                         (CLASS "java.io.InputStream"))))
              (4 (JVM::LLOAD_1))
              (5 (INVOKEVIRTUAL (METHODCP "skip" "java.io.InputStream" (LONG)
                                          LONG)))
              (8 (JVM::LRETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 8)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                            (CLASS "java.io.InputStream"))))
                 (4 (INVOKEVIRTUAL (METHODCP "available"
                                             "java.io.InputStream" NIL INT)))
                 (7 (IRETURN))
                 (ENDOFCODE 8))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                           (CLASS "java.io.InputStream"))))
                (4 (INVOKEVIRTUAL (METHODCP "close"
                                            "java.io.InputStream" NIL VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                          (CLASS "java.io.InputStream"))))
               (4 (ILOAD_1))
               (5 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                           VOID)))
               (8 (RETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                           (CLASS "java.io.InputStream"))))
                (4 (INVOKEVIRTUAL (METHODCP "reset"
                                            "java.io.InputStream" NIL VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "markSupported" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                         "java.io.InputStream" NIL BOOLEAN)))
             (7 (IRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES "java.io.DataInput")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.io.DataInput"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "readFully" (PARAMETERS (ARRAY BYTE))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readFully"
                           (PARAMETERS (ARRAY BYTE) INT INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "skipBytes" (PARAMETERS INT)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readBoolean" (PARAMETERS)
                           (RETURNTYPE . BOOLEAN)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readByte" (PARAMETERS)
                           (RETURNTYPE . BYTE)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readUnsignedByte" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readShort" (PARAMETERS)
                           (RETURNTYPE . SHORT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readUnsignedShort" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readChar" (PARAMETERS)
                           (RETURNTYPE . CHAR)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readInt" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readLong" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readUTF" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.io.DataOutputStream"
    "java.io.OutputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "out" (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 10)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESPECIAL (METHODCP "<init>"
                                           "java.io.OutputStream" NIL VOID)))
               (4 (ALOAD_0))
               (5 (ALOAD_1))
               (6 (PUTFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                          (CLASS "java.io.OutputStream"))))
               (9 (RETURN))
               (ENDOFCODE 10))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                        (CLASS "java.io.OutputStream"))))
             (4 (ILOAD_1))
             (5 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                         VOID)))
             (8 (RETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (JVM::MAX_LOCALS . 4)
            (CODE_LENGTH . 11)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                            (CLASS "java.io.OutputStream"))))
                 (4 (ALOAD_1))
                 (5 (ILOAD_2))
                 (6 (ILOAD_3))
                 (7 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream"
                                             ((ARRAY BYTE) INT INT)
                                             VOID)))
                 (10 (RETURN))
                 (ENDOFCODE 11))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                          (CLASS "java.io.OutputStream"))))
               (4 (INVOKEVIRTUAL (METHODCP "flush"
                                           "java.io.OutputStream" NIL VOID)))
               (7 (RETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                          (CLASS "java.io.OutputStream"))))
               (4 (INVOKEVIRTUAL (METHODCP "close"
                                           "java.io.OutputStream" NIL VOID)))
               (7 (RETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "writeBoolean" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (IFEQ 9))
        (5 (ICONST_1))
        (6 (GOTO 10))
        (9 (ICONST_0))
        (10 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (13 (RETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP (9 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                   INT)
                           (STACK (CLASS "java.io.DataOutputStream"))
                           NIL))
                 (10 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                    INT)
                            (STACK INT (CLASS "java.io.DataOutputStream"))
                            NIL)))))
     (METHOD
      "writeByte" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
         (5 (RETURN))
         (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeShort" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (BIPUSH 8))
        (4 (JVM::IUSHR))
        (5 (JVM::SIPUSH 255))
        (8 (JVM::IAND))
        (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                    VOID)))
        (12 (ALOAD_0))
        (13 (ILOAD_1))
        (14 (ICONST_0))
        (15 (JVM::IUSHR))
        (16 (JVM::SIPUSH 255))
        (19 (JVM::IAND))
        (20 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (23 (RETURN))
        (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeChar" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (BIPUSH 8))
        (4 (JVM::IUSHR))
        (5 (JVM::SIPUSH 255))
        (8 (JVM::IAND))
        (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                    VOID)))
        (12 (ALOAD_0))
        (13 (ILOAD_1))
        (14 (ICONST_0))
        (15 (JVM::IUSHR))
        (16 (JVM::SIPUSH 255))
        (19 (JVM::IAND))
        (20 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (23 (RETURN))
        (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeInt" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 48)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (BIPUSH 24))
        (4 (JVM::IUSHR))
        (5 (JVM::SIPUSH 255))
        (8 (JVM::IAND))
        (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                    VOID)))
        (12 (ALOAD_0))
        (13 (ILOAD_1))
        (14 (BIPUSH 16))
        (16 (JVM::IUSHR))
        (17 (JVM::SIPUSH 255))
        (20 (JVM::IAND))
        (21 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (24 (ALOAD_0))
        (25 (ILOAD_1))
        (26 (BIPUSH 8))
        (28 (JVM::IUSHR))
        (29 (JVM::SIPUSH 255))
        (32 (JVM::IAND))
        (33 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (36 (ALOAD_0))
        (37 (ILOAD_1))
        (38 (ICONST_0))
        (39 (JVM::IUSHR))
        (40 (JVM::SIPUSH 255))
        (43 (JVM::IAND))
        (44 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (47 (RETURN))
        (ENDOFCODE 48))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeLong" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 104)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (JVM::LLOAD_1))
        (2 (BIPUSH 56))
        (4 (JVM::LUSHR))
        (5 (JVM::L2I))
        (6 (JVM::SIPUSH 255))
        (9 (JVM::IAND))
        (10 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (13 (ALOAD_0))
        (14 (JVM::LLOAD_1))
        (15 (BIPUSH 48))
        (17 (JVM::LUSHR))
        (18 (JVM::L2I))
        (19 (JVM::SIPUSH 255))
        (22 (JVM::IAND))
        (23 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (26 (ALOAD_0))
        (27 (JVM::LLOAD_1))
        (28 (BIPUSH 40))
        (30 (JVM::LUSHR))
        (31 (JVM::L2I))
        (32 (JVM::SIPUSH 255))
        (35 (JVM::IAND))
        (36 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (39 (ALOAD_0))
        (40 (JVM::LLOAD_1))
        (41 (BIPUSH 32))
        (43 (JVM::LUSHR))
        (44 (JVM::L2I))
        (45 (JVM::SIPUSH 255))
        (48 (JVM::IAND))
        (49 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (52 (ALOAD_0))
        (53 (JVM::LLOAD_1))
        (54 (BIPUSH 24))
        (56 (JVM::LUSHR))
        (57 (JVM::L2I))
        (58 (JVM::SIPUSH 255))
        (61 (JVM::IAND))
        (62 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (65 (ALOAD_0))
        (66 (JVM::LLOAD_1))
        (67 (BIPUSH 16))
        (69 (JVM::LUSHR))
        (70 (JVM::L2I))
        (71 (JVM::SIPUSH 255))
        (74 (JVM::IAND))
        (75 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (78 (ALOAD_0))
        (79 (JVM::LLOAD_1))
        (80 (BIPUSH 8))
        (82 (JVM::LUSHR))
        (83 (JVM::L2I))
        (84 (JVM::SIPUSH 255))
        (87 (JVM::IAND))
        (88 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (91 (ALOAD_0))
        (92 (JVM::LLOAD_1))
        (93 (ICONST_0))
        (94 (JVM::LUSHR))
        (95 (JVM::L2I))
        (96 (JVM::SIPUSH 255))
        (99 (JVM::IAND))
        (100
            (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (103 (RETURN))
        (ENDOFCODE 104))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeChars"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 51)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (4 (ISTORE_2))
        (5 (ICONST_0))
        (6 (ISTORE_3))
        (7 (GOTO 45))
        (10 (ALOAD_1))
        (11 (ILOAD_3))
        (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (15 (ISTORE 4))
        (17 (ALOAD_0))
        (18 (ILOAD 4))
        (20 (BIPUSH 8))
        (22 (JVM::IUSHR))
        (23 (JVM::SIPUSH 255))
        (26 (JVM::IAND))
        (27 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (30 (ALOAD_0))
        (31 (ILOAD 4))
        (33 (ICONST_0))
        (34 (JVM::IUSHR))
        (35 (JVM::SIPUSH 255))
        (38 (JVM::IAND))
        (39 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (42 (IINC 3 1))
        (45 (ILOAD_3))
        (46 (ILOAD_2))
        (47 (IF_ICMPLT 10))
        (50 (RETURN))
        (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP (10 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (ALOAD_1))
             (1 (ALOAD_0))
             (2 (INVOKESTATIC (METHODCP "writeUTF" "java.io.DataOutputStream"
                                        ((CLASS "java.lang.String")
                                         (CLASS "java.io.DataOutput"))
                                        INT)))
             (5 (POP))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String")
                  (CLASS "java.io.DataOutput"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (INVOKESTATIC (METHODCP "writeUTF" "com.sun.cldc.io.GeneralBase"
                                     ((CLASS "java.lang.String")
                                      (CLASS "java.io.DataOutput"))
                                     INT)))
          (5 (IRETURN))
          (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES "java.io.DataOutput")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.io.DataOutput"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "write" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "write" (PARAMETERS (ARRAY BYTE))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "write"
                           (PARAMETERS (ARRAY BYTE) INT INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeBoolean" (PARAMETERS BOOLEAN)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeByte" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeShort" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeChar" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeInt" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeLong" (PARAMETERS LONG)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeChars"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeUTF"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.io.EOFException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.UTFDataFormatException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.InterruptedIOException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS (FIELD "bytesTransferred"
                   INT (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.io.IOException" NIL VOID)))
           (4 (ALOAD_0))
           (5 (ICONST_0))
           (6 (PUTFIELD (JVM::FIELDCP "bytesTransferred"
                                      "java.io.InterruptedIOException" INT)))
           (9 (RETURN))
           (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 11)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ALOAD_1))
           (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
           (5 (ALOAD_0))
           (6 (ICONST_0))
           (7 (PUTFIELD (JVM::FIELDCP "bytesTransferred"
                                      "java.io.InterruptedIOException" INT)))
           (10 (RETURN))
           (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Hashtable$HashtableEnumerator"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "HashtableEnumerator"))
    (FIELDS (FIELD "keys" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "index" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "table"
                   (ARRAY (CLASS "java.util.HashtableEntry"))
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "entry"
                   (CLASS "java.util.HashtableEntry")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "this$0" (CLASS "java.util.Hashtable")
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.util.Hashtable")
                  (ARRAY (CLASS "java.util.HashtableEntry"))
                  BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 26)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6 (PUTFIELD (JVM::FIELDCP "this$0"
                                   "java.util.Hashtable$HashtableEnumerator"
                                   (CLASS "java.util.Hashtable"))))
        (9 (ALOAD_0))
        (10 (ALOAD_2))
        (11 (PUTFIELD
                 (JVM::FIELDCP "table"
                               "java.util.Hashtable$HashtableEnumerator"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (14 (ALOAD_0))
        (15 (ILOAD_3))
        (16 (PUTFIELD (JVM::FIELDCP "keys"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    BOOLEAN)))
        (19 (ALOAD_0))
        (20 (ALOAD_2))
        (21 (ARRAYLENGTH))
        (22 (PUTFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (25 (RETURN))
        (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "hasMoreElements" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 44)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "entry"
                                   "java.util.Hashtable$HashtableEnumerator"
                                   (CLASS "java.util.HashtableEntry"))))
        (4 (IFNULL 28))
        (7 (ICONST_1))
        (8 (IRETURN))
        (9 (ALOAD_0))
        (10 (ALOAD_0))
        (11 (GETFIELD
                 (JVM::FIELDCP "table"
                               "java.util.Hashtable$HashtableEnumerator"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (18 (AALOAD))
        (19 (DUP_X1))
        (20 (PUTFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (23 (IFNULL 28))
        (26 (ICONST_1))
        (27 (IRETURN))
        (28 (ALOAD_0))
        (29 (DUP))
        (30 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (33 (DUP_X1))
        (34 (ICONST_1))
        (35 (ISUB))
        (36 (PUTFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (39 (IFGT 9))
        (42 (ICONST_0))
        (43 (IRETURN))
        (ENDOFCODE 44))
       (EXCEPTIONS)
       (STACKMAP
        (9 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator"))
                  (STACK)
                  NIL))
        (28 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator"))
                   (STACK)
                   NIL)))))
     (METHOD
      "nextElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 90)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "entry"
                                   "java.util.Hashtable$HashtableEnumerator"
                                   (CLASS "java.util.HashtableEntry"))))
        (4 (IFNONNULL 41))
        (7 (GOTO 10))
        (10 (ALOAD_0))
        (11 (DUP))
        (12 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (15 (DUP_X1))
        (16 (ICONST_1))
        (17 (ISUB))
        (18 (PUTFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (21 (IFLE 41))
        (24 (ALOAD_0))
        (25 (ALOAD_0))
        (26 (GETFIELD
                 (JVM::FIELDCP "table"
                               "java.util.Hashtable$HashtableEnumerator"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (29 (ALOAD_0))
        (30 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (33 (AALOAD))
        (34 (DUP_X1))
        (35 (PUTFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (38 (IFNULL 10))
        (41 (ALOAD_0))
        (42 (GETFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (45 (IFNULL 80))
        (48 (ALOAD_0))
        (49 (GETFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (52 (ASTORE_1))
        (53 (ALOAD_0))
        (54 (ALOAD_1))
        (55 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                    (CLASS "java.util.HashtableEntry"))))
        (58 (PUTFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (61 (ALOAD_0))
        (62 (GETFIELD (JVM::FIELDCP "keys"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    BOOLEAN)))
        (65 (IFEQ 75))
        (68 (ALOAD_1))
        (69 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (72 (GOTO 79))
        (75 (ALOAD_1))
        (76 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (79 (ARETURN))
        (80 (NEW (CLASS "java.util.NoSuchElementException")))
        (83 (DUP))
        (84 (LDC 0))
        (86 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.util.NoSuchElementException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (89 (ATHROW))
        (ENDOFCODE 90))
       (EXCEPTIONS)
       (STACKMAP
         (10 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            TOPX)
                    (STACK)
                    NIL))
         (41 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            TOPX)
                    (STACK)
                    NIL))
         (75 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            (CLASS "java.util.HashtableEntry"))
                    (STACK)
                    NIL))
         (79 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            (CLASS "java.util.HashtableEntry"))
                    (STACK (CLASS "java.lang.Object"))
                    NIL))
         (80 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            TOPX)
                    (STACK)
                    NIL))))))
    (INTERFACES "java.util.Enumeration")
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Hashtable" "java.lang.Object"
    (CONSTANT_POOL (INT 75)
                   (INT 2147483647)
                   (STRING "{")
                   (STRING "=")
                   (STRING ", ")
                   (STRING "}"))
    (FIELDS (FIELD "table"
                   (ARRAY (CLASS "java.util.HashtableEntry"))
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)
                   -1)
            (FIELD "count" INT
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)
                   -1)
            (FIELD "threshold"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "loadFactorPercent" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 42)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
         (4 (ILOAD_1))
         (5 (IFGE 16))
         (8 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (11 (DUP))
         (12 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
         (15 (ATHROW))
         (16 (ILOAD_1))
         (17 (IFNE 22))
         (20 (ICONST_1))
         (21 (ISTORE_1))
         (22 (ALOAD_0))
         (23 (ILOAD_1))
         (24 (ANEWARRAY (CLASS "java.util.HashtableEntry")))
         (27 (PUTFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
         (30 (ALOAD_0))
         (31 (ILOAD_1))
         (32 (BIPUSH 75))
         (34 (IMUL))
         (35 (BIPUSH 100))
         (37 (IDIV))
         (38 (PUTFIELD (JVM::FIELDCP "threshold" "java.util.Hashtable" INT)))
         (41 (RETURN))
         (ENDOFCODE 42))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                    INT)
                            (STACK)
                            NIL))
                 (22 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (BIPUSH 11))
             (3 (INVOKESPECIAL (METHODCP "<init>" "java.util.Hashtable" (INT)
                                         VOID)))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "isEmpty" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
              (4 (IFNE 11))
              (7 (ICONST_1))
              (8 (GOTO 12))
              (11 (ICONST_0))
              (12 (IRETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP (11 (FRAME (LOCALS (CLASS "java.util.Hashtable"))
                              (STACK)
                              NIL))
                   (12 (FRAME (LOCALS (CLASS "java.util.Hashtable"))
                              (STACK INT)
                              NIL)))))
     (METHOD
      "keys" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Enumeration")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (NEW (CLASS "java.util.Hashtable$HashtableEnumerator")))
        (3 (DUP))
        (4 (ALOAD_0))
        (5 (ALOAD_0))
        (6 (GETFIELD
                (JVM::FIELDCP "table" "java.util.Hashtable"
                              (ARRAY (CLASS "java.util.HashtableEntry")))))
        (9 (ICONST_1))
        (10
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.util.Hashtable$HashtableEnumerator"
                                  ((CLASS "java.util.Hashtable")
                                   (ARRAY (CLASS "java.util.HashtableEntry"))
                                   BOOLEAN)
                                  VOID)))
        (13 (ARETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "elements" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Enumeration")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (NEW (CLASS "java.util.Hashtable$HashtableEnumerator")))
        (3 (DUP))
        (4 (ALOAD_0))
        (5 (ALOAD_0))
        (6 (GETFIELD
                (JVM::FIELDCP "table" "java.util.Hashtable"
                              (ARRAY (CLASS "java.util.HashtableEntry")))))
        (9 (ICONST_0))
        (10
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.util.Hashtable$HashtableEnumerator"
                                  ((CLASS "java.util.Hashtable")
                                   (ARRAY (CLASS "java.util.HashtableEntry"))
                                   BOOLEAN)
                                  VOID)))
        (13 (ARETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "contains"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 67)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 12))
         (4 (NEW (CLASS "java.lang.NullPointerException")))
         (7 (DUP))
         (8 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
         (11 (ATHROW))
         (12 (ALOAD_0))
         (13 (GETFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
         (16 (ASTORE_2))
         (17 (ALOAD_2))
         (18 (ARRAYLENGTH))
         (19 (ISTORE_3))
         (20 (GOTO 57))
         (23 (ALOAD_2))
         (24 (ILOAD_3))
         (25 (AALOAD))
         (26 (ASTORE 4))
         (28 (GOTO 52))
         (31 (ALOAD 4))
         (33 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (36 (ALOAD_1))
         (37 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (40 (IFEQ 45))
         (43 (ICONST_1))
         (44 (IRETURN))
         (45 (ALOAD 4))
         (47 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (50 (ASTORE 4))
         (52 (ALOAD 4))
         (54 (IFNONNULL 31))
         (57 (ILOAD_3))
         (58 (DUP))
         (59 (ICONST_1))
         (60 (ISUB))
         (61 (ISTORE_3))
         (62 (IFGT 23))
         (65 (ICONST_0))
         (66 (IRETURN))
         (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (23 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT TOPX)
                       (STACK)
                       NIL))
            (31 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (45 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (52 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "containsKey"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 65)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ASTORE_2))
         (5 (ALOAD_1))
         (6 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (LDC 1))
         (13 (JVM::IAND))
         (14 (ALOAD_2))
         (15 (ARRAYLENGTH))
         (16 (IREM))
         (17 (ISTORE 4))
         (19 (ALOAD_2))
         (20 (ILOAD 4))
         (22 (AALOAD))
         (23 (ASTORE 5))
         (25 (GOTO 58))
         (28 (ALOAD 5))
         (30 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (33 (ILOAD_3))
         (34 (IF_ICMPNE 51))
         (37 (ALOAD 5))
         (39 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (42 (ALOAD_1))
         (43 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (46 (IFEQ 51))
         (49 (ICONST_1))
         (50 (IRETURN))
         (51 (ALOAD 5))
         (53 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (56 (ASTORE 5))
         (58 (ALOAD 5))
         (60 (IFNONNULL 28))
         (63 (ICONST_0))
         (64 (IRETURN))
         (ENDOFCODE 65))
       (EXCEPTIONS)
       (STACKMAP
            (28 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (51 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (58 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL)))))
     (METHOD
      "get"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 69)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ASTORE_2))
         (5 (ALOAD_1))
         (6 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (LDC 1))
         (13 (JVM::IAND))
         (14 (ALOAD_2))
         (15 (ARRAYLENGTH))
         (16 (IREM))
         (17 (ISTORE 4))
         (19 (ALOAD_2))
         (20 (ILOAD 4))
         (22 (AALOAD))
         (23 (ASTORE 5))
         (25 (GOTO 62))
         (28 (ALOAD 5))
         (30 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (33 (ILOAD_3))
         (34 (IF_ICMPNE 55))
         (37 (ALOAD 5))
         (39 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (42 (ALOAD_1))
         (43 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (46 (IFEQ 55))
         (49 (ALOAD 5))
         (51 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (54 (ARETURN))
         (55 (ALOAD 5))
         (57 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (60 (ASTORE 5))
         (62 (ALOAD 5))
         (64 (IFNONNULL 28))
         (67 (ACONST_NULL))
         (68 (ARETURN))
         (ENDOFCODE 69))
       (EXCEPTIONS)
       (STACKMAP
            (28 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (55 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (62 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL)))))
     (METHOD
      "rehash" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 111)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ARRAYLENGTH))
         (5 (ISTORE_1))
         (6 (ALOAD_0))
         (7 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (10 (ASTORE_2))
         (11 (ILOAD_1))
         (12 (ICONST_2))
         (13 (IMUL))
         (14 (ICONST_1))
         (15 (IADD))
         (16 (ISTORE_3))
         (17 (ILOAD_3))
         (18 (ANEWARRAY (CLASS "java.util.HashtableEntry")))
         (21 (ASTORE 4))
         (23 (ALOAD_0))
         (24 (ILOAD_3))
         (25 (BIPUSH 75))
         (27 (IMUL))
         (28 (BIPUSH 100))
         (30 (IDIV))
         (31 (PUTFIELD (JVM::FIELDCP "threshold" "java.util.Hashtable" INT)))
         (34 (ALOAD_0))
         (35 (ALOAD 4))
         (37 (PUTFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
         (40 (ILOAD_1))
         (41 (ISTORE 5))
         (43 (GOTO 100))
         (46 (ALOAD_2))
         (47 (ILOAD 5))
         (49 (AALOAD))
         (50 (ASTORE 6))
         (52 (GOTO 95))
         (55 (ALOAD 6))
         (57 (ASTORE 7))
         (59 (ALOAD 6))
         (61 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (64 (ASTORE 6))
         (66 (ALOAD 7))
         (68 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (71 (LDC 1))
         (73 (JVM::IAND))
         (74 (ILOAD_3))
         (75 (IREM))
         (76 (ISTORE 8))
         (78 (ALOAD 7))
         (80 (ALOAD 4))
         (82 (ILOAD 8))
         (84 (AALOAD))
         (85 (PUTFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (88 (ALOAD 4))
         (90 (ILOAD 8))
         (92 (ALOAD 7))
         (94 (AASTORE))
         (95 (ALOAD 6))
         (97 (IFNONNULL 55))
         (100 (ILOAD 5))
         (102 (DUP))
         (103 (ICONST_1))
         (104 (ISUB))
         (105 (ISTORE 5))
         (107 (IFGT 46))
         (110 (RETURN))
         (ENDOFCODE 111))
       (EXCEPTIONS)
       (STACKMAP
            (46 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (55 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (95 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (100 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                INT
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT TOPX TOPX TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "put"
      (PARAMETERS (CLASS "java.lang.Object")
                  (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 169)
       (PARSEDCODE
        (0 (ALOAD_2))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ALOAD_0))
        (13 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (16 (ASTORE_3))
        (17 (ALOAD_1))
        (18 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (21 (ISTORE 4))
        (23 (ILOAD 4))
        (25 (LDC 1))
        (27 (JVM::IAND))
        (28 (ALOAD_3))
        (29 (ARRAYLENGTH))
        (30 (IREM))
        (31 (ISTORE 5))
        (33 (ALOAD_3))
        (34 (ILOAD 5))
        (36 (AALOAD))
        (37 (ASTORE 6))
        (39 (GOTO 87))
        (42 (ALOAD 6))
        (44 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
        (47 (ILOAD 4))
        (49 (IF_ICMPNE 80))
        (52 (ALOAD 6))
        (54 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (57 (ALOAD_1))
        (58 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (61 (IFEQ 80))
        (64 (ALOAD 6))
        (66 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (69 (ASTORE 7))
        (71 (ALOAD 6))
        (73 (ALOAD_2))
        (74 (PUTFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (77 (ALOAD 7))
        (79 (ARETURN))
        (80 (ALOAD 6))
        (82 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                    (CLASS "java.util.HashtableEntry"))))
        (85 (ASTORE 6))
        (87 (ALOAD 6))
        (89 (IFNONNULL 42))
        (92 (ALOAD_0))
        (93 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
        (96 (ALOAD_0))
        (97 (GETFIELD (JVM::FIELDCP "threshold" "java.util.Hashtable" INT)))
        (100 (IF_ICMPLT 114))
        (103 (ALOAD_0))
        (104 (INVOKEVIRTUAL (METHODCP "rehash"
                                      "java.util.Hashtable" NIL VOID)))
        (107 (ALOAD_0))
        (108 (ALOAD_1))
        (109 (ALOAD_2))
        (110 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (113 (ARETURN))
        (114 (NEW (CLASS "java.util.HashtableEntry")))
        (117 (DUP))
        (118 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.HashtableEntry" NIL VOID)))
        (121 (ASTORE 7))
        (123 (ALOAD 7))
        (125 (ILOAD 4))
        (127 (PUTFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
        (130 (ALOAD 7))
        (132 (ALOAD_1))
        (133 (PUTFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
        (136 (ALOAD 7))
        (138 (ALOAD_2))
        (139 (PUTFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
        (142 (ALOAD 7))
        (144 (ALOAD_3))
        (145 (ILOAD 5))
        (147 (AALOAD))
        (148 (PUTFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
        (151 (ALOAD_3))
        (152 (ILOAD 5))
        (154 (ALOAD 7))
        (156 (AASTORE))
        (157 (ALOAD_0))
        (158 (DUP))
        (159 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
        (162 (ICONST_1))
        (163 (IADD))
        (164 (PUTFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
        (167 (ACONST_NULL))
        (168 (ARETURN))
        (ENDOFCODE 169))
       (EXCEPTIONS)
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               TOPX TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (42 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX)
                       (STACK)
                       NIL))
            (80 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX)
                       (STACK)
                       NIL))
            (87 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX)
                       (STACK)
                       NIL))
            (114 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                (CLASS "java.lang.Object")
                                (CLASS "java.lang.Object")
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT
                                INT (CLASS "java.util.HashtableEntry")
                                TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "remove"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 113)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ASTORE_2))
         (5 (ALOAD_1))
         (6 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (LDC 1))
         (13 (JVM::IAND))
         (14 (ALOAD_2))
         (15 (ARRAYLENGTH))
         (16 (IREM))
         (17 (ISTORE 4))
         (19 (ALOAD_2))
         (20 (ILOAD 4))
         (22 (AALOAD))
         (23 (ASTORE 5))
         (25 (ACONST_NULL))
         (26 (ASTORE 6))
         (28 (GOTO 106))
         (31 (ALOAD 5))
         (33 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (36 (ILOAD_3))
         (37 (IF_ICMPNE 95))
         (40 (ALOAD 5))
         (42 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (45 (ALOAD_1))
         (46 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (49 (IFEQ 95))
         (52 (ALOAD 6))
         (54 (IFNULL 70))
         (57 (ALOAD 6))
         (59 (ALOAD 5))
         (61 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (64 (PUTFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (67 (GOTO 79))
         (70 (ALOAD_2))
         (71 (ILOAD 4))
         (73 (ALOAD 5))
         (75 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (78 (AASTORE))
         (79 (ALOAD_0))
         (80 (DUP))
         (81 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
         (84 (ICONST_1))
         (85 (ISUB))
         (86 (PUTFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
         (89 (ALOAD 5))
         (91 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (94 (ARETURN))
         (95 (ALOAD 5))
         (97 (ASTORE 6))
         (99 (ALOAD 5))
         (101 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                      (CLASS "java.util.HashtableEntry"))))
         (104 (ASTORE 5))
         (106 (ALOAD 5))
         (108 (IFNONNULL 31))
         (111 (ACONST_NULL))
         (112 (ARETURN))
         (ENDOFCODE 113))
       (EXCEPTIONS)
       (STACKMAP
            (31 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (70 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (79 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (95 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (106 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                (CLASS "java.lang.Object")
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT
                                INT (CLASS "java.util.HashtableEntry")
                                (CLASS "java.util.HashtableEntry"))
                        (STACK)
                        NIL)))))
     (METHOD
      "clear" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 28)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
          (4 (ASTORE_1))
          (5 (ALOAD_1))
          (6 (ARRAYLENGTH))
          (7 (ISTORE_2))
          (8 (GOTO 15))
          (11 (ALOAD_1))
          (12 (ILOAD_2))
          (13 (ACONST_NULL))
          (14 (AASTORE))
          (15 (IINC 2 -1))
          (18 (ILOAD_2))
          (19 (IFGE 11))
          (22 (ALOAD_0))
          (23 (ICONST_0))
          (24 (PUTFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
          (27 (RETURN))
          (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
            (11 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT)
                       (STACK)
                       NIL))
            (15 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 126)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Hashtable" NIL INT)))
         (4 (ICONST_1))
         (5 (ISUB))
         (6 (ISTORE_1))
         (7 (NEW (CLASS "java.lang.StringBuffer")))
         (10 (DUP))
         (11 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (14 (ASTORE_2))
         (15 (ALOAD_0))
         (16 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (19 (ASTORE_3))
         (20 (ALOAD_0))
         (21 (INVOKEVIRTUAL (METHODCP "elements" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (24 (ASTORE 4))
         (26 (ALOAD_2))
         (27 (LDC 2))
         (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (32 (POP))
         (33 (ICONST_0))
         (34 (ISTORE 5))
         (36 (GOTO 108))
         (39 (ALOAD_3))
         (40 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (45 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                      NIL (CLASS "java.lang.String"))))
         (48 (ASTORE 6))
         (50 (ALOAD 4))
         (52 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (57 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                      NIL (CLASS "java.lang.String"))))
         (60 (ASTORE 7))
         (62 (ALOAD_2))
         (63 (NEW (CLASS "java.lang.StringBuffer")))
         (66 (DUP))
         (67 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (70 (ALOAD 6))
         (72 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (75 (LDC 3))
         (77 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (80 (ALOAD 7))
         (82 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (85 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (88 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (91 (POP))
         (92 (ILOAD 5))
         (94 (ILOAD_1))
         (95 (IF_ICMPGE 105))
         (98 (ALOAD_2))
         (99 (LDC 4))
         (101 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.StringBuffer"))))
         (104 (POP))
         (105 (IINC 5 1))
         (108 (ILOAD 5))
         (110 (ILOAD_1))
         (111 (IF_ICMPLE 39))
         (114 (ALOAD_2))
         (115 (LDC 5))
         (117 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.StringBuffer"))))
         (120 (POP))
         (121 (ALOAD_2))
         (122 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                       NIL (CLASS "java.lang.String"))))
         (125 (ARETURN))
         (ENDOFCODE 126))
       (EXCEPTIONS)
       (STACKMAP (39 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    (CLASS "java.util.Enumeration")
                                    INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (105 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (CLASS "java.util.Enumeration")
                                     (CLASS "java.util.Enumeration")
                                     INT (CLASS "java.lang.String")
                                     (CLASS "java.lang.String"))
                             (STACK)
                             NIL))
                 (108 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (CLASS "java.util.Enumeration")
                                     (CLASS "java.util.Enumeration")
                                     INT TOPX TOPX)
                             (STACK)
                             NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.HashtableEntry"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "hash" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "key" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "value" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "next"
                   (CLASS "java.util.HashtableEntry")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.util.Enumeration"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "hasMoreElements" (PARAMETERS)
                           (RETURNTYPE . BOOLEAN)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "nextElement" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.Object")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.util.NoSuchElementException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.TimeZone" "java.lang.Object"
    (CONSTANT_POOL (STRING "GMT")
                   (STRING "j2me")
                   (STRING "microedition.implpath")
                   (STRING "com.sun.cldc")
                   (STRING ".util.")
                   (STRING ".TimeZoneImpl"))
    (FIELDS (FIELD "defaultZone"
                   (CLASS "com.sun.cldc.util.TimeZoneImplementation")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "platform" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "classRoot" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "getOffset"
             (PARAMETERS INT INT INT INT INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "getRawOffset" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "useDaylightTime" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "getID" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ACONST_NULL))
                               (1 (ARETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "getTimeZone"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 39)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (INVOKESTATIC (METHODCP "getDefault" "java.util.TimeZone"
                                    NIL (CLASS "java.util.TimeZone"))))
        (15 (POP))
        (16
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (19 (ALOAD_0))
        (20
          (INVOKEVIRTUAL (METHODCP "getInstance"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.util.TimeZone"))))
        (23 (ASTORE_1))
        (24 (ALOAD_1))
        (25 (IFNONNULL 37))
        (28
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (31 (LDC 0))
        (33
          (INVOKEVIRTUAL (METHODCP "getInstance"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.util.TimeZone"))))
        (36 (ASTORE_1))
        (37 (ALOAD_1))
        (38 (ARETURN))
        (ENDOFCODE 39))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))
                 (37 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.util.TimeZone"))
                            (STACK)
                            NIL)))))
     (METHOD
      "getDefault" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 106)
       (PARSEDCODE
        (0
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (3 (IFNONNULL 102))
        (6 (GETSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                    (CLASS "java.lang.String"))))
        (9 (IFNONNULL 36))
        (12 (LDC 1))
        (14 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (17 (LDC 2))
        (19 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (22 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (25 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (28 (IFNONNULL 36))
        (31 (LDC 3))
        (33 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (36 (NEW (CLASS "java.lang.StringBuffer")))
        (39 (DUP))
        (40 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (43 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (46 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (49 (LDC 4))
        (51 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (54 (GETSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (57 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (60 (LDC 5))
        (62 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (65 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (68 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (71 (ASTORE_0))
        (72 (ALOAD_0))
        (73 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (76 (CHECKCAST (CLASS "com.sun.cldc.util.TimeZoneImplementation")))
        (79
         (PUTSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (82
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (85 (ACONST_NULL))
        (86
          (INVOKEVIRTUAL (METHODCP "getInstance"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.util.TimeZone"))))
        (89 (CHECKCAST (CLASS "com.sun.cldc.util.TimeZoneImplementation")))
        (92
         (PUTSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (95 (GOTO 102))
        (98 (ASTORE_0))
        (99 (GOTO 102))
        (102
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (105 (ARETURN))
        (ENDOFCODE 106))
       (EXCEPTIONS (JVM::HANDLER 36 95 98 (CLASS "java.lang.Exception")))
       (STACKMAP (36 (FRAME (LOCALS TOPX) (STACK) NIL))
                 (98 (FRAME (LOCALS TOPX)
                            (STACK (CLASS "java.lang.Exception"))
                            NIL))
                 (102 (FRAME (LOCALS TOPX) (STACK) NIL)))))
     (METHOD
      "getAvailableIDs" (PARAMETERS)
      (RETURNTYPE ARRAY (CLASS "java.lang.String"))
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 11)
       (PARSEDCODE
        (0 (INVOKESTATIC (METHODCP "getDefault" "java.util.TimeZone"
                                   NIL (CLASS "java.util.TimeZone"))))
        (3 (POP))
        (4
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (7
          (INVOKEVIRTUAL (METHODCP "getIDs"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL
                                   (ARRAY (CLASS "java.lang.String")))))
        (10 (ARETURN))
        (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ACONST_NULL))
        (1
         (PUTSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (4 (ACONST_NULL))
        (5 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                    (CLASS "java.lang.String"))))
        (8 (ACONST_NULL))
        (9 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                    (CLASS "java.lang.String"))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Calendar" "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 2)
                   (INT 5)
                   (INT 7)
                   (INT 9)
                   (INT 10)
                   (INT 11)
                   (INT 12)
                   (INT 13)
                   (INT 14)
                   (INT 3)
                   (INT 4)
                   (INT 6)
                   (INT 0)
                   (INT 8)
                   (INT 1721426)
                   (INT 2440588)
                   (INT 1970)
                   (INT 1000)
                   (INT 60000)
                   (INT 3600000)
                   (LONG 86400000)
                   (LONG 604800000)
                   (LONG -12219292800000)
                   (INT 1582)
                   (STRING "Could not find default timezone")
                   (STRING "j2me")
                   (STRING "microedition.implpath")
                   (STRING "com.sun.cldc")
                   (STRING ".util.")
                   (STRING ".CalendarImpl")
                   (INT 4194303)
                   (INT -4128769)
                   (INT -64513)
                   (LONG 9223372036854775807)
                   (LONG -9223372036854775808)
                   (INT -130023425)
                   (LONG 1721426)
                   (INT 146097)
                   (INT 36524)
                   (LONG 7)
                   (LONG 1721424)
                   (LONG 4)
                   (LONG 1464)
                   (LONG 1461)
                   (LONG -106749550580)
                   (INT 86400000)
                   (LONG 365)
                   (LONG 1721423)
                   (LONG 2440588))
    (FIELDS (FIELD "YEAR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MONTH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "DATE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "DAY_OF_MONTH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "DAY_OF_WEEK" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "AM_PM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   4)
            (FIELD "HOUR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   5)
            (FIELD "HOUR_OF_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   6)
            (FIELD "MINUTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   7)
            (FIELD "SECOND" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   8)
            (FIELD "MILLISECOND" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   9)
            (FIELD "SUNDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MONDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "TUESDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   10)
            (FIELD "WEDNESDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   11)
            (FIELD "THURSDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "FRIDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   12)
            (FIELD "SATURDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "JANUARY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   13)
            (FIELD "FEBRUARY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MARCH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "APRIL" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   10)
            (FIELD "MAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   11)
            (FIELD "JUNE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "JULY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   12)
            (FIELD "AUGUST" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "SEPTEMBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   14)
            (FIELD "OCTOBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   4)
            (FIELD "NOVEMBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   5)
            (FIELD "DECEMBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   6)
            (FIELD "AM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   13)
            (FIELD "PM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "packed_time"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "packed_date"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "day_field"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "dstOffset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "dstSet"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "time"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "millisSet"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "zone" (CLASS "java.util.TimeZone")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "JAN_1_1_JULIAN_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   15)
            (FIELD "EPOCH_JULIAN_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   16)
            (FIELD "EPOCH_YEAR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   17)
            (FIELD "NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "LEAP_NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "ONE_SECOND" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   18)
            (FIELD "ONE_MINUTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   19)
            (FIELD "ONE_HOUR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   20)
            (FIELD "ONE_DAY" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   21)
            (FIELD "ONE_WEEK" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   22)
            (FIELD "gregorianCutover" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   23)
            (FIELD "gregorianCutoverYear" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   24)
            (FIELD "date" (CLASS "java.util.Date")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "hour_12hr"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "am_pm_12hr"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "platform" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "classRoot" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 76)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
         (4 (ALOAD_0))
         (5 (ICONST_0))
         (6 (PUTFIELD (JVM::FIELDCP "packed_time"
                                    "java.util.Calendar" INT)))
         (9 (ALOAD_0))
         (10 (ICONST_0))
         (11 (PUTFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
         (14 (ALOAD_0))
         (15 (ICONST_0))
         (16 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (19 (ALOAD_0))
         (20 (ICONST_0))
         (21 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
         (24 (ALOAD_0))
         (25 (ICONST_0))
         (26 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
         (29 (ALOAD_0))
         (30 (ACONST_NULL))
         (31 (PUTFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                     (CLASS "java.util.Date"))))
         (34 (ALOAD_0))
         (35 (ICONST_M1))
         (36 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
         (39 (ALOAD_0))
         (40 (ICONST_M1))
         (41 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
         (44 (ALOAD_0))
         (45 (INVOKESTATIC (METHODCP "getDefault" "java.util.TimeZone"
                                     NIL (CLASS "java.util.TimeZone"))))
         (48 (PUTFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
         (51 (ALOAD_0))
         (52 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
         (55 (IFNONNULL 68))
         (58 (NEW (CLASS "java.lang.RuntimeException")))
         (61 (DUP))
         (62 (LDC 25))
         (64 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (67 (ATHROW))
         (68 (ALOAD_0))
         (69 (INVOKESTATIC (METHODCP "currentTimeMillis"
                                     "java.lang.System" NIL LONG)))
         (72 (INVOKEVIRTUAL (METHODCP "setTimeInMillis"
                                      "java.util.Calendar" (LONG)
                                      VOID)))
         (75 (RETURN))
         (ENDOFCODE 76))
       (EXCEPTIONS)
       (STACKMAP (68 (FRAME (LOCALS (CLASS "java.util.Calendar"))
                            (STACK)
                            NIL)))))
     (METHOD
      "getTime" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Date")
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                          (CLASS "java.util.Date"))))
               (4 (IFNONNULL 24))
               (7 (ALOAD_0))
               (8 (NEW (CLASS "java.util.Date")))
               (11 (DUP))
               (12 (ALOAD_0))
               (13 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
               (16 (INVOKESPECIAL (METHODCP "<init>" "java.util.Date" (LONG)
                                            VOID)))
               (19 (DUP_X1))
               (20 (PUTFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (23 (ARETURN))
               (24 (ALOAD_0))
               (25 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (28 (DUP))
               (29 (ASTORE_1))
               (30 (MONITORENTER))
               (31 (ALOAD_0))
               (32 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (35 (ALOAD_0))
               (36 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
               (39 (INVOKEVIRTUAL (METHODCP "setTime" "java.util.Date" (LONG)
                                            VOID)))
               (42 (ALOAD_0))
               (43 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (46 (ALOAD_1))
               (47 (MONITOREXIT))
               (48 (ARETURN))
               (49 (ASTORE_2))
               (50 (ALOAD_1))
               (51 (MONITOREXIT))
               (52 (ALOAD_2))
               (53 (ATHROW))
               (ENDOFCODE 54))
          (EXCEPTIONS (JVM::HANDLER 31 48 49 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 49 52 49 (CLASS "java.lang.Throwable")))
          (STACKMAP (24 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                       TOPX TOPX)
                               (STACK)
                               NIL))
                    (49 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                       (CLASS "java.util.Date")
                                       TOPX)
                               (STACK (CLASS "java.lang.Throwable"))
                               NIL)))))
     (METHOD
      "setTime"
      (PARAMETERS (CLASS "java.util.Date"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ALOAD_1))
           (2 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
           (5 (INVOKEVIRTUAL (METHODCP "setTimeInMillis"
                                       "java.util.Calendar" (LONG)
                                       VOID)))
           (8 (RETURN))
           (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getInstance" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Calendar")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 80)
       (PARSEDCODE
            (0 (GETSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                        (CLASS "java.lang.String"))))
            (3 (IFNONNULL 30))
            (6 (LDC 26))
            (8 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                        (CLASS "java.lang.String"))))
            (11 (LDC 27))
            (13 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (16 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (19 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (22 (IFNONNULL 30))
            (25 (LDC 28))
            (27 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (30 (NEW (CLASS "java.lang.StringBuffer")))
            (33 (DUP))
            (34 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (37 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (40 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (43 (LDC 29))
            (45 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (48 (GETSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (51 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (54 (LDC 30))
            (56 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (59 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (62 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.Class"))))
            (65 (ASTORE_0))
            (66 (ALOAD_0))
            (67 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                         NIL (CLASS "java.lang.Object"))))
            (70 (CHECKCAST (CLASS "java.util.Calendar")))
            (73 (ARETURN))
            (74 (ASTORE_0))
            (75 (GOTO 78))
            (78 (ACONST_NULL))
            (79 (ARETURN))
            (ENDOFCODE 80))
       (EXCEPTIONS (JVM::HANDLER 30 73 74 (CLASS "java.lang.Exception")))
       (STACKMAP (30 (FRAME (LOCALS TOPX) (STACK) NIL))
                 (74 (FRAME (LOCALS TOPX)
                            (STACK (CLASS "java.lang.Exception"))
                            NIL))
                 (78 (FRAME (LOCALS (CLASS "java.lang.Exception"))
                            (STACK)
                            NIL)))))
     (METHOD
      "getInstance"
      (PARAMETERS (CLASS "java.util.TimeZone"))
      (RETURNTYPE CLASS "java.util.Calendar")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 11)
          (PARSEDCODE
               (0 (INVOKESTATIC (METHODCP "getInstance" "java.util.Calendar"
                                          NIL (CLASS "java.util.Calendar"))))
               (3 (ASTORE_1))
               (4 (ALOAD_1))
               (5 (ALOAD_0))
               (6 (INVOKEVIRTUAL (METHODCP "setTimeZone" "java.util.Calendar"
                                           ((CLASS "java.util.TimeZone"))
                                           VOID)))
               (9 (ALOAD_1))
               (10 (ARETURN))
               (ENDOFCODE 11))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getTimeInMillis" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 21)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "millisSet"
                                         "java.util.Calendar" BOOLEAN)))
              (4 (IFNE 16))
              (7 (ALOAD_0))
              (8 (INVOKESPECIAL (METHODCP "calculateTime"
                                          "java.util.Calendar" NIL VOID)))
              (11 (ALOAD_0))
              (12 (ICONST_1))
              (13 (PUTFIELD (JVM::FIELDCP "millisSet"
                                          "java.util.Calendar" BOOLEAN)))
              (16 (ALOAD_0))
              (17 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
              (20 (JVM::LRETURN))
              (ENDOFCODE 21))
         (EXCEPTIONS)
         (STACKMAP (16 (FRAME (LOCALS (CLASS "java.util.Calendar"))
                              (STACK)
                              NIL)))))
     (METHOD
      "setTimeInMillis" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 20)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ICONST_1))
           (2 (PUTFIELD (JVM::FIELDCP "millisSet"
                                      "java.util.Calendar" BOOLEAN)))
           (5 (ALOAD_0))
           (6 (ICONST_0))
           (7 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
           (10 (ALOAD_0))
           (11 (JVM::LLOAD_1))
           (12 (PUTFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
           (15 (ALOAD_0))
           (16 (INVOKESPECIAL (METHODCP "calculateFields"
                                        "java.util.Calendar" NIL VOID)))
           (19 (RETURN))
           (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "get" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 206)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1
         (JVM::TABLESWITCH
             (JVM::TABLESWITCHINFO 198 (1 . 14)
                                   (72 80 198 198 90
                                       198 98 198 149 127 119 167 178 189))))
        (72 (ALOAD_0))
        (73 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (76 (BIPUSH 9))
        (78 (JVM::ISHR))
        (79 (IRETURN))
        (80 (ALOAD_0))
        (81 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (84 (ICONST_5))
        (85 (JVM::ISHR))
        (86 (BIPUSH 15))
        (88 (JVM::IAND))
        (89 (IRETURN))
        (90 (ALOAD_0))
        (91 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (94 (BIPUSH 31))
        (96 (JVM::IAND))
        (97 (IRETURN))
        (98 (ALOAD_0))
        (99 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (102 (IFNE 114))
        (105 (ALOAD_0))
        (106 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                      "java.util.Calendar" NIL LONG)))
        (109 (POP2))
        (110 (ALOAD_0))
        (111 (INVOKESPECIAL (METHODCP "calculateFields"
                                      "java.util.Calendar" NIL VOID)))
        (114 (ALOAD_0))
        (115 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (118 (IRETURN))
        (119 (ALOAD_0))
        (120 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (123 (BIPUSH 22))
        (125 (JVM::ISHR))
        (126 (IRETURN))
        (127 (ALOAD_0))
        (128 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (131 (BIPUSH 22))
        (133 (JVM::ISHR))
        (134 (BIPUSH 12))
        (136 (IREM))
        (137 (ISTORE_2))
        (138 (ILOAD_2))
        (139 (IFNE 147))
        (142 (BIPUSH 12))
        (144 (GOTO 148))
        (147 (ILOAD_2))
        (148 (IRETURN))
        (149 (ALOAD_0))
        (150 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (153 (BIPUSH 22))
        (155 (JVM::ISHR))
        (156 (BIPUSH 12))
        (158 (IF_ICMPGE 165))
        (161 (ICONST_0))
        (162 (GOTO 166))
        (165 (ICONST_1))
        (166 (IRETURN))
        (167 (ALOAD_0))
        (168 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (171 (BIPUSH 16))
        (173 (JVM::ISHR))
        (174 (BIPUSH 63))
        (176 (JVM::IAND))
        (177 (IRETURN))
        (178 (ALOAD_0))
        (179 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (182 (BIPUSH 10))
        (184 (JVM::ISHR))
        (185 (BIPUSH 63))
        (187 (JVM::IAND))
        (188 (IRETURN))
        (189 (ALOAD_0))
        (190 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (193 (JVM::SIPUSH 1023))
        (196 (JVM::IAND))
        (197 (IRETURN))
        (198 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (201 (DUP))
        (202
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (205 (ATHROW))
        (ENDOFCODE 206))
       (EXCEPTIONS)
       (STACKMAP (72 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (80 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (90 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (114 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (119 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (127 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (147 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (148 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK INT)
                             NIL))
                 (149 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (165 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (166 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK INT)
                             NIL))
                 (167 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (178 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (189 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (198 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "set" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 426)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_0))
        (2 (PUTFIELD (JVM::FIELDCP "millisSet"
                                   "java.util.Calendar" BOOLEAN)))
        (5 (ALOAD_0))
        (6 (ICONST_0))
        (7 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (10 (ILOAD_1))
        (11
         (JVM::TABLESWITCH
            (JVM::TABLESWITCHINFO 412 (1 . 14)
                                  (80 100 412 412 122
                                      412 412 412 257 175 141 347 369 391))))
        (80 (ALOAD_0))
        (81 (ALOAD_0))
        (82 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (85 (JVM::SIPUSH 511))
        (88 (JVM::IAND))
        (89 (ILOAD_2))
        (90 (BIPUSH 9))
        (92 (JVM::ISHL))
        (93 (JVM::IOR))
        (94 (PUTFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (97 (GOTO 420))
        (100 (ALOAD_0))
        (101 (ALOAD_0))
        (102 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (105 (JVM::SIPUSH -481))
        (108 (JVM::IAND))
        (109 (ILOAD_2))
        (110 (BIPUSH 15))
        (112 (JVM::IAND))
        (113 (ICONST_5))
        (114 (JVM::ISHL))
        (115 (JVM::IOR))
        (116 (PUTFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (119 (GOTO 420))
        (122 (ALOAD_0))
        (123 (ALOAD_0))
        (124 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (127 (BIPUSH -32))
        (129 (JVM::IAND))
        (130 (ILOAD_2))
        (131 (BIPUSH 31))
        (133 (JVM::IAND))
        (134 (JVM::IOR))
        (135 (PUTFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (138 (GOTO 420))
        (141 (ILOAD_2))
        (142 (BIPUSH 24))
        (144 (IREM))
        (145 (ISTORE_2))
        (146 (ALOAD_0))
        (147 (ALOAD_0))
        (148 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (151 (LDC 31))
        (153 (JVM::IAND))
        (154 (ILOAD_2))
        (155 (BIPUSH 22))
        (157 (JVM::ISHL))
        (158 (JVM::IOR))
        (159 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (162 (ALOAD_0))
        (163 (ALOAD_0))
        (164 (ICONST_M1))
        (165 (DUP_X1))
        (166 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (169 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (172 (GOTO 420))
        (175 (ILOAD_2))
        (176 (BIPUSH 12))
        (178 (IF_ICMPLE 184))
        (181 (BIPUSH 12))
        (183 (ISTORE_2))
        (184 (ALOAD_0))
        (185 (GETFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (188 (ICONST_M1))
        (189 (IF_ICMPEQ 233))
        (192 (ALOAD_0))
        (193 (GETFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (196 (ICONST_1))
        (197 (IF_ICMPNE 212))
        (200 (ILOAD_2))
        (201 (BIPUSH 12))
        (203 (IF_ICMPEQ 220))
        (206 (IINC 2 12))
        (209 (GOTO 220))
        (212 (ILOAD_2))
        (213 (BIPUSH 12))
        (215 (IF_ICMPNE 220))
        (218 (ICONST_0))
        (219 (ISTORE_2))
        (220 (ALOAD_0))
        (221 (ALOAD_0))
        (222 (ICONST_M1))
        (223 (DUP_X1))
        (224 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (227 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (230 (GOTO 238))
        (233 (ALOAD_0))
        (234 (ILOAD_2))
        (235 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (238 (ALOAD_0))
        (239 (ALOAD_0))
        (240 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (243 (LDC 31))
        (245 (JVM::IAND))
        (246 (ILOAD_2))
        (247 (BIPUSH 22))
        (249 (JVM::ISHL))
        (250 (JVM::IOR))
        (251 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (254 (GOTO 420))
        (257 (ALOAD_0))
        (258 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (261 (ICONST_M1))
        (262 (IF_ICMPEQ 339))
        (265 (ILOAD_2))
        (266 (ICONST_1))
        (267 (IF_ICMPNE 293))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (274 (BIPUSH 12))
        (276 (IF_ICMPEQ 307))
        (279 (ALOAD_0))
        (280 (DUP))
        (281 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (284 (BIPUSH 12))
        (286 (IADD))
        (287 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (290 (GOTO 307))
        (293 (ALOAD_0))
        (294 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (297 (BIPUSH 12))
        (299 (IF_ICMPNE 307))
        (302 (ALOAD_0))
        (303 (ICONST_0))
        (304 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (307 (ALOAD_0))
        (308 (ALOAD_0))
        (309 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (312 (LDC 31))
        (314 (JVM::IAND))
        (315 (ALOAD_0))
        (316 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (319 (BIPUSH 22))
        (321 (JVM::ISHL))
        (322 (JVM::IOR))
        (323 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (326 (ALOAD_0))
        (327 (ALOAD_0))
        (328 (ICONST_M1))
        (329 (DUP_X1))
        (330 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (333 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (336 (GOTO 420))
        (339 (ALOAD_0))
        (340 (ILOAD_2))
        (341 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (344 (GOTO 420))
        (347 (ALOAD_0))
        (348 (ALOAD_0))
        (349 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (352 (LDC 32))
        (354 (JVM::IAND))
        (355 (ILOAD_2))
        (356 (BIPUSH 63))
        (358 (JVM::IAND))
        (359 (BIPUSH 16))
        (361 (JVM::ISHL))
        (362 (JVM::IOR))
        (363 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (366 (GOTO 420))
        (369 (ALOAD_0))
        (370 (ALOAD_0))
        (371 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (374 (LDC 33))
        (376 (JVM::IAND))
        (377 (ILOAD_2))
        (378 (BIPUSH 63))
        (380 (JVM::IAND))
        (381 (BIPUSH 10))
        (383 (JVM::ISHL))
        (384 (JVM::IOR))
        (385 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (388 (GOTO 420))
        (391 (ALOAD_0))
        (392 (ALOAD_0))
        (393 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (396 (JVM::SIPUSH -1024))
        (399 (JVM::IAND))
        (400 (ILOAD_2))
        (401 (JVM::SIPUSH 1023))
        (404 (JVM::IAND))
        (405 (JVM::IOR))
        (406 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (409 (GOTO 420))
        (412 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (415 (DUP))
        (416
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (419 (ATHROW))
        (420 (ALOAD_0))
        (421 (ICONST_0))
        (422 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (425 (RETURN))
        (ENDOFCODE 426))
       (EXCEPTIONS)
       (STACKMAP (80 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT)
                            (STACK)
                            NIL))
                 (100 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (122 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (141 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (175 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (184 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (212 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (220 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (233 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (238 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (257 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (293 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (307 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (339 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (347 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (369 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (391 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (412 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (420 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 3)
           (CODE_LENGTH . 53)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (JVM::IF_ACMPNE 7))
                (5 (ICONST_1))
                (6 (IRETURN))
                (7 (ALOAD_1))
                (8 (JVM::INSTANCEOF (CLASS "java.util.Calendar")))
                (11 (IFNE 16))
                (14 (ICONST_0))
                (15 (IRETURN))
                (16 (ALOAD_1))
                (17 (CHECKCAST (CLASS "java.util.Calendar")))
                (20 (ASTORE_2))
                (21 (ALOAD_0))
                (22 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (25 (ALOAD_2))
                (26 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (29 (LCMP))
                (30 (IFNE 51))
                (33 (ALOAD_0))
                (34 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                            (CLASS "java.util.TimeZone"))))
                (37 (ALOAD_2))
                (38 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                            (CLASS "java.util.TimeZone"))))
                (41 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                             ((CLASS "java.lang.Object"))
                                             BOOLEAN)))
                (44 (IFEQ 51))
                (47 (ICONST_1))
                (48 (GOTO 52))
                (51 (ICONST_0))
                (52 (IRETURN))
                (ENDOFCODE 53))
           (EXCEPTIONS)
           (STACKMAP (7 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                       (CLASS "java.lang.Object")
                                       TOPX)
                               (STACK)
                               NIL))
                     (16 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object")
                                        TOPX)
                                (STACK)
                                NIL))
                     (51 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object")
                                        (CLASS "java.util.Calendar"))
                                (STACK)
                                NIL))
                     (52 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object")
                                        (CLASS "java.util.Calendar"))
                                (STACK INT)
                                NIL)))))
     (METHOD
      "before"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 28)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.util.Calendar")))
                (4 (IFEQ 26))
                (7 (ALOAD_0))
                (8 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.util.Calendar")))
                (15 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (18 (LCMP))
                (19 (IFGE 26))
                (22 (ICONST_1))
                (23 (GOTO 27))
                (26 (ICONST_0))
                (27 (IRETURN))
                (ENDOFCODE 28))
           (EXCEPTIONS)
           (STACKMAP (26 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL)))))
     (METHOD
      "after"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 28)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.util.Calendar")))
                (4 (IFEQ 26))
                (7 (ALOAD_0))
                (8 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.util.Calendar")))
                (15 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (18 (LCMP))
                (19 (IFLE 26))
                (22 (ICONST_1))
                (23 (GOTO 27))
                (26 (ICONST_0))
                (27 (IRETURN))
                (ENDOFCODE 28))
           (EXCEPTIONS)
           (STACKMAP (26 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL)))))
     (METHOD
      "setTimeZone"
      (PARAMETERS (CLASS "java.util.TimeZone"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 15)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (PUTFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                           (CLASS "java.util.TimeZone"))))
                (5 (ALOAD_0))
                (6 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
                (9 (POP2))
                (10 (ALOAD_0))
                (11 (INVOKESPECIAL (METHODCP "calculateFields"
                                             "java.util.Calendar" NIL VOID)))
                (14 (RETURN))
                (ENDOFCODE 15))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "getTimeZone" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                              (CLASS "java.util.TimeZone"))))
                   (4 (ARETURN))
                   (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "calculateDstOffset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 8)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 114)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (4 (IFNE 16))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                    "java.util.Calendar" NIL LONG)))
        (11 (POP2))
        (12 (ALOAD_0))
        (13 (INVOKESPECIAL (METHODCP "calculateFields"
                                     "java.util.Calendar" NIL VOID)))
        (16 (ALOAD_0))
        (17 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                    (CLASS "java.util.TimeZone"))))
        (20 (INVOKEVIRTUAL (METHODCP "getRawOffset"
                                     "java.util.TimeZone" NIL INT)))
        (23 (ISTORE_1))
        (24 (ALOAD_0))
        (25 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (28 (ILOAD_1))
        (29 (JVM::I2L))
        (30 (JVM::LADD))
        (31 (JVM::LSTORE_2))
        (32 (JVM::LLOAD_2))
        (33 (JVM::LDC2_W 21))
        (36 (JVM::LDIV))
        (37 (JVM::LSTORE 4))
        (39 (JVM::LLOAD_2))
        (40 (JVM::LLOAD 4))
        (42 (JVM::LDC2_W 21))
        (45 (JVM::LMUL))
        (46 (JVM::LSUB))
        (47 (JVM::L2I))
        (48 (ISTORE 6))
        (50 (ILOAD 6))
        (52 (IFGE 65))
        (55 (ILOAD 6))
        (57 (JVM::I2L))
        (58 (JVM::LDC2_W 21))
        (61 (JVM::LADD))
        (62 (JVM::L2I))
        (63 (ISTORE 6))
        (65 (ALOAD_0))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                    (CLASS "java.util.TimeZone"))))
        (70 (ICONST_1))
        (71 (ALOAD_0))
        (72 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (75 (BIPUSH 9))
        (77 (JVM::ISHR))
        (78 (ALOAD_0))
        (79 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (82 (ICONST_5))
        (83 (JVM::ISHR))
        (84 (BIPUSH 15))
        (86 (JVM::IAND))
        (87 (ALOAD_0))
        (88 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (91 (BIPUSH 31))
        (93 (JVM::IAND))
        (94 (ALOAD_0))
        (95 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (98 (ILOAD 6))
        (100 (INVOKEVIRTUAL (METHODCP "getOffset" "java.util.TimeZone"
                                      (INT INT INT INT INT INT)
                                      INT)))
        (103 (ILOAD_1))
        (104 (ISUB))
        (105 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (108 (ALOAD_0))
        (109 (ICONST_1))
        (110 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (113 (RETURN))
        (ENDOFCODE 114))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT LONG TOPX LONG TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "calculateFields" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 8)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 350)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                   (CLASS "java.util.TimeZone"))))
        (4 (INVOKEVIRTUAL (METHODCP "getRawOffset"
                                    "java.util.TimeZone" NIL INT)))
        (7 (ISTORE_1))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (12 (ILOAD_1))
        (13 (JVM::I2L))
        (14 (JVM::LADD))
        (15 (JVM::LSTORE_2))
        (16 (ALOAD_0))
        (17 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (20 (LCONST_0))
        (21 (LCMP))
        (22 (IFLE 42))
        (25 (JVM::LLOAD_2))
        (26 (LCONST_0))
        (27 (LCMP))
        (28 (IFGE 42))
        (31 (ILOAD_1))
        (32 (IFLE 42))
        (35 (JVM::LDC2_W 34))
        (38 (JVM::LSTORE_2))
        (39 (GOTO 65))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (46 (LCONST_0))
        (47 (LCMP))
        (48 (IFGE 65))
        (51 (JVM::LLOAD_2))
        (52 (LCONST_0))
        (53 (LCMP))
        (54 (IFLE 65))
        (57 (ILOAD_1))
        (58 (IFGE 65))
        (61 (JVM::LDC2_W 35))
        (64 (JVM::LSTORE_2))
        (65 (ALOAD_0))
        (66 (JVM::LLOAD_2))
        (67 (INVOKESPECIAL (METHODCP "timeToFields"
                                     "java.util.Calendar" (LONG)
                                     VOID)))
        (70 (JVM::LLOAD_2))
        (71 (JVM::LDC2_W 21))
        (74 (JVM::LDIV))
        (75 (JVM::LSTORE 4))
        (77 (JVM::LLOAD_2))
        (78 (JVM::LLOAD 4))
        (80 (JVM::LDC2_W 21))
        (83 (JVM::LMUL))
        (84 (JVM::LSUB))
        (85 (JVM::L2I))
        (86 (ISTORE 6))
        (88 (ILOAD 6))
        (90 (IFGE 103))
        (93 (ILOAD 6))
        (95 (JVM::I2L))
        (96 (JVM::LDC2_W 21))
        (99 (JVM::LADD))
        (100 (JVM::L2I))
        (101 (ISTORE 6))
        (103 (ALOAD_0))
        (104 (ALOAD_0))
        (105 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
        (108 (ICONST_1))
        (109 (ALOAD_0))
        (110 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (113 (BIPUSH 9))
        (115 (JVM::ISHR))
        (116 (ALOAD_0))
        (117 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (120 (ICONST_5))
        (121 (JVM::ISHR))
        (122 (BIPUSH 15))
        (124 (JVM::IAND))
        (125 (ALOAD_0))
        (126 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (129 (BIPUSH 31))
        (131 (JVM::IAND))
        (132 (ALOAD_0))
        (133 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (136 (ILOAD 6))
        (138 (INVOKEVIRTUAL (METHODCP "getOffset" "java.util.TimeZone"
                                      (INT INT INT INT INT INT)
                                      INT)))
        (141 (ILOAD_1))
        (142 (ISUB))
        (143 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (146 (ALOAD_0))
        (147 (ICONST_1))
        (148 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (151 (ILOAD 6))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (157 (IADD))
        (158 (ISTORE 6))
        (160 (ILOAD 6))
        (162 (JVM::I2L))
        (163 (JVM::LDC2_W 21))
        (166 (LCMP))
        (167 (IFLT 248))
        (170 (JVM::LLOAD_2))
        (171 (ALOAD_0))
        (172 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (175 (JVM::I2L))
        (176 (JVM::LADD))
        (177 (JVM::LSTORE 7))
        (179 (ILOAD 6))
        (181 (JVM::I2L))
        (182 (JVM::LDC2_W 21))
        (185 (JVM::LSUB))
        (186 (JVM::L2I))
        (187 (ISTORE 6))
        (189 (JVM::LLOAD_2))
        (190 (LCONST_0))
        (191 (LCMP))
        (192 (IFLE 217))
        (195 (JVM::LLOAD 7))
        (197 (LCONST_0))
        (198 (LCMP))
        (199 (IFGE 217))
        (202 (ALOAD_0))
        (203 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (206 (IFLE 217))
        (209 (JVM::LDC2_W 34))
        (212 (JVM::LSTORE 7))
        (214 (GOTO 242))
        (217 (JVM::LLOAD_2))
        (218 (LCONST_0))
        (219 (LCMP))
        (220 (IFGE 242))
        (223 (JVM::LLOAD 7))
        (225 (LCONST_0))
        (226 (LCMP))
        (227 (IFLE 242))
        (230 (ALOAD_0))
        (231 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (234 (IFGE 242))
        (237 (JVM::LDC2_W 35))
        (240 (JVM::LSTORE 7))
        (242 (ALOAD_0))
        (243 (JVM::LLOAD 7))
        (245 (INVOKESPECIAL (METHODCP "timeToFields"
                                      "java.util.Calendar" (LONG)
                                      VOID)))
        (248 (ALOAD_0))
        (249 (ALOAD_0))
        (250 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (253 (JVM::SIPUSH -1024))
        (256 (JVM::IAND))
        (257 (ILOAD 6))
        (259 (JVM::SIPUSH 1000))
        (262 (IREM))
        (263 (JVM::IOR))
        (264 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (267 (ILOAD 6))
        (269 (JVM::SIPUSH 1000))
        (272 (IDIV))
        (273 (ISTORE 6))
        (275 (ALOAD_0))
        (276 (ALOAD_0))
        (277 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (280 (LDC 33))
        (282 (JVM::IAND))
        (283 (ILOAD 6))
        (285 (BIPUSH 60))
        (287 (IREM))
        (288 (BIPUSH 10))
        (290 (JVM::ISHL))
        (291 (JVM::IOR))
        (292 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (295 (ILOAD 6))
        (297 (BIPUSH 60))
        (299 (IDIV))
        (300 (ISTORE 6))
        (302 (ALOAD_0))
        (303 (ALOAD_0))
        (304 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (307 (LDC 32))
        (309 (JVM::IAND))
        (310 (ILOAD 6))
        (312 (BIPUSH 60))
        (314 (IREM))
        (315 (BIPUSH 16))
        (317 (JVM::ISHL))
        (318 (JVM::IOR))
        (319 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (322 (ILOAD 6))
        (324 (BIPUSH 60))
        (326 (IDIV))
        (327 (ISTORE 6))
        (329 (ALOAD_0))
        (330 (ALOAD_0))
        (331 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (334 (LDC 36))
        (336 (JVM::IAND))
        (337 (ILOAD 6))
        (339 (BIPUSH 31))
        (341 (JVM::IAND))
        (342 (BIPUSH 22))
        (344 (JVM::ISHL))
        (345 (JVM::IOR))
        (346 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (349 (RETURN))
        (ENDOFCODE 350))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT LONG TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT LONG TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (103 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (217 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (242 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (248 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT TOPX TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "timeToFields" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 14)
       (CODE_LENGTH . 396)
       (PARSEDCODE
         (0 (JVM::LLOAD_1))
         (1 (JVM::LDC2_W 23))
         (4 (LCMP))
         (5 (IFLT 171))
         (8 (JVM::LLOAD_1))
         (9 (INVOKESTATIC (METHODCP "millisToJulianDay"
                                    "java.util.Calendar" (LONG)
                                    LONG)))
         (12 (JVM::LDC2_W 37))
         (15 (JVM::LSUB))
         (16 (JVM::LSTORE 7))
         (18 (ICONST_1))
         (19 (NEWARRAY INT))
         (21 (ASTORE 9))
         (23 (JVM::LLOAD 7))
         (25 (LDC 38))
         (27 (ALOAD 9))
         (29 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (LONG INT (ARRAY INT))
                                     INT)))
         (32 (ISTORE 10))
         (34 (ALOAD 9))
         (36 (ICONST_0))
         (37 (IALOAD))
         (38 (LDC 39))
         (40 (ALOAD 9))
         (42 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (INT INT (ARRAY INT))
                                     INT)))
         (45 (ISTORE 11))
         (47 (ALOAD 9))
         (49 (ICONST_0))
         (50 (IALOAD))
         (51 (JVM::SIPUSH 1461))
         (54 (ALOAD 9))
         (56 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (INT INT (ARRAY INT))
                                     INT)))
         (59 (ISTORE 12))
         (61 (ALOAD 9))
         (63 (ICONST_0))
         (64 (IALOAD))
         (65 (JVM::SIPUSH 365))
         (68 (ALOAD 9))
         (70 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (INT INT (ARRAY INT))
                                     INT)))
         (73 (ISTORE 13))
         (75 (JVM::SIPUSH 400))
         (78 (ILOAD 10))
         (80 (IMUL))
         (81 (BIPUSH 100))
         (83 (ILOAD 11))
         (85 (IMUL))
         (86 (IADD))
         (87 (ICONST_4))
         (88 (ILOAD 12))
         (90 (IMUL))
         (91 (IADD))
         (92 (ILOAD 13))
         (94 (IADD))
         (95 (ISTORE 5))
         (97 (ALOAD 9))
         (99 (ICONST_0))
         (100 (IALOAD))
         (101 (ISTORE_3))
         (102 (ILOAD 11))
         (104 (ICONST_4))
         (105 (IF_ICMPEQ 114))
         (108 (ILOAD 13))
         (110 (ICONST_4))
         (111 (IF_ICMPNE 121))
         (114 (JVM::SIPUSH 365))
         (117 (ISTORE_3))
         (118 (GOTO 124))
         (121 (IINC 5 1))
         (124 (ILOAD 5))
         (126 (ICONST_3))
         (127 (JVM::IAND))
         (128 (IFNE 152))
         (131 (ILOAD 5))
         (133 (BIPUSH 100))
         (135 (IREM))
         (136 (IFNE 148))
         (139 (ILOAD 5))
         (141 (JVM::SIPUSH 400))
         (144 (IREM))
         (145 (IFNE 152))
         (148 (ICONST_1))
         (149 (GOTO 153))
         (152 (ICONST_0))
         (153 (ISTORE 6))
         (155 (ALOAD_0))
         (156 (JVM::LLOAD 7))
         (158 (LCONST_1))
         (159 (JVM::LADD))
         (160 (JVM::LDC2_W 40))
         (163 (JVM::LREM))
         (164 (JVM::L2I))
         (165 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (168 (GOTO 254))
         (171 (JVM::LLOAD_1))
         (172 (INVOKESTATIC (METHODCP "millisToJulianDay"
                                      "java.util.Calendar" (LONG)
                                      LONG)))
         (175 (JVM::LDC2_W 41))
         (178 (JVM::LSUB))
         (179 (JVM::LSTORE 7))
         (181 (JVM::LDC2_W 42))
         (184 (JVM::LLOAD 7))
         (186 (JVM::LMUL))
         (187 (JVM::LDC2_W 43))
         (190 (JVM::LADD))
         (191 (JVM::LDC2_W 44))
         (194 (INVOKESTATIC (METHODCP "floorDivide"
                                      "java.util.Calendar" (LONG LONG)
                                      LONG)))
         (197 (JVM::L2I))
         (198 (ISTORE 5))
         (200 (JVM::SIPUSH 365))
         (203 (ILOAD 5))
         (205 (ICONST_1))
         (206 (ISUB))
         (207 (IMUL))
         (208 (ILOAD 5))
         (210 (ICONST_1))
         (211 (ISUB))
         (212 (ICONST_4))
         (213 (INVOKESTATIC (METHODCP "floorDivide"
                                      "java.util.Calendar" (INT INT)
                                      INT)))
         (216 (IADD))
         (217 (JVM::I2L))
         (218 (JVM::LSTORE 9))
         (220 (JVM::LLOAD 7))
         (222 (JVM::LLOAD 9))
         (224 (JVM::LSUB))
         (225 (JVM::L2I))
         (226 (ISTORE_3))
         (227 (ILOAD 5))
         (229 (ICONST_3))
         (230 (JVM::IAND))
         (231 (IFNE 238))
         (234 (ICONST_1))
         (235 (GOTO 239))
         (238 (ICONST_0))
         (239 (ISTORE 6))
         (241 (ALOAD_0))
         (242 (JVM::LLOAD 7))
         (244 (LCONST_1))
         (245 (JVM::LSUB))
         (246 (JVM::LDC2_W 40))
         (249 (JVM::LREM))
         (250 (JVM::L2I))
         (251 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (254 (ICONST_0))
         (255 (ISTORE 7))
         (257 (ILOAD 6))
         (259 (IFEQ 267))
         (262 (BIPUSH 60))
         (264 (GOTO 269))
         (267 (BIPUSH 59))
         (269 (ISTORE 8))
         (271 (ILOAD_3))
         (272 (ILOAD 8))
         (274 (IF_ICMPLT 289))
         (277 (ILOAD 6))
         (279 (IFEQ 286))
         (282 (ICONST_1))
         (283 (GOTO 287))
         (286 (ICONST_2))
         (287 (ISTORE 7))
         (289 (BIPUSH 12))
         (291 (ILOAD_3))
         (292 (ILOAD 7))
         (294 (IADD))
         (295 (IMUL))
         (296 (BIPUSH 6))
         (298 (IADD))
         (299 (JVM::SIPUSH 367))
         (302 (IDIV))
         (303 (ISTORE 9))
         (305 (ILOAD_3))
         (306 (ILOAD 6))
         (308 (IFEQ 320))
         (311 (GETSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                       "java.util.Calendar" (ARRAY INT))))
         (314 (ILOAD 9))
         (316 (IALOAD))
         (317 (GOTO 326))
         (320 (GETSTATIC (JVM::FIELDCP "NUM_DAYS"
                                       "java.util.Calendar" (ARRAY INT))))
         (323 (ILOAD 9))
         (325 (IALOAD))
         (326 (ISUB))
         (327 (ICONST_1))
         (328 (IADD))
         (329 (ISTORE 10))
         (331 (ALOAD_0))
         (332 (DUP))
         (333 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (336 (ALOAD_0))
         (337 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (340 (IFGE 348))
         (343 (BIPUSH 8))
         (345 (GOTO 349))
         (348 (ICONST_1))
         (349 (IADD))
         (350 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (353 (IINC 9 0))
         (356 (ALOAD_0))
         (357 (ILOAD 5))
         (359 (BIPUSH 9))
         (361 (JVM::ISHL))
         (362 (PUTFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (365 (ALOAD_0))
         (366 (DUP))
         (367 (GETFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (370 (ILOAD 9))
         (372 (BIPUSH 15))
         (374 (JVM::IAND))
         (375 (ICONST_5))
         (376 (JVM::ISHL))
         (377 (JVM::IOR))
         (378 (PUTFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (381 (ALOAD_0))
         (382 (DUP))
         (383 (GETFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (386 (ILOAD 10))
         (388 (BIPUSH 31))
         (390 (JVM::IAND))
         (391 (JVM::IOR))
         (392 (PUTFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (395 (RETURN))
         (ENDOFCODE 396))
       (EXCEPTIONS)
       (STACKMAP (114 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (121 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (124 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (148 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (152 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (153 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK INT)
                             NIL))
                 (171 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX TOPX TOPX TOPX
                                     TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (238 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     TOPX LONG TOPX LONG TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (239 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     TOPX LONG TOPX LONG TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (254 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT LONG TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (267 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (269 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (286 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (287 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (289 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (320 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (326 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT TOPX TOPX TOPX TOPX)
                             (STACK INT INT)
                             NIL))
                 (348 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK INT (CLASS "java.util.Calendar"))
                             NIL))
                 (349 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK INT INT (CLASS "java.util.Calendar"))
                             NIL)))))
     (METHOD
      "calculateTime" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 9)
       (JVM::MAX_LOCALS . 11)
       (CODE_LENGTH . 273)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "packed_date"
                                   "java.util.Calendar" INT)))
        (4 (BIPUSH 9))
        (6 (JVM::ISHR))
        (7 (ISTORE_1))
        (8 (ILOAD_1))
        (9 (JVM::SIPUSH 1582))
        (12 (IF_ICMPLT 19))
        (15 (ICONST_1))
        (16 (GOTO 20))
        (19 (ICONST_0))
        (20 (ISTORE_2))
        (21 (ALOAD_0))
        (22 (ILOAD_2))
        (23 (ILOAD_1))
        (24 (INVOKESPECIAL (METHODCP "calculateJulianDay"
                                     "java.util.Calendar" (BOOLEAN INT)
                                     LONG)))
        (27 (JVM::LSTORE_3))
        (28 (JVM::LLOAD_3))
        (29 (INVOKESTATIC (METHODCP "julianDayToMillis"
                                    "java.util.Calendar" (LONG)
                                    LONG)))
        (32 (JVM::LSTORE 5))
        (34 (ILOAD_2))
        (35 (JVM::LLOAD 5))
        (37 (JVM::LDC2_W 23))
        (40 (LCMP))
        (41 (IFLT 48))
        (44 (ICONST_1))
        (45 (GOTO 49))
        (48 (ICONST_0))
        (49 (IF_ICMPEQ 81))
        (52 (JVM::LLOAD_3))
        (53 (JVM::LDC2_W 45))
        (56 (LCMP))
        (57 (IFEQ 81))
        (60 (ALOAD_0))
        (61 (ILOAD_2))
        (62 (IFNE 69))
        (65 (ICONST_1))
        (66 (GOTO 70))
        (69 (ICONST_0))
        (70 (ILOAD_1))
        (71 (INVOKESPECIAL (METHODCP "calculateJulianDay"
                                     "java.util.Calendar" (BOOLEAN INT)
                                     LONG)))
        (74 (JVM::LSTORE_3))
        (75 (JVM::LLOAD_3))
        (76 (INVOKESTATIC (METHODCP "julianDayToMillis"
                                    "java.util.Calendar" (LONG)
                                    LONG)))
        (79 (JVM::LSTORE 5))
        (81 (ICONST_0))
        (82 (ISTORE 7))
        (84 (ILOAD 7))
        (86 (ALOAD_0))
        (87 (GETFIELD (JVM::FIELDCP "packed_time"
                                    "java.util.Calendar" INT)))
        (90 (BIPUSH 22))
        (92 (JVM::ISHR))
        (93 (BIPUSH 31))
        (95 (JVM::IAND))
        (96 (IADD))
        (97 (ISTORE 7))
        (99 (ILOAD 7))
        (101 (BIPUSH 60))
        (103 (IMUL))
        (104 (ISTORE 7))
        (106 (ILOAD 7))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (112 (BIPUSH 16))
        (114 (JVM::ISHR))
        (115 (BIPUSH 63))
        (117 (JVM::IAND))
        (118 (IADD))
        (119 (ISTORE 7))
        (121 (ILOAD 7))
        (123 (BIPUSH 60))
        (125 (IMUL))
        (126 (ISTORE 7))
        (128 (ILOAD 7))
        (130 (ALOAD_0))
        (131 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (134 (BIPUSH 10))
        (136 (JVM::ISHR))
        (137 (BIPUSH 63))
        (139 (JVM::IAND))
        (140 (IADD))
        (141 (ISTORE 7))
        (143 (ILOAD 7))
        (145 (JVM::SIPUSH 1000))
        (148 (IMUL))
        (149 (ISTORE 7))
        (151 (ILOAD 7))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (157 (JVM::SIPUSH 1023))
        (160 (JVM::IAND))
        (161 (IADD))
        (162 (ISTORE 7))
        (164 (ALOAD_0))
        (165 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
        (168 (INVOKEVIRTUAL (METHODCP "getRawOffset"
                                      "java.util.TimeZone" NIL INT)))
        (171 (ISTORE 8))
        (173 (JVM::LLOAD 5))
        (175 (ILOAD 7))
        (177 (JVM::I2L))
        (178 (JVM::LADD))
        (179 (JVM::LSTORE 5))
        (181 (ALOAD_0))
        (182 (ICONST_0))
        (183 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (186 (ICONST_1))
        (187 (NEWARRAY INT))
        (189 (ASTORE 9))
        (191 (JVM::LLOAD 5))
        (193 (LDC 46))
        (195 (ALOAD 9))
        (197 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (LONG INT (ARRAY INT))
                                     INT)))
        (200 (POP))
        (201 (JVM::LLOAD_3))
        (202 (INVOKESTATIC (METHODCP "julianDayToDayOfWeek"
                                     "java.util.Calendar" (LONG)
                                     INT)))
        (205 (ISTORE 10))
        (207 (ALOAD_0))
        (208 (ALOAD_0))
        (209 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
        (212 (ICONST_1))
        (213 (ALOAD_0))
        (214 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (217 (BIPUSH 9))
        (219 (JVM::ISHR))
        (220 (ALOAD_0))
        (221 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (224 (ICONST_5))
        (225 (JVM::ISHR))
        (226 (BIPUSH 15))
        (228 (JVM::IAND))
        (229 (ALOAD_0))
        (230 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (233 (BIPUSH 31))
        (235 (JVM::IAND))
        (236 (ILOAD 10))
        (238 (ALOAD 9))
        (240 (ICONST_0))
        (241 (IALOAD))
        (242 (INVOKEVIRTUAL (METHODCP "getOffset" "java.util.TimeZone"
                                      (INT INT INT INT INT INT)
                                      INT)))
        (245 (ILOAD 8))
        (247 (ISUB))
        (248 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (251 (ALOAD_0))
        (252 (ICONST_1))
        (253 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (256 (ALOAD_0))
        (257 (JVM::LLOAD 5))
        (259 (ILOAD 8))
        (261 (JVM::I2L))
        (262 (JVM::LSUB))
        (263 (ALOAD_0))
        (264 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (267 (JVM::I2L))
        (268 (JVM::LSUB))
        (269 (PUTFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (272 (RETURN))
        (ENDOFCODE 273))
       (EXCEPTIONS)
       (STACKMAP (19 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT INT)
                            NIL))
                 (69 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK (CLASS "java.util.Calendar"))
                            NIL))
                 (70 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT (CLASS "java.util.Calendar"))
                            NIL))
                 (81 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "calculateJulianDay"
      (PARAMETERS BOOLEAN INT)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 10)
       (CODE_LENGTH . 181)
       (PARSEDCODE
            (0 (ICONST_0))
            (1 (ISTORE_3))
            (2 (LCONST_0))
            (3 (JVM::LSTORE 5))
            (5 (ALOAD_0))
            (6 (GETFIELD (JVM::FIELDCP "packed_date"
                                       "java.util.Calendar" INT)))
            (9 (ICONST_5))
            (10 (JVM::ISHR))
            (11 (BIPUSH 15))
            (13 (JVM::IAND))
            (14 (ISTORE_3))
            (15 (ILOAD_3))
            (16 (IFLT 25))
            (19 (ILOAD_3))
            (20 (BIPUSH 11))
            (22 (IF_ICMPLE 46))
            (25 (ICONST_1))
            (26 (NEWARRAY INT))
            (28 (ASTORE 7))
            (30 (ILOAD_2))
            (31 (ILOAD_3))
            (32 (BIPUSH 12))
            (34 (ALOAD 7))
            (36 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                        (INT INT (ARRAY INT))
                                        INT)))
            (39 (IADD))
            (40 (ISTORE_2))
            (41 (ALOAD 7))
            (43 (ICONST_0))
            (44 (IALOAD))
            (45 (ISTORE_3))
            (46 (ILOAD_2))
            (47 (ICONST_4))
            (48 (IREM))
            (49 (IFNE 56))
            (52 (ICONST_1))
            (53 (GOTO 57))
            (56 (ICONST_0))
            (57 (ISTORE 7))
            (59 (ILOAD_2))
            (60 (ICONST_1))
            (61 (ISUB))
            (62 (ISTORE 4))
            (64 (JVM::LDC2_W 47))
            (67 (ILOAD 4))
            (69 (JVM::I2L))
            (70 (JVM::LMUL))
            (71 (ILOAD 4))
            (73 (ICONST_4))
            (74 (INVOKESTATIC (METHODCP "floorDivide"
                                        "java.util.Calendar" (INT INT)
                                        INT)))
            (77 (JVM::I2L))
            (78 (JVM::LADD))
            (79 (JVM::LDC2_W 48))
            (82 (JVM::LADD))
            (83 (JVM::LSTORE 8))
            (85 (ILOAD_1))
            (86 (IFEQ 140))
            (89 (ILOAD 7))
            (91 (IFEQ 113))
            (94 (ILOAD_2))
            (95 (BIPUSH 100))
            (97 (IREM))
            (98 (IFNE 109))
            (101 (ILOAD_2))
            (102 (JVM::SIPUSH 400))
            (105 (IREM))
            (106 (IFNE 113))
            (109 (ICONST_1))
            (110 (GOTO 114))
            (113 (ICONST_0))
            (114 (ISTORE 7))
            (116 (JVM::LLOAD 8))
            (118 (ILOAD 4))
            (120 (JVM::SIPUSH 400))
            (123 (INVOKESTATIC (METHODCP "floorDivide"
                                         "java.util.Calendar" (INT INT)
                                         INT)))
            (126 (ILOAD 4))
            (128 (BIPUSH 100))
            (130 (INVOKESTATIC (METHODCP "floorDivide"
                                         "java.util.Calendar" (INT INT)
                                         INT)))
            (133 (ISUB))
            (134 (ICONST_2))
            (135 (IADD))
            (136 (JVM::I2L))
            (137 (JVM::LADD))
            (138 (JVM::LSTORE 8))
            (140 (JVM::LLOAD 8))
            (142 (ILOAD 7))
            (144 (IFEQ 156))
            (147 (GETSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                          "java.util.Calendar" (ARRAY INT))))
            (150 (ILOAD_3))
            (151 (IALOAD))
            (152 (JVM::I2L))
            (153 (GOTO 162))
            (156 (GETSTATIC (JVM::FIELDCP "NUM_DAYS"
                                          "java.util.Calendar" (ARRAY INT))))
            (159 (ILOAD_3))
            (160 (IALOAD))
            (161 (JVM::I2L))
            (162 (JVM::LADD))
            (163 (JVM::LSTORE 8))
            (165 (JVM::LLOAD 8))
            (167 (ALOAD_0))
            (168 (GETFIELD (JVM::FIELDCP "packed_date"
                                         "java.util.Calendar" INT)))
            (171 (BIPUSH 31))
            (173 (JVM::IAND))
            (174 (JVM::I2L))
            (175 (JVM::LADD))
            (176 (JVM::LSTORE 8))
            (178 (JVM::LLOAD 8))
            (180 (JVM::LRETURN))
            (ENDOFCODE 181))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (57 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (109 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (113 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (114 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK INT)
                             NIL))
                 (140 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (156 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG)
                             NIL))
                 (162 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG TOPX LONG)
                             NIL)))))
     (METHOD
       "millisToJulianDay" (PARAMETERS LONG)
       (RETURNTYPE . LONG)
       (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
       (CODE (MAX_STACK . 6)
             (JVM::MAX_LOCALS . 2)
             (CODE_LENGTH . 12)
             (PARSEDCODE
                  (0 (JVM::LDC2_W 49))
                  (3 (JVM::LLOAD_0))
                  (4 (JVM::LDC2_W 21))
                  (7 (INVOKESTATIC (METHODCP "floorDivide"
                                             "java.util.Calendar" (LONG LONG)
                                             LONG)))
                  (10 (JVM::LADD))
                  (11 (JVM::LRETURN))
                  (ENDOFCODE 12))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD "julianDayToMillis" (PARAMETERS LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 10)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (JVM::LDC2_W 49))
                               (4 (JVM::LSUB))
                               (5 (JVM::LDC2_W 21))
                               (8 (JVM::LMUL))
                               (9 (JVM::LRETURN))
                               (ENDOFCODE 10))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "julianDayToDayOfWeek" (PARAMETERS LONG)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 3)
                   (CODE_LENGTH . 22)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_1))
                               (2 (JVM::LADD))
                               (3 (JVM::LDC2_W 40))
                               (6 (JVM::LREM))
                               (7 (JVM::L2I))
                               (8 (ISTORE_2))
                               (9 (ILOAD_2))
                               (10 (ILOAD_2))
                               (11 (IFGE 19))
                               (14 (BIPUSH 8))
                               (16 (GOTO 20))
                               (19 (ICONST_1))
                               (20 (IADD))
                               (21 (IRETURN))
                               (ENDOFCODE 22))
                   (EXCEPTIONS)
                   (STACKMAP (19 (FRAME (LOCALS LONG TOPX INT)
                                        (STACK INT)
                                        NIL))
                             (20 (FRAME (LOCALS LONG TOPX INT)
                                        (STACK INT INT)
                                        NIL)))))
     (METHOD "floorDivide" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 20)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_0))
                               (2 (LCMP))
                               (3 (IFLT 12))
                               (6 (JVM::LLOAD_0))
                               (7 (JVM::LLOAD_2))
                               (8 (JVM::LDIV))
                               (9 (GOTO 19))
                               (12 (JVM::LLOAD_0))
                               (13 (LCONST_1))
                               (14 (JVM::LADD))
                               (15 (JVM::LLOAD_2))
                               (16 (JVM::LDIV))
                               (17 (LCONST_1))
                               (18 (JVM::LSUB))
                               (19 (JVM::LRETURN))
                               (ENDOFCODE 20))
                   (EXCEPTIONS)
                   (STACKMAP (12 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (19 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD "floorDivide" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFLT 10))
                               (4 (ILOAD_0))
                               (5 (ILOAD_1))
                               (6 (IDIV))
                               (7 (GOTO 17))
                               (10 (ILOAD_0))
                               (11 (ICONST_1))
                               (12 (IADD))
                               (13 (ILOAD_1))
                               (14 (IDIV))
                               (15 (ICONST_1))
                               (16 (ISUB))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (10 (FRAME (LOCALS INT INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT INT)
                                        (STACK INT)
                                        NIL)))))
     (METHOD "floorDivide"
             (PARAMETERS INT INT (ARRAY INT))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 5)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 32)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFLT 14))
                               (4 (ALOAD_2))
                               (5 (ICONST_0))
                               (6 (ILOAD_0))
                               (7 (ILOAD_1))
                               (8 (IREM))
                               (9 (IASTORE))
                               (10 (ILOAD_0))
                               (11 (ILOAD_1))
                               (12 (IDIV))
                               (13 (IRETURN))
                               (14 (ILOAD_0))
                               (15 (ICONST_1))
                               (16 (IADD))
                               (17 (ILOAD_1))
                               (18 (IDIV))
                               (19 (ICONST_1))
                               (20 (ISUB))
                               (21 (ISTORE_3))
                               (22 (ALOAD_2))
                               (23 (ICONST_0))
                               (24 (ILOAD_0))
                               (25 (ILOAD_3))
                               (26 (ILOAD_1))
                               (27 (IMUL))
                               (28 (ISUB))
                               (29 (IASTORE))
                               (30 (ILOAD_3))
                               (31 (IRETURN))
                               (ENDOFCODE 32))
                   (EXCEPTIONS)
                   (STACKMAP (14 (FRAME (LOCALS INT INT (ARRAY INT) TOPX)
                                        (STACK)
                                        NIL)))))
     (METHOD
          "floorDivide"
          (PARAMETERS LONG INT (ARRAY INT))
          (RETURNTYPE . INT)
          (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
          (CODE (MAX_STACK . 6)
                (JVM::MAX_LOCALS . 5)
                (CODE_LENGTH . 45)
                (PARSEDCODE (0 (JVM::LLOAD_0))
                            (1 (LCONST_0))
                            (2 (LCMP))
                            (3 (IFLT 20))
                            (6 (ALOAD_3))
                            (7 (ICONST_0))
                            (8 (JVM::LLOAD_0))
                            (9 (ILOAD_2))
                            (10 (JVM::I2L))
                            (11 (JVM::LREM))
                            (12 (JVM::L2I))
                            (13 (IASTORE))
                            (14 (JVM::LLOAD_0))
                            (15 (ILOAD_2))
                            (16 (JVM::I2L))
                            (17 (JVM::LDIV))
                            (18 (JVM::L2I))
                            (19 (IRETURN))
                            (20 (JVM::LLOAD_0))
                            (21 (LCONST_1))
                            (22 (JVM::LADD))
                            (23 (ILOAD_2))
                            (24 (JVM::I2L))
                            (25 (JVM::LDIV))
                            (26 (LCONST_1))
                            (27 (JVM::LSUB))
                            (28 (JVM::L2I))
                            (29 (ISTORE 4))
                            (31 (ALOAD_3))
                            (32 (ICONST_0))
                            (33 (JVM::LLOAD_0))
                            (34 (ILOAD 4))
                            (36 (ILOAD_2))
                            (37 (IMUL))
                            (38 (JVM::I2L))
                            (39 (JVM::LSUB))
                            (40 (JVM::L2I))
                            (41 (IASTORE))
                            (42 (ILOAD 4))
                            (44 (IRETURN))
                            (ENDOFCODE 45))
                (EXCEPTIONS)
                (STACKMAP (20 (FRAME (LOCALS LONG TOPX INT (ARRAY INT) TOPX)
                                     (STACK)
                                     NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 167)
       (PARSEDCODE
            (0 (BIPUSH 12))
            (2 (NEWARRAY INT))
            (4 (DUP))
            (5 (ICONST_0))
            (6 (ICONST_0))
            (7 (IASTORE))
            (8 (DUP))
            (9 (ICONST_1))
            (10 (BIPUSH 31))
            (12 (IASTORE))
            (13 (DUP))
            (14 (ICONST_2))
            (15 (BIPUSH 59))
            (17 (IASTORE))
            (18 (DUP))
            (19 (ICONST_3))
            (20 (BIPUSH 90))
            (22 (IASTORE))
            (23 (DUP))
            (24 (ICONST_4))
            (25 (BIPUSH 120))
            (27 (IASTORE))
            (28 (DUP))
            (29 (ICONST_5))
            (30 (JVM::SIPUSH 151))
            (33 (IASTORE))
            (34 (DUP))
            (35 (BIPUSH 6))
            (37 (JVM::SIPUSH 181))
            (40 (IASTORE))
            (41 (DUP))
            (42 (BIPUSH 7))
            (44 (JVM::SIPUSH 212))
            (47 (IASTORE))
            (48 (DUP))
            (49 (BIPUSH 8))
            (51 (JVM::SIPUSH 243))
            (54 (IASTORE))
            (55 (DUP))
            (56 (BIPUSH 9))
            (58 (JVM::SIPUSH 273))
            (61 (IASTORE))
            (62 (DUP))
            (63 (BIPUSH 10))
            (65 (JVM::SIPUSH 304))
            (68 (IASTORE))
            (69 (DUP))
            (70 (BIPUSH 11))
            (72 (JVM::SIPUSH 334))
            (75 (IASTORE))
            (76 (PUTSTATIC (JVM::FIELDCP "NUM_DAYS"
                                         "java.util.Calendar" (ARRAY INT))))
            (79 (BIPUSH 12))
            (81 (NEWARRAY INT))
            (83 (DUP))
            (84 (ICONST_0))
            (85 (ICONST_0))
            (86 (IASTORE))
            (87 (DUP))
            (88 (ICONST_1))
            (89 (BIPUSH 31))
            (91 (IASTORE))
            (92 (DUP))
            (93 (ICONST_2))
            (94 (BIPUSH 60))
            (96 (IASTORE))
            (97 (DUP))
            (98 (ICONST_3))
            (99 (BIPUSH 91))
            (101 (IASTORE))
            (102 (DUP))
            (103 (ICONST_4))
            (104 (BIPUSH 121))
            (106 (IASTORE))
            (107 (DUP))
            (108 (ICONST_5))
            (109 (JVM::SIPUSH 152))
            (112 (IASTORE))
            (113 (DUP))
            (114 (BIPUSH 6))
            (116 (JVM::SIPUSH 182))
            (119 (IASTORE))
            (120 (DUP))
            (121 (BIPUSH 7))
            (123 (JVM::SIPUSH 213))
            (126 (IASTORE))
            (127 (DUP))
            (128 (BIPUSH 8))
            (130 (JVM::SIPUSH 244))
            (133 (IASTORE))
            (134 (DUP))
            (135 (BIPUSH 9))
            (137 (JVM::SIPUSH 274))
            (140 (IASTORE))
            (141 (DUP))
            (142 (BIPUSH 10))
            (144 (JVM::SIPUSH 305))
            (147 (IASTORE))
            (148 (DUP))
            (149 (BIPUSH 11))
            (151 (JVM::SIPUSH 335))
            (154 (IASTORE))
            (155 (PUTSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                          "java.util.Calendar" (ARRAY INT))))
            (158 (ACONST_NULL))
            (159 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                          (CLASS "java.lang.String"))))
            (162 (ACONST_NULL))
            (163 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                          (CLASS "java.lang.String"))))
            (166 (RETURN))
            (ENDOFCODE 167))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Date"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "millis"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 8)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESTATIC (METHODCP "currentTimeMillis"
                                            "java.lang.System" NIL LONG)))
                 (4 (INVOKESPECIAL (METHODCP "<init>" "java.util.Date" (LONG)
                                             VOID)))
                 (7 (RETURN))
                 (ENDOFCODE 8))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::LLOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "millis" "java.util.Date" LONG)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getTime" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 2)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "millis" "java.util.Date" LONG)))
                 (4 (JVM::LRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "setTime" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 3)
            (CODE_LENGTH . 6)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (JVM::LLOAD_1))
                 (2 (PUTFIELD (JVM::FIELDCP "millis" "java.util.Date" LONG)))
                 (5 (RETURN))
                 (ENDOFCODE 6))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 32)
       (PARSEDCODE
          (0 (ALOAD_1))
          (1 (IFNULL 30))
          (4 (ALOAD_1))
          (5 (JVM::INSTANCEOF (CLASS "java.util.Date")))
          (8 (IFEQ 30))
          (11 (ALOAD_0))
          (12 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
          (15 (ALOAD_1))
          (16 (CHECKCAST (CLASS "java.util.Date")))
          (19 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
          (22 (LCMP))
          (23 (IFNE 30))
          (26 (ICONST_1))
          (27 (GOTO 31))
          (30 (ICONST_0))
          (31 (IRETURN))
          (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (30 (FRAME (LOCALS (CLASS "java.util.Date")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (31 (FRAME (LOCALS (CLASS "java.util.Date")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 14)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
           (4 (JVM::LSTORE_1))
           (5 (JVM::LLOAD_1))
           (6 (JVM::L2I))
           (7 (JVM::LLOAD_1))
           (8 (BIPUSH 32))
           (10 (JVM::LSHR))
           (11 (JVM::L2I))
           (12 (JVM::IXOR))
           (13 (IRETURN))
           (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.EmptyStackException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Random" "java.lang.Object"
    (CONSTANT_POOL (LONG 25214903917)
                   (LONG 11)
                   (LONG 281474976710655)
                   (INT 8)
                   (INT 4))
    (FIELDS (FIELD "seed"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "multiplier" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "addend" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "mask" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "BITS_PER_BYTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   3)
            (FIELD "BYTES_PER_INT" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   4))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESTATIC (METHODCP "currentTimeMillis"
                                          "java.lang.System" NIL LONG)))
               (4 (INVOKESPECIAL (METHODCP "<init>" "java.util.Random" (LONG)
                                           VOID)))
               (7 (RETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::LLOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "setSeed" "java.util.Random" (LONG)
                                      VOID)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setSeed" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
           (MAX_STACK . 5)
           (JVM::MAX_LOCALS . 3)
           (CODE_LENGTH . 14)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (JVM::LLOAD_1))
                (2 (JVM::LDC2_W 0))
                (5 (JVM::LXOR))
                (6 (JVM::LDC2_W 2))
                (9 (JVM::LAND))
                (10 (PUTFIELD (JVM::FIELDCP "seed" "java.util.Random" LONG)))
                (13 (RETURN))
                (ENDOFCODE 14))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "next" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*
                   *PROTECTED* *SUPER* *SYNCHRONIZED*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 4)
           (CODE_LENGTH . 30)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "seed" "java.util.Random" LONG)))
                (4 (JVM::LDC2_W 0))
                (7 (JVM::LMUL))
                (8 (JVM::LDC2_W 1))
                (11 (JVM::LADD))
                (12 (JVM::LDC2_W 2))
                (15 (JVM::LAND))
                (16 (JVM::LSTORE_2))
                (17 (ALOAD_0))
                (18 (JVM::LLOAD_2))
                (19 (PUTFIELD (JVM::FIELDCP "seed" "java.util.Random" LONG)))
                (22 (JVM::LLOAD_2))
                (23 (BIPUSH 48))
                (25 (ILOAD_1))
                (26 (ISUB))
                (27 (JVM::LUSHR))
                (28 (JVM::L2I))
                (29 (IRETURN))
                (ENDOFCODE 30))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
       "nextInt" (PARAMETERS)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 32))
                  (3 (INVOKEVIRTUAL (METHODCP "next" "java.util.Random" (INT)
                                              INT)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "nextLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 19)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (BIPUSH 32))
                 (3 (INVOKEVIRTUAL (METHODCP "next" "java.util.Random" (INT)
                                             INT)))
                 (6 (JVM::I2L))
                 (7 (BIPUSH 32))
                 (9 (JVM::LSHL))
                 (10 (ALOAD_0))
                 (11 (BIPUSH 32))
                 (13 (INVOKEVIRTUAL (METHODCP "next" "java.util.Random" (INT)
                                              INT)))
                 (16 (JVM::I2L))
                 (17 (JVM::LADD))
                 (18 (JVM::LRETURN))
                 (ENDOFCODE 19))
            (EXCEPTIONS)
            (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Stack"
    "java.util.Vector" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.util.Vector" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "push"
       (PARAMETERS (CLASS "java.lang.Object"))
       (RETURNTYPE CLASS "java.lang.Object")
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 2)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (ALOAD_1))
                  (2 (INVOKEVIRTUAL (METHODCP "addElement" "java.util.Vector"
                                              ((CLASS "java.lang.Object"))
                                              VOID)))
                  (5 (ALOAD_1))
                  (6 (ARETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "pop" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
             (4 (ISTORE_2))
             (5 (ALOAD_0))
             (6 (INVOKEVIRTUAL (METHODCP "peek" "java.util.Stack"
                                         NIL (CLASS "java.lang.Object"))))
             (9 (ASTORE_1))
             (10 (ALOAD_0))
             (11 (ILOAD_2))
             (12 (ICONST_1))
             (13 (ISUB))
             (14 (INVOKEVIRTUAL (METHODCP "removeElementAt"
                                          "java.util.Vector" (INT)
                                          VOID)))
             (17 (ALOAD_1))
             (18 (ARETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "peek" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 25)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
        (4 (ISTORE_1))
        (5 (ILOAD_1))
        (6 (IFNE 17))
        (9 (NEW (CLASS "java.util.EmptyStackException")))
        (12 (DUP))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.util.EmptyStackException"
                                     NIL VOID)))
        (16 (ATHROW))
        (17 (ALOAD_0))
        (18 (ILOAD_1))
        (19 (ICONST_1))
        (20 (ISUB))
        (21 (INVOKEVIRTUAL (METHODCP "elementAt" "java.util.Vector" (INT)
                                     (CLASS "java.lang.Object"))))
        (24 (ARETURN))
        (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.util.Stack") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "empty" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 13)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
             (4 (IFNE 11))
             (7 (ICONST_1))
             (8 (GOTO 12))
             (11 (ICONST_0))
             (12 (IRETURN))
             (ENDOFCODE 13))
        (EXCEPTIONS)
        (STACKMAP (11 (FRAME (LOCALS (CLASS "java.util.Stack"))
                             (STACK)
                             NIL))
                  (12 (FRAME (LOCALS (CLASS "java.util.Stack"))
                             (STACK INT)
                             NIL)))))
     (METHOD
      "search"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 19)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.util.Vector"
                                        ((CLASS "java.lang.Object"))
                                        INT)))
            (5 (ISTORE_2))
            (6 (ILOAD_2))
            (7 (IFLT 17))
            (10 (ALOAD_0))
            (11 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
            (14 (ILOAD_2))
            (15 (ISUB))
            (16 (IRETURN))
            (17 (ICONST_M1))
            (18 (IRETURN))
            (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.util.Stack")
                                    (CLASS "java.lang.Object")
                                    INT)
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Vector" "java.lang.Object"
    (CONSTANT_POOL (STRING "Illegal Capacity: ")
                   (STRING " >= ")
                   (STRING " < 0")
                   (STRING " > ")
                   (STRING "[")
                   (STRING ", ")
                   (STRING "]"))
    (FIELDS (FIELD "elementData"
                   (ARRAY (CLASS "java.lang.Object"))
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "elementCount"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "capacityIncrement"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 49)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
         (4 (ILOAD_1))
         (5 (IFGE 35))
         (8 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (11 (DUP))
         (12 (NEW (CLASS "java.lang.StringBuffer")))
         (15 (DUP))
         (16 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (19 (LDC 0))
         (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (24 (ILOAD_1))
         (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (28 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (31 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (34 (ATHROW))
         (35 (ALOAD_0))
         (36 (ILOAD_1))
         (37 (ANEWARRAY (CLASS "java.lang.Object")))
         (40 (PUTFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (43 (ALOAD_0))
         (44 (ILOAD_2))
         (45 (PUTFIELD (JVM::FIELDCP "capacityIncrement"
                                     "java.util.Vector" INT)))
         (48 (RETURN))
         (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP (35 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ILOAD_1))
            (2 (ICONST_0))
            (3 (INVOKESPECIAL (METHODCP "<init>" "java.util.Vector" (INT INT)
                                        VOID)))
            (6 (RETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 7)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (BIPUSH 10))
                (3 (INVOKESPECIAL (METHODCP "<init>" "java.util.Vector" (INT)
                                            VOID)))
                (6 (RETURN))
                (ENDOFCODE 7))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "copyInto"
      (PARAMETERS (ARRAY (CLASS "java.lang.Object")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 26)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (ISTORE_2))
          (5 (GOTO 17))
          (8 (ALOAD_1))
          (9 (ILOAD_2))
          (10 (ALOAD_0))
          (11 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                      (ARRAY (CLASS "java.lang.Object")))))
          (14 (ILOAD_2))
          (15 (AALOAD))
          (16 (AASTORE))
          (17 (ILOAD_2))
          (18 (DUP))
          (19 (ICONST_1))
          (20 (ISUB))
          (21 (ISTORE_2))
          (22 (IFGT 8))
          (25 (RETURN))
          (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.util.Vector")
                                   (ARRAY (CLASS "java.lang.Object"))
                                   INT)
                           (STACK)
                           NIL))
                 (17 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (ARRAY (CLASS "java.lang.Object"))
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "trimToSize" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 45)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (4 (ARRAYLENGTH))
         (5 (ISTORE_1))
         (6 (ALOAD_0))
         (7 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (10 (ILOAD_1))
         (11 (IF_ICMPGE 44))
         (14 (ALOAD_0))
         (15 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (18 (ASTORE_2))
         (19 (ALOAD_0))
         (20 (ALOAD_0))
         (21 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (24 (ANEWARRAY (CLASS "java.lang.Object")))
         (27 (PUTFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (30 (ALOAD_2))
         (31 (ICONST_0))
         (32 (ALOAD_0))
         (33 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (36 (ICONST_0))
         (37 (ALOAD_0))
         (38 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (41 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (44 (RETURN))
         (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (44 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "ensureCapacity" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 15)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                        (ARRAY (CLASS "java.lang.Object")))))
             (5 (ARRAYLENGTH))
             (6 (IF_ICMPLE 14))
             (9 (ALOAD_0))
             (10 (ILOAD_1))
             (11 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                          "java.util.Vector" (INT)
                                          VOID)))
             (14 (RETURN))
             (ENDOFCODE 15))
        (EXCEPTIONS)
        (STACKMAP (14 (FRAME (LOCALS (CLASS "java.util.Vector") INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "ensureCapacityHelper" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 65)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (4 (ARRAYLENGTH))
         (5 (ISTORE_2))
         (6 (ALOAD_0))
         (7 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (10 (ASTORE_3))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "capacityIncrement"
                                     "java.util.Vector" INT)))
         (15 (IFLE 27))
         (18 (ILOAD_2))
         (19 (ALOAD_0))
         (20 (GETFIELD (JVM::FIELDCP "capacityIncrement"
                                     "java.util.Vector" INT)))
         (23 (IADD))
         (24 (GOTO 30))
         (27 (ILOAD_2))
         (28 (ICONST_2))
         (29 (IMUL))
         (30 (ISTORE 4))
         (32 (ILOAD 4))
         (34 (ILOAD_1))
         (35 (IF_ICMPGE 41))
         (38 (ILOAD_1))
         (39 (ISTORE 4))
         (41 (ALOAD_0))
         (42 (ILOAD 4))
         (44 (ANEWARRAY (CLASS "java.lang.Object")))
         (47 (PUTFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (50 (ALOAD_3))
         (51 (ICONST_0))
         (52 (ALOAD_0))
         (53 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (56 (ICONST_0))
         (57 (ALOAD_0))
         (58 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (61 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (64 (RETURN))
         (ENDOFCODE 65))
       (EXCEPTIONS)
       (STACKMAP (27 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT
                                    INT (ARRAY (CLASS "java.lang.Object"))
                                    TOPX)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT
                                    INT (ARRAY (CLASS "java.lang.Object"))
                                    TOPX)
                            (STACK INT)
                            NIL))
                 (41 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT
                                    INT (ARRAY (CLASS "java.lang.Object"))
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "setSize" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 54)
       (PARSEDCODE
         (0 (ILOAD_1))
         (1 (ALOAD_0))
         (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (5 (IF_ICMPLE 25))
         (8 (ILOAD_1))
         (9 (ALOAD_0))
         (10 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (13 (ARRAYLENGTH))
         (14 (IF_ICMPLE 25))
         (17 (ALOAD_0))
         (18 (ILOAD_1))
         (19 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                      "java.util.Vector" (INT)
                                      VOID)))
         (22 (GOTO 48))
         (25 (ILOAD_1))
         (26 (ISTORE_2))
         (27 (GOTO 40))
         (30 (ALOAD_0))
         (31 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (34 (ILOAD_2))
         (35 (ACONST_NULL))
         (36 (AASTORE))
         (37 (IINC 2 1))
         (40 (ILOAD_2))
         (41 (ALOAD_0))
         (42 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (45 (IF_ICMPLT 30))
         (48 (ALOAD_0))
         (49 (ILOAD_1))
         (50 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (53 (RETURN))
         (ENDOFCODE 54))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "capacity" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                        (ARRAY (CLASS "java.lang.Object")))))
             (4 (ARRAYLENGTH))
             (5 (IRETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (IRETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "isEmpty" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 13)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (IFNE 11))
          (7 (ICONST_1))
          (8 (GOTO 12))
          (11 (ICONST_0))
          (12 (IRETURN))
          (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK)
                            NIL))
                 (12 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "elements" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Enumeration")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (NEW (CLASS "java.util.VectorEnumerator")))
            (3 (DUP))
            (4 (ALOAD_0))
            (5 (INVOKESPECIAL (METHODCP "<init>" "java.util.VectorEnumerator"
                                        ((CLASS "java.util.Vector"))
                                        VOID)))
            (8 (ARETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "contains"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 15)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.util.Vector"
                                             ((CLASS "java.lang.Object") INT)
                                             INT)))
                 (6 (IFLT 13))
                 (9 (ICONST_1))
                 (10 (GOTO 14))
                 (13 (ICONST_0))
                 (14 (IRETURN))
                 (ENDOFCODE 15))
            (EXCEPTIONS)
            (STACKMAP (13 (FRAME (LOCALS (CLASS "java.util.Vector")
                                         (CLASS "java.lang.Object"))
                                 (STACK)
                                 NIL))
                      (14 (FRAME (LOCALS (CLASS "java.util.Vector")
                                         (CLASS "java.lang.Object"))
                                 (STACK INT)
                                 NIL)))))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.util.Vector"
                                             ((CLASS "java.lang.Object") INT)
                                             INT)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 34))
         (4 (ILOAD_2))
         (5 (ISTORE_3))
         (6 (GOTO 23))
         (9 (ALOAD_0))
         (10 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (13 (ILOAD_3))
         (14 (AALOAD))
         (15 (IFNONNULL 20))
         (18 (ILOAD_3))
         (19 (IRETURN))
         (20 (IINC 3 1))
         (23 (ILOAD_3))
         (24 (ALOAD_0))
         (25 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (28 (IF_ICMPLT 9))
         (31 (GOTO 65))
         (34 (ILOAD_2))
         (35 (ISTORE_3))
         (36 (GOTO 57))
         (39 (ALOAD_1))
         (40 (ALOAD_0))
         (41 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (44 (ILOAD_3))
         (45 (AALOAD))
         (46 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (49 (IFEQ 54))
         (52 (ILOAD_3))
         (53 (IRETURN))
         (54 (IINC 3 1))
         (57 (ILOAD_3))
         (58 (ALOAD_0))
         (59 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (62 (IF_ICMPLT 39))
         (65 (ICONST_M1))
         (66 (IRETURN))
         (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP (9 (FRAME (LOCALS (CLASS "java.util.Vector")
                                   (CLASS "java.lang.Object")
                                   INT INT)
                           (STACK)
                           NIL))
                 (20 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (23 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (34 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (39 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (57 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "lastIndexOf"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 12)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (ALOAD_0))
          (3 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (6 (ICONST_1))
          (7 (ISUB))
          (8 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.util.Vector"
                                      ((CLASS "java.lang.Object") INT)
                                      INT)))
          (11 (IRETURN))
          (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "lastIndexOf"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 101)
       (PARSEDCODE
         (0 (ILOAD_2))
         (1 (ALOAD_0))
         (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (5 (IF_ICMPLT 42))
         (8 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (11 (DUP))
         (12 (NEW (CLASS "java.lang.StringBuffer")))
         (15 (DUP))
         (16 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (19 (ILOAD_2))
         (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (23 (LDC 1))
         (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (28 (ALOAD_0))
         (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (38 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (41 (ATHROW))
         (42 (ALOAD_1))
         (43 (IFNONNULL 72))
         (46 (ILOAD_2))
         (47 (ISTORE_3))
         (48 (GOTO 65))
         (51 (ALOAD_0))
         (52 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (55 (ILOAD_3))
         (56 (AALOAD))
         (57 (IFNONNULL 62))
         (60 (ILOAD_3))
         (61 (IRETURN))
         (62 (IINC 3 -1))
         (65 (ILOAD_3))
         (66 (IFGE 51))
         (69 (GOTO 99))
         (72 (ILOAD_2))
         (73 (ISTORE_3))
         (74 (GOTO 95))
         (77 (ALOAD_1))
         (78 (ALOAD_0))
         (79 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (82 (ILOAD_3))
         (83 (AALOAD))
         (84 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (87 (IFEQ 92))
         (90 (ILOAD_3))
         (91 (IRETURN))
         (92 (IINC 3 -1))
         (95 (ILOAD_3))
         (96 (IFGE 77))
         (99 (ICONST_M1))
         (100 (IRETURN))
         (ENDOFCODE 101))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (77 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (92 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (95 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (99 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "elementAt" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 77)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (5 (IF_ICMPLT 42))
        (8 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (NEW (CLASS "java.lang.StringBuffer")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (19 (ILOAD_1))
        (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (23 (LDC 1))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (ALOAD_0))
        (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (38
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (41 (ATHROW))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (46 (ILOAD_1))
        (47 (AALOAD))
        (48 (ARETURN))
        (49 (ASTORE_2))
        (50 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (53 (DUP))
        (54 (NEW (CLASS "java.lang.StringBuffer")))
        (57 (DUP))
        (58 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (61 (ILOAD_1))
        (62 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (65 (LDC 2))
        (67 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (70 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (73
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (76 (ATHROW))
        (ENDOFCODE 77))
       (EXCEPTIONS
           (JVM::HANDLER 42 48 49
                         (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
       (STACKMAP
        (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                           INT TOPX)
                   (STACK)
                   NIL))
        (49 (FRAME (LOCALS (CLASS "java.util.Vector")
                           INT TOPX)
                   (STACK (CLASS "java.lang.ArrayIndexOutOfBoundsException"))
                   NIL)))))
     (METHOD
      "firstElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 22)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (IFNE 15))
          (7 (NEW (CLASS "java.util.NoSuchElementException")))
          (10 (DUP))
          (11 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.util.NoSuchElementException"
                                       NIL VOID)))
          (14 (ATHROW))
          (15 (ALOAD_0))
          (16 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                      (ARRAY (CLASS "java.lang.Object")))))
          (19 (ICONST_0))
          (20 (AALOAD))
          (21 (ARETURN))
          (ENDOFCODE 22))
       (EXCEPTIONS)
       (STACKMAP (15 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK)
                            NIL)))))
     (METHOD
      "lastElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 27)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (4 (IFNE 15))
         (7 (NEW (CLASS "java.util.NoSuchElementException")))
         (10 (DUP))
         (11 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.NoSuchElementException"
                                      NIL VOID)))
         (14 (ATHROW))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (19 (ALOAD_0))
         (20 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (23 (ICONST_1))
         (24 (ISUB))
         (25 (AALOAD))
         (26 (ARETURN))
         (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP (15 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK)
                            NIL)))))
     (METHOD
      "setElementAt"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 50)
       (PARSEDCODE
        (0 (ILOAD_2))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (5 (IF_ICMPLT 42))
        (8 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (NEW (CLASS "java.lang.StringBuffer")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (19 (ILOAD_2))
        (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (23 (LDC 1))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (ALOAD_0))
        (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (38
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (41 (ATHROW))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (46 (ILOAD_2))
        (47 (ALOAD_1))
        (48 (AASTORE))
        (49 (RETURN))
        (ENDOFCODE 50))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "removeElementAt" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 105)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (5 (IF_ICMPLT 42))
        (8 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (NEW (CLASS "java.lang.StringBuffer")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (19 (ILOAD_1))
        (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (23 (LDC 1))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (ALOAD_0))
        (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (38
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (41 (ATHROW))
        (42 (ILOAD_1))
        (43 (IFGE 55))
        (46 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (49 (DUP))
        (50 (ILOAD_1))
        (51
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   (INT)
                                   VOID)))
        (54 (ATHROW))
        (55 (ALOAD_0))
        (56 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (59 (ILOAD_1))
        (60 (ISUB))
        (61 (ICONST_1))
        (62 (ISUB))
        (63 (ISTORE_2))
        (64 (ILOAD_2))
        (65 (IFLE 84))
        (68 (ALOAD_0))
        (69 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (72 (ILOAD_1))
        (73 (ICONST_1))
        (74 (IADD))
        (75 (ALOAD_0))
        (76 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (79 (ILOAD_1))
        (80 (ILOAD_2))
        (81 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (84 (ALOAD_0))
        (85 (DUP))
        (86 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (89 (ICONST_1))
        (90 (ISUB))
        (91 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (94 (ALOAD_0))
        (95 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (98 (ALOAD_0))
        (99 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (102 (ACONST_NULL))
        (103 (AASTORE))
        (104 (RETURN))
        (ENDOFCODE 105))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (55 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (84 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insertElementAt"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 99)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (4 (ICONST_1))
        (5 (IADD))
        (6 (ISTORE_3))
        (7 (ILOAD_2))
        (8 (ILOAD_3))
        (9 (IF_ICMPLT 46))
        (12 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (15 (DUP))
        (16 (NEW (CLASS "java.lang.StringBuffer")))
        (19 (DUP))
        (20 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (23 (ILOAD_2))
        (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (27 (LDC 3))
        (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (32 (ALOAD_0))
        (33 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (36 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (39 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (42
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (45 (ATHROW))
        (46 (ILOAD_3))
        (47 (ALOAD_0))
        (48 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (51 (ARRAYLENGTH))
        (52 (IF_ICMPLE 60))
        (55 (ALOAD_0))
        (56 (ILOAD_3))
        (57 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                     "java.util.Vector" (INT)
                                     VOID)))
        (60 (ALOAD_0))
        (61 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (64 (ILOAD_2))
        (65 (ALOAD_0))
        (66 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (69 (ILOAD_2))
        (70 (ICONST_1))
        (71 (IADD))
        (72 (ALOAD_0))
        (73 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (76 (ILOAD_2))
        (77 (ISUB))
        (78 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (81 (ALOAD_0))
        (82 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (85 (ILOAD_2))
        (86 (ALOAD_1))
        (87 (AASTORE))
        (88 (ALOAD_0))
        (89 (DUP))
        (90 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (93 (ICONST_1))
        (94 (IADD))
        (95 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (98 (RETURN))
        (ENDOFCODE 99))
       (EXCEPTIONS)
       (STACKMAP (46 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (60 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "addElement"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 39)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (4 (ICONST_1))
         (5 (IADD))
         (6 (ISTORE_2))
         (7 (ILOAD_2))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (12 (ARRAYLENGTH))
         (13 (IF_ICMPLE 21))
         (16 (ALOAD_0))
         (17 (ILOAD_2))
         (18 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                      "java.util.Vector" (INT)
                                      VOID)))
         (21 (ALOAD_0))
         (22 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (25 (ALOAD_0))
         (26 (DUP))
         (27 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (30 (DUP_X1))
         (31 (ICONST_1))
         (32 (IADD))
         (33 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (36 (ALOAD_1))
         (37 (AASTORE))
         (38 (RETURN))
         (ENDOFCODE 39))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "removeElement"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 19)
         (PARSEDCODE (0 (ALOAD_0))
                     (1 (ALOAD_1))
                     (2 (INVOKEVIRTUAL (METHODCP "indexOf" "java.util.Vector"
                                                 ((CLASS "java.lang.Object"))
                                                 INT)))
                     (5 (ISTORE_2))
                     (6 (ILOAD_2))
                     (7 (IFLT 17))
                     (10 (ALOAD_0))
                     (11 (ILOAD_2))
                     (12 (INVOKEVIRTUAL (METHODCP "removeElementAt"
                                                  "java.util.Vector" (INT)
                                                  VOID)))
                     (15 (ICONST_1))
                     (16 (IRETURN))
                     (17 (ICONST_0))
                     (18 (IRETURN))
                     (ENDOFCODE 19))
         (EXCEPTIONS)
         (STACKMAP (17 (FRAME (LOCALS (CLASS "java.util.Vector")
                                      (CLASS "java.lang.Object")
                                      INT)
                              (STACK)
                              NIL)))))
     (METHOD
      "removeAllElements" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_1))
         (2 (GOTO 15))
         (5 (ALOAD_0))
         (6 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (9 (ILOAD_1))
         (10 (ACONST_NULL))
         (11 (AASTORE))
         (12 (IINC 1 1))
         (15 (ILOAD_1))
         (16 (ALOAD_0))
         (17 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (20 (IF_ICMPLT 5))
         (23 (ALOAD_0))
         (24 (ICONST_0))
         (25 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (28 (RETURN))
         (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (5 (FRAME (LOCALS (CLASS "java.util.Vector") INT)
                           (STACK)
                           NIL))
                 (15 (FRAME (LOCALS (CLASS "java.util.Vector") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 78)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
         (4 (ICONST_1))
         (5 (ISUB))
         (6 (ISTORE_1))
         (7 (NEW (CLASS "java.lang.StringBuffer")))
         (10 (DUP))
         (11 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (14 (ASTORE_2))
         (15 (ALOAD_0))
         (16 (INVOKEVIRTUAL (METHODCP "elements" "java.util.Vector"
                                      NIL (CLASS "java.util.Enumeration"))))
         (19 (ASTORE_3))
         (20 (ALOAD_2))
         (21 (LDC 4))
         (23 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (26 (POP))
         (27 (ICONST_0))
         (28 (ISTORE 4))
         (30 (GOTO 60))
         (33 (ALOAD_2))
         (34 (ALOAD_3))
         (35 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (40 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.StringBuffer"))))
         (43 (POP))
         (44 (ILOAD 4))
         (46 (ILOAD_1))
         (47 (IF_ICMPGE 57))
         (50 (ALOAD_2))
         (51 (LDC 5))
         (53 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (56 (POP))
         (57 (IINC 4 1))
         (60 (ILOAD 4))
         (62 (ILOAD_1))
         (63 (IF_ICMPLE 33))
         (66 (ALOAD_2))
         (67 (LDC 6))
         (69 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (72 (POP))
         (73 (ALOAD_2))
         (74 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (77 (ARETURN))
         (ENDOFCODE 78))
       (EXCEPTIONS)
       (STACKMAP (33 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    INT)
                            (STACK)
                            NIL))
                 (57 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    INT)
                            (STACK)
                            NIL))
                 (60 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    INT)
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.VectorEnumerator"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "VectorEnumerator"))
    (FIELDS (FIELD "vector" (CLASS "java.util.Vector")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "count" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.util.Vector"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 15)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
          (9 (ALOAD_0))
          (10 (ICONST_0))
          (11 (PUTFIELD (JVM::FIELDCP "count"
                                      "java.util.VectorEnumerator" INT)))
          (14 (RETURN))
          (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "hasMoreElements" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "count"
                                     "java.util.VectorEnumerator" INT)))
          (4 (ALOAD_0))
          (5 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
          (8 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (11 (IF_ICMPGE 18))
          (14 (ICONST_1))
          (15 (GOTO 19))
          (18 (ICONST_0))
          (19 (IRETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP (18 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator"))
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "nextElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 63)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                    (CLASS "java.util.Vector"))))
         (4 (DUP))
         (5 (ASTORE_1))
         (6 (MONITORENTER))
         (7 (ALOAD_0))
         (8 (GETFIELD (JVM::FIELDCP "count"
                                    "java.util.VectorEnumerator" INT)))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
         (15 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (18 (IF_ICMPGE 43))
         (21 (ALOAD_0))
         (22 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
         (25 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (28 (ALOAD_0))
         (29 (DUP))
         (30 (GETFIELD (JVM::FIELDCP "count"
                                     "java.util.VectorEnumerator" INT)))
         (33 (DUP_X1))
         (34 (ICONST_1))
         (35 (IADD))
         (36 (PUTFIELD (JVM::FIELDCP "count"
                                     "java.util.VectorEnumerator" INT)))
         (39 (AALOAD))
         (40 (ALOAD_1))
         (41 (MONITOREXIT))
         (42 (ARETURN))
         (43 (ALOAD_1))
         (44 (MONITOREXIT))
         (45 (GOTO 53))
         (48 (ASTORE_2))
         (49 (ALOAD_1))
         (50 (MONITOREXIT))
         (51 (ALOAD_2))
         (52 (ATHROW))
         (53 (NEW (CLASS "java.util.NoSuchElementException")))
         (56 (DUP))
         (57 (LDC 0))
         (59 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.NoSuchElementException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (62 (ATHROW))
         (ENDOFCODE 63))
       (EXCEPTIONS (JVM::HANDLER 7 42 48 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 43 45 48 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 48 51 48 (CLASS "java.lang.Throwable")))
       (STACKMAP (43 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator")
                                    (CLASS "java.util.Vector")
                                    TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator")
                                    (CLASS "java.util.Vector")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator")
                                    (CLASS "java.util.Vector")
                                    TOPX)
                            (STACK)
                            NIL))))))
    (INTERFACES "java.util.Enumeration")
    (ACCESSFLAGS *CLASS* *FINAL* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "javax.microedition.io.Connector"
    "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 2)
                   (INT 3)
                   (STRING "j2me")
                   (STRING "j2se")
                   (STRING "The requested protocol does not exist ")
                   (STRING "Null URL")
                   (STRING "no n:n in URL")
                   (STRING ".")
                   (STRING ".Protocol")
                   (STRING "microedition.configuration")
                   (STRING "microedition.platform")
                   (STRING "javax.microedition.io.Connector.protocolpath")
                   (STRING "com.sun.cldc.io"))
    (FIELDS (FIELD "READ" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "WRITE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "READ_WRITE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "platform" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "j2me" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "classRoot" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ICONST_3))
              (2 (INVOKESTATIC
                      (METHODCP "open" "javax.microedition.io.Connector"
                                ((CLASS "java.lang.String") INT)
                                (CLASS "javax.microedition.io.Connection"))))
              (5 (ARETURN))
              (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 7)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (ICONST_0))
              (3 (INVOKESTATIC
                      (METHODCP "open" "javax.microedition.io.Connector"
                                ((CLASS "java.lang.String") INT BOOLEAN)
                                (CLASS "javax.microedition.io.Connection"))))
              (6 (ARETURN))
              (ENDOFCODE 7))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 71)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "platform"
                                    "javax.microedition.io.Connector"
                                    (CLASS "java.lang.String"))))
        (3 (IFNULL 20))
        (6 (ALOAD_0))
        (7 (ILOAD_1))
        (8 (ILOAD_2))
        (9 (GETSTATIC (JVM::FIELDCP "platform"
                                    "javax.microedition.io.Connector"
                                    (CLASS "java.lang.String"))))
        (12 (INVOKESTATIC
                 (METHODCP "openPrim"
                           "javax.microedition.io.Connector"
                           ((CLASS "java.lang.String")
                            INT BOOLEAN (CLASS "java.lang.String"))
                           (CLASS "javax.microedition.io.Connection"))))
        (15 (ARETURN))
        (16 (ASTORE_3))
        (17 (GOTO 20))
        (20 (ALOAD_0))
        (21 (ILOAD_1))
        (22 (ILOAD_2))
        (23 (GETSTATIC (JVM::FIELDCP "j2me" "javax.microedition.io.Connector"
                                     BOOLEAN)))
        (26 (IFEQ 34))
        (29 (LDC 3))
        (31 (GOTO 36))
        (34 (LDC 4))
        (36 (INVOKESTATIC
                 (METHODCP "openPrim"
                           "javax.microedition.io.Connector"
                           ((CLASS "java.lang.String")
                            INT BOOLEAN (CLASS "java.lang.String"))
                           (CLASS "javax.microedition.io.Connection"))))
        (39 (ARETURN))
        (40 (ASTORE_3))
        (41 (GOTO 44))
        (44
           (NEW (CLASS "javax.microedition.io.ConnectionNotFoundException")))
        (47 (DUP))
        (48 (NEW (CLASS "java.lang.StringBuffer")))
        (51 (DUP))
        (52 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (55 (LDC 5))
        (57 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (60 (ALOAD_0))
        (61 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (64 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (67
           (INVOKESPECIAL
                (METHODCP "<init>"
                          "javax.microedition.io.ConnectionNotFoundException"
                          ((CLASS "java.lang.String"))
                          VOID)))
        (70 (ATHROW))
        (ENDOFCODE 71))
       (EXCEPTIONS (JVM::HANDLER 6 15 16
                                 (CLASS "java.lang.ClassNotFoundException"))
                   (JVM::HANDLER 20 39 40
                                 (CLASS "java.lang.ClassNotFoundException")))
       (STACKMAP
            (16 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (20 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK)
                       NIL))
            (34 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK INT INT (CLASS "java.lang.String"))
                       NIL))
            (36 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK (CLASS "java.lang.String")
                              INT INT (CLASS "java.lang.String"))
                       NIL))
            (40 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (44 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT
                               (CLASS "java.lang.ClassNotFoundException"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN (CLASS "java.lang.String"))
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 167)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 14))
        (4 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (7 (DUP))
        (8 (LDC 6))
        (10 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (13 (ATHROW))
        (14 (ALOAD_0))
        (15 (BIPUSH 58))
        (17 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (20 (ISTORE 4))
        (22 (ILOAD 4))
        (24 (ICONST_1))
        (25 (IF_ICMPGE 38))
        (28 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (31 (DUP))
        (32 (LDC 7))
        (34 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (37 (ATHROW))
        (38 (ALOAD_0))
        (39 (ICONST_0))
        (40 (ILOAD 4))
        (42 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (45 (ASTORE 5))
        (47 (ALOAD_0))
        (48 (ILOAD 4))
        (50 (ICONST_1))
        (51 (IADD))
        (52 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (55 (ASTORE_0))
        (56 (NEW (CLASS "java.lang.StringBuffer")))
        (59 (DUP))
        (60 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (63 (GETSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (66 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (69 (LDC 8))
        (71 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (74 (ALOAD_3))
        (75 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (78 (LDC 8))
        (80 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (83 (ALOAD 5))
        (85 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (88 (LDC 9))
        (90 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (93 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (96 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (99 (ASTORE 6))
        (101 (ALOAD 6))
        (103 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                      NIL (CLASS "java.lang.Object"))))
        (106 (CHECKCAST (CLASS "com.sun.cldc.io.ConnectionBaseInterface")))
        (109 (ASTORE 7))
        (111 (ALOAD 7))
        (113 (ALOAD_0))
        (114 (ILOAD_1))
        (115 (ILOAD_2))
        (116 (INVOKEINTERFACE
                  (METHODCP "openPrim"
                            "com.sun.cldc.io.ConnectionBaseInterface"
                            ((CLASS "java.lang.String") INT BOOLEAN)
                            (CLASS "javax.microedition.io.Connection"))
                  4))
        (121 (ARETURN))
        (122 (ASTORE 5))
        (124 (NEW (CLASS "java.io.IOException")))
        (127 (DUP))
        (128 (ALOAD 5))
        (130 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (133 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (136 (ATHROW))
        (137 (ASTORE 6))
        (139 (NEW (CLASS "java.io.IOException")))
        (142 (DUP))
        (143 (ALOAD 6))
        (145 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (148 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (151 (ATHROW))
        (152 (ASTORE 7))
        (154 (NEW (CLASS "java.io.IOException")))
        (157 (DUP))
        (158 (ALOAD 7))
        (160 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (163 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (166 (ATHROW))
        (ENDOFCODE 167))
       (EXCEPTIONS (JVM::HANDLER 38 121 122
                                 (CLASS "java.lang.InstantiationException"))
                   (JVM::HANDLER 38 121 137
                                 (CLASS "java.lang.IllegalAccessException"))
                   (JVM::HANDLER 38 121 152
                                 (CLASS "java.lang.ClassCastException")))
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (38 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT (CLASS "java.lang.String")
                               INT TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (122 (FRAME (LOCALS (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                INT TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.InstantiationException"))
                        NIL))
            (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                INT TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.IllegalAccessException"))
                        NIL))
            (152 (FRAME (LOCALS (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                INT TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.ClassCastException"))
                        NIL)))))
     (METHOD
      "openDataInputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_1))
        (2 (INVOKESTATIC
                (METHODCP "open" "javax.microedition.io.Connector"
                          ((CLASS "java.lang.String") INT)
                          (CLASS "javax.microedition.io.Connection"))))
        (5 (CHECKCAST (CLASS "javax.microedition.io.InputConnection")))
        (8 (ASTORE_1))
        (9 (ALOAD_1))
        (10
           (INVOKEINTERFACE (METHODCP "openDataInputStream"
                                      "javax.microedition.io.InputConnection"
                                      NIL (CLASS "java.io.DataInputStream"))
                            1))
        (15 (ASTORE_2))
        (16 (ALOAD_1))
        (17 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (22 (ALOAD_2))
        (23 (ARETURN))
        (24 (ASTORE_3))
        (25 (ALOAD_1))
        (26 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (31 (ALOAD_3))
        (32 (ATHROW))
        (ENDOFCODE 33))
       (EXCEPTIONS (JVM::HANDLER 9 16 24 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 24 25 24 (CLASS "java.lang.Throwable")))
       (STACKMAP
           (24 (FRAME (LOCALS (CLASS "java.lang.String")
                              (CLASS "javax.microedition.io.InputConnection")
                              TOPX TOPX TOPX)
                      (STACK (CLASS "java.lang.Throwable"))
                      NIL)))))
     (METHOD
      "openDataOutputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.DataOutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_2))
        (2 (INVOKESTATIC
                (METHODCP "open" "javax.microedition.io.Connector"
                          ((CLASS "java.lang.String") INT)
                          (CLASS "javax.microedition.io.Connection"))))
        (5 (CHECKCAST (CLASS "javax.microedition.io.OutputConnection")))
        (8 (ASTORE_1))
        (9 (ALOAD_1))
        (10
          (INVOKEINTERFACE (METHODCP "openDataOutputStream"
                                     "javax.microedition.io.OutputConnection"
                                     NIL (CLASS "java.io.DataOutputStream"))
                           1))
        (15 (ASTORE_2))
        (16 (ALOAD_1))
        (17 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (22 (ALOAD_2))
        (23 (ARETURN))
        (24 (ASTORE_3))
        (25 (ALOAD_1))
        (26 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (31 (ALOAD_3))
        (32 (ATHROW))
        (ENDOFCODE 33))
       (EXCEPTIONS (JVM::HANDLER 9 16 24 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 24 25 24 (CLASS "java.lang.Throwable")))
       (STACKMAP
          (24 (FRAME (LOCALS (CLASS "java.lang.String")
                             (CLASS "javax.microedition.io.OutputConnection")
                             TOPX TOPX TOPX)
                     (STACK (CLASS "java.lang.Throwable"))
                     NIL)))))
     (METHOD
      "openInputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (INVOKESTATIC (METHODCP "openDataInputStream"
                                         "javax.microedition.io.Connector"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.io.DataInputStream"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "openOutputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESTATIC (METHODCP "openDataOutputStream"
                                        "javax.microedition.io.Connector"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.io.DataOutputStream"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 44)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (PUTSTATIC (JVM::FIELDCP "j2me" "javax.microedition.io.Connector"
                                    BOOLEAN)))
        (4 (LDC 10))
        (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.lang.String"))))
        (9 (IFNULL 16))
        (12 (ICONST_1))
        (13 (PUTSTATIC (JVM::FIELDCP "j2me" "javax.microedition.io.Connector"
                                     BOOLEAN)))
        (16 (LDC 11))
        (18 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (21 (PUTSTATIC (JVM::FIELDCP "platform"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (24 (LDC 12))
        (26 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (29 (PUTSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (32 (GETSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (35 (IFNONNULL 43))
        (38 (LDC 13))
        (40 (PUTSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (43 (RETURN))
        (ENDOFCODE 44))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS) (STACK) NIL))
                 (43 (FRAME (LOCALS) (STACK) NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "javax.microedition.io.Connection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "close" (PARAMETERS)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "javax.microedition.io.ConnectionNotFoundException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "javax.microedition.io.InputConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "openInputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.InputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "openDataInputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.DataInputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.Connection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS "javax.microedition.io.OutputConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "openOutputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.OutputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "openDataOutputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.DataOutputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.Connection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS "javax.microedition.io.ContentConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "getType" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getEncoding" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getLength" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.StreamConnection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS "javax.microedition.io.StreamConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS)
          (INTERFACES "javax.microedition.io.InputConnection"
                      "javax.microedition.io.OutputConnection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
       "javax.microedition.io.Datagram"
       "java.lang.Object" (CONSTANT_POOL)
       (FIELDS)
       (METHODS (METHOD "getAddress" (PARAMETERS)
                        (RETURNTYPE CLASS "java.lang.String")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getData" (PARAMETERS)
                        (RETURNTYPE ARRAY BYTE)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getLength" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getOffset" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setAddress"
                        (PARAMETERS (CLASS "java.lang.String"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setAddress"
                        (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setLength" (PARAMETERS INT)
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setData"
                        (PARAMETERS (ARRAY BYTE) INT INT)
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "reset" (PARAMETERS)
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE)))
       (INTERFACES "java.io.DataInput"
                   "java.io.DataOutput")
       (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
       "javax.microedition.io.DatagramConnection"
       "java.lang.Object" (CONSTANT_POOL)
       (FIELDS)
       (METHODS (METHOD "getMaximumLength" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getNominalLength" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "send"
                        (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "receive"
                        (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram" (PARAMETERS INT)
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram"
                        (PARAMETERS INT (CLASS "java.lang.String"))
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram"
                        (PARAMETERS (ARRAY BYTE) INT)
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram"
                        (PARAMETERS (ARRAY BYTE)
                                    INT (CLASS "java.lang.String"))
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE)))
       (INTERFACES "javax.microedition.io.Connection")
       (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
       "javax.microedition.io.StreamConnectionNotifier"
       "java.lang.Object" (CONSTANT_POOL)
       (FIELDS)
       (METHODS (METHOD "acceptAndOpen" (PARAMETERS)
                        (RETURNTYPE CLASS
                                    "javax.microedition.io.StreamConnection")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE)))
       (INTERFACES "javax.microedition.io.Connection")
       (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "Apprentice"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 31)
       (PARSEDCODE
            (0 (NEW (CLASS "Container")))
            (3 (DUP))
            (4 (INVOKESPECIAL (METHODCP "<init>" "Container" NIL VOID)))
            (7 (ASTORE_1))
            (8 (GOTO 11))
            (11 (NEW (CLASS "Job")))
            (14 (DUP))
            (15 (INVOKESPECIAL (METHODCP "<init>" "Job" NIL VOID)))
            (18 (ASTORE_2))
            (19 (ALOAD_2))
            (20 (ALOAD_1))
            (21 (INVOKEVIRTUAL (METHODCP "setref" "Job" ((CLASS "Container"))
                                         VOID)))
            (24 (ALOAD_2))
            (25 (INVOKEVIRTUAL (METHODCP "start" "Job" NIL VOID)))
            (28 (GOTO 11))
            (ENDOFCODE 31))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Container"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "counter"
                   INT (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Job" "java.lang.Thread" (CONSTANT_POOL)
    (FIELDS (FIELD "objref" (CLASS "Container")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "incr" (PARAMETERS)
      (RETURNTYPE CLASS "Job")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 35)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
            (4 (ASTORE_1))
            (5 (ALOAD_1))
            (6 (MONITORENTER))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
            (11 (ALOAD_0))
            (12 (GETFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
            (15 (GETFIELD (JVM::FIELDCP "counter" "Container" INT)))
            (18 (ICONST_1))
            (19 (IADD))
            (20 (PUTFIELD (JVM::FIELDCP "counter" "Container" INT)))
            (23 (ALOAD_1))
            (24 (MONITOREXIT))
            (25 (GOTO 33))
            (28 (ASTORE_2))
            (29 (ALOAD_1))
            (30 (MONITOREXIT))
            (31 (ALOAD_2))
            (32 (ATHROW))
            (33 (ALOAD_0))
            (34 (ARETURN))
            (ENDOFCODE 35))
       (EXCEPTIONS (JVM::HANDLER 7 25 28 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 28 31 28 (CLASS "java.lang.Throwable")))
       (STACKMAP)))
     (METHOD
      "setref"
      (PARAMETERS (CLASS "Container"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (PUTFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 11)
           (PARSEDCODE
                (0 (GOTO 3))
                (3 (ALOAD_0))
                (4 (INVOKEVIRTUAL (METHODCP "incr" "Job" NIL (CLASS "Job"))))
                (7 (POP))
                (8 (GOTO 3))
                (ENDOFCODE 11))
           (EXCEPTIONS)
           (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main6"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 47)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE_1))
        (2 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (5 (DUP))
        (6
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (9 (ASTORE_2))
        (10 (ALOAD_2))
        (11 (ATHROW))
        (12 (ASTORE_2))
        (13 (ILOAD_1))
        (14 (ICONST_1))
        (15 (IADD))
        (16 (ISTORE_1))
        (17 (ALOAD_2))
        (18 (ATHROW))
        (19 (ASTORE_3))
        (20 (ILOAD_1))
        (21 (ICONST_1))
        (22 (IADD))
        (23 (ISTORE_1))
        (24 (JSR 38))
        (27 (GOTO 46))
        (30 (ASTORE 4))
        (32 (JSR 38))
        (35 (ALOAD 4))
        (37 (ATHROW))
        (38 (ASTORE 5))
        (40 (ILOAD_1))
        (41 (ICONST_1))
        (42 (IADD))
        (43 (ISTORE_1))
        (44 (RET 5))
        (46 (RETURN))
        (ENDOFCODE 47))
       (EXCEPTIONS (JVM::HANDLER 2 12 12 (CLASS "java.lang.Exception"))
                   (JVM::HANDLER 17 19 19 (CLASS "java.lang.Exception"))
                   (JVM::HANDLER 2 27 30 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 30 35 30 (CLASS "java.lang.Throwable")))
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main5"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (3 (DUP))
        (4
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (7 (ASTORE_1))
        (8 (RETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main4" "java.lang.Object"
    (CONSTANT_POOL (STRING "Main4"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 5)
          (CODE_LENGTH . 44)
          (PARSEDCODE (0 (ACONST_NULL))
                      (1 (ASTORE_1))
                      (2 (LDC 0))
                      (4 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                                 ((CLASS "java.lang.String"))
                                                 (CLASS "java.lang.Class"))))
                      (7 (ASTORE_1))
                      (8 (GOTO 12))
                      (11 (ASTORE_2))
                      (12 (ICONST_1))
                      (13 (ISTORE_2))
                      (14 (GOTO 36))
                      (17 (ALOAD_1))
                      (18 (ASTORE_3))
                      (19 (ALOAD_3))
                      (20 (MONITORENTER))
                      (21 (ALOAD_3))
                      (22 (MONITOREXIT))
                      (23 (GOTO 33))
                      (26 (ASTORE 4))
                      (28 (ALOAD_3))
                      (29 (MONITOREXIT))
                      (30 (ALOAD 4))
                      (32 (ATHROW))
                      (33 (IINC 2 1))
                      (36 (ILOAD_2))
                      (37 (JVM::SIPUSH 1000))
                      (40 (IF_ICMPLT 17))
                      (43 (RETURN))
                      (ENDOFCODE 44))
          (EXCEPTIONS (JVM::HANDLER 2 8 11 (CLASS "java.lang.Exception"))
                      (JVM::HANDLER 21 23 26 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 26 30 26 (CLASS "java.lang.Throwable")))
          (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main3"
    "java.lang.Thread" (CONSTANT_POOL)
    (FIELDS (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 11)
         (PARSEDCODE (0 (NEW (CLASS "Main3")))
                     (3 (DUP))
                     (4 (INVOKESPECIAL (METHODCP "<init>" "Main3" NIL VOID)))
                     (7 (INVOKEVIRTUAL (METHODCP "start" "Main3" NIL VOID)))
                     (10 (RETURN))
                     (ENDOFCODE 11))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 28)
         (PARSEDCODE (0 (GOTO 21))
                     (3 (NEW (CLASS "Main3")))
                     (6 (DUP))
                     (7 (INVOKESPECIAL (METHODCP "<init>" "Main3" NIL VOID)))
                     (10 (INVOKEVIRTUAL (METHODCP "start" "Main3" NIL VOID)))
                     (13 (GETSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                     (16 (ICONST_1))
                     (17 (ISUB))
                     (18 (PUTSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                     (21 (GETSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                     (24 (IFGT 3))
                     (27 (RETURN))
                     (ENDOFCODE 28))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
         "<clinit>" (PARAMETERS)
         (RETURNTYPE . VOID)
         (ACCESSFLAGS *CLASS* *STATIC*)
         (CODE (MAX_STACK . 1)
               (JVM::MAX_LOCALS . 0)
               (CODE_LENGTH . 6)
               (PARSEDCODE (0 (BIPUSH 25))
                           (2 (PUTSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                           (5 (RETURN))
                           (ENDOFCODE 6))
               (EXCEPTIONS)
               (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main2" "java.lang.Object"
    (CONSTANT_POOL (STRING "123")
                   (STRING "234")
                   (STRING "456"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 37)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (LDC 0))
             (9 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
             (12 (NEW (CLASS "java.lang.StringBuffer")))
             (15 (DUP))
             (16 (LDC 1))
             (18 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          VOID)))
             (21 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (27 (LDC 2))
             (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (35 (ASTORE_1))
             (36 (RETURN))
             (ENDOFCODE 37))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "First"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "main"
             (PARAMETERS (ARRAY (CLASS "java.lang.String")))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 3)
                   (CODE_LENGTH . 9)
                   (PARSEDCODE (0 (ILOAD_2))
                               (1 (ISTORE_1))
                               (2 (ILOAD_1))
                               (3 (ICONST_1))
                               (4 (IADD))
                               (5 (ISTORE_2))
                               (6 (ILOAD_2))
                               (7 (ISTORE_1))
                               (8 (RETURN))
                               (ENDOFCODE 9))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "FirstX"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "main"
             (PARAMETERS (ARRAY (CLASS "java.lang.String")))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 3)
                   (CODE_LENGTH . 14)
                   (PARSEDCODE (0 (ILOAD_2))
                               (1 (ISTORE_1))
                               (2 (ILOAD_1))
                               (3 (ICONST_1))
                               (4 (IADD))
                               (5 (ISTORE_2))
                               (6 (ILOAD_2))
                               (7 (ISTORE_1))
                               (8 (ICONST_2))
                               (9 (ILOAD_2))
                               (10 (ILOAD_1))
                               (11 (IADD))
                               (12 (IADD))
                               (13 (ISTORE_2))
                               (14 (RETURN))
                               (ENDOFCODE 14))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Second"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE (0 (BIPUSH 10))
                      (2 (ISTORE_1))
                      (3 (ILOAD_1))
                      (4 (INVOKESTATIC (METHODCP "fact" "Second" (INT) INT)))
                      (7 (POP))
                      (8 (RETURN))
                      (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "fact" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 15)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (IFGT 6))
                     (4 (ICONST_1))
                     (5 (IRETURN))
                     (6 (ILOAD_0))
                     (7 (ILOAD_0))
                     (8 (ICONST_1))
                     (9 (ISUB))
                     (10 (INVOKESTATIC (METHODCP "fact" "Second" (INT) INT)))
                     (13 (IMUL))
                     (14 (IRETURN))
                     (ENDOFCODE 15))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Fact"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "HELPER_COUNT"
                   INT (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "fact" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 84)
       (PARSEDCODE
           (0 (NEW (CLASS "FactJob")))
           (3 (DUP))
           (4 (ILOAD_0))
           (5 (INVOKESPECIAL (METHODCP "<init>" "FactJob" (INT)
                                       VOID)))
           (8 (ASTORE_1))
           (9 (ICONST_0))
           (10 (ISTORE_2))
           (11 (GOTO 21))
           (14 (ALOAD_1))
           (15 (INVOKESTATIC (METHODCP "compute"
                                       "FactHelper" ((CLASS "FactJob"))
                                       VOID)))
           (18 (IINC 2 1))
           (21 (ILOAD_2))
           (22 (GETSTATIC (JVM::FIELDCP "HELPER_COUNT" "Fact" INT)))
           (25 (IF_ICMPLT 14))
           (28 (ALOAD_1))
           (29 (ASTORE_3))
           (30 (ALOAD_3))
           (31 (MONITORENTER))
           (32 (ALOAD_1))
           (33 (INVOKEVIRTUAL (METHODCP "notifyAll"
                                        "java.lang.Object" NIL VOID)))
           (36 (ALOAD_3))
           (37 (MONITOREXIT))
           (38 (GOTO 48))
           (41 (ASTORE 4))
           (43 (ALOAD_3))
           (44 (MONITOREXIT))
           (45 (ALOAD 4))
           (47 (ATHROW))
           (48 (ALOAD_1))
           (49 (ASTORE 4))
           (51 (ALOAD 4))
           (53 (MONITORENTER))
           (54 (ALOAD_1))
           (55 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" NIL VOID)))
           (58 (ALOAD 4))
           (60 (MONITOREXIT))
           (61 (GOTO 72))
           (64 (ASTORE 5))
           (66 (ALOAD 4))
           (68 (MONITOREXIT))
           (69 (ALOAD 5))
           (71 (ATHROW))
           (72 (GOTO 79))
           (75 (ASTORE 4))
           (77 (ICONST_M1))
           (78 (IRETURN))
           (79 (ALOAD_1))
           (80 (GETFIELD (JVM::FIELDCP "value" "FactJob" INT)))
           (83 (IRETURN))
           (ENDOFCODE 84))
       (EXCEPTIONS (JVM::HANDLER 32 38 41 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 41 45 41 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 54 61 64 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 64 69 64 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 48 72 75
                                 (CLASS "java.lang.InterruptedException")))
       (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 0)
         (CODE_LENGTH . 5)
         (PARSEDCODE (0 (ICONST_5))
                     (1 (PUTSTATIC (JVM::FIELDCP "HELPER_COUNT" "Fact" INT)))
                     (4 (RETURN))
                     (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "FactHelper"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "myJob" (CLASS "FactJob")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 112)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "myJob"
                                    "FactHelper" (CLASS "FactJob"))))
         (4 (ASTORE_1))
         (5 (ALOAD_1))
         (6 (MONITORENTER))
         (7 (ALOAD_0))
         (8 (GETFIELD (JVM::FIELDCP "myJob"
                                    "FactHelper" (CLASS "FactJob"))))
         (11 (ICONST_1))
         (12 (PUTFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (19 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" NIL VOID)))
         (22 (ALOAD_1))
         (23 (MONITOREXIT))
         (24 (GOTO 32))
         (27 (ASTORE_2))
         (28 (ALOAD_1))
         (29 (MONITOREXIT))
         (30 (ALOAD_2))
         (31 (ATHROW))
         (32 (GOTO 37))
         (35 (ASTORE_1))
         (36 (RETURN))
         (37 (ALOAD_0))
         (38 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (41 (ASTORE_1))
         (42 (ALOAD_1))
         (43 (MONITORENTER))
         (44 (ALOAD_0))
         (45 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (48 (GETFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (51 (IFGT 64))
         (54 (ALOAD_0))
         (55 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (58 (INVOKEVIRTUAL (METHODCP "notify" "java.lang.Object" NIL VOID)))
         (61 (ALOAD_1))
         (62 (MONITOREXIT))
         (63 (RETURN))
         (64 (ALOAD_0))
         (65 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (68 (ALOAD_0))
         (69 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (72 (GETFIELD (JVM::FIELDCP "value" "FactJob" INT)))
         (75 (ALOAD_0))
         (76 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (79 (GETFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (82 (IMUL))
         (83 (PUTFIELD (JVM::FIELDCP "value" "FactJob" INT)))
         (86 (ALOAD_0))
         (87 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (90 (ALOAD_0))
         (91 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (94 (GETFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (97 (ICONST_1))
         (98 (ISUB))
         (99 (PUTFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (102 (ALOAD_1))
         (103 (MONITOREXIT))
         (104 (GOTO 37))
         (107 (ASTORE_3))
         (108 (ALOAD_1))
         (109 (MONITOREXIT))
         (110 (ALOAD_3))
         (111 (ATHROW))
         (ENDOFCODE 112))
       (EXCEPTIONS (JVM::HANDLER 7 24 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 27 30 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 0 32 35
                                 (CLASS "java.lang.InterruptedException"))
                   (JVM::HANDLER 44 63 107 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 64
                                 104 107 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 107
                                 110 107 (CLASS "java.lang.Throwable")))
       (STACKMAP)))
     (METHOD
      "compute" (PARAMETERS (CLASS "FactJob"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 87)
       (PARSEDCODE
          (0 (NEW (CLASS "FactHelper")))
          (3 (DUP))
          (4 (INVOKESPECIAL (METHODCP "<init>" "FactHelper" NIL VOID)))
          (7 (ASTORE_1))
          (8 (ALOAD_1))
          (9 (ALOAD_0))
          (10 (PUTFIELD (JVM::FIELDCP "myJob"
                                      "FactHelper" (CLASS "FactJob"))))
          (13 (ALOAD_0))
          (14 (ASTORE_2))
          (15 (ALOAD_2))
          (16 (MONITORENTER))
          (17 (ALOAD_0))
          (18 (ICONST_0))
          (19 (PUTFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
          (22 (ALOAD_2))
          (23 (MONITOREXIT))
          (24 (GOTO 32))
          (27 (ASTORE_3))
          (28 (ALOAD_2))
          (29 (MONITOREXIT))
          (30 (ALOAD_3))
          (31 (ATHROW))
          (32 (NEW (CLASS "java.lang.Thread")))
          (35 (DUP))
          (36 (ALOAD_1))
          (37 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread"
                                       ((CLASS "java.lang.Runnable"))
                                       VOID)))
          (40 (ASTORE_3))
          (41 (ALOAD_3))
          (42 (INVOKEVIRTUAL (METHODCP "start" "java.lang.Thread" NIL VOID)))
          (45 (ICONST_1))
          (46 (ISTORE 4))
          (48 (GOTO 81))
          (51 (ALOAD_0))
          (52 (ASTORE 5))
          (54 (ALOAD 5))
          (56 (MONITORENTER))
          (57 (ALOAD_0))
          (58 (GETFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
          (61 (IFEQ 67))
          (64 (ICONST_0))
          (65 (ISTORE 4))
          (67 (ALOAD 5))
          (69 (MONITOREXIT))
          (70 (GOTO 81))
          (73 (ASTORE 6))
          (75 (ALOAD 5))
          (77 (MONITOREXIT))
          (78 (ALOAD 6))
          (80 (ATHROW))
          (81 (ILOAD 4))
          (83 (IFNE 51))
          (86 (RETURN))
          (ENDOFCODE 87))
       (EXCEPTIONS (JVM::HANDLER 17 24 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 27 30 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 57 70 73 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 73 78 73 (CLASS "java.lang.Throwable")))
       (STACKMAP))))
    (INTERFACES "java.lang.Runnable")
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "FactJob"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "value" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "n" INT (ACCESSFLAGS *CLASS*) -1)
            (FIELD "ready" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "n" "FactJob" INT)))
          (9 (ALOAD_0))
          (10 (ICONST_1))
          (11 (PUTFIELD (JVM::FIELDCP "value" "FactJob" INT)))
          (14 (ALOAD_0))
          (15 (ICONST_0))
          (16 (PUTFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
          (19 (RETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main" "java.lang.Object"
    (CONSTANT_POOL (STRING ""))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 36)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ICONST_0))
         (2 (AALOAD))
         (3 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String"))
                                    INT)))
         (6 (ISTORE_1))
         (7 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                     (CLASS "java.io.PrintStream"))))
         (10 (NEW (CLASS "java.lang.StringBuffer")))
         (13 (DUP))
         (14 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (17 (LDC 0))
         (19 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (22 (ILOAD_1))
         (23 (INVOKESTATIC (METHODCP "fact" "Fact" (INT) INT)))
         (26 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (29 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (32 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (35 (RETURN))
         (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "ExceptionTest" "java.lang.Object"
    (CONSTANT_POOL (STRING "done"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 25)
          (PARSEDCODE
               (0 (BIPUSH 120))
               (2 (ICONST_5))
               (3 (INVOKESTATIC (METHODCP "compute" "ExceptionTest" (INT INT)
                                          VOID)))
               (6 (GOTO 24))
               (9 (ASTORE_1))
               (10 (NEW (CLASS "java.lang.Exception")))
               (13 (DUP))
               (14 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
               (17 (ATHROW))
               (18 (ASTORE_2))
               (19 (ALOAD_0))
               (20 (ICONST_0))
               (21 (LDC 0))
               (23 (AASTORE))
               (24 (RETURN))
               (ENDOFCODE 25))
          (EXCEPTIONS (JVM::HANDLER 0 6 9 (CLASS "java.lang.Exception"))
                      (JVM::HANDLER 10 18 18 (CLASS "java.lang.Exception")))
          (STACKMAP)))
     (METHOD
      "compute" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 10)
          (PARSEDCODE
               (0 (ILOAD_0))
               (1 (ILOAD_1))
               (2 (IDIV))
               (3 (ILOAD_1))
               (4 (ICONST_1))
               (5 (ISUB))
               (6 (INVOKESTATIC (METHODCP "compute" "ExceptionTest" (INT INT)
                                          VOID)))
               (9 (RETURN))
               (ENDOFCODE 10))
          (EXCEPTIONS)
          (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Demo"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "fact" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 15)
            (PARSEDCODE (0 (ILOAD_0))
                        (1 (IFLE 13))
                        (4 (ILOAD_0))
                        (5 (ILOAD_0))
                        (6 (ICONST_1))
                        (7 (ISUB))
                        (8 (INVOKESTATIC (METHODCP "fact" "Demo" (INT) INT)))
                        (11 (IMUL))
                        (12 (IRETURN))
                        (13 (ICONST_1))
                        (14 (IRETURN))
                        (ENDOFCODE 15))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 20)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ICONST_0))
           (2 (AALOAD))
           (3 (BIPUSH 10))
           (5 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                      ((CLASS "java.lang.String") INT)
                                      INT)))
           (8 (ISTORE_1))
           (9 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                       (CLASS "java.io.PrintStream"))))
           (12 (ILOAD_1))
           (13 (INVOKESTATIC (METHODCP "fact" "Demo" (INT) INT)))
           (16 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream" (INT)
                                        VOID)))
           (19 (RETURN))
           (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))))
 NIL
 ((TRACE (JVM::TH-OBJ-COUNTERS (-1 . 55))
         (RTRACE (55 -1 . 55)
                 (54 -1 . 54)
                 (53 -1 . 53)
                 (52 -1 . 52)
                 (51 -1 . 51)
                 (50 -1 . 50)
                 (49 -1 . 49)
                 (48 -1 . 48)
                 (47 -1 . 47)
                 (46 -1 . 46)
                 (45 -1 . 45)
                 (44 -1 . 44)
                 (43 -1 . 43)
                 (42 -1 . 42)
                 (41 -1 . 41)
                 (40 -1 . 40)
                 (39 -1 . 39)
                 (38 -1 . 38)
                 (37 -1 . 37)
                 (36 -1 . 36)
                 (35 -1 . 35)
                 (34 -1 . 34)
                 (33 -1 . 33)
                 (32 -1 . 32)
                 (31 -1 . 31)
                 (30 -1 . 30)
                 (29 -1 . 29)
                 (28 -1 . 28)
                 (27 -1 . 27)
                 (26 -1 . 26)
                 (25 -1 . 25)
                 (24 -1 . 24)
                 (23 -1 . 23)
                 (22 -1 . 22)
                 (21 -1 . 21)
                 (20 -1 . 20)
                 (19 -1 . 19)
                 (18 -1 . 18)
                 (17 -1 . 17)
                 (16 -1 . 16)
                 (15 -1 . 15)
                 (14 -1 . 14)
                 (13 -1 . 13)
                 (12 -1 . 12)
                 (11 -1 . 11)
                 (10 -1 . 10)
                 (9 -1 . 9)
                 (8 -1 . 8)
                 (7 -1 . 7)
                 (6 -1 . 6)
                 (5 -1 . 5)
                 (4 -1 . 4)
                 (3 -1 . 3)
                 (2 -1 . 2)
                 (1 -1 . 1)
                 (0 -1 . 0))))))



; (acl2::set-guard-checking nil)

; (defconst *s1x* (round-robin-run (setup-initial-state "FirstX" '() *s*) 6))

; (acl2::set-guard-checking t)
(defun init-state-x ()
  '(STATE
 2 0
 (HEAP (0 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY (64) 1)
          (("java.lang.Object")))
       (1 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 0)
                               ("offset" . 0)
                               ("count" . 1))
           ("java.lang.Object")))
       (2 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY
                         (116 105 109 101
                              111 117 116 32 118 97 108 117 101 32 105
                              115 32 110 101 103 97 116 105 118 101)
                         25)
          (("java.lang.Object")))
       (3 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 2)
                               ("offset" . 0)
                               ("count" . 25))
           ("java.lang.Object")))
       (4 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY
                         (110 97 110 111 115 101
                              99 111 110 100 32 116 105 109 101 111
                              117 116 32 118 97 108 117 101 32 111 117
                              116 32 111 102 32 114 97 110 103 101)
                         37)
          (("java.lang.Object")))
       (5 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 4)
                               ("offset" . 0)
                               ("count" . 37))
           ("java.lang.Object")))
       (6 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.Class")
          (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Object")
          (("java.lang.Class")
           ("java.lang.Object")))
       (7 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY
                         (105 110 116 101 114 102 97 99 101 32)
                         10)
          (("java.lang.Object")))
       (8 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       "java.lang.String")
          (SPECIFIC-INFO STRING)
          (("java.lang.String" ("value" . 7)
                               ("offset" . 0)
                               ("count" . 10))
           ("java.lang.Object")))
       (9 OBJECT
          (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                       (ARRAY CHAR))
          (SPECIFIC-INFO ARRAY (99 108 97 115 115 32)
                         6)
          (("java.lang.Object")))
       (10 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 9)
                                ("offset" . 0)
                                ("count" . 6))
            ("java.lang.Object")))
       (11 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (114 101 115 111 117 114 99 101 58)
                          9)
           (("java.lang.Object")))
       (12 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 11)
                                ("offset" . 0)
                                ("count" . 9))
            ("java.lang.Object")))
       (13 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Class")
           (("java.lang.Class")
            ("java.lang.Object")))
       (14 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (110 117 108 108)
                          4)
           (("java.lang.Object")))
       (15 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 14)
                                ("offset" . 0)
                                ("count" . 4))
            ("java.lang.Object")))
       (16 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (116 114 117 101)
                          4)
           (("java.lang.Object")))
       (17 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 16)
                                ("offset" . 0)
                                ("count" . 4))
            ("java.lang.Object")))
       (18 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (102 97 108 115 101)
                          5)
           (("java.lang.Object")))
       (19 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 18)
                                ("offset" . 0)
                                ("count" . 5))
            ("java.lang.Object")))
       (20 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.String")
           (("java.lang.Class")
            ("java.lang.Object")))
       (21 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY CHAR))
           (("java.lang.Class")
            ("java.lang.Object")))
       (22 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY SHORT))
           (("java.lang.Class")
            ("java.lang.Object")))
       (23 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY INT))
           (("java.lang.Class")
            ("java.lang.Object")))
       (24 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY FLOAT))
           (("java.lang.Class")
            ("java.lang.Object")))
       (25 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY DOUBLE))
           (("java.lang.Class")
            ("java.lang.Object")))
       (26 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY LONG))
           (("java.lang.Class")
            ("java.lang.Object")))
       (27 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY BOOLEAN))
           (("java.lang.Class")
            ("java.lang.Object")))
       (28 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY BYTE))
           (("java.lang.Class")
            ("java.lang.Object")))
       (29 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (100 101 98 117 103 58)
                          6)
           (("java.lang.Object")))
       (30 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 29)
                                ("offset" . 0)
                                ("count" . 6))
            ("java.lang.Object")))
       (31 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (67 111 117 108 100 32 110
                              111 116 32 111 112 101 110 32 100 101
                              98 117 103 32 115 116 114 101 97 109)
                          27)
           (("java.lang.Object")))
       (32 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 31)
                                ("offset" . 0)
                                ("count" . 27))
            ("java.lang.Object")))
       (33 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (107 101 121 32 99 97 110
                               110 116 32 98 101 32 110 117 108 108)
                          17)
           (("java.lang.Object")))
       (34 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 33)
                                ("offset" . 0)
                                ("count" . 17))
            ("java.lang.Object")))
       (35 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY NIL 0)
           (("java.lang.Object")))
       (36 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 35)
                                ("offset" . 0)
                                ("count" . 0))
            ("java.lang.Object")))
       (37 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY
                          (107 101 121 32 99 97 110 110
                               116 32 98 101 32 101 109 112 116 121)
                          18)
           (("java.lang.Object")))
       (38 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 37)
                                ("offset" . 0)
                                ("count" . 18))
            ("java.lang.Object")))
       (39 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.System")
           (("java.lang.Class")
            ("java.lang.Object")))
       (40 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Runnable")
           (("java.lang.Class")
            ("java.lang.Object")))
       (41 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (84 104 114 101 97 100 91 64)
                          8)
           (("java.lang.Object")))
       (42 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 41)
                                ("offset" . 0)
                                ("count" . 8))
            ("java.lang.Object")))
       (43 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (44) 1)
           (("java.lang.Object")))
       (44 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 43)
                                ("offset" . 0)
                                ("count" . 1))
            ("java.lang.Object")))
       (45 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (93) 1)
           (("java.lang.Object")))
       (46 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 45)
                                ("offset" . 0)
                                ("count" . 1))
            ("java.lang.Object")))
       (47 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Thread")
           (("java.lang.Class")
            ("java.lang.Object")))
       (48 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY CHAR))
           (SPECIFIC-INFO ARRAY (58 32) 2)
           (("java.lang.Object")))
       (49 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.String")
           (SPECIFIC-INFO STRING)
           (("java.lang.String" ("value" . 48)
                                ("offset" . 0)
                                ("count" . 2))
            ("java.lang.Object")))
       (50 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Throwable")
           (("java.lang.Class")
            ("java.lang.Object")))
       (51 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "java.lang.Error")
           (("java.lang.Class")
            ("java.lang.Object")))
       (52 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO ARRAY_CLASS (ARRAY "java.lang.String"))
           (("java.lang.Class")
            ("java.lang.Object")))
       (53 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        (ARRAY "java.lang.String"))
           (SPECIFIC-INFO ARRAY NIL 0)
           (("java.lang.Object")))
       (54 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Thread")
           (SPECIFIC-INFO GENERIC_OBJECT)
           (("java.lang.Thread" ("priority" . 5)
                                ("threadQ" . -1)
                                ("target" . -1))
            ("java.lang.Object")))
       (55 OBJECT
           (COMMON-INFO 0 (MONITOR -1 0 NIL NIL)
                        "java.lang.Class")
           (SPECIFIC-INFO INSTANCE_CLASS "FirstX")
           (("java.lang.Class")
            ("java.lang.Object"))))
 (THREAD-TABLE
  (JVM::THREAD
     0 (JVM::SAVED-PC . 0)
     (JVM::CALL-STACK
          (FRAME (RETURN_PC . KILL_THREAD)
                 (OPERAND-STACK)
                 (LOCALS 53 TOPX TOPX)
                 (METHOD-PTR "FirstX"
                             "main" ((ARRAY "java.lang.String"))
                             VOID)
                 (SYNC-OBJ-REF . -1)
                 (RESUME-PC . -1)
                 (AUX))
          (FRAME (RETURN_PC . 0)
                 (OPERAND-STACK 53 "FirstX"
                                (JVM::CALL-BACK *INITINITIALTHREADBEHAVIOR*))
                 (LOCALS)
                 (METHOD-PTR "java.lang.Class"
                             "runCustomCode" NIL VOID)
                 (SYNC-OBJ-REF . -1)
                 (RESUME-PC . -1)
                 (AUX)))
     (JVM::STATUS THREAD_ACTIVE)
     (MONITOR . -1)
     (JVM::MDEPTH . 0)
     (JVM::THREAD-OBJ . 54)))
 (CLASS-TABLE
  (INSTANCE-CLASS-TABLE
   (CLASS
    "FirstX"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "FirstX" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "FirstX" "main"
             (PARAMETERS (ARRAY "java.lang.String"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (MAX_LOCAL . 3)
                   (CODE_LENGTH . 14)
                   (PARSEDCODE (0 (ILOAD_2))
                               (1 (ISTORE_1))
                               (2 (ILOAD_1))
                               (3 (ICONST_1))
                               (4 (IADD))
                               (5 (ISTORE_2))
                               (6 (ILOAD_2))
                               (7 (ISTORE_1))
                               (8 (ICONST_2))
                               (9 (ILOAD_2))
                               (10 (ILOAD_1))
                               (11 (IADD))
                               (12 (IADD))
                               (13 (ISTORE_2))
                               (14 (RETURN))
                               (ENDOFCODE 14))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . CLASS_READY)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 55))
   (CLASS
    "java.lang.Error"
    "java.lang.Throwable" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "java.lang.Error" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Throwable" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.Error"
      "<init>" (PARAMETERS "java.lang.String")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Throwable"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 51))
   (CLASS
    "java.lang.Throwable" "java.lang.Object"
    (CONSTANT_POOL (STRING 49))
    (FIELDS (FIELD "java.lang.Throwable"
                   "detailMessage" "java.lang.String"
                   (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.Throwable"
                   "backtrace" "java.lang.Object"
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)))
    (METHODS
     (METHOD
      "java.lang.Throwable"
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Throwable"
      "<init>" (PARAMETERS "java.lang.String")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                     (CLASS "java.lang.String"))))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Throwable"
      "getMessage" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (MAX_LOCAL . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                        (CLASS "java.lang.String"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.Throwable"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 45)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                        NIL (CLASS "java.lang.Class"))))
            (4 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                        NIL (CLASS "java.lang.String"))))
            (7 (ASTORE_1))
            (8 (ALOAD_0))
            (9 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                        NIL (CLASS "java.lang.String"))))
            (12 (ASTORE_2))
            (13 (ALOAD_2))
            (14 (IFNULL 43))
            (17 (NEW (CLASS "java.lang.StringBuffer")))
            (20 (DUP))
            (21 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (24 (ALOAD_1))
            (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (28 (LDC 0))
            (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (33 (ALOAD_2))
            (34 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (37 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (40 (GOTO 44))
            (43 (ALOAD_1))
            (44 (ARETURN))
            (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (43 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "java.lang.Throwable"
      "printStackTrace" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 57)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                    (CLASS "java.io.PrintStream"))))
        (3 (ASTORE_1))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                    NIL (CLASS "java.lang.String"))))
        (8 (ASTORE_2))
        (9 (ALOAD_1))
        (10 (ALOAD_0))
        (11 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                     NIL (CLASS "java.lang.Class"))))
        (14 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (17 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (20 (ALOAD_2))
        (21 (IFNULL 38))
        (24 (ALOAD_1))
        (25 (LDC 0))
        (27 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (30 (ALOAD_1))
        (31 (ALOAD_2))
        (32 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (35 (GOTO 42))
        (38 (ALOAD_1))
        (39 (INVOKEVIRTUAL (METHODCP "println"
                                     "java.io.PrintStream" NIL VOID)))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "backtrace" "java.lang.Throwable"
                                    (CLASS "java.lang.Object"))))
        (46 (IFNULL 56))
        (49 (ALOAD_0))
        (50 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                     (CLASS "java.io.PrintStream"))))
        (53 (INVOKESPECIAL (METHODCP "printStackTrace0" "java.lang.Throwable"
                                     ((CLASS "java.lang.Object"))
                                     VOID)))
        (56 (RETURN))
        (ENDOFCODE 57))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (42 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "java.lang.Throwable" "printStackTrace0"
             (PARAMETERS "java.lang.Object")
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 50))
   (CLASS
    "java.lang.Thread" "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 5)
                   (INT 10)
                   (STRING 42)
                   (STRING 44)
                   (STRING 46))
    (FIELDS (FIELD "java.lang.Thread" "priority"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.Thread"
                   "threadQ" "java.lang.Thread"
                   (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.Thread"
                   "target" "java.lang.Runnable"
                   (ACCESSFLAGS *CLASS* *PRIVATE*)))
    (METHODS
     (METHOD "java.lang.Thread"
             "currentThread" (PARAMETERS)
             (RETURNTYPE . "java.lang.Thread")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Thread" "yield" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Thread"
             "sleep" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ACONST_NULL))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread"
                                               ((CLASS "java.lang.Runnable"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Thread" "<init>"
      (PARAMETERS "java.lang.Runnable")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_5))
          (6 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (9 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                     NIL (CLASS "java.lang.Thread"))))
          (12 (ASTORE_2))
          (13 (ALOAD_0))
          (14 (ALOAD_2))
          (15 (INVOKEVIRTUAL (METHODCP "getPriority"
                                       "java.lang.Thread" NIL INT)))
          (18 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (21 (ALOAD_0))
          (22 (ALOAD_1))
          (23 (PUTFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                      (CLASS "java.lang.Runnable"))))
          (26 (ALOAD_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (31 (INVOKEVIRTUAL (METHODCP "setPriority" "java.lang.Thread" (INT)
                                       VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.Thread" "start" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*
                          *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread" "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (4 (IFNULL 16))
          (7 (ALOAD_0))
          (8 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (11 (INVOKEINTERFACE (METHODCP "run" "java.lang.Runnable" NIL VOID)
                               1))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD "java.lang.Thread"
             "isAlive" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread"
      "setPriority" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 30)
       (PARSEDCODE
         (0 (ILOAD_1))
         (1 (BIPUSH 10))
         (3 (IF_ICMPGT 11))
         (6 (ILOAD_1))
         (7 (ICONST_1))
         (8 (IF_ICMPGE 19))
         (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (14 (DUP))
         (15 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
         (18 (ATHROW))
         (19 (ALOAD_0))
         (20 (ALOAD_0))
         (21 (ILOAD_1))
         (22 (DUP_X1))
         (23 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
         (26 (INVOKESPECIAL (METHODCP "setPriority0" "java.lang.Thread" (INT)
                                      VOID)))
         (29 (RETURN))
         (ENDOFCODE 30))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.Thread"
      "getPriority" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (MAX_LOCAL . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD "java.lang.Thread"
             "activeCount" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Thread" "join" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                       NIL (CLASS "java.lang.Thread"))))
            (4 (JVM::IF_ACMPNE 11))
            (7 (RETURN))
            (8 (INVOKESTATIC (METHODCP "yield" "java.lang.Thread" NIL VOID)))
            (11 (ALOAD_0))
            (12 (INVOKEVIRTUAL (METHODCP "isAlive"
                                         "java.lang.Thread" NIL BOOLEAN)))
            (15 (IFNE 8))
            (18 (RETURN))
            (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.Thread"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (LDC 3))
        (9 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.StringBuffer"))))
        (12 (ALOAD_0))
        (13 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (16 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (19 (LDC 4))
        (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (24 (ALOAD_0))
        (25 (INVOKEVIRTUAL (METHODCP "getPriority"
                                     "java.lang.Thread" NIL INT)))
        (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (31 (LDC 5))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (39 (ARETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.Thread"
             "setPriority0" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES "java.lang.Runnable")
    (STATIC-FIELDS
         (JVM::STATIC-FIELD "java.lang.Thread" "MIN_PRIORITY" INT
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            1)
         (JVM::STATIC-FIELD "java.lang.Thread" "NORM_PRIORITY" INT
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            5)
         (JVM::STATIC-FIELD "java.lang.Thread" "MAX_PRIORITY" INT
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            10))
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 47))
   (CLASS "java.lang.Runnable"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "java.lang.Runnable" "run" (PARAMETERS)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE (MAX_STACK . 0)
                                 (MAX_LOCAL . 0)
                                 (CODE_LENGTH . 0)
                                 (PARSEDCODE)
                                 (EXCEPTIONS)
                                 (STACKMAP))))
          (INTERFACES)
          (STATIC-FIELDS)
          (JVM::STATUS . 2)
          (JVM::ACCESS-FLAGS *ABSTRACT* *INTERFACE* *PUBLIC*)
          (JVM::INIT-THREAD . -1)
          (CLASS-REF . 40))
   (CLASS
    "java.lang.System" "java.lang.Object"
    (CONSTANT_POOL (STRING 30)
                   (STRING 32)
                   (STRING 34)
                   (STRING 36)
                   (STRING 38))
    (FIELDS)
    (METHODS
     (METHOD
      "java.lang.System" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.System"
             "getOutput" (PARAMETERS)
             (RETURNTYPE . "java.io.PrintStream")
             (ACCESSFLAGS *CLASS* *PRIVATE* *NATIVE* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.System"
             "currentTimeMillis" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.System" "arraycopy"
             (PARAMETERS "java.lang.Object"
                         INT (CLASS "java.lang.Object")
                         INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.System" "identityHashCode"
             (PARAMETERS "java.lang.Object")
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.System" "getProperty"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 38)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (IFNONNULL 14))
            (4 (NEW (CLASS "java.lang.NullPointerException")))
            (7 (DUP))
            (8 (LDC 2))
            (10 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.NullPointerException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (13 (ATHROW))
            (14 (ALOAD_0))
            (15 (LDC 3))
            (17 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (20 (IFEQ 33))
            (23 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (26 (DUP))
            (27 (LDC 4))
            (29 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (32 (ATHROW))
            (33 (ALOAD_0))
            (34 (INVOKESTATIC (METHODCP "getProperty0" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (37 (ARETURN))
            (ENDOFCODE 38))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (33 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "java.lang.System" "getProperty0"
             (PARAMETERS "java.lang.String")
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.System"
      "exit" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 2)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                           NIL (CLASS "java.lang.Runtime"))))
                (3 (ILOAD_0))
                (4 (INVOKEVIRTUAL (METHODCP "exit" "java.lang.Runtime" (INT)
                                            VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.System" "gc" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (MAX_LOCAL . 0)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                        NIL (CLASS "java.lang.Runtime"))))
             (3 (INVOKEVIRTUAL (METHODCP "gc" "java.lang.Runtime" NIL VOID)))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.System"
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (MAX_LOCAL . 0)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (INVOKESTATIC (METHODCP "getOutput" "java.lang.System"
                                         NIL (CLASS "java.io.PrintStream"))))
              (3 (PUTSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (6 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (9 (PUTSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS
         (JVM::STATIC-FIELD "java.lang.System"
                            "out" "java.io.PrintStream"
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            -1)
         (JVM::STATIC-FIELD "java.lang.System"
                            "err" "java.io.PrintStream"
                            (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                            -1))
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS*
                       *FINAL* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 39))
   (CLASS
    "java.lang.String" "java.lang.Object"
    (CONSTANT_POOL (STRING 15)
                   (STRING 17)
                   (STRING 19))
    (FIELDS (FIELD "java.lang.String" "value" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.String" "offset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*))
            (FIELD "java.lang.String" "count"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)))
    (METHODS
     (METHOD
      "java.lang.String" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (NEWARRAY CHAR))
          (8 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (11 (RETURN))
          (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "<init>" (PARAMETERS "java.lang.String")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 37)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (9 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (12 (ALOAD_0))
          (13 (ALOAD_0))
          (14 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (17 (NEWARRAY CHAR))
          (19 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (22 (ALOAD_1))
          (23 (ICONST_0))
          (24 (ALOAD_0))
          (25 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (28 (ALOAD_0))
          (29 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (32 (ICONST_0))
          (33 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                       (INT INT (ARRAY CHAR) INT)
                                       VOID)))
          (36 (RETURN))
          (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "<init>" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (ARRAYLENGTH))
          (7 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (10 (ALOAD_0))
          (11 (ALOAD_0))
          (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (15 (NEWARRAY CHAR))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_1))
          (21 (ICONST_0))
          (22 (ALOAD_0))
          (23 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (26 (ICONST_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (31 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                      ((CLASS "java.lang.Object")
                                       INT (CLASS "java.lang.Object")
                                       INT INT)
                                      VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 73)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
        (4 (ILOAD_2))
        (5 (IFGE 17))
        (8 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (ILOAD_2))
        (13
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (16 (ATHROW))
        (17 (ILOAD_3))
        (18 (IFGE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_3))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_2))
        (31 (ALOAD_1))
        (32 (ARRAYLENGTH))
        (33 (ILOAD_3))
        (34 (ISUB))
        (35 (IF_ICMPLE 49))
        (38 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (41 (DUP))
        (42 (ILOAD_2))
        (43 (ILOAD_3))
        (44 (IADD))
        (45
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (48 (ATHROW))
        (49 (ALOAD_0))
        (50 (ILOAD_3))
        (51 (NEWARRAY CHAR))
        (53 (PUTFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (56 (ALOAD_0))
        (57 (ILOAD_3))
        (58 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (61 (ALOAD_1))
        (62 (ILOAD_2))
        (63 (ALOAD_0))
        (64 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (67 (ICONST_0))
        (68 (ILOAD_3))
        (69 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (72 (RETURN))
        (ENDOFCODE 73))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY BYTE)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 5)
         (MAX_LOCAL . 5)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ALOAD_1))
              (2 (ILOAD_2))
              (3 (ILOAD_3))
              (4 (ALOAD 4))
              (6 (INVOKESTATIC (METHODCP "byteToCharArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY CHAR))))
              (9 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.lang.String" ((ARRAY CHAR))
                                          VOID)))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY BYTE)
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (MAX_LOCAL . 3)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (ICONST_0))
             (3 (ALOAD_1))
             (4 (ARRAYLENGTH))
             (5 (ALOAD_2))
             (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         VOID)))
             (9 (RETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (MAX_LOCAL . 4)
           (CODE_LENGTH . 11)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ILOAD_2))
                (3 (ILOAD_3))
                (4 (INVOKESTATIC (METHODCP "byteToCharArray"
                                           "com.sun.cldc.i18n.Helper"
                                           ((ARRAY BYTE) INT INT)
                                           (ARRAY CHAR))))
                (7 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (10 (RETURN))
                (ENDOFCODE 11))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String"
      "<init>" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 4)
          (MAX_LOCAL . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE (0 (ALOAD_0))
                      (1 (ALOAD_1))
                      (2 (ICONST_0))
                      (3 (ALOAD_1))
                      (4 (ARRAYLENGTH))
                      (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY BYTE) INT INT)
                                                  VOID)))
                      (8 (RETURN))
                      (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS "java.lang.StringBuffer")
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 44)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_1))
          (5 (DUP))
          (6 (ASTORE_2))
          (7 (MONITORENTER))
          (8 (ALOAD_1))
          (9 (INVOKEVIRTUAL (METHODCP "setShared"
                                      "java.lang.StringBuffer" NIL VOID)))
          (12 (ALOAD_0))
          (13 (ALOAD_1))
          (14 (INVOKEVIRTUAL (METHODCP "getValue" "java.lang.StringBuffer"
                                       NIL (ARRAY CHAR))))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_0))
          (21 (ICONST_0))
          (22 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (25 (ALOAD_0))
          (26 (ALOAD_1))
          (27 (INVOKEVIRTUAL (METHODCP "length"
                                       "java.lang.StringBuffer" NIL INT)))
          (30 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (33 (ALOAD_2))
          (34 (MONITOREXIT))
          (35 (GOTO 43))
          (38 (ASTORE_3))
          (39 (ALOAD_2))
          (40 (MONITOREXIT))
          (41 (ALOAD_3))
          (42 (ATHROW))
          (43 (RETURN))
          (ENDOFCODE 44))
       (EXCEPTIONS (JVM::HANDLER 8 35 38 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 38 41 38 (CLASS "java.lang.Throwable")))
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String" "<init>"
      (PARAMETERS INT INT (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_3))
          (6 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (9 (ALOAD_0))
          (10 (ILOAD_1))
          (11 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (14 (ALOAD_0))
          (15 (ILOAD_2))
          (16 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (19 (RETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String" "length" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (MAX_LOCAL . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (4 (IRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "java.lang.String"
             "charAt" (PARAMETERS INT)
             (RETURNTYPE . CHAR)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String" "getChars"
      (PARAMETERS INT INT (ARRAY CHAR) INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (MAX_LOCAL . 5)
       (CODE_LENGTH . 66)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ALOAD_0))
        (47 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (50 (ALOAD_0))
        (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ALOAD_3))
        (57 (ILOAD 4))
        (59 (ILOAD_2))
        (60 (ILOAD_1))
        (61 (ISUB))
        (62 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (65 (RETURN))
        (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String" "getBytes"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (MAX_LOCAL . 2)
        (CODE_LENGTH . 17)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value"
                                        "java.lang.String" (ARRAY CHAR))))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (8 (ALOAD_0))
             (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (12 (ALOAD_1))
             (13 (INVOKESTATIC (METHODCP "charToByteArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY CHAR)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY BYTE))))
             (16 (ARETURN))
             (ENDOFCODE 17))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "java.lang.String"
      "getBytes" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 16)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (4 (ALOAD_0))
                (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (8 (ALOAD_0))
                (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (12 (INVOKESTATIC (METHODCP "charToByteArray"
                                            "com.sun.cldc.i18n.Helper"
                                            ((ARRAY CHAR) INT INT)
                                            (ARRAY BYTE))))
                (15 (ARETURN))
                (ENDOFCODE 16))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD "java.lang.String"
             "equals" (PARAMETERS "java.lang.Object")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String" "compareTo"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (MAX_LOCAL . 11)
          (CODE_LENGTH . 91)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (ISTORE_2))
               (5 (ALOAD_1))
               (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (9 (ISTORE_3))
               (10 (ILOAD_2))
               (11 (ILOAD_3))
               (12 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                           INT)))
               (15 (ISTORE 4))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (21 (ASTORE 5))
               (23 (ALOAD_1))
               (24 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (27 (ASTORE 6))
               (29 (ALOAD_0))
               (30 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (33 (ISTORE 7))
               (35 (ALOAD_1))
               (36 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (39 (ISTORE 8))
               (41 (GOTO 77))
               (44 (ALOAD 5))
               (46 (ILOAD 7))
               (48 (IINC 7 1))
               (51 (CALOAD))
               (52 (ISTORE 9))
               (54 (ALOAD 6))
               (56 (ILOAD 8))
               (58 (IINC 8 1))
               (61 (CALOAD))
               (62 (ISTORE 10))
               (64 (ILOAD 9))
               (66 (ILOAD 10))
               (68 (IF_ICMPEQ 77))
               (71 (ILOAD 9))
               (73 (ILOAD 10))
               (75 (ISUB))
               (76 (IRETURN))
               (77 (ILOAD 4))
               (79 (DUP))
               (80 (ICONST_1))
               (81 (ISUB))
               (82 (ISTORE 4))
               (84 (IFNE 44))
               (87 (ILOAD_2))
               (88 (ILOAD_3))
               (89 (ISUB))
               (90 (IRETURN))
               (ENDOFCODE 91))
          (EXCEPTIONS)
          (STACKMAP (44 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL))
                    (77 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "regionMatches"
      (PARAMETERS BOOLEAN INT (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 6)
          (MAX_LOCAL . 15)
          (CODE_LENGTH . 170)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE 6))
               (6 (ALOAD_0))
               (7 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (10 (ILOAD_2))
               (11 (IADD))
               (12 (ISTORE 7))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (22 (IADD))
               (23 (ISTORE 8))
               (25 (ALOAD_3))
               (26 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (29 (ASTORE 9))
               (31 (ALOAD_3))
               (32 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (35 (ILOAD 4))
               (37 (IADD))
               (38 (ISTORE 10))
               (40 (ILOAD 4))
               (42 (IFLT 80))
               (45 (ILOAD_2))
               (46 (IFLT 80))
               (49 (ILOAD_2))
               (50 (JVM::I2L))
               (51 (ALOAD_0))
               (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (55 (JVM::I2L))
               (56 (ILOAD 5))
               (58 (JVM::I2L))
               (59 (JVM::LSUB))
               (60 (LCMP))
               (61 (IFGT 80))
               (64 (ILOAD 4))
               (66 (JVM::I2L))
               (67 (ALOAD_3))
               (68 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (71 (JVM::I2L))
               (72 (ILOAD 5))
               (74 (JVM::I2L))
               (75 (JVM::LSUB))
               (76 (LCMP))
               (77 (IFLE 158))
               (80 (ICONST_0))
               (81 (IRETURN))
               (82 (ALOAD 6))
               (84 (ILOAD 7))
               (86 (IINC 7 1))
               (89 (CALOAD))
               (90 (ISTORE 11))
               (92 (ALOAD 9))
               (94 (ILOAD 10))
               (96 (IINC 10 1))
               (99 (CALOAD))
               (100 (ISTORE 12))
               (102 (ILOAD 11))
               (104 (ILOAD 12))
               (106 (IF_ICMPNE 112))
               (109 (GOTO 158))
               (112 (ILOAD_1))
               (113 (IFEQ 156))
               (116 (ILOAD 11))
               (118 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (121 (ISTORE 13))
               (123 (ILOAD 12))
               (125 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (128 (ISTORE 14))
               (130 (ILOAD 13))
               (132 (ILOAD 14))
               (134 (IF_ICMPNE 140))
               (137 (GOTO 158))
               (140 (ILOAD 13))
               (142 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (145 (ILOAD 14))
               (147 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (150 (IF_ICMPNE 156))
               (153 (GOTO 158))
               (156 (ICONST_0))
               (157 (IRETURN))
               (158 (ILOAD 5))
               (160 (DUP))
               (161 (ICONST_1))
               (162 (ISUB))
               (163 (ISTORE 5))
               (165 (IFGT 82))
               (168 (ICONST_1))
               (169 (IRETURN))
               (ENDOFCODE 170))
          (EXCEPTIONS)
          (STACKMAP (80 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (112 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (140 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT INT INT)
                                (STACK)
                                NIL))
                    (156 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (158 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT TOPX TOPX TOPX TOPX)
                                (STACK)
                                NIL)))))
     (METHOD
      "java.lang.String" "startsWith"
      (PARAMETERS "java.lang.String" INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (MAX_LOCAL . 9)
          (CODE_LENGTH . 89)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (9 (ILOAD_2))
               (10 (IADD))
               (11 (ISTORE 4))
               (13 (ALOAD_0))
               (14 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (21 (IADD))
               (22 (ISTORE 5))
               (24 (ALOAD_1))
               (25 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (28 (ASTORE 6))
               (30 (ALOAD_1))
               (31 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (34 (ISTORE 7))
               (36 (ALOAD_1))
               (37 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (40 (ISTORE 8))
               (42 (ILOAD_2))
               (43 (IFLT 57))
               (46 (ILOAD_2))
               (47 (ALOAD_0))
               (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (51 (ILOAD 8))
               (53 (ISUB))
               (54 (IF_ICMPLE 79))
               (57 (ICONST_0))
               (58 (IRETURN))
               (59 (ALOAD_3))
               (60 (ILOAD 4))
               (62 (IINC 4 1))
               (65 (CALOAD))
               (66 (ALOAD 6))
               (68 (ILOAD 7))
               (70 (IINC 7 1))
               (73 (CALOAD))
               (74 (IF_ICMPEQ 79))
               (77 (ICONST_0))
               (78 (IRETURN))
               (79 (IINC 8 -1))
               (82 (ILOAD 8))
               (84 (IFGE 59))
               (87 (ICONST_1))
               (88 (IRETURN))
               (ENDOFCODE 89))
          (EXCEPTIONS)
          (STACKMAP (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (79 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "startsWith"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (MAX_LOCAL . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "java.lang.String" "endsWith"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (MAX_LOCAL . 2)
           (CODE_LENGTH . 15)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (6 (ALOAD_1))
                (7 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (10 (ISUB))
                (11 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                (14 (IRETURN))
                (ENDOFCODE 15))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String"
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (MAX_LOCAL . 6)
           (CODE_LENGTH . 48)
           (PARSEDCODE
                (0 (ICONST_0))
                (1 (ISTORE_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (6 (ISTORE_2))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (11 (ASTORE_3))
                (12 (ALOAD_0))
                (13 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (16 (ISTORE 4))
                (18 (ICONST_0))
                (19 (ISTORE 5))
                (21 (GOTO 39))
                (24 (BIPUSH 31))
                (26 (ILOAD_1))
                (27 (IMUL))
                (28 (ALOAD_3))
                (29 (ILOAD_2))
                (30 (IINC 2 1))
                (33 (CALOAD))
                (34 (IADD))
                (35 (ISTORE_1))
                (36 (IINC 5 1))
                (39 (ILOAD 5))
                (41 (ILOAD 4))
                (43 (IF_ICMPLT 24))
                (46 (ILOAD_1))
                (47 (IRETURN))
                (ENDOFCODE 48))
           (EXCEPTIONS)
           (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL))
                     (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL)))))
     (METHOD "java.lang.String"
             "indexOf" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.String"
             "indexOf" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String"
      "lastIndexOf" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (MAX_LOCAL . 2)
            (CODE_LENGTH . 12)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ILOAD_1))
                 (2 (ALOAD_0))
                 (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (6 (ICONST_1))
                 (7 (ISUB))
                 (8 (INVOKEVIRTUAL (METHODCP "lastIndexOf"
                                             "java.lang.String" (INT INT)
                                             INT)))
                 (11 (IRETURN))
                 (ENDOFCODE 12))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "java.lang.String"
      "lastIndexOf" (PARAMETERS INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (MAX_LOCAL . 6)
          (CODE_LENGTH . 67)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (4 (ISTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (9 (ASTORE 4))
               (11 (ALOAD_0))
               (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (15 (ILOAD_2))
               (16 (ALOAD_0))
               (17 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (20 (IF_ICMPLT 32))
               (23 (ALOAD_0))
               (24 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (27 (ICONST_1))
               (28 (ISUB))
               (29 (GOTO 33))
               (32 (ILOAD_2))
               (33 (IADD))
               (34 (ISTORE 5))
               (36 (GOTO 59))
               (39 (ALOAD 4))
               (41 (ILOAD 5))
               (43 (CALOAD))
               (44 (ILOAD_1))
               (45 (IF_ICMPNE 56))
               (48 (ILOAD 5))
               (50 (ALOAD_0))
               (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (54 (ISUB))
               (55 (IRETURN))
               (56 (IINC 5 -1))
               (59 (ILOAD 5))
               (61 (ILOAD_3))
               (62 (IF_ICMPGE 39))
               (65 (ICONST_M1))
               (66 (IRETURN))
               (ENDOFCODE 67))
          (EXCEPTIONS)
          (STACKMAP (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT)
                               NIL))
                    (33 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT INT)
                               NIL))
                    (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (56 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "indexOf"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (MAX_LOCAL . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             INT)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "java.lang.String" "indexOf"
      (PARAMETERS "java.lang.String" INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (MAX_LOCAL . 12)
         (CODE_LENGTH . 189)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (4 (ASTORE_3))
              (5 (ALOAD_1))
              (6 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (9 (ASTORE 4))
              (11 (ALOAD_0))
              (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (15 (ALOAD_0))
              (16 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (19 (ALOAD_1))
              (20 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (23 (ISUB))
              (24 (IADD))
              (25 (ISTORE 5))
              (27 (ILOAD_2))
              (28 (ALOAD_0))
              (29 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (32 (IF_ICMPLT 57))
              (35 (ALOAD_0))
              (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (39 (IFNE 55))
              (42 (ILOAD_2))
              (43 (IFNE 55))
              (46 (ALOAD_1))
              (47 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (50 (IFNE 55))
              (53 (ICONST_0))
              (54 (IRETURN))
              (55 (ICONST_M1))
              (56 (IRETURN))
              (57 (ILOAD_2))
              (58 (IFGE 63))
              (61 (ICONST_0))
              (62 (ISTORE_2))
              (63 (ALOAD_1))
              (64 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (67 (IFNE 72))
              (70 (ILOAD_2))
              (71 (IRETURN))
              (72 (ALOAD_1))
              (73 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (76 (ISTORE 6))
              (78 (ALOAD 4))
              (80 (ILOAD 6))
              (82 (CALOAD))
              (83 (ISTORE 7))
              (85 (ALOAD_0))
              (86 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (89 (ILOAD_2))
              (90 (IADD))
              (91 (ISTORE 8))
              (93 (GOTO 99))
              (96 (IINC 8 1))
              (99 (ILOAD 8))
              (101 (ILOAD 5))
              (103 (IF_ICMPGT 115))
              (106 (ALOAD_3))
              (107 (ILOAD 8))
              (109 (CALOAD))
              (110 (ILOAD 7))
              (112 (IF_ICMPNE 96))
              (115 (ILOAD 8))
              (117 (ILOAD 5))
              (119 (IF_ICMPLE 124))
              (122 (ICONST_M1))
              (123 (IRETURN))
              (124 (ILOAD 8))
              (126 (ICONST_1))
              (127 (IADD))
              (128 (ISTORE 9))
              (130 (ILOAD 9))
              (132 (ALOAD_1))
              (133 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (136 (IADD))
              (137 (ICONST_1))
              (138 (ISUB))
              (139 (ISTORE 10))
              (141 (ILOAD 6))
              (143 (ICONST_1))
              (144 (IADD))
              (145 (ISTORE 11))
              (147 (GOTO 174))
              (150 (ALOAD_3))
              (151 (ILOAD 9))
              (153 (IINC 9 1))
              (156 (CALOAD))
              (157 (ALOAD 4))
              (159 (ILOAD 11))
              (161 (IINC 11 1))
              (164 (CALOAD))
              (165 (IF_ICMPEQ 174))
              (168 (IINC 8 1))
              (171 (GOTO 99))
              (174 (ILOAD 9))
              (176 (ILOAD 10))
              (178 (IF_ICMPLT 150))
              (181 (ILOAD 8))
              (183 (ALOAD_0))
              (184 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (187 (ISUB))
              (188 (IRETURN))
              (ENDOFCODE 189))
         (EXCEPTIONS)
         (STACKMAP (55 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (63 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (72 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (96 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (99 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (115 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (124 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (150 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL))
                   (174 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String"
      "substring" (PARAMETERS INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (ALOAD_0))
         (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
         (6 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
         (9 (ARETURN))
         (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "substring" (PARAMETERS INT INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 3)
       (CODE_LENGTH . 83)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ILOAD_1))
        (47 (IFNE 62))
        (50 (ILOAD_2))
        (51 (ALOAD_0))
        (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (55 (IF_ICMPNE 62))
        (58 (ALOAD_0))
        (59 (GOTO 82))
        (62 (NEW (CLASS "java.lang.String")))
        (65 (DUP))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (70 (ILOAD_1))
        (71 (IADD))
        (72 (ILOAD_2))
        (73 (ILOAD_1))
        (74 (ISUB))
        (75 (ALOAD_0))
        (76 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (79 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                     (INT INT (ARRAY CHAR))
                                     VOID)))
        (82 (ARETURN))
        (ENDOFCODE 83))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "java.lang.String"
      "concat" (PARAMETERS "java.lang.String")
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 58)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (4 (ISTORE_2))
           (5 (ILOAD_2))
           (6 (IFNE 11))
           (9 (ALOAD_0))
           (10 (ARETURN))
           (11 (ALOAD_0))
           (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (15 (ILOAD_2))
           (16 (IADD))
           (17 (NEWARRAY CHAR))
           (19 (ASTORE_3))
           (20 (ALOAD_0))
           (21 (ICONST_0))
           (22 (ALOAD_0))
           (23 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (26 (ALOAD_3))
           (27 (ICONST_0))
           (28 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (31 (ALOAD_1))
           (32 (ICONST_0))
           (33 (ILOAD_2))
           (34 (ALOAD_3))
           (35 (ALOAD_0))
           (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (39 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (42 (NEW (CLASS "java.lang.String")))
           (45 (DUP))
           (46 (ICONST_0))
           (47 (ALOAD_0))
           (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (51 (ILOAD_2))
           (52 (IADD))
           (53 (ALOAD_3))
           (54 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                        (INT INT (ARRAY CHAR))
                                        VOID)))
           (57 (ARETURN))
           (ENDOFCODE 58))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.String"
      "replace" (PARAMETERS CHAR CHAR)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (MAX_LOCAL . 10)
        (CODE_LENGTH . 145)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ILOAD_2))
             (2 (IF_ICMPEQ 143))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (9 (ISTORE_3))
             (10 (ICONST_M1))
             (11 (ISTORE 4))
             (13 (ALOAD_0))
             (14 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
             (17 (ASTORE 5))
             (19 (ALOAD_0))
             (20 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (23 (ISTORE 6))
             (25 (GOTO 43))
             (28 (ALOAD 5))
             (30 (ILOAD 6))
             (32 (ILOAD 4))
             (34 (IADD))
             (35 (CALOAD))
             (36 (ILOAD_1))
             (37 (IF_ICMPNE 43))
             (40 (GOTO 52))
             (43 (IINC 4 1))
             (46 (ILOAD 4))
             (48 (ILOAD_3))
             (49 (IF_ICMPLT 28))
             (52 (ILOAD 4))
             (54 (ILOAD_3))
             (55 (IF_ICMPGE 143))
             (58 (ILOAD_3))
             (59 (NEWARRAY CHAR))
             (61 (ASTORE 7))
             (63 (ICONST_0))
             (64 (ISTORE 8))
             (66 (GOTO 85))
             (69 (ALOAD 7))
             (71 (ILOAD 8))
             (73 (ALOAD 5))
             (75 (ILOAD 6))
             (77 (ILOAD 8))
             (79 (IADD))
             (80 (CALOAD))
             (81 (CASTORE))
             (82 (IINC 8 1))
             (85 (ILOAD 8))
             (87 (ILOAD 4))
             (89 (IF_ICMPLT 69))
             (92 (GOTO 125))
             (95 (ALOAD 5))
             (97 (ILOAD 6))
             (99 (ILOAD 4))
             (101 (IADD))
             (102 (CALOAD))
             (103 (ISTORE 9))
             (105 (ALOAD 7))
             (107 (ILOAD 4))
             (109 (ILOAD 9))
             (111 (ILOAD_1))
             (112 (IF_ICMPNE 119))
             (115 (ILOAD_2))
             (116 (GOTO 121))
             (119 (ILOAD 9))
             (121 (CASTORE))
             (122 (IINC 4 1))
             (125 (ILOAD 4))
             (127 (ILOAD_3))
             (128 (IF_ICMPLT 95))
             (131 (NEW (CLASS "java.lang.String")))
             (134 (DUP))
             (135 (ICONST_0))
             (136 (ILOAD_3))
             (137 (ALOAD 7))
             (139 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           (INT INT (ARRAY CHAR))
                                           VOID)))
             (142 (ARETURN))
             (143 (ALOAD_0))
             (144 (ARETURN))
             (ENDOFCODE 145))
        (EXCEPTIONS)
        (STACKMAP (28 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (52 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (69 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (95 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (119 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT (ARRAY CHAR))
                              NIL))
                  (121 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT INT (ARRAY CHAR))
                              NIL))
                  (125 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT TOPX)
                              (STACK)
                              NIL))
                  (143 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL)))))
     (METHOD
      "java.lang.String"
      "toLowerCase" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (MAX_LOCAL . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toLowerCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String"
      "toUpperCase" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (MAX_LOCAL . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toUpperCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "java.lang.String" "trim" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 5)
       (CODE_LENGTH . 87)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (4 (ISTORE_1))
        (5 (ICONST_0))
        (6 (ISTORE_2))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (11 (ISTORE_3))
        (12 (ALOAD_0))
        (13 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (16 (ASTORE 4))
        (18 (GOTO 24))
        (21 (IINC 2 1))
        (24 (ILOAD_2))
        (25 (ILOAD_1))
        (26 (IF_ICMPGE 46))
        (29 (ALOAD 4))
        (31 (ILOAD_3))
        (32 (ILOAD_2))
        (33 (IADD))
        (34 (CALOAD))
        (35 (BIPUSH 32))
        (37 (IF_ICMPLE 21))
        (40 (GOTO 46))
        (43 (IINC 1 -1))
        (46 (ILOAD_2))
        (47 (ILOAD_1))
        (48 (IF_ICMPGE 64))
        (51 (ALOAD 4))
        (53 (ILOAD_3))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ICONST_1))
        (57 (ISUB))
        (58 (CALOAD))
        (59 (BIPUSH 32))
        (61 (IF_ICMPLE 43))
        (64 (ILOAD_2))
        (65 (IFGT 76))
        (68 (ILOAD_1))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (73 (IF_ICMPGE 85))
        (76 (ALOAD_0))
        (77 (ILOAD_2))
        (78 (ILOAD_1))
        (79 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (82 (GOTO 86))
        (85 (ALOAD_0))
        (86 (ARETURN))
        (ENDOFCODE 87))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (64 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (76 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (86 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD "java.lang.String"
             "toString" (PARAMETERS)
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (MAX_LOCAL . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ARETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.String"
      "toCharArray" (PARAMETERS)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 5)
           (MAX_LOCAL . 2)
           (CODE_LENGTH . 20)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (4 (NEWARRAY CHAR))
                (6 (ASTORE_1))
                (7 (ALOAD_0))
                (8 (ICONST_0))
                (9 (ALOAD_0))
                (10 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (13 (ALOAD_1))
                (14 (ICONST_0))
                (15 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                             (INT INT (ARRAY CHAR) INT)
                                             VOID)))
                (18 (ALOAD_1))
                (19 (ARETURN))
                (ENDOFCODE 20))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String" "valueOf"
      (PARAMETERS "java.lang.Object")
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 1)
          (MAX_LOCAL . 1)
          (CODE_LENGTH . 14)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (IFNONNULL 9))
               (4 (LDC 0))
               (6 (GOTO 13))
               (9 (ALOAD_0))
               (10 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                            NIL (CLASS "java.lang.String"))))
               (13 (ARETURN))
               (ENDOFCODE 14))
          (EXCEPTIONS)
          (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object"))
                              (STACK)
                              NIL))
                    (13 (FRAME (LOCALS (CLASS "java.lang.Object"))
                               (STACK (CLASS "java.lang.String"))
                               NIL)))))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 3)
           (MAX_LOCAL . 1)
           (CODE_LENGTH . 9)
           (PARSEDCODE
                (0 (NEW (CLASS "java.lang.String")))
                (3 (DUP))
                (4 (ALOAD_0))
                (5 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (8 (ARETURN))
                (ENDOFCODE 9))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "java.lang.String" "valueOf"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 5)
          (MAX_LOCAL . 3)
          (CODE_LENGTH . 11)
          (PARSEDCODE (0 (NEW (CLASS "java.lang.String")))
                      (3 (DUP))
                      (4 (ALOAD_0))
                      (5 (ILOAD_1))
                      (6 (ILOAD_2))
                      (7 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY CHAR) INT INT)
                                                  VOID)))
                      (10 (ARETURN))
                      (ENDOFCODE 11))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD "java.lang.String"
             "valueOf" (PARAMETERS BOOLEAN)
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 1)
                   (MAX_LOCAL . 1)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFEQ 9))
                               (4 (LDC 1))
                               (6 (GOTO 11))
                               (9 (LDC 2))
                               (11 (ARETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT) (STACK) NIL))
                             (11 (FRAME (LOCALS INT)
                                        (STACK (CLASS "java.lang.String"))
                                        NIL)))))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS CHAR)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 5)
         (MAX_LOCAL . 2)
         (CODE_LENGTH . 19)
         (PARSEDCODE (0 (ICONST_1))
                     (1 (NEWARRAY CHAR))
                     (3 (DUP))
                     (4 (ICONST_0))
                     (5 (ILOAD_0))
                     (6 (CASTORE))
                     (7 (ASTORE_1))
                     (8 (NEW (CLASS "java.lang.String")))
                     (11 (DUP))
                     (12 (ICONST_0))
                     (13 (ICONST_1))
                     (14 (ALOAD_1))
                     (15 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  (INT INT (ARRAY CHAR))
                                                  VOID)))
                     (18 (ARETURN))
                     (ENDOFCODE 19))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS INT)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ILOAD_0))
          (1 (BIPUSH 10))
          (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT INT)
                                     (CLASS "java.lang.String"))))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.String"
      "valueOf" (PARAMETERS LONG)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (MAX_LOCAL . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (JVM::LLOAD_0))
            (1 (BIPUSH 10))
            (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Long" (LONG INT)
                                       (CLASS "java.lang.String"))))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS*
                       *FINAL* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 20))
   (CLASS
    "java.lang.Class" "java.lang.Object"
    (CONSTANT_POOL (STRING 8)
                   (STRING 10)
                   (STRING 12))
    (FIELDS)
    (METHODS
     (METHOD
      "java.lang.Class" "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "java.lang.Class"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (MAX_LOCAL . 1)
        (CODE_LENGTH . 35)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (ALOAD_0))
             (8 (INVOKEVIRTUAL (METHODCP "isInterface"
                                         "java.lang.Class" NIL BOOLEAN)))
             (11 (IFEQ 19))
             (14 (LDC 0))
             (16 (GOTO 21))
             (19 (LDC 1))
             (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (24 (ALOAD_0))
             (25 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                          NIL (CLASS "java.lang.String"))))
             (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (34 (ARETURN))
             (ENDOFCODE 35))
        (EXCEPTIONS)
        (STACKMAP (19 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.StringBuffer"))
                             NIL))
                  (21 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer"))
                             NIL)))))
     (METHOD "java.lang.Class" "forName"
             (PARAMETERS "java.lang.String")
             (RETURNTYPE . "java.lang.Class")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class"
             "newInstance" (PARAMETERS)
             (RETURNTYPE . "java.lang.Object")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "isInstance"
             (PARAMETERS "java.lang.Object")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "isAssignableFrom"
             (PARAMETERS "java.lang.Class")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class"
             "isInterface" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "isArray" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Class" "getName" (PARAMETERS)
             (RETURNTYPE . "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Class" "getResourceAsStream"
      (PARAMETERS "java.lang.String")
      (RETURNTYPE . "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 101)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (4 (IFLE 26))
        (7 (ALOAD_1))
        (8 (ICONST_0))
        (9 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                    CHAR)))
        (12 (BIPUSH 47))
        (14 (IF_ICMPNE 26))
        (17 (ALOAD_1))
        (18 (ICONST_1))
        (19 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (22 (ASTORE_1))
        (23 (GOTO 75))
        (26 (ALOAD_0))
        (27 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (30 (ASTORE_2))
        (31 (ALOAD_2))
        (32 (BIPUSH 46))
        (34 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.lang.String" (INT)
                                     INT)))
        (37 (ISTORE_3))
        (38 (ILOAD_3))
        (39 (IFLT 75))
        (42 (NEW (CLASS "java.lang.StringBuffer")))
        (45 (DUP))
        (46 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (49 (ALOAD_2))
        (50 (ICONST_0))
        (51 (ILOAD_3))
        (52 (ICONST_1))
        (53 (IADD))
        (54 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (57 (BIPUSH 46))
        (59 (BIPUSH 47))
        (61 (INVOKEVIRTUAL (METHODCP "replace" "java.lang.String" (CHAR CHAR)
                                     (CLASS "java.lang.String"))))
        (64 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (67 (ALOAD_1))
        (68 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (71 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (74 (ASTORE_1))
        (75 (NEW (CLASS "java.lang.StringBuffer")))
        (78 (DUP))
        (79 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (82 (LDC 2))
        (84 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (87 (ALOAD_1))
        (88 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (91 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (94 (INVOKESTATIC (METHODCP "openInputStream"
                                    "javax.microedition.io.Connector"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.io.InputStream"))))
        (97 (ARETURN))
        (98 (ASTORE_2))
        (99 (ACONST_NULL))
        (100 (ARETURN))
        (ENDOFCODE 101))
       (EXCEPTIONS (JVM::HANDLER 0 97 98 (CLASS "java.io.IOException")))
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (75 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL)))))
     (METHOD "java.lang.Class"
             "runCustomCode" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (CUSTOMCODE))
                               (1 (RETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . 2)
    (JVM::ACCESS-FLAGS *CLASS*
                       *FINAL* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 13))
   (CLASS
    "java.lang.Object" ""
    (CONSTANT_POOL (STRING 1)
                   (STRING 3)
                   (INT 999999)
                   (STRING 5)
                   (INT 500000))
    (FIELDS)
    (METHODS
     (METHOD "java.lang.Object" "<init>" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "getClass" (PARAMETERS)
             (RETURNTYPE . "java.lang.Class")
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "hashCode" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "equals" (PARAMETERS "java.lang.Object")
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 2)
                   (MAX_LOCAL . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ALOAD_1))
                               (2 (JVM::IF_ACMPNE 9))
                               (5 (ICONST_1))
                               (6 (GOTO 10))
                               (9 (ICONST_0))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object")
                                               (CLASS "java.lang.Object"))
                                       (STACK)
                                       NIL))
                             (10 (FRAME (LOCALS (CLASS "java.lang.Object")
                                                (CLASS "java.lang.Object"))
                                        (STACK INT)
                                        NIL)))))
     (METHOD
      "java.lang.Object"
      "toString" (PARAMETERS)
      (RETURNTYPE . "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (MAX_LOCAL . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                    NIL (CLASS "java.lang.Class"))))
        (11 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (17 (LDC 0))
        (19 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (22 (ALOAD_0))
        (23 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (26 (INVOKESTATIC (METHODCP "toHexString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (35 (ARETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "java.lang.Object" "notify" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "notifyAll" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "java.lang.Object"
             "wait" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (MAX_LOCAL . 0)
                   (CODE_LENGTH . 0)
                   (PARSEDCODE)
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "java.lang.Object"
      "wait" (PARAMETERS LONG INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (MAX_LOCAL . 4)
       (CODE_LENGTH . 62)
       (PARSEDCODE
            (0 (JVM::LLOAD_1))
            (1 (LCONST_0))
            (2 (LCMP))
            (3 (IFGE 16))
            (6 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (9 (DUP))
            (10 (LDC 1))
            (12 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (15 (ATHROW))
            (16 (ILOAD_3))
            (17 (IFLT 26))
            (20 (ILOAD_3))
            (21 (LDC 2))
            (23 (IF_ICMPLE 36))
            (26 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (29 (DUP))
            (30 (LDC 3))
            (32 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (35 (ATHROW))
            (36 (ILOAD_3))
            (37 (LDC 4))
            (39 (IF_ICMPGE 52))
            (42 (ILOAD_3))
            (43 (IFEQ 56))
            (46 (JVM::LLOAD_1))
            (47 (LCONST_0))
            (48 (LCMP))
            (49 (IFNE 56))
            (52 (JVM::LLOAD_1))
            (53 (LCONST_1))
            (54 (JVM::LADD))
            (55 (JVM::LSTORE_1))
            (56 (ALOAD_0))
            (57 (JVM::LLOAD_1))
            (58 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                         VOID)))
            (61 (RETURN))
            (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (36 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (52 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "java.lang.Object" "wait" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (MAX_LOCAL . 1)
            (CODE_LENGTH . 6)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (LCONST_0))
                 (2 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                             VOID)))
                 (5 (RETURN))
                 (ENDOFCODE 6))
            (EXCEPTIONS)
            (STACKMAP))))
    (INTERFACES)
    (STATIC-FIELDS)
    (JVM::STATUS . CLASS_READY)
    (JVM::ACCESS-FLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
    (JVM::INIT-THREAD . -1)
    (CLASS-REF . 6)))
  (ARRAY-CLASS-TABLE ((ARRAY "java.lang.String")
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      52)
                     ((ARRAY BYTE)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      28)
                     ((ARRAY BOOLEAN)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      27)
                     ((ARRAY LONG)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      26)
                     ((ARRAY DOUBLE)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      25)
                     ((ARRAY FLOAT)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      24)
                     ((ARRAY INT)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      23)
                     ((ARRAY SHORT)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      22)
                     ((ARRAY CHAR)
                      (ACCESSFLAGS *FINAL*
                                   *ABSTRACT* JVM::*ARRAY_CLASS* *PUBLIC*)
                      21)))
 (ENV
  (EXTERNAL-CLASS-TABLE
   (CLASS
    "com.sun.cldc.i18n.StreamReader"
    "java.io.Reader"
    (CONSTANT_POOL (STRING "mark() not supported"))
    (FIELDS (FIELD "in" (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Reader" NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.io.InputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Reader")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (PUTFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (5 (ALOAD_0))
             (6 (ARETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "ready" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "available"
                                         "java.io.InputStream" NIL INT)))
             (7 (IFLE 14))
             (10 (ICONST_1))
             (11 (GOTO 15))
             (14 (ICONST_0))
             (15 (IRETURN))
             (16 (ASTORE_1))
             (17 (ICONST_0))
             (18 (IRETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS (JVM::HANDLER 0 15 16 (CLASS "java.io.IOException")))
        (STACKMAP (14 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                     TOPX)
                             (STACK)
                             NIL))
                  (15 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                     TOPX)
                             (STACK INT)
                             NIL))
                  (16 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                     TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL)))))
     (METHOD
      "markSupported" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                         "java.io.InputStream" NIL BOOLEAN)))
             (7 (IRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 32)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                       (CLASS "java.io.InputStream"))))
            (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                        "java.io.InputStream" NIL BOOLEAN)))
            (7 (IFEQ 21))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
            (14 (ILOAD_1))
            (15 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                         VOID)))
            (18 (GOTO 31))
            (21 (NEW (CLASS "java.io.IOException")))
            (24 (DUP))
            (25 (LDC 0))
            (27 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (30 (ATHROW))
            (31 (RETURN))
            (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                    INT)
                            (STACK)
                            NIL))
                 (31 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.StreamReader")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "reset"
                                         "java.io.InputStream" NIL VOID)))
             (7 (RETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 13)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "close"
                                         "java.io.InputStream" NIL VOID)))
             (7 (ALOAD_0))
             (8 (ACONST_NULL))
             (9 (PUTFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                        (CLASS "java.io.InputStream"))))
             (12 (RETURN))
             (ENDOFCODE 13))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.StreamWriter"
    "java.io.Writer" (CONSTANT_POOL)
    (FIELDS (FIELD "out" (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Writer" NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (PUTFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
            (5 (ALOAD_0))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
            (4 (INVOKEVIRTUAL (METHODCP "flush"
                                        "java.io.OutputStream" NIL VOID)))
            (7 (RETURN))
            (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
            (4 (INVOKEVIRTUAL (METHODCP "close"
                                        "java.io.OutputStream" NIL VOID)))
            (7 (RETURN))
            (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "isLowerCase" (PARAMETERS CHAR)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (BIPUSH 97))
                               (3 (IF_ICMPLT 16))
                               (6 (ILOAD_0))
                               (7 (BIPUSH 122))
                               (9 (IF_ICMPGT 16))
                               (12 (ICONST_1))
                               (13 (GOTO 17))
                               (16 (ICONST_0))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (16 (FRAME (LOCALS INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD "isUpperCase" (PARAMETERS CHAR)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (BIPUSH 65))
                               (3 (IF_ICMPLT 16))
                               (6 (ILOAD_0))
                               (7 (BIPUSH 90))
                               (9 (IF_ICMPGT 16))
                               (12 (ICONST_1))
                               (13 (GOTO 17))
                               (16 (ICONST_0))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (16 (FRAME (LOCALS INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD
      "toLowerCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 15)
         (PARSEDCODE
              (0 (ILOAD_0))
              (1 (INVOKESTATIC
                      (METHODCP "isUpperCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
              (4 (IFEQ 13))
              (7 (ILOAD_0))
              (8 (BIPUSH 32))
              (10 (IADD))
              (11 (JVM::I2C))
              (12 (IRETURN))
              (13 (ILOAD_0))
              (14 (IRETURN))
              (ENDOFCODE 15))
         (EXCEPTIONS)
         (STACKMAP (13 (FRAME (LOCALS INT) (STACK) NIL)))))
     (METHOD
      "toUpperCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 15)
         (PARSEDCODE
              (0 (ILOAD_0))
              (1 (INVOKESTATIC
                      (METHODCP "isLowerCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
              (4 (IFEQ 13))
              (7 (ILOAD_0))
              (8 (BIPUSH 32))
              (10 (ISUB))
              (11 (JVM::I2C))
              (12 (IRETURN))
              (13 (ILOAD_0))
              (14 (IRETURN))
              (ENDOFCODE 15))
         (EXCEPTIONS)
         (STACKMAP (13 (FRAME (LOCALS INT) (STACK) NIL)))))
     (METHOD "isDigit" (PARAMETERS CHAR)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (BIPUSH 48))
                               (3 (IF_ICMPLT 16))
                               (6 (ILOAD_0))
                               (7 (BIPUSH 57))
                               (9 (IF_ICMPGT 16))
                               (12 (ICONST_1))
                               (13 (GOTO 17))
                               (16 (ICONST_0))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (16 (FRAME (LOCALS INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD
      "digit" (PARAMETERS CHAR INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 61)
        (PARSEDCODE
             (0 (ICONST_M1))
             (1 (ISTORE_2))
             (2 (ILOAD_1))
             (3 (ICONST_2))
             (4 (IF_ICMPLT 50))
             (7 (ILOAD_1))
             (8 (BIPUSH 36))
             (10 (IF_ICMPGT 50))
             (13 (ILOAD_0))
             (14 (INVOKESTATIC
                      (METHODCP "isDigit"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
             (17 (IFEQ 28))
             (20 (ILOAD_0))
             (21 (BIPUSH 48))
             (23 (ISUB))
             (24 (ISTORE_2))
             (25 (GOTO 50))
             (28 (ILOAD_0))
             (29 (INVOKESTATIC
                      (METHODCP "isUpperCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
             (32 (IFNE 42))
             (35 (ILOAD_0))
             (36 (INVOKESTATIC
                      (METHODCP "isLowerCase"
                                "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                                (CHAR)
                                BOOLEAN)))
             (39 (IFEQ 50))
             (42 (ILOAD_0))
             (43 (BIPUSH 31))
             (45 (JVM::IAND))
             (46 (BIPUSH 9))
             (48 (IADD))
             (49 (ISTORE_2))
             (50 (ILOAD_2))
             (51 (ILOAD_1))
             (52 (IF_ICMPGE 59))
             (55 (ILOAD_2))
             (56 (GOTO 60))
             (59 (ICONST_M1))
             (60 (IRETURN))
             (ENDOFCODE 61))
        (EXCEPTIONS)
        (STACKMAP (28 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (42 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (50 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (59 (FRAME (LOCALS INT INT INT)
                             (STACK)
                             NIL))
                  (60 (FRAME (LOCALS INT INT INT)
                             (STACK INT)
                             NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.Helper"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "Missing default encoding ")
                   (STRING "_Reader")
                   (STRING "com.sun.cldc.i18n.j2se.Default_Reader")
                   (STRING "Encoding ")
                   (STRING " not found")
                   (STRING "InstantiationException ")
                   (STRING "IllegalAccessException ")
                   (STRING "ClassCastException ")
                   (STRING "_Writer")
                   (STRING "com.sun.cldc.i18n.j2se.Default_Writer")
                   (STRING "IOException reading reader ")
                   (STRING "IOException writing writer ")
                   (STRING "US_ASCII")
                   (STRING "ISO8859_1")
                   (STRING "ISO_8859_1")
                   (STRING "_InternalEncodingName")
                   (STRING "microedition.encoding")
                   (STRING "microedition.configuration")
                   (STRING "com.sun.cldc.i18n.Helper.i18npath")
                   (STRING "com.sun.cldc.i18n.j2me"))
    (FIELDS (FIELD "defaultEncoding"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "defaultMEPath"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "j2me" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastReaderEncoding"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastReader"
                   (CLASS "com.sun.cldc.i18n.StreamReader")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastWriterEncoding"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "lastWriter"
                   (CLASS "com.sun.cldc.i18n.StreamWriter")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getStreamReader"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE CLASS "java.io.Reader")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 38)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (4 (INVOKESTATIC (METHODCP "getStreamReader"
                                      "com.sun.cldc.i18n.Helper"
                                      ((CLASS "java.io.InputStream")
                                       (CLASS "java.lang.String"))
                                      (CLASS "java.io.Reader"))))
           (7 (ARETURN))
           (8 (ASTORE_1))
           (9 (NEW (CLASS "java.lang.RuntimeException")))
           (12 (DUP))
           (13 (NEW (CLASS "java.lang.StringBuffer")))
           (16 (DUP))
           (17 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (20 (LDC 0))
           (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (25 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (34 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (37 (ATHROW))
           (ENDOFCODE 38))
       (EXCEPTIONS
            (JVM::HANDLER 0 7 8
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (8 (FRAME (LOCALS (CLASS "java.io.InputStream")
                              TOPX)
                      (STACK (CLASS "java.io.UnsupportedEncodingException"))
                      NIL)))))
     (METHOD
      "getStreamReader"
      (PARAMETERS (CLASS "java.io.InputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Reader")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNULL 8))
        (4 (ALOAD_1))
        (5 (IFNONNULL 16))
        (8 (NEW (CLASS "java.lang.NullPointerException")))
        (11 (DUP))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (15 (ATHROW))
        (16 (ALOAD_1))
        (17
          (INVOKESTATIC (METHODCP "getStreamReaderPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (20 (ASTORE_2))
        (21 (ALOAD_2))
        (22 (ALOAD_0))
        (23 (ALOAD_1))
        (24 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamReader"
                                     ((CLASS "java.io.InputStream")
                                      (CLASS "java.lang.String"))
                                     (CLASS "java.io.Reader"))))
        (27 (ARETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                   (CLASS "java.lang.String")
                                   TOPX)
                           (STACK)
                           NIL))
                 (16 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "getStreamReaderPrim"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "com.sun.cldc.i18n.StreamReader")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 201)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ALOAD_0))
        (13 (INVOKESTATIC (METHODCP "internalNameForEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (16 (ASTORE_0))
        (17 (GETSTATIC (JVM::FIELDCP "j2me"
                                     "com.sun.cldc.i18n.Helper" BOOLEAN)))
        (20 (IFEQ 57))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (GETSTATIC (JVM::FIELDCP "defaultMEPath"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (BIPUSH 46))
        (38 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (41 (ALOAD_0))
        (42 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (45 (LDC 1))
        (47 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (50 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (53 (ASTORE_1))
        (54 (GOTO 60))
        (57 (LDC 2))
        (59 (ASTORE_1))
        (60 (ALOAD_1))
        (61 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (64 (ASTORE_2))
        (65 (ALOAD_2))
        (66 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (69 (CHECKCAST (CLASS "com.sun.cldc.i18n.StreamReader")))
        (72 (ARETURN))
        (73 (ASTORE_1))
        (74 (NEW (CLASS "java.io.UnsupportedEncodingException")))
        (77 (DUP))
        (78 (NEW (CLASS "java.lang.StringBuffer")))
        (81 (DUP))
        (82 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (85 (LDC 3))
        (87 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (90 (ALOAD_0))
        (91 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (94 (LDC 4))
        (96 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (99 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (102 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UnsupportedEncodingException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (105 (ATHROW))
        (106 (ASTORE_2))
        (107 (NEW (CLASS "java.lang.RuntimeException")))
        (110 (DUP))
        (111 (NEW (CLASS "java.lang.StringBuffer")))
        (114 (DUP))
        (115 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (118 (LDC 5))
        (120 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (123 (ALOAD_2))
        (124 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (127 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (130 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (133 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (136 (ATHROW))
        (137 (ASTORE_3))
        (138 (NEW (CLASS "java.lang.RuntimeException")))
        (141 (DUP))
        (142 (NEW (CLASS "java.lang.StringBuffer")))
        (145 (DUP))
        (146 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (149 (LDC 6))
        (151 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (154 (ALOAD_3))
        (155 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (158 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (161 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (164 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (167 (ATHROW))
        (168 (ASTORE 4))
        (170 (NEW (CLASS "java.lang.RuntimeException")))
        (173 (DUP))
        (174 (NEW (CLASS "java.lang.StringBuffer")))
        (177 (DUP))
        (178 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (181 (LDC 7))
        (183 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (186 (ALOAD 4))
        (188 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (191 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (194 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (197 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (200 (ATHROW))
        (ENDOFCODE 201))
       (EXCEPTIONS (JVM::HANDLER 17 72 73
                                 (CLASS "java.lang.ClassNotFoundException"))
                   (JVM::HANDLER 17 72 106
                                 (CLASS "java.lang.InstantiationException"))
                   (JVM::HANDLER 17 72 137
                                 (CLASS "java.lang.IllegalAccessException"))
                   (JVM::HANDLER 17 72 168
                                 (CLASS "java.lang.ClassCastException")))
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (73 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (106 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.InstantiationException"))
                        NIL))
            (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.IllegalAccessException"))
                        NIL))
            (168 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.ClassCastException"))
                        NIL)))))
     (METHOD
      "getStreamWriter"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 38)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (4 (INVOKESTATIC (METHODCP "getStreamWriter"
                                      "com.sun.cldc.i18n.Helper"
                                      ((CLASS "java.io.OutputStream")
                                       (CLASS "java.lang.String"))
                                      (CLASS "java.io.Writer"))))
           (7 (ARETURN))
           (8 (ASTORE_1))
           (9 (NEW (CLASS "java.lang.RuntimeException")))
           (12 (DUP))
           (13 (NEW (CLASS "java.lang.StringBuffer")))
           (16 (DUP))
           (17 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (20 (LDC 0))
           (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (25 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (34 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (37 (ATHROW))
           (ENDOFCODE 38))
       (EXCEPTIONS
            (JVM::HANDLER 0 7 8
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (8 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                              TOPX)
                      (STACK (CLASS "java.io.UnsupportedEncodingException"))
                      NIL)))))
     (METHOD
      "getStreamWriter"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNULL 8))
        (4 (ALOAD_1))
        (5 (IFNONNULL 16))
        (8 (NEW (CLASS "java.lang.NullPointerException")))
        (11 (DUP))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (15 (ATHROW))
        (16 (ALOAD_1))
        (17
          (INVOKESTATIC (METHODCP "getStreamWriterPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (20 (ASTORE_2))
        (21 (ALOAD_2))
        (22 (ALOAD_0))
        (23 (ALOAD_1))
        (24 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamWriter"
                                     ((CLASS "java.io.OutputStream")
                                      (CLASS "java.lang.String"))
                                     (CLASS "java.io.Writer"))))
        (27 (ARETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                   (CLASS "java.lang.String")
                                   TOPX)
                           (STACK)
                           NIL))
                 (16 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "getStreamWriterPrim"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "com.sun.cldc.i18n.StreamWriter")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 201)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ALOAD_0))
        (13 (INVOKESTATIC (METHODCP "internalNameForEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (16 (ASTORE_0))
        (17 (GETSTATIC (JVM::FIELDCP "j2me"
                                     "com.sun.cldc.i18n.Helper" BOOLEAN)))
        (20 (IFEQ 57))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (GETSTATIC (JVM::FIELDCP "defaultMEPath"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (BIPUSH 46))
        (38 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (41 (ALOAD_0))
        (42 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (45 (LDC 8))
        (47 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (50 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (53 (ASTORE_1))
        (54 (GOTO 60))
        (57 (LDC 9))
        (59 (ASTORE_1))
        (60 (ALOAD_1))
        (61 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (64 (ASTORE_2))
        (65 (ALOAD_2))
        (66 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (69 (CHECKCAST (CLASS "com.sun.cldc.i18n.StreamWriter")))
        (72 (ARETURN))
        (73 (ASTORE_1))
        (74 (NEW (CLASS "java.io.UnsupportedEncodingException")))
        (77 (DUP))
        (78 (NEW (CLASS "java.lang.StringBuffer")))
        (81 (DUP))
        (82 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (85 (LDC 3))
        (87 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (90 (ALOAD_0))
        (91 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (94 (LDC 4))
        (96 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (99 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (102 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UnsupportedEncodingException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (105 (ATHROW))
        (106 (ASTORE_2))
        (107 (NEW (CLASS "java.lang.RuntimeException")))
        (110 (DUP))
        (111 (NEW (CLASS "java.lang.StringBuffer")))
        (114 (DUP))
        (115 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (118 (LDC 5))
        (120 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (123 (ALOAD_2))
        (124 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (127 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (130 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (133 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (136 (ATHROW))
        (137 (ASTORE_3))
        (138 (NEW (CLASS "java.lang.RuntimeException")))
        (141 (DUP))
        (142 (NEW (CLASS "java.lang.StringBuffer")))
        (145 (DUP))
        (146 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (149 (LDC 6))
        (151 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (154 (ALOAD_3))
        (155 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (158 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (161 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (164 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (167 (ATHROW))
        (168 (ASTORE 4))
        (170 (NEW (CLASS "java.lang.RuntimeException")))
        (173 (DUP))
        (174 (NEW (CLASS "java.lang.StringBuffer")))
        (177 (DUP))
        (178 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (181 (LDC 7))
        (183 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (186 (ALOAD 4))
        (188 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (191 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (194 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (197 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (200 (ATHROW))
        (ENDOFCODE 201))
       (EXCEPTIONS (JVM::HANDLER 17 72 73
                                 (CLASS "java.lang.ClassNotFoundException"))
                   (JVM::HANDLER 17 72 106
                                 (CLASS "java.lang.InstantiationException"))
                   (JVM::HANDLER 17 72 137
                                 (CLASS "java.lang.IllegalAccessException"))
                   (JVM::HANDLER 17 72 168
                                 (CLASS "java.lang.ClassCastException")))
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (73 (FRAME (LOCALS (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (106 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.InstantiationException"))
                        NIL))
            (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.IllegalAccessException"))
                        NIL))
            (168 (FRAME (LOCALS (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.ClassCastException"))
                        NIL)))))
     (METHOD
      "byteToCharArray"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 40)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ILOAD_1))
           (2 (ILOAD_2))
           (3 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (6 (INVOKESTATIC (METHODCP "byteToCharArray"
                                      "com.sun.cldc.i18n.Helper"
                                      ((ARRAY BYTE)
                                       INT INT (CLASS "java.lang.String"))
                                      (ARRAY CHAR))))
           (9 (ARETURN))
           (10 (ASTORE_3))
           (11 (NEW (CLASS "java.lang.RuntimeException")))
           (14 (DUP))
           (15 (NEW (CLASS "java.lang.StringBuffer")))
           (18 (DUP))
           (19 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (22 (LDC 0))
           (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (27 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (33 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (36 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (39 (ATHROW))
           (ENDOFCODE 40))
       (EXCEPTIONS
            (JVM::HANDLER 0 9 10
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (10 (FRAME (LOCALS (ARRAY BYTE) INT INT TOPX)
                       (STACK (CLASS "java.io.UnsupportedEncodingException"))
                       NIL)))))
     (METHOD
      "charToByteArray"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 40)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ILOAD_1))
           (2 (ILOAD_2))
           (3 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (6 (INVOKESTATIC (METHODCP "charToByteArray"
                                      "com.sun.cldc.i18n.Helper"
                                      ((ARRAY CHAR)
                                       INT INT (CLASS "java.lang.String"))
                                      (ARRAY BYTE))))
           (9 (ARETURN))
           (10 (ASTORE_3))
           (11 (NEW (CLASS "java.lang.RuntimeException")))
           (14 (DUP))
           (15 (NEW (CLASS "java.lang.StringBuffer")))
           (18 (DUP))
           (19 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.StringBuffer" NIL VOID)))
           (22 (LDC 0))
           (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (27 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
           (33 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                        NIL (CLASS "java.lang.String"))))
           (36 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (39 (ATHROW))
           (ENDOFCODE 40))
       (EXCEPTIONS
            (JVM::HANDLER 0 9 10
                          (CLASS "java.io.UnsupportedEncodingException")))
       (STACKMAP
            (10 (FRAME (LOCALS (ARRAY CHAR) INT INT TOPX)
                       (STACK (CLASS "java.io.UnsupportedEncodingException"))
                       NIL)))))
     (METHOD
      "byteToCharArray"
      (PARAMETERS (ARRAY BYTE)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 173)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 16))
        (4 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                   (CLASS "java.lang.String"))))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (15 (ATHROW))
        (16 (ILOAD_2))
        (17 (IFGE 32))
        (20 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (23 (DUP))
        (24 (ILOAD_2))
        (25 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (28 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (31 (ATHROW))
        (32 (ILOAD_1))
        (33 (ALOAD_0))
        (34 (ARRAYLENGTH))
        (35 (ILOAD_2))
        (36 (ISUB))
        (37 (IF_ICMPLE 54))
        (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (43 (DUP))
        (44 (ILOAD_1))
        (45 (ILOAD_2))
        (46 (IADD))
        (47 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (50 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (53 (ATHROW))
        (54 (GETSTATIC (JVM::FIELDCP "lastReaderEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (57 (IFNULL 70))
        (60 (GETSTATIC (JVM::FIELDCP "lastReaderEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (63 (ALOAD_3))
        (64 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (67 (IFNE 81))
        (70 (ALOAD_3))
        (71
          (INVOKESTATIC (METHODCP "getStreamReaderPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (74
         (PUTSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (77 (ALOAD_3))
        (78 (PUTSTATIC (JVM::FIELDCP "lastReaderEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (81
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (84 (ALOAD_0))
        (85 (ILOAD_1))
        (86 (ILOAD_2))
        (87 (INVOKEVIRTUAL (METHODCP "sizeOf"
                                     "com.sun.cldc.i18n.StreamReader"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (90 (ISTORE 4))
        (92 (ILOAD 4))
        (94 (NEWARRAY CHAR))
        (96 (ASTORE 5))
        (98
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (101 (NEW (CLASS "java.io.ByteArrayInputStream")))
        (104 (DUP))
        (105 (ALOAD_0))
        (106 (ILOAD_1))
        (107 (ILOAD_2))
        (108 (INVOKESPECIAL (METHODCP "<init>" "java.io.ByteArrayInputStream"
                                      ((ARRAY BYTE) INT INT)
                                      VOID)))
        (111 (ALOAD_3))
        (112 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamReader"
                                      ((CLASS "java.io.InputStream")
                                       (CLASS "java.lang.String"))
                                      (CLASS "java.io.Reader"))))
        (115 (POP))
        (116
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (119 (ALOAD 5))
        (121 (ICONST_0))
        (122 (ILOAD 4))
        (124 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
        (127 (POP))
        (128
         (GETSTATIC (JVM::FIELDCP "lastReader" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamReader"))))
        (131
            (INVOKEVIRTUAL (METHODCP "close" "com.sun.cldc.i18n.StreamReader"
                                     NIL VOID)))
        (134 (GOTO 170))
        (137 (ASTORE 6))
        (139 (NEW (CLASS "java.lang.RuntimeException")))
        (142 (DUP))
        (143 (NEW (CLASS "java.lang.StringBuffer")))
        (146 (DUP))
        (147 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (150 (LDC 10))
        (152 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (155 (ALOAD 6))
        (157 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (160 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (163 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (166 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (169 (ATHROW))
        (170 (ALOAD 5))
        (172 (ARETURN))
        (ENDOFCODE 173))
       (EXCEPTIONS (JVM::HANDLER 116
                                 134 137 (CLASS "java.io.IOException")))
       (STACKMAP (16 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (70 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (81 (FRAME (LOCALS (ARRAY BYTE)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (137 (FRAME (LOCALS (ARRAY BYTE)
                                     INT INT (CLASS "java.lang.String")
                                     INT (ARRAY CHAR)
                                     TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL))
                 (170 (FRAME (LOCALS (ARRAY BYTE)
                                     INT INT (CLASS "java.lang.String")
                                     INT (ARRAY CHAR)
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "charToByteArray"
      (PARAMETERS (ARRAY CHAR)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 129)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "lastWriterEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    (CLASS "java.lang.String"))))
        (3 (IFNULL 16))
        (6 (GETSTATIC (JVM::FIELDCP "lastWriterEncoding"
                                    "com.sun.cldc.i18n.Helper"
                                    (CLASS "java.lang.String"))))
        (9 (ALOAD_3))
        (10 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (13 (IFNE 27))
        (16 (ALOAD_3))
        (17
          (INVOKESTATIC (METHODCP "getStreamWriterPrim"
                                  "com.sun.cldc.i18n.Helper"
                                  ((CLASS "java.lang.String"))
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (20
         (PUTSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (23 (ALOAD_3))
        (24 (PUTSTATIC (JVM::FIELDCP "lastWriterEncoding"
                                     "com.sun.cldc.i18n.Helper"
                                     (CLASS "java.lang.String"))))
        (27
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (30 (ALOAD_0))
        (31 (ILOAD_1))
        (32 (ILOAD_2))
        (33 (INVOKEVIRTUAL (METHODCP "sizeOf"
                                     "com.sun.cldc.i18n.StreamWriter"
                                     ((ARRAY CHAR) INT INT)
                                     INT)))
        (36 (ISTORE 4))
        (38 (NEW (CLASS "java.io.ByteArrayOutputStream")))
        (41 (DUP))
        (42 (ILOAD 4))
        (44 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.ByteArrayOutputStream" (INT)
                                     VOID)))
        (47 (ASTORE 5))
        (49
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (52 (ALOAD 5))
        (54 (ALOAD_3))
        (55 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.i18n.StreamWriter"
                                     ((CLASS "java.io.OutputStream")
                                      (CLASS "java.lang.String"))
                                     (CLASS "java.io.Writer"))))
        (58 (POP))
        (59
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (62 (ALOAD_0))
        (63 (ILOAD_1))
        (64 (ILOAD_2))
        (65 (INVOKEVIRTUAL (METHODCP "write"
                                     "java.io.Writer" ((ARRAY CHAR) INT INT)
                                     VOID)))
        (68
         (GETSTATIC (JVM::FIELDCP "lastWriter" "com.sun.cldc.i18n.Helper"
                                  (CLASS "com.sun.cldc.i18n.StreamWriter"))))
        (71 (INVOKEVIRTUAL (METHODCP "close" "com.sun.cldc.i18n.StreamWriter"
                                     NIL VOID)))
        (74 (GOTO 110))
        (77 (ASTORE 6))
        (79 (NEW (CLASS "java.lang.RuntimeException")))
        (82 (DUP))
        (83 (NEW (CLASS "java.lang.StringBuffer")))
        (86 (DUP))
        (87 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (90 (LDC 11))
        (92 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (95 (ALOAD 6))
        (97 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                     NIL (CLASS "java.lang.String"))))
        (100 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (103 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (106 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (109 (ATHROW))
        (110 (ALOAD 5))
        (112 (INVOKEVIRTUAL (METHODCP "close" "java.io.ByteArrayOutputStream"
                                      NIL VOID)))
        (115 (GOTO 123))
        (118 (ASTORE 6))
        (120 (GOTO 123))
        (123 (ALOAD 5))
        (125 (INVOKEVIRTUAL (METHODCP "toByteArray"
                                      "java.io.ByteArrayOutputStream"
                                      NIL (ARRAY BYTE))))
        (128 (ARETURN))
        (ENDOFCODE 129))
       (EXCEPTIONS (JVM::HANDLER 59 74 77 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 110
                                 115 118 (CLASS "java.io.IOException")))
       (STACKMAP (16 (FRAME (LOCALS (ARRAY CHAR)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (ARRAY CHAR)
                                    INT INT (CLASS "java.lang.String")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (77 (FRAME (LOCALS (ARRAY CHAR)
                                    INT INT (CLASS "java.lang.String")
                                    INT
                                    (CLASS "java.io.ByteArrayOutputStream")
                                    TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (110 (FRAME (LOCALS (ARRAY CHAR)
                                     INT INT (CLASS "java.lang.String")
                                     INT
                                     (CLASS "java.io.ByteArrayOutputStream")
                                     TOPX)
                             (STACK)
                             NIL))
                 (118 (FRAME (LOCALS (ARRAY CHAR)
                                     INT INT (CLASS "java.lang.String")
                                     INT
                                     (CLASS "java.io.ByteArrayOutputStream")
                                     TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL))
                 (123 (FRAME (LOCALS (ARRAY CHAR)
                                     INT INT (CLASS "java.lang.String")
                                     INT
                                     (CLASS "java.io.ByteArrayOutputStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "internalNameForEncoding"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 60)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESTATIC (METHODCP "normalizeEncodingName"
                                       "com.sun.cldc.i18n.Helper"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
            (4 (ASTORE_1))
            (5 (ALOAD_1))
            (6 (LDC 12))
            (8 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                        ((CLASS "java.lang.Object"))
                                        BOOLEAN)))
            (11 (IFEQ 17))
            (14 (LDC 13))
            (16 (ARETURN))
            (17 (ALOAD_1))
            (18 (LDC 14))
            (20 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (23 (IFEQ 29))
            (26 (LDC 13))
            (28 (ARETURN))
            (29 (NEW (CLASS "java.lang.StringBuffer")))
            (32 (DUP))
            (33 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (36 (ALOAD_1))
            (37 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (40 (LDC 15))
            (42 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (45 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (48 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (51 (ASTORE_2))
            (52 (ALOAD_2))
            (53 (IFNULL 58))
            (56 (ALOAD_2))
            (57 (ARETURN))
            (58 (ALOAD_1))
            (59 (ARETURN))
            (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    TOPX)
                            (STACK)
                            NIL))
                 (58 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD
      "normalizeEncodingName"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
         (0 (NEW (CLASS "java.lang.StringBuffer")))
         (3 (DUP))
         (4 (ALOAD_0))
         (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
         (8 (ASTORE_1))
         (9 (ICONST_0))
         (10 (ISTORE_3))
         (11 (GOTO 54))
         (14 (ALOAD_1))
         (15 (ILOAD_3))
         (16 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.StringBuffer" (INT)
                                      CHAR)))
         (19 (ISTORE_2))
         (20 (ILOAD_2))
         (21 (BIPUSH 45))
         (23 (IF_ICMPEQ 32))
         (26 (ILOAD_2))
         (27 (BIPUSH 58))
         (29 (IF_ICMPNE 42))
         (32 (ALOAD_1))
         (33 (ILOAD_3))
         (34 (BIPUSH 95))
         (36 (INVOKEVIRTUAL (METHODCP "setCharAt"
                                      "java.lang.StringBuffer" (INT CHAR)
                                      VOID)))
         (39 (GOTO 51))
         (42 (ALOAD_1))
         (43 (ILOAD_3))
         (44 (ILOAD_2))
         (45 (INVOKESTATIC (METHODCP "toUpperCase"
                                     "java.lang.Character" (CHAR)
                                     CHAR)))
         (48 (INVOKEVIRTUAL (METHODCP "setCharAt"
                                      "java.lang.StringBuffer" (INT CHAR)
                                      VOID)))
         (51 (IINC 3 1))
         (54 (ILOAD_3))
         (55 (ALOAD_1))
         (56 (INVOKEVIRTUAL (METHODCP "length"
                                      "java.lang.StringBuffer" NIL INT)))
         (59 (IF_ICMPLT 14))
         (62 (ALOAD_1))
         (63 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (66 (ARETURN))
         (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX INT)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (42 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 55)
       (PARSEDCODE
           (0 (ICONST_0))
           (1 (PUTSTATIC (JVM::FIELDCP "j2me"
                                       "com.sun.cldc.i18n.Helper" BOOLEAN)))
           (4 (LDC 16))
           (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.String"))))
           (9 (PUTSTATIC (JVM::FIELDCP "defaultEncoding"
                                       "com.sun.cldc.i18n.Helper"
                                       (CLASS "java.lang.String"))))
           (12 (GETSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (15 (IFNONNULL 23))
           (18 (LDC 13))
           (20 (PUTSTATIC (JVM::FIELDCP "defaultEncoding"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (23 (LDC 17))
           (25 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
           (28 (IFNULL 35))
           (31 (ICONST_1))
           (32 (PUTSTATIC (JVM::FIELDCP "j2me"
                                        "com.sun.cldc.i18n.Helper" BOOLEAN)))
           (35 (LDC 18))
           (37 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
           (40 (PUTSTATIC (JVM::FIELDCP "defaultMEPath"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (43 (GETSTATIC (JVM::FIELDCP "defaultMEPath"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (46 (IFNONNULL 54))
           (49 (LDC 19))
           (51 (PUTSTATIC (JVM::FIELDCP "defaultMEPath"
                                        "com.sun.cldc.i18n.Helper"
                                        (CLASS "java.lang.String"))))
           (54 (RETURN))
           (ENDOFCODE 55))
       (EXCEPTIONS)
       (STACKMAP (23 (FRAME (LOCALS) (STACK) NIL))
                 (35 (FRAME (LOCALS) (STACK) NIL))
                 (54 (FRAME (LOCALS) (STACK) NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.j2me.ISO8859_1_Reader"
    "com.sun.cldc.i18n.StreamReader"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.i18n.StreamReader"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "in" "com.sun.cldc.i18n.StreamReader"
                                     (CLASS "java.io.InputStream"))))
          (4 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
          (7 (IRETURN))
          (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 50)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE 4))
        (3 (GOTO 42))
        (6 (ALOAD_0))
        (7 (INVOKEVIRTUAL (METHODCP "read"
                                    "com.sun.cldc.i18n.j2me.ISO8859_1_Reader"
                                    NIL INT)))
        (10 (ISTORE 5))
        (12 (ILOAD 5))
        (14 (ICONST_M1))
        (15 (IF_ICMPNE 30))
        (18 (ILOAD 4))
        (20 (IFNE 27))
        (23 (ICONST_M1))
        (24 (GOTO 29))
        (27 (ILOAD 4))
        (29 (IRETURN))
        (30 (ALOAD_1))
        (31 (ILOAD_2))
        (32 (IINC 2 1))
        (35 (ILOAD 5))
        (37 (JVM::I2C))
        (38 (CASTORE))
        (39 (IINC 4 1))
        (42 (ILOAD 4))
        (44 (ILOAD_3))
        (45 (IF_ICMPLT 6))
        (48 (ILOAD_3))
        (49 (IRETURN))
        (ENDOFCODE 50))
       (EXCEPTIONS)
       (STACKMAP
         (6 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                           (ARRAY CHAR)
                           INT INT INT TOPX)
                   (STACK)
                   NIL))
         (27 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT INT)
                    (STACK)
                    NIL))
         (29 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT INT)
                    (STACK INT)
                    NIL))
         (30 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT INT)
                    (STACK)
                    NIL))
         (42 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Reader")
                            (ARRAY CHAR)
                            INT INT INT TOPX)
                    (STACK)
                    NIL)))))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ILOAD_3))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.j2me.ISO8859_1_Writer"
    "com.sun.cldc.i18n.StreamWriter"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.i18n.StreamWriter"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ILOAD_1))
           (1 (JVM::SIPUSH 255))
           (4 (IF_ICMPLE 10))
           (7 (BIPUSH 63))
           (9 (ISTORE_1))
           (10 (ALOAD_0))
           (11 (GETFIELD (JVM::FIELDCP "out" "com.sun.cldc.i18n.StreamWriter"
                                       (CLASS "java.io.OutputStream"))))
           (14 (ILOAD_1))
           (15 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                        VOID)))
           (18 (RETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
         (10 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                            INT)
                    (STACK)
                    NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 22)
       (PARSEDCODE
        (0 (GOTO 13))
        (3 (ALOAD_0))
        (4 (ALOAD_1))
        (5 (ILOAD_2))
        (6 (IINC 2 1))
        (9 (CALOAD))
        (10
           (INVOKEVIRTUAL (METHODCP "write"
                                    "com.sun.cldc.i18n.j2me.ISO8859_1_Writer"
                                    (INT)
                                    VOID)))
        (13 (ILOAD_3))
        (14 (DUP))
        (15 (ICONST_1))
        (16 (ISUB))
        (17 (ISTORE_3))
        (18 (IFGT 3))
        (21 (RETURN))
        (ENDOFCODE 22))
       (EXCEPTIONS)
       (STACKMAP
         (3 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                           (ARRAY CHAR)
                           INT INT)
                   (STACK)
                   NIL))
         (13 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                            (ARRAY CHAR)
                            INT INT)
                    (STACK)
                    NIL)))))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE 4))
        (3 (GOTO 21))
        (6 (ALOAD_0))
        (7 (ALOAD_1))
        (8 (ILOAD_2))
        (9 (ILOAD 4))
        (11 (IADD))
        (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (15
           (INVOKEVIRTUAL (METHODCP "write"
                                    "com.sun.cldc.i18n.j2me.ISO8859_1_Writer"
                                    (INT)
                                    VOID)))
        (18 (IINC 4 1))
        (21 (ILOAD 4))
        (23 (ILOAD_3))
        (24 (IF_ICMPLT 6))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
         (6 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                           (CLASS "java.lang.String")
                           INT INT INT)
                   (STACK)
                   NIL))
         (21 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2me.ISO8859_1_Writer")
                            (CLASS "java.lang.String")
                            INT INT INT)
                    (STACK)
                    NIL)))))
     (METHOD "sizeOf"
             (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ILOAD_3))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.i18n.j2se.Default_Writer"
    "com.sun.cldc.i18n.StreamWriter"
    (CONSTANT_POOL (STRING "Illegal call to J2SE_Writer::write")
                   (STRING "Illegal call to J2SE_Writer::sizeOf"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.i18n.StreamWriter"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.Writer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 23)
       (PARSEDCODE
           (0 (ALOAD_2))
           (1 (IFNONNULL 13))
           (4 (NEW (CLASS "java.io.OutputStreamWriter")))
           (7 (DUP))
           (8 (ALOAD_1))
           (9 (INVOKESPECIAL (METHODCP "<init>" "java.io.OutputStreamWriter"
                                       ((CLASS "java.io.OutputStream"))
                                       VOID)))
           (12 (ARETURN))
           (13 (NEW (CLASS "java.io.OutputStreamWriter")))
           (16 (DUP))
           (17 (ALOAD_1))
           (18 (ALOAD_2))
           (19 (INVOKESPECIAL (METHODCP "<init>" "java.io.OutputStreamWriter"
                                        ((CLASS "java.io.OutputStream")
                                         (CLASS "java.lang.String"))
                                        VOID)))
           (22 (ARETURN))
           (ENDOFCODE 23))
       (EXCEPTIONS)
       (STACKMAP
           (13 (FRAME (LOCALS (CLASS "com.sun.cldc.i18n.j2se.Default_Writer")
                              (CLASS "java.io.OutputStream")
                              (CLASS "java.lang.String"))
                      (STACK)
                      NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "sizeOf"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.DateParser"
    "java.lang.Object"
    (CONSTANT_POOL (INT 1721426)
                   (STRING "Jan")
                   (STRING "Feb")
                   (STRING "Mar")
                   (STRING "Apr")
                   (STRING "May")
                   (STRING "Jun")
                   (STRING "Jul")
                   (STRING "Aug")
                   (STRING "Sep")
                   (STRING "Oct")
                   (STRING "Nov")
                   (STRING "Dec")
                   (STRING "Mon")
                   (STRING "Tue")
                   (STRING "Wed")
                   (STRING "Thu")
                   (STRING "Fri")
                   (STRING "Sat")
                   (STRING "Sun")
                   (LONG 365)
                   (LONG 4)
                   (LONG 1721423)
                   (LONG 400)
                   (LONG 100)
                   (LONG 2)
                   (LONG 2440588)
                   (INT 3600000)
                   (STRING "am")
                   (STRING "pm")
                   (STRING "monday")
                   (STRING "tuesday")
                   (STRING "wednesday")
                   (STRING "thursday")
                   (STRING "friday")
                   (STRING "saturday")
                   (STRING "sunday")
                   (STRING "january")
                   (STRING "february")
                   (STRING "march")
                   (STRING "april")
                   (STRING "may")
                   (STRING "june")
                   (STRING "july")
                   (STRING "august")
                   (STRING "september")
                   (STRING "october")
                   (STRING "november")
                   (STRING "december")
                   (STRING "gmt")
                   (STRING "ut")
                   (STRING "utc")
                   (STRING "est")
                   (STRING "edt")
                   (STRING "cst")
                   (STRING "cdt")
                   (STRING "mst")
                   (STRING "mdt")
                   (STRING "pst")
                   (STRING "pdt")
                   (STRING "GMT")
                   (STRING "UT")
                   (STRING "UTC")
                   (STRING "PST")
                   (STRING "PDT")
                   (STRING "JST"))
    (FIELDS (FIELD "year"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "month"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "day"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "hour"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "minute"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "second"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "milli"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "tzoffset"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "local_tz" INT
                   (ACCESSFLAGS *CLASS* *PROTECTED* *STATIC*)
                   -1)
            (FIELD "timezones"
                   (CLASS "java.util.Hashtable")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "days_in_month" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "month_shorts"
                   (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "weekday_shorts"
                   (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "julianDayOffset" LONG
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "millisPerHour" INT
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "millisPerDay" INT
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "JAN_1_1_JULIAN_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "wtb" (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "ttb" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "LEAP_NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS INT INT INT INT INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 329)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (BIPUSH 12))
          (7 (NEWARRAY INT))
          (9 (DUP))
          (10 (ICONST_0))
          (11 (BIPUSH 31))
          (13 (IASTORE))
          (14 (DUP))
          (15 (ICONST_1))
          (16 (BIPUSH 28))
          (18 (IASTORE))
          (19 (DUP))
          (20 (ICONST_2))
          (21 (BIPUSH 31))
          (23 (IASTORE))
          (24 (DUP))
          (25 (ICONST_3))
          (26 (BIPUSH 30))
          (28 (IASTORE))
          (29 (DUP))
          (30 (ICONST_4))
          (31 (BIPUSH 31))
          (33 (IASTORE))
          (34 (DUP))
          (35 (ICONST_5))
          (36 (BIPUSH 30))
          (38 (IASTORE))
          (39 (DUP))
          (40 (BIPUSH 6))
          (42 (BIPUSH 31))
          (44 (IASTORE))
          (45 (DUP))
          (46 (BIPUSH 7))
          (48 (BIPUSH 31))
          (50 (IASTORE))
          (51 (DUP))
          (52 (BIPUSH 8))
          (54 (BIPUSH 30))
          (56 (IASTORE))
          (57 (DUP))
          (58 (BIPUSH 9))
          (60 (BIPUSH 31))
          (62 (IASTORE))
          (63 (DUP))
          (64 (BIPUSH 10))
          (66 (BIPUSH 30))
          (68 (IASTORE))
          (69 (DUP))
          (70 (BIPUSH 11))
          (72 (BIPUSH 31))
          (74 (IASTORE))
          (75 (PUTFIELD (JVM::FIELDCP "days_in_month"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
          (78 (ALOAD_0))
          (79 (BIPUSH 12))
          (81 (ANEWARRAY (CLASS "java.lang.String")))
          (84 (DUP))
          (85 (ICONST_0))
          (86 (LDC 1))
          (88 (AASTORE))
          (89 (DUP))
          (90 (ICONST_1))
          (91 (LDC 2))
          (93 (AASTORE))
          (94 (DUP))
          (95 (ICONST_2))
          (96 (LDC 3))
          (98 (AASTORE))
          (99 (DUP))
          (100 (ICONST_3))
          (101 (LDC 4))
          (103 (AASTORE))
          (104 (DUP))
          (105 (ICONST_4))
          (106 (LDC 5))
          (108 (AASTORE))
          (109 (DUP))
          (110 (ICONST_5))
          (111 (LDC 6))
          (113 (AASTORE))
          (114 (DUP))
          (115 (BIPUSH 6))
          (117 (LDC 7))
          (119 (AASTORE))
          (120 (DUP))
          (121 (BIPUSH 7))
          (123 (LDC 8))
          (125 (AASTORE))
          (126 (DUP))
          (127 (BIPUSH 8))
          (129 (LDC 9))
          (131 (AASTORE))
          (132 (DUP))
          (133 (BIPUSH 9))
          (135 (LDC 10))
          (137 (AASTORE))
          (138 (DUP))
          (139 (BIPUSH 10))
          (141 (LDC 11))
          (143 (AASTORE))
          (144 (DUP))
          (145 (BIPUSH 11))
          (147 (LDC 12))
          (149 (AASTORE))
          (150 (PUTFIELD (JVM::FIELDCP "month_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (153 (ALOAD_0))
          (154 (BIPUSH 7))
          (156 (ANEWARRAY (CLASS "java.lang.String")))
          (159 (DUP))
          (160 (ICONST_0))
          (161 (LDC 13))
          (163 (AASTORE))
          (164 (DUP))
          (165 (ICONST_1))
          (166 (LDC 14))
          (168 (AASTORE))
          (169 (DUP))
          (170 (ICONST_2))
          (171 (LDC 15))
          (173 (AASTORE))
          (174 (DUP))
          (175 (ICONST_3))
          (176 (LDC 16))
          (178 (AASTORE))
          (179 (DUP))
          (180 (ICONST_4))
          (181 (LDC 17))
          (183 (AASTORE))
          (184 (DUP))
          (185 (ICONST_5))
          (186 (LDC 18))
          (188 (AASTORE))
          (189 (DUP))
          (190 (BIPUSH 6))
          (192 (LDC 19))
          (194 (AASTORE))
          (195 (PUTFIELD (JVM::FIELDCP "weekday_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (198 (ILOAD_1))
          (199 (JVM::SIPUSH 1583))
          (202 (IF_ICMPLT 282))
          (205 (ILOAD_2))
          (206 (IFLT 282))
          (209 (ILOAD_2))
          (210 (BIPUSH 11))
          (212 (IF_ICMPGT 282))
          (215 (ILOAD_3))
          (216 (IFLT 282))
          (219 (ILOAD_3))
          (220 (ALOAD_0))
          (221 (GETFIELD (JVM::FIELDCP "days_in_month"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY INT))))
          (224 (ILOAD_2))
          (225 (IALOAD))
          (226 (IF_ICMPLE 246))
          (229 (ILOAD_2))
          (230 (ICONST_1))
          (231 (IF_ICMPNE 282))
          (234 (ILOAD_3))
          (235 (BIPUSH 29))
          (237 (IF_ICMPNE 282))
          (240 (ILOAD_1))
          (241 (ICONST_4))
          (242 (IREM))
          (243 (IFNE 282))
          (246 (ILOAD 4))
          (248 (IFLT 282))
          (251 (ILOAD 4))
          (253 (BIPUSH 23))
          (255 (IF_ICMPGT 282))
          (258 (ILOAD 5))
          (260 (IFLT 282))
          (263 (ILOAD 5))
          (265 (BIPUSH 59))
          (267 (IF_ICMPGT 282))
          (270 (ILOAD 6))
          (272 (IFLT 282))
          (275 (ILOAD 6))
          (277 (BIPUSH 59))
          (279 (IF_ICMPLE 290))
          (282 (NEW (CLASS "java.lang.IllegalArgumentException")))
          (285 (DUP))
          (286 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IllegalArgumentException"
                                        NIL VOID)))
          (289 (ATHROW))
          (290 (ALOAD_0))
          (291 (ILOAD_1))
          (292 (PUTFIELD (JVM::FIELDCP "year"
                                       "com.sun.cldc.io.DateParser" INT)))
          (295 (ALOAD_0))
          (296 (ILOAD_2))
          (297 (PUTFIELD (JVM::FIELDCP "month"
                                       "com.sun.cldc.io.DateParser" INT)))
          (300 (ALOAD_0))
          (301 (ILOAD_3))
          (302 (PUTFIELD (JVM::FIELDCP "day"
                                       "com.sun.cldc.io.DateParser" INT)))
          (305 (ALOAD_0))
          (306 (ILOAD 4))
          (308 (PUTFIELD (JVM::FIELDCP "hour"
                                       "com.sun.cldc.io.DateParser" INT)))
          (311 (ALOAD_0))
          (312 (ILOAD 5))
          (314 (PUTFIELD (JVM::FIELDCP "minute"
                                       "com.sun.cldc.io.DateParser" INT)))
          (317 (ALOAD_0))
          (318 (ILOAD 6))
          (320 (PUTFIELD (JVM::FIELDCP "second"
                                       "com.sun.cldc.io.DateParser" INT)))
          (323 (ALOAD_0))
          (324 (ICONST_0))
          (325 (PUTFIELD (JVM::FIELDCP "milli"
                                       "com.sun.cldc.io.DateParser" INT)))
          (328 (RETURN))
          (ENDOFCODE 329))
       (EXCEPTIONS)
       (STACKMAP (246 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (282 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (290 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 204)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (BIPUSH 12))
          (7 (NEWARRAY INT))
          (9 (DUP))
          (10 (ICONST_0))
          (11 (BIPUSH 31))
          (13 (IASTORE))
          (14 (DUP))
          (15 (ICONST_1))
          (16 (BIPUSH 28))
          (18 (IASTORE))
          (19 (DUP))
          (20 (ICONST_2))
          (21 (BIPUSH 31))
          (23 (IASTORE))
          (24 (DUP))
          (25 (ICONST_3))
          (26 (BIPUSH 30))
          (28 (IASTORE))
          (29 (DUP))
          (30 (ICONST_4))
          (31 (BIPUSH 31))
          (33 (IASTORE))
          (34 (DUP))
          (35 (ICONST_5))
          (36 (BIPUSH 30))
          (38 (IASTORE))
          (39 (DUP))
          (40 (BIPUSH 6))
          (42 (BIPUSH 31))
          (44 (IASTORE))
          (45 (DUP))
          (46 (BIPUSH 7))
          (48 (BIPUSH 31))
          (50 (IASTORE))
          (51 (DUP))
          (52 (BIPUSH 8))
          (54 (BIPUSH 30))
          (56 (IASTORE))
          (57 (DUP))
          (58 (BIPUSH 9))
          (60 (BIPUSH 31))
          (62 (IASTORE))
          (63 (DUP))
          (64 (BIPUSH 10))
          (66 (BIPUSH 30))
          (68 (IASTORE))
          (69 (DUP))
          (70 (BIPUSH 11))
          (72 (BIPUSH 31))
          (74 (IASTORE))
          (75 (PUTFIELD (JVM::FIELDCP "days_in_month"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
          (78 (ALOAD_0))
          (79 (BIPUSH 12))
          (81 (ANEWARRAY (CLASS "java.lang.String")))
          (84 (DUP))
          (85 (ICONST_0))
          (86 (LDC 1))
          (88 (AASTORE))
          (89 (DUP))
          (90 (ICONST_1))
          (91 (LDC 2))
          (93 (AASTORE))
          (94 (DUP))
          (95 (ICONST_2))
          (96 (LDC 3))
          (98 (AASTORE))
          (99 (DUP))
          (100 (ICONST_3))
          (101 (LDC 4))
          (103 (AASTORE))
          (104 (DUP))
          (105 (ICONST_4))
          (106 (LDC 5))
          (108 (AASTORE))
          (109 (DUP))
          (110 (ICONST_5))
          (111 (LDC 6))
          (113 (AASTORE))
          (114 (DUP))
          (115 (BIPUSH 6))
          (117 (LDC 7))
          (119 (AASTORE))
          (120 (DUP))
          (121 (BIPUSH 7))
          (123 (LDC 8))
          (125 (AASTORE))
          (126 (DUP))
          (127 (BIPUSH 8))
          (129 (LDC 9))
          (131 (AASTORE))
          (132 (DUP))
          (133 (BIPUSH 9))
          (135 (LDC 10))
          (137 (AASTORE))
          (138 (DUP))
          (139 (BIPUSH 10))
          (141 (LDC 11))
          (143 (AASTORE))
          (144 (DUP))
          (145 (BIPUSH 11))
          (147 (LDC 12))
          (149 (AASTORE))
          (150 (PUTFIELD (JVM::FIELDCP "month_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (153 (ALOAD_0))
          (154 (BIPUSH 7))
          (156 (ANEWARRAY (CLASS "java.lang.String")))
          (159 (DUP))
          (160 (ICONST_0))
          (161 (LDC 13))
          (163 (AASTORE))
          (164 (DUP))
          (165 (ICONST_1))
          (166 (LDC 14))
          (168 (AASTORE))
          (169 (DUP))
          (170 (ICONST_2))
          (171 (LDC 15))
          (173 (AASTORE))
          (174 (DUP))
          (175 (ICONST_3))
          (176 (LDC 16))
          (178 (AASTORE))
          (179 (DUP))
          (180 (ICONST_4))
          (181 (LDC 17))
          (183 (AASTORE))
          (184 (DUP))
          (185 (ICONST_5))
          (186 (LDC 18))
          (188 (AASTORE))
          (189 (DUP))
          (190 (BIPUSH 6))
          (192 (LDC 19))
          (194 (AASTORE))
          (195 (PUTFIELD (JVM::FIELDCP "weekday_shorts"
                                       "com.sun.cldc.io.DateParser"
                                       (ARRAY (CLASS "java.lang.String")))))
          (198 (ALOAD_0))
          (199 (ALOAD_1))
          (200 (INVOKESPECIAL (METHODCP "internalParse"
                                        "com.sun.cldc.io.DateParser"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
          (203 (RETURN))
          (ENDOFCODE 204))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setTimeZone"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                    (CLASS "java.util.Hashtable"))))
        (3 (ALOAD_0))
        (4 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                    ((CLASS "java.lang.Object"))
                                    (CLASS "java.lang.Object"))))
        (7 (IFNONNULL 11))
        (10 (RETURN))
        (11 (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (14 (ALOAD_0))
        (15 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                     ((CLASS "java.lang.Object"))
                                     (CLASS "java.lang.Object"))))
        (18 (CHECKCAST (CLASS "java.lang.Integer")))
        (21 (INVOKEVIRTUAL (METHODCP "intValue"
                                     "java.lang.Integer" NIL INT)))
        (24 (PUTSTATIC (JVM::FIELDCP "local_tz"
                                     "com.sun.cldc.io.DateParser" INT)))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD
      "parse"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
         (0 (NEW (CLASS "com.sun.cldc.io.DateParser")))
         (3 (DUP))
         (4 (ALOAD_0))
         (5 (INVOKESPECIAL (METHODCP "<init>" "com.sun.cldc.io.DateParser"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
         (8 (INVOKEVIRTUAL (METHODCP "getTime"
                                     "com.sun.cldc.io.DateParser" NIL LONG)))
         (11 (JVM::LRETURN))
         (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getYear" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "year"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getMonth" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "month"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getDay" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "day"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getHour" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "hour"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getMinute" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "minute"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getSecond" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "second"
                                          "com.sun.cldc.io.DateParser" INT)))
               (4 (IRETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getTime" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 6)
        (CODE_LENGTH . 96)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "year"
                                        "com.sun.cldc.io.DateParser" INT)))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "month"
                                        "com.sun.cldc.io.DateParser" INT)))
             (9 (ALOAD_0))
             (10 (GETFIELD (JVM::FIELDCP "day"
                                         "com.sun.cldc.io.DateParser" INT)))
             (13 (INVOKESPECIAL (METHODCP "computeJulianDay"
                                          "com.sun.cldc.io.DateParser"
                                          (INT INT INT)
                                          LONG)))
             (16 (JVM::LSTORE_1))
             (17 (ALOAD_0))
             (18 (JVM::LLOAD_1))
             (19 (INVOKESPECIAL (METHODCP "julianDayToMillis"
                                          "com.sun.cldc.io.DateParser" (LONG)
                                          LONG)))
             (22 (JVM::LSTORE_3))
             (23 (ICONST_0))
             (24 (ISTORE 5))
             (26 (ILOAD 5))
             (28 (ALOAD_0))
             (29 (GETFIELD (JVM::FIELDCP "hour"
                                         "com.sun.cldc.io.DateParser" INT)))
             (32 (IADD))
             (33 (ISTORE 5))
             (35 (ILOAD 5))
             (37 (BIPUSH 60))
             (39 (IMUL))
             (40 (ISTORE 5))
             (42 (ILOAD 5))
             (44 (ALOAD_0))
             (45 (GETFIELD (JVM::FIELDCP "minute"
                                         "com.sun.cldc.io.DateParser" INT)))
             (48 (IADD))
             (49 (ISTORE 5))
             (51 (ILOAD 5))
             (53 (BIPUSH 60))
             (55 (IMUL))
             (56 (ISTORE 5))
             (58 (ILOAD 5))
             (60 (ALOAD_0))
             (61 (GETFIELD (JVM::FIELDCP "second"
                                         "com.sun.cldc.io.DateParser" INT)))
             (64 (IADD))
             (65 (ISTORE 5))
             (67 (ILOAD 5))
             (69 (JVM::SIPUSH 1000))
             (72 (IMUL))
             (73 (ISTORE 5))
             (75 (ILOAD 5))
             (77 (ALOAD_0))
             (78 (GETFIELD (JVM::FIELDCP "milli"
                                         "com.sun.cldc.io.DateParser" INT)))
             (81 (IADD))
             (82 (ISTORE 5))
             (84 (JVM::LLOAD_3))
             (85 (ILOAD 5))
             (87 (JVM::I2L))
             (88 (JVM::LADD))
             (89 (ALOAD_0))
             (90 (GETFIELD (JVM::FIELDCP "tzoffset"
                                         "com.sun.cldc.io.DateParser" INT)))
             (93 (JVM::I2L))
             (94 (JVM::LSUB))
             (95 (JVM::LRETURN))
             (ENDOFCODE 96))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "computeJulianDay"
      (PARAMETERS INT INT INT)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 8)
       (JVM::MAX_LOCALS . 10)
       (CODE_LENGTH . 134)
       (PARSEDCODE
        (0 (LCONST_0))
        (1 (JVM::LSTORE 5))
        (3 (ILOAD_1))
        (4 (ICONST_4))
        (5 (IREM))
        (6 (IFNE 13))
        (9 (ICONST_1))
        (10 (GOTO 14))
        (13 (ICONST_0))
        (14 (ISTORE 7))
        (16 (ILOAD_1))
        (17 (ICONST_1))
        (18 (ISUB))
        (19 (ISTORE 4))
        (21 (JVM::LDC2_W 20))
        (24 (ILOAD 4))
        (26 (JVM::I2L))
        (27 (JVM::LMUL))
        (28 (ILOAD 4))
        (30 (JVM::I2L))
        (31 (JVM::LDC2_W 21))
        (34 (INVOKESTATIC (METHODCP "floorDivide"
                                    "com.sun.cldc.io.DateParser" (LONG LONG)
                                    LONG)))
        (37 (JVM::LADD))
        (38 (JVM::LDC2_W 22))
        (41 (JVM::LADD))
        (42 (JVM::LSTORE 8))
        (44 (ILOAD 7))
        (46 (IFEQ 68))
        (49 (ILOAD_1))
        (50 (BIPUSH 100))
        (52 (IREM))
        (53 (IFNE 64))
        (56 (ILOAD_1))
        (57 (JVM::SIPUSH 400))
        (60 (IREM))
        (61 (IFNE 68))
        (64 (ICONST_1))
        (65 (GOTO 69))
        (68 (ICONST_0))
        (69 (ISTORE 7))
        (71 (JVM::LLOAD 8))
        (73 (ILOAD 4))
        (75 (JVM::I2L))
        (76 (JVM::LDC2_W 23))
        (79 (INVOKESTATIC (METHODCP "floorDivide"
                                    "com.sun.cldc.io.DateParser" (LONG LONG)
                                    LONG)))
        (82 (ILOAD 4))
        (84 (JVM::I2L))
        (85 (JVM::LDC2_W 24))
        (88 (INVOKESTATIC (METHODCP "floorDivide"
                                    "com.sun.cldc.io.DateParser" (LONG LONG)
                                    LONG)))
        (91 (JVM::LSUB))
        (92 (JVM::LDC2_W 25))
        (95 (JVM::LADD))
        (96 (JVM::LADD))
        (97 (JVM::LSTORE 8))
        (99 (JVM::LLOAD 8))
        (101 (ILOAD 7))
        (103 (IFEQ 115))
        (106 (GETSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (109 (ILOAD_2))
        (110 (IALOAD))
        (111 (JVM::I2L))
        (112 (GOTO 121))
        (115 (GETSTATIC (JVM::FIELDCP "NUM_DAYS" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (118 (ILOAD_2))
        (119 (IALOAD))
        (120 (JVM::I2L))
        (121 (JVM::LADD))
        (122 (JVM::LSTORE 8))
        (124 (JVM::LLOAD 8))
        (126 (ILOAD_3))
        (127 (JVM::I2L))
        (128 (JVM::LADD))
        (129 (JVM::LSTORE 8))
        (131 (JVM::LLOAD 8))
        (133 (JVM::LRETURN))
        (ENDOFCODE 134))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (64 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT INT INT INT LONG TOPX INT LONG TOPX)
                            (STACK)
                            NIL))
                 (68 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT INT INT INT LONG TOPX INT LONG TOPX)
                            (STACK)
                            NIL))
                 (69 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    INT INT INT INT LONG TOPX INT LONG TOPX)
                            (STACK INT)
                            NIL))
                 (115 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG)
                             NIL))
                 (121 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG TOPX LONG)
                             NIL)))))
     (METHOD "floorDivide" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 20)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_0))
                               (2 (LCMP))
                               (3 (IFLT 12))
                               (6 (JVM::LLOAD_0))
                               (7 (JVM::LLOAD_2))
                               (8 (JVM::LDIV))
                               (9 (GOTO 19))
                               (12 (JVM::LLOAD_0))
                               (13 (LCONST_1))
                               (14 (JVM::LADD))
                               (15 (JVM::LLOAD_2))
                               (16 (JVM::LDIV))
                               (17 (LCONST_1))
                               (18 (JVM::LSUB))
                               (19 (JVM::LRETURN))
                               (ENDOFCODE 20))
                   (EXCEPTIONS)
                   (STACKMAP (12 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (19 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD
      "julianDayToMillis" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 11)
        (PARSEDCODE
             (0 (JVM::LLOAD_1))
             (1 (GETSTATIC (JVM::FIELDCP "julianDayOffset"
                                         "com.sun.cldc.io.DateParser" LONG)))
             (4 (JVM::LSUB))
             (5 (GETSTATIC (JVM::FIELDCP "millisPerDay"
                                         "com.sun.cldc.io.DateParser" INT)))
             (8 (JVM::I2L))
             (9 (JVM::LMUL))
             (10 (JVM::LRETURN))
             (ENDOFCODE 11))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "internalParse"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 19)
       (CODE_LENGTH . 893)
       (PARSEDCODE
        (0 (ICONST_M1))
        (1 (ISTORE_2))
        (2 (ICONST_M1))
        (3 (ISTORE_3))
        (4 (ICONST_M1))
        (5 (ISTORE 4))
        (7 (ICONST_M1))
        (8 (ISTORE 5))
        (10 (ICONST_M1))
        (11 (ISTORE 6))
        (13 (ICONST_M1))
        (14 (ISTORE 7))
        (16 (ICONST_M1))
        (17 (ISTORE 8))
        (19 (ICONST_M1))
        (20 (ISTORE 9))
        (22 (ICONST_0))
        (23 (ISTORE 10))
        (25 (ICONST_M1))
        (26 (ISTORE 11))
        (28 (ICONST_M1))
        (29 (ISTORE 12))
        (31 (ICONST_M1))
        (32 (ISTORE 13))
        (34 (ICONST_0))
        (35 (ISTORE 14))
        (37 (ALOAD_1))
        (38 (IFNONNULL 44))
        (41 (GOTO 885))
        (44 (ALOAD_1))
        (45 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (48 (ISTORE 15))
        (50 (GOTO 781))
        (53 (ALOAD_1))
        (54 (ILOAD 10))
        (56 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (59 (ISTORE 9))
        (61 (IINC 10 1))
        (64 (ILOAD 9))
        (66 (BIPUSH 32))
        (68 (IF_ICMPLE 781))
        (71 (ILOAD 9))
        (73 (BIPUSH 44))
        (75 (IF_ICMPNE 81))
        (78 (GOTO 781))
        (81 (ILOAD 9))
        (83 (BIPUSH 40))
        (85 (IF_ICMPNE 146))
        (88 (ICONST_1))
        (89 (ISTORE 16))
        (91 (GOTO 136))
        (94 (ALOAD_1))
        (95 (ILOAD 10))
        (97 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (100 (ISTORE 9))
        (102 (IINC 10 1))
        (105 (ILOAD 9))
        (107 (BIPUSH 40))
        (109 (IF_ICMPNE 118))
        (112 (IINC 16 1))
        (115 (GOTO 136))
        (118 (ILOAD 9))
        (120 (BIPUSH 41))
        (122 (IF_ICMPNE 136))
        (125 (IINC 16 -1))
        (128 (ILOAD 16))
        (130 (IFGT 136))
        (133 (GOTO 781))
        (136 (ILOAD 10))
        (138 (ILOAD 15))
        (140 (IF_ICMPLT 94))
        (143 (GOTO 781))
        (146 (BIPUSH 48))
        (148 (ILOAD 9))
        (150 (IF_ICMPGT 511))
        (153 (ILOAD 9))
        (155 (BIPUSH 57))
        (157 (IF_ICMPGT 511))
        (160 (ILOAD 9))
        (162 (BIPUSH 48))
        (164 (ISUB))
        (165 (ISTORE 11))
        (167 (GOTO 186))
        (170 (ILOAD 11))
        (172 (BIPUSH 10))
        (174 (IMUL))
        (175 (ILOAD 9))
        (177 (IADD))
        (178 (BIPUSH 48))
        (180 (ISUB))
        (181 (ISTORE 11))
        (183 (IINC 10 1))
        (186 (ILOAD 10))
        (188 (ILOAD 15))
        (190 (IF_ICMPGE 214))
        (193 (BIPUSH 48))
        (195 (ALOAD_1))
        (196 (ILOAD 10))
        (198 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (201 (DUP))
        (202 (ISTORE 9))
        (204 (IF_ICMPGT 214))
        (207 (ILOAD 9))
        (209 (BIPUSH 57))
        (211 (IF_ICMPLE 170))
        (214 (ILOAD 14))
        (216 (BIPUSH 43))
        (218 (IF_ICMPEQ 232))
        (221 (ILOAD 14))
        (223 (BIPUSH 45))
        (225 (IF_ICMPNE 298))
        (228 (ILOAD_2))
        (229 (IFLT 298))
        (232 (ILOAD 11))
        (234 (BIPUSH 24))
        (236 (IF_ICMPGE 249))
        (239 (ILOAD 11))
        (241 (BIPUSH 60))
        (243 (IMUL))
        (244 (ISTORE 11))
        (246 (GOTO 265))
        (249 (ILOAD 11))
        (251 (BIPUSH 100))
        (253 (IREM))
        (254 (ILOAD 11))
        (256 (BIPUSH 100))
        (258 (IDIV))
        (259 (BIPUSH 60))
        (261 (IMUL))
        (262 (IADD))
        (263 (ISTORE 11))
        (265 (ILOAD 14))
        (267 (BIPUSH 43))
        (269 (IF_ICMPNE 277))
        (272 (ILOAD 11))
        (274 (INEG))
        (275 (ISTORE 11))
        (277 (ILOAD 13))
        (279 (IFEQ 291))
        (282 (ILOAD 13))
        (284 (ICONST_M1))
        (285 (IF_ICMPEQ 291))
        (288 (GOTO 885))
        (291 (ILOAD 11))
        (293 (ISTORE 13))
        (295 (GOTO 505))
        (298 (ILOAD 11))
        (300 (BIPUSH 70))
        (302 (IF_ICMPLT 362))
        (305 (ILOAD_2))
        (306 (IFLT 312))
        (309 (GOTO 885))
        (312 (ILOAD 9))
        (314 (BIPUSH 32))
        (316 (IF_ICMPLE 340))
        (319 (ILOAD 9))
        (321 (BIPUSH 44))
        (323 (IF_ICMPEQ 340))
        (326 (ILOAD 9))
        (328 (BIPUSH 47))
        (330 (IF_ICMPEQ 340))
        (333 (ILOAD 10))
        (335 (ILOAD 15))
        (337 (IF_ICMPLT 885))
        (340 (ILOAD 11))
        (342 (BIPUSH 100))
        (344 (IF_ICMPGE 356))
        (347 (ILOAD 11))
        (349 (JVM::SIPUSH 1900))
        (352 (IADD))
        (353 (GOTO 358))
        (356 (ILOAD 11))
        (358 (ISTORE_2))
        (359 (GOTO 505))
        (362 (ILOAD 9))
        (364 (BIPUSH 58))
        (366 (IF_ICMPNE 395))
        (369 (ILOAD 5))
        (371 (IFGE 382))
        (374 (ILOAD 11))
        (376 (JVM::I2B))
        (377 (ISTORE 5))
        (379 (GOTO 505))
        (382 (ILOAD 6))
        (384 (IFGE 885))
        (387 (ILOAD 11))
        (389 (JVM::I2B))
        (390 (ISTORE 6))
        (392 (GOTO 505))
        (395 (ILOAD 9))
        (397 (BIPUSH 47))
        (399 (IF_ICMPNE 428))
        (402 (ILOAD_3))
        (403 (IFGE 415))
        (406 (ILOAD 11))
        (408 (ICONST_1))
        (409 (ISUB))
        (410 (JVM::I2B))
        (411 (ISTORE_3))
        (412 (GOTO 505))
        (415 (ILOAD 4))
        (417 (IFGE 885))
        (420 (ILOAD 11))
        (422 (JVM::I2B))
        (423 (ISTORE 4))
        (425 (GOTO 505))
        (428 (ILOAD 10))
        (430 (ILOAD 15))
        (432 (IF_ICMPGE 459))
        (435 (ILOAD 9))
        (437 (BIPUSH 44))
        (439 (IF_ICMPEQ 459))
        (442 (ILOAD 9))
        (444 (BIPUSH 32))
        (446 (IF_ICMPLE 459))
        (449 (ILOAD 9))
        (451 (BIPUSH 45))
        (453 (IF_ICMPEQ 459))
        (456 (GOTO 885))
        (459 (ILOAD 5))
        (461 (IFLT 477))
        (464 (ILOAD 6))
        (466 (IFGE 477))
        (469 (ILOAD 11))
        (471 (JVM::I2B))
        (472 (ISTORE 6))
        (474 (GOTO 505))
        (477 (ILOAD 6))
        (479 (IFLT 495))
        (482 (ILOAD 7))
        (484 (IFGE 495))
        (487 (ILOAD 11))
        (489 (JVM::I2B))
        (490 (ISTORE 7))
        (492 (GOTO 505))
        (495 (ILOAD 4))
        (497 (IFGE 885))
        (500 (ILOAD 11))
        (502 (JVM::I2B))
        (503 (ISTORE 4))
        (505 (ICONST_0))
        (506 (ISTORE 14))
        (508 (GOTO 781))
        (511 (ILOAD 9))
        (513 (BIPUSH 47))
        (515 (IF_ICMPEQ 539))
        (518 (ILOAD 9))
        (520 (BIPUSH 58))
        (522 (IF_ICMPEQ 539))
        (525 (ILOAD 9))
        (527 (BIPUSH 43))
        (529 (IF_ICMPEQ 539))
        (532 (ILOAD 9))
        (534 (BIPUSH 45))
        (536 (IF_ICMPNE 546))
        (539 (ILOAD 9))
        (541 (ISTORE 14))
        (543 (GOTO 781))
        (546 (ILOAD 10))
        (548 (ICONST_1))
        (549 (ISUB))
        (550 (ISTORE 16))
        (552 (GOTO 597))
        (555 (ALOAD_1))
        (556 (ILOAD 10))
        (558 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (561 (ISTORE 9))
        (563 (BIPUSH 65))
        (565 (ILOAD 9))
        (567 (IF_ICMPGT 577))
        (570 (ILOAD 9))
        (572 (BIPUSH 90))
        (574 (IF_ICMPLE 594))
        (577 (BIPUSH 97))
        (579 (ILOAD 9))
        (581 (IF_ICMPGT 604))
        (584 (ILOAD 9))
        (586 (BIPUSH 122))
        (588 (IF_ICMPLE 594))
        (591 (GOTO 604))
        (594 (IINC 10 1))
        (597 (ILOAD 10))
        (599 (ILOAD 15))
        (601 (IF_ICMPLT 555))
        (604 (ILOAD 10))
        (606 (ILOAD 16))
        (608 (ICONST_1))
        (609 (IADD))
        (610 (IF_ICMPGT 616))
        (613 (GOTO 885))
        (616 (GETSTATIC (JVM::FIELDCP "wtb" "com.sun.cldc.io.DateParser"
                                      (ARRAY (CLASS "java.lang.String")))))
        (619 (ARRAYLENGTH))
        (620 (ISTORE 17))
        (622 (GOTO 762))
        (625 (GETSTATIC (JVM::FIELDCP "wtb" "com.sun.cldc.io.DateParser"
                                      (ARRAY (CLASS "java.lang.String")))))
        (628 (ILOAD 17))
        (630 (AALOAD))
        (631 (ICONST_1))
        (632 (ICONST_0))
        (633 (ALOAD_1))
        (634 (ILOAD 16))
        (636 (ILOAD 10))
        (638 (ILOAD 16))
        (640 (ISUB))
        (641 (INVOKEVIRTUAL (METHODCP "regionMatches" "java.lang.String"
                                      (BOOLEAN INT (CLASS "java.lang.String")
                                               INT INT)
                                      BOOLEAN)))
        (644 (IFEQ 762))
        (647 (GETSTATIC (JVM::FIELDCP "ttb" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (650 (ILOAD 17))
        (652 (IALOAD))
        (653 (ISTORE 18))
        (655 (ILOAD 18))
        (657 (IFEQ 770))
        (660 (ILOAD 18))
        (662 (ICONST_1))
        (663 (IF_ICMPNE 695))
        (666 (ILOAD 5))
        (668 (BIPUSH 12))
        (670 (IF_ICMPGT 885))
        (673 (ILOAD 5))
        (675 (ICONST_1))
        (676 (IF_ICMPGE 682))
        (679 (GOTO 885))
        (682 (ILOAD 5))
        (684 (BIPUSH 12))
        (686 (IF_ICMPGE 770))
        (689 (IINC 5 12))
        (692 (GOTO 770))
        (695 (ILOAD 18))
        (697 (BIPUSH 14))
        (699 (IF_ICMPNE 731))
        (702 (ILOAD 5))
        (704 (BIPUSH 12))
        (706 (IF_ICMPGT 885))
        (709 (ILOAD 5))
        (711 (ICONST_1))
        (712 (IF_ICMPGE 718))
        (715 (GOTO 885))
        (718 (ILOAD 5))
        (720 (BIPUSH 12))
        (722 (IF_ICMPNE 770))
        (725 (ICONST_0))
        (726 (ISTORE 5))
        (728 (GOTO 770))
        (731 (ILOAD 18))
        (733 (BIPUSH 13))
        (735 (IF_ICMPGT 751))
        (738 (ILOAD_3))
        (739 (IFGE 885))
        (742 (ILOAD 18))
        (744 (ICONST_2))
        (745 (ISUB))
        (746 (JVM::I2B))
        (747 (ISTORE_3))
        (748 (GOTO 770))
        (751 (ILOAD 18))
        (753 (JVM::SIPUSH 10000))
        (756 (ISUB))
        (757 (ISTORE 13))
        (759 (GOTO 770))
        (762 (IINC 17 -1))
        (765 (ILOAD 17))
        (767 (IFGE 625))
        (770 (ILOAD 17))
        (772 (IFGE 778))
        (775 (GOTO 885))
        (778 (ICONST_0))
        (779 (ISTORE 14))
        (781 (ILOAD 10))
        (783 (ILOAD 15))
        (785 (IF_ICMPLT 53))
        (788 (ILOAD_2))
        (789 (JVM::SIPUSH 1583))
        (792 (IF_ICMPLT 885))
        (795 (ILOAD_3))
        (796 (IFLT 885))
        (799 (ILOAD 4))
        (801 (IFGE 807))
        (804 (GOTO 885))
        (807 (ILOAD 7))
        (809 (IFGE 815))
        (812 (ICONST_0))
        (813 (ISTORE 7))
        (815 (ILOAD 6))
        (817 (IFGE 823))
        (820 (ICONST_0))
        (821 (ISTORE 6))
        (823 (ILOAD 5))
        (825 (IFGE 831))
        (828 (ICONST_0))
        (829 (ISTORE 5))
        (831 (ALOAD_0))
        (832 (ILOAD_2))
        (833 (PUTFIELD (JVM::FIELDCP "year"
                                     "com.sun.cldc.io.DateParser" INT)))
        (836 (ALOAD_0))
        (837 (ILOAD_3))
        (838 (PUTFIELD (JVM::FIELDCP "month"
                                     "com.sun.cldc.io.DateParser" INT)))
        (841 (ALOAD_0))
        (842 (ILOAD 4))
        (844 (PUTFIELD (JVM::FIELDCP "day"
                                     "com.sun.cldc.io.DateParser" INT)))
        (847 (ALOAD_0))
        (848 (ILOAD 5))
        (850 (PUTFIELD (JVM::FIELDCP "hour"
                                     "com.sun.cldc.io.DateParser" INT)))
        (853 (ALOAD_0))
        (854 (ILOAD 13))
        (856 (INEG))
        (857 (BIPUSH 60))
        (859 (IMUL))
        (860 (JVM::SIPUSH 1000))
        (863 (IMUL))
        (864 (PUTFIELD (JVM::FIELDCP "tzoffset"
                                     "com.sun.cldc.io.DateParser" INT)))
        (867 (ALOAD_0))
        (868 (ILOAD 6))
        (870 (PUTFIELD (JVM::FIELDCP "minute"
                                     "com.sun.cldc.io.DateParser" INT)))
        (873 (ALOAD_0))
        (874 (ILOAD 7))
        (876 (PUTFIELD (JVM::FIELDCP "second"
                                     "com.sun.cldc.io.DateParser" INT)))
        (879 (ALOAD_0))
        (880 (ICONST_0))
        (881 (PUTFIELD (JVM::FIELDCP "milli"
                                     "com.sun.cldc.io.DateParser" INT)))
        (884 (RETURN))
        (885 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (888 (DUP))
        (889 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
        (892 (ATHROW))
        (ENDOFCODE 893))
       (EXCEPTIONS)
       (STACKMAP (44 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (81 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (94 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                    (CLASS "java.lang.String")
                                    INT INT INT INT INT INT INT INT
                                    INT INT INT INT INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (118 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (136 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (146 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (170 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (186 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (214 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (232 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (249 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (265 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (277 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (291 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (298 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (312 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (340 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (356 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (358 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (362 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (382 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (395 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (415 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (428 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (459 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (477 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (495 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (505 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (511 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (539 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (546 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (555 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (577 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (594 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (597 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (604 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (616 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (625 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (682 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (695 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (718 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (731 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (751 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (762 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (770 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (778 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (781 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (807 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (815 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (823 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (831 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (885 (FRAME (LOCALS (CLASS "com.sun.cldc.io.DateParser")
                                     (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT
                                     INT INT INT INT INT TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 721)
       (PARSEDCODE
        (0 (JVM::LDC2_W 26))
        (3 (PUTSTATIC (JVM::FIELDCP "julianDayOffset"
                                    "com.sun.cldc.io.DateParser" LONG)))
        (6 (LDC 27))
        (8 (PUTSTATIC (JVM::FIELDCP "millisPerHour"
                                    "com.sun.cldc.io.DateParser" INT)))
        (11 (BIPUSH 24))
        (13 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                     "com.sun.cldc.io.DateParser" INT)))
        (16 (IMUL))
        (17 (PUTSTATIC (JVM::FIELDCP "millisPerDay"
                                     "com.sun.cldc.io.DateParser" INT)))
        (20 (BIPUSH 32))
        (22 (ANEWARRAY (CLASS "java.lang.String")))
        (25 (DUP))
        (26 (ICONST_0))
        (27 (LDC 28))
        (29 (AASTORE))
        (30 (DUP))
        (31 (ICONST_1))
        (32 (LDC 29))
        (34 (AASTORE))
        (35 (DUP))
        (36 (ICONST_2))
        (37 (LDC 30))
        (39 (AASTORE))
        (40 (DUP))
        (41 (ICONST_3))
        (42 (LDC 31))
        (44 (AASTORE))
        (45 (DUP))
        (46 (ICONST_4))
        (47 (LDC 32))
        (49 (AASTORE))
        (50 (DUP))
        (51 (ICONST_5))
        (52 (LDC 33))
        (54 (AASTORE))
        (55 (DUP))
        (56 (BIPUSH 6))
        (58 (LDC 34))
        (60 (AASTORE))
        (61 (DUP))
        (62 (BIPUSH 7))
        (64 (LDC 35))
        (66 (AASTORE))
        (67 (DUP))
        (68 (BIPUSH 8))
        (70 (LDC 36))
        (72 (AASTORE))
        (73 (DUP))
        (74 (BIPUSH 9))
        (76 (LDC 37))
        (78 (AASTORE))
        (79 (DUP))
        (80 (BIPUSH 10))
        (82 (LDC 38))
        (84 (AASTORE))
        (85 (DUP))
        (86 (BIPUSH 11))
        (88 (LDC 39))
        (90 (AASTORE))
        (91 (DUP))
        (92 (BIPUSH 12))
        (94 (LDC 40))
        (96 (AASTORE))
        (97 (DUP))
        (98 (BIPUSH 13))
        (100 (LDC 41))
        (102 (AASTORE))
        (103 (DUP))
        (104 (BIPUSH 14))
        (106 (LDC 42))
        (108 (AASTORE))
        (109 (DUP))
        (110 (BIPUSH 15))
        (112 (LDC 43))
        (114 (AASTORE))
        (115 (DUP))
        (116 (BIPUSH 16))
        (118 (LDC 44))
        (120 (AASTORE))
        (121 (DUP))
        (122 (BIPUSH 17))
        (124 (LDC 45))
        (126 (AASTORE))
        (127 (DUP))
        (128 (BIPUSH 18))
        (130 (LDC 46))
        (132 (AASTORE))
        (133 (DUP))
        (134 (BIPUSH 19))
        (136 (LDC 47))
        (138 (AASTORE))
        (139 (DUP))
        (140 (BIPUSH 20))
        (142 (LDC 48))
        (144 (AASTORE))
        (145 (DUP))
        (146 (BIPUSH 21))
        (148 (LDC 49))
        (150 (AASTORE))
        (151 (DUP))
        (152 (BIPUSH 22))
        (154 (LDC 50))
        (156 (AASTORE))
        (157 (DUP))
        (158 (BIPUSH 23))
        (160 (LDC 51))
        (162 (AASTORE))
        (163 (DUP))
        (164 (BIPUSH 24))
        (166 (LDC 52))
        (168 (AASTORE))
        (169 (DUP))
        (170 (BIPUSH 25))
        (172 (LDC 53))
        (174 (AASTORE))
        (175 (DUP))
        (176 (BIPUSH 26))
        (178 (LDC 54))
        (180 (AASTORE))
        (181 (DUP))
        (182 (BIPUSH 27))
        (184 (LDC 55))
        (186 (AASTORE))
        (187 (DUP))
        (188 (BIPUSH 28))
        (190 (LDC 56))
        (192 (AASTORE))
        (193 (DUP))
        (194 (BIPUSH 29))
        (196 (LDC 57))
        (198 (AASTORE))
        (199 (DUP))
        (200 (BIPUSH 30))
        (202 (LDC 58))
        (204 (AASTORE))
        (205 (DUP))
        (206 (BIPUSH 31))
        (208 (LDC 59))
        (210 (AASTORE))
        (211 (PUTSTATIC (JVM::FIELDCP "wtb" "com.sun.cldc.io.DateParser"
                                      (ARRAY (CLASS "java.lang.String")))))
        (214 (BIPUSH 32))
        (216 (NEWARRAY INT))
        (218 (DUP))
        (219 (ICONST_0))
        (220 (BIPUSH 14))
        (222 (IASTORE))
        (223 (DUP))
        (224 (ICONST_1))
        (225 (ICONST_1))
        (226 (IASTORE))
        (227 (DUP))
        (228 (ICONST_2))
        (229 (ICONST_0))
        (230 (IASTORE))
        (231 (DUP))
        (232 (ICONST_3))
        (233 (ICONST_0))
        (234 (IASTORE))
        (235 (DUP))
        (236 (ICONST_4))
        (237 (ICONST_0))
        (238 (IASTORE))
        (239 (DUP))
        (240 (ICONST_5))
        (241 (ICONST_0))
        (242 (IASTORE))
        (243 (DUP))
        (244 (BIPUSH 6))
        (246 (ICONST_0))
        (247 (IASTORE))
        (248 (DUP))
        (249 (BIPUSH 7))
        (251 (ICONST_0))
        (252 (IASTORE))
        (253 (DUP))
        (254 (BIPUSH 8))
        (256 (ICONST_0))
        (257 (IASTORE))
        (258 (DUP))
        (259 (BIPUSH 9))
        (261 (ICONST_2))
        (262 (IASTORE))
        (263 (DUP))
        (264 (BIPUSH 10))
        (266 (ICONST_3))
        (267 (IASTORE))
        (268 (DUP))
        (269 (BIPUSH 11))
        (271 (ICONST_4))
        (272 (IASTORE))
        (273 (DUP))
        (274 (BIPUSH 12))
        (276 (ICONST_5))
        (277 (IASTORE))
        (278 (DUP))
        (279 (BIPUSH 13))
        (281 (BIPUSH 6))
        (283 (IASTORE))
        (284 (DUP))
        (285 (BIPUSH 14))
        (287 (BIPUSH 7))
        (289 (IASTORE))
        (290 (DUP))
        (291 (BIPUSH 15))
        (293 (BIPUSH 8))
        (295 (IASTORE))
        (296 (DUP))
        (297 (BIPUSH 16))
        (299 (BIPUSH 9))
        (301 (IASTORE))
        (302 (DUP))
        (303 (BIPUSH 17))
        (305 (BIPUSH 10))
        (307 (IASTORE))
        (308 (DUP))
        (309 (BIPUSH 18))
        (311 (BIPUSH 11))
        (313 (IASTORE))
        (314 (DUP))
        (315 (BIPUSH 19))
        (317 (BIPUSH 12))
        (319 (IASTORE))
        (320 (DUP))
        (321 (BIPUSH 20))
        (323 (BIPUSH 13))
        (325 (IASTORE))
        (326 (DUP))
        (327 (BIPUSH 21))
        (329 (JVM::SIPUSH 10000))
        (332 (IASTORE))
        (333 (DUP))
        (334 (BIPUSH 22))
        (336 (JVM::SIPUSH 10000))
        (339 (IASTORE))
        (340 (DUP))
        (341 (BIPUSH 23))
        (343 (JVM::SIPUSH 10000))
        (346 (IASTORE))
        (347 (DUP))
        (348 (BIPUSH 24))
        (350 (JVM::SIPUSH 10300))
        (353 (IASTORE))
        (354 (DUP))
        (355 (BIPUSH 25))
        (357 (JVM::SIPUSH 10240))
        (360 (IASTORE))
        (361 (DUP))
        (362 (BIPUSH 26))
        (364 (JVM::SIPUSH 10360))
        (367 (IASTORE))
        (368 (DUP))
        (369 (BIPUSH 27))
        (371 (JVM::SIPUSH 10300))
        (374 (IASTORE))
        (375 (DUP))
        (376 (BIPUSH 28))
        (378 (JVM::SIPUSH 10420))
        (381 (IASTORE))
        (382 (DUP))
        (383 (BIPUSH 29))
        (385 (JVM::SIPUSH 10360))
        (388 (IASTORE))
        (389 (DUP))
        (390 (BIPUSH 30))
        (392 (JVM::SIPUSH 10480))
        (395 (IASTORE))
        (396 (DUP))
        (397 (BIPUSH 31))
        (399 (JVM::SIPUSH 10420))
        (402 (IASTORE))
        (403 (PUTSTATIC (JVM::FIELDCP "ttb" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (406 (BIPUSH 12))
        (408 (NEWARRAY INT))
        (410 (DUP))
        (411 (ICONST_0))
        (412 (ICONST_0))
        (413 (IASTORE))
        (414 (DUP))
        (415 (ICONST_1))
        (416 (BIPUSH 31))
        (418 (IASTORE))
        (419 (DUP))
        (420 (ICONST_2))
        (421 (BIPUSH 59))
        (423 (IASTORE))
        (424 (DUP))
        (425 (ICONST_3))
        (426 (BIPUSH 90))
        (428 (IASTORE))
        (429 (DUP))
        (430 (ICONST_4))
        (431 (BIPUSH 120))
        (433 (IASTORE))
        (434 (DUP))
        (435 (ICONST_5))
        (436 (JVM::SIPUSH 151))
        (439 (IASTORE))
        (440 (DUP))
        (441 (BIPUSH 6))
        (443 (JVM::SIPUSH 181))
        (446 (IASTORE))
        (447 (DUP))
        (448 (BIPUSH 7))
        (450 (JVM::SIPUSH 212))
        (453 (IASTORE))
        (454 (DUP))
        (455 (BIPUSH 8))
        (457 (JVM::SIPUSH 243))
        (460 (IASTORE))
        (461 (DUP))
        (462 (BIPUSH 9))
        (464 (JVM::SIPUSH 273))
        (467 (IASTORE))
        (468 (DUP))
        (469 (BIPUSH 10))
        (471 (JVM::SIPUSH 304))
        (474 (IASTORE))
        (475 (DUP))
        (476 (BIPUSH 11))
        (478 (JVM::SIPUSH 334))
        (481 (IASTORE))
        (482 (PUTSTATIC (JVM::FIELDCP "NUM_DAYS" "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (485 (BIPUSH 12))
        (487 (NEWARRAY INT))
        (489 (DUP))
        (490 (ICONST_0))
        (491 (ICONST_0))
        (492 (IASTORE))
        (493 (DUP))
        (494 (ICONST_1))
        (495 (BIPUSH 31))
        (497 (IASTORE))
        (498 (DUP))
        (499 (ICONST_2))
        (500 (BIPUSH 60))
        (502 (IASTORE))
        (503 (DUP))
        (504 (ICONST_3))
        (505 (BIPUSH 91))
        (507 (IASTORE))
        (508 (DUP))
        (509 (ICONST_4))
        (510 (BIPUSH 121))
        (512 (IASTORE))
        (513 (DUP))
        (514 (ICONST_5))
        (515 (JVM::SIPUSH 152))
        (518 (IASTORE))
        (519 (DUP))
        (520 (BIPUSH 6))
        (522 (JVM::SIPUSH 182))
        (525 (IASTORE))
        (526 (DUP))
        (527 (BIPUSH 7))
        (529 (JVM::SIPUSH 213))
        (532 (IASTORE))
        (533 (DUP))
        (534 (BIPUSH 8))
        (536 (JVM::SIPUSH 244))
        (539 (IASTORE))
        (540 (DUP))
        (541 (BIPUSH 9))
        (543 (JVM::SIPUSH 274))
        (546 (IASTORE))
        (547 (DUP))
        (548 (BIPUSH 10))
        (550 (JVM::SIPUSH 305))
        (553 (IASTORE))
        (554 (DUP))
        (555 (BIPUSH 11))
        (557 (JVM::SIPUSH 335))
        (560 (IASTORE))
        (561 (PUTSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                      "com.sun.cldc.io.DateParser"
                                      (ARRAY INT))))
        (564 (NEW (CLASS "java.util.Hashtable")))
        (567 (DUP))
        (568 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.Hashtable" NIL VOID)))
        (571
            (PUTSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (574
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (577 (LDC 60))
        (579 (NEW (CLASS "java.lang.Integer")))
        (582 (DUP))
        (583 (ICONST_0))
        (584 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (587 (IMUL))
        (588 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (591 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (594 (POP))
        (595
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (598 (LDC 61))
        (600 (NEW (CLASS "java.lang.Integer")))
        (603 (DUP))
        (604 (ICONST_0))
        (605 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (608 (IMUL))
        (609 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (612 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (615 (POP))
        (616
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (619 (LDC 62))
        (621 (NEW (CLASS "java.lang.Integer")))
        (624 (DUP))
        (625 (ICONST_0))
        (626 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (629 (IMUL))
        (630 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (633 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (636 (POP))
        (637
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (640 (LDC 63))
        (642 (NEW (CLASS "java.lang.Integer")))
        (645 (DUP))
        (646 (BIPUSH -8))
        (648 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (651 (IMUL))
        (652 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (655 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (658 (POP))
        (659
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (662 (LDC 64))
        (664 (NEW (CLASS "java.lang.Integer")))
        (667 (DUP))
        (668 (BIPUSH -7))
        (670 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (673 (IMUL))
        (674 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (677 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (680 (POP))
        (681
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (684 (LDC 65))
        (686 (NEW (CLASS "java.lang.Integer")))
        (689 (DUP))
        (690 (BIPUSH 9))
        (692 (GETSTATIC (JVM::FIELDCP "millisPerHour"
                                      "com.sun.cldc.io.DateParser" INT)))
        (695 (IMUL))
        (696 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                      VOID)))
        (699 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (702 (POP))
        (703
            (GETSTATIC (JVM::FIELDCP "timezones" "com.sun.cldc.io.DateParser"
                                     (CLASS "java.util.Hashtable"))))
        (706 (LDC 63))
        (708 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (711 (CHECKCAST (CLASS "java.lang.Integer")))
        (714 (INVOKEVIRTUAL (METHODCP "intValue"
                                      "java.lang.Integer" NIL INT)))
        (717 (PUTSTATIC (JVM::FIELDCP "local_tz"
                                      "com.sun.cldc.io.DateParser" INT)))
        (720 (RETURN))
        (ENDOFCODE 721))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "com.sun.cldc.io.ConnectionBaseInterface"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "openPrim"
                           (PARAMETERS (CLASS "java.lang.String")
                                       INT BOOLEAN)
                           (RETURNTYPE CLASS
                                       "javax.microedition.io.Connection")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "com.sun.cldc.io.GeneralBase"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "No write()")
                   (STRING "Function not supported")
                   (INT 65535)
                   (STRING "No read()")
                   (LONG 4294967295))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 79)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (IFNONNULL 12))
           (4 (NEW (CLASS "java.lang.NullPointerException")))
           (7 (DUP))
           (8 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
           (11 (ATHROW))
           (12 (ILOAD_2))
           (13 (IFLT 40))
           (16 (ILOAD_2))
           (17 (ALOAD_1))
           (18 (ARRAYLENGTH))
           (19 (IF_ICMPGT 40))
           (22 (ILOAD_3))
           (23 (IFLT 40))
           (26 (ILOAD_2))
           (27 (ILOAD_3))
           (28 (IADD))
           (29 (ALOAD_1))
           (30 (ARRAYLENGTH))
           (31 (IF_ICMPGT 40))
           (34 (ILOAD_2))
           (35 (ILOAD_3))
           (36 (IADD))
           (37 (IFGE 48))
           (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
           (43 (DUP))
           (44 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
           (47 (ATHROW))
           (48 (ILOAD_3))
           (49 (IFNE 53))
           (52 (RETURN))
           (53 (ICONST_0))
           (54 (ISTORE 4))
           (56 (GOTO 72))
           (59 (ALOAD_0))
           (60 (ALOAD_1))
           (61 (ILOAD_2))
           (62 (ILOAD 4))
           (64 (IADD))
           (65 (BALOAD))
           (66 (INVOKEVIRTUAL (METHODCP "write"
                                        "com.sun.cldc.io.GeneralBase" (INT)
                                        VOID)))
           (69 (IINC 4 1))
           (72 (ILOAD 4))
           (74 (ILOAD_3))
           (75 (IF_ICMPLT 59))
           (78 (RETURN))
           (ENDOFCODE 79))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (ICONST_0))
            (3 (ALOAD_1))
            (4 (ARRAYLENGTH))
            (5 (INVOKEVIRTUAL (METHODCP "write" "com.sun.cldc.io.GeneralBase"
                                        ((ARRAY BYTE) INT INT)
                                        VOID)))
            (8 (RETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeBoolean" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 14)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (IFEQ 9))
             (5 (ICONST_1))
             (6 (GOTO 10))
             (9 (ICONST_0))
             (10 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (13 (RETURN))
             (ENDOFCODE 14))
        (EXCEPTIONS)
        (STACKMAP (9 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK (CLASS "com.sun.cldc.io.GeneralBase"))
                            NIL))
                  (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                     INT)
                             (STACK INT
                                    (CLASS "com.sun.cldc.io.GeneralBase"))
                             NIL)))))
     (METHOD
      "writeByte" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 6)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
              (5 (RETURN))
              (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "writeShort" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (BIPUSH 8))
             (4 (JVM::IUSHR))
             (5 (JVM::SIPUSH 255))
             (8 (JVM::IAND))
             (9 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
             (12 (ALOAD_0))
             (13 (ILOAD_1))
             (14 (ICONST_0))
             (15 (JVM::IUSHR))
             (16 (JVM::SIPUSH 255))
             (19 (JVM::IAND))
             (20 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeChar" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (BIPUSH 8))
             (4 (JVM::IUSHR))
             (5 (JVM::SIPUSH 255))
             (8 (JVM::IAND))
             (9 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
             (12 (ALOAD_0))
             (13 (ILOAD_1))
             (14 (ICONST_0))
             (15 (JVM::IUSHR))
             (16 (JVM::SIPUSH 255))
             (19 (JVM::IAND))
             (20 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeInt" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 48)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ILOAD_1))
             (2 (BIPUSH 24))
             (4 (JVM::IUSHR))
             (5 (JVM::SIPUSH 255))
             (8 (JVM::IAND))
             (9 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
             (12 (ALOAD_0))
             (13 (ILOAD_1))
             (14 (BIPUSH 16))
             (16 (JVM::IUSHR))
             (17 (JVM::SIPUSH 255))
             (20 (JVM::IAND))
             (21 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (24 (ALOAD_0))
             (25 (ILOAD_1))
             (26 (BIPUSH 8))
             (28 (JVM::IUSHR))
             (29 (JVM::SIPUSH 255))
             (32 (JVM::IAND))
             (33 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (36 (ALOAD_0))
             (37 (ILOAD_1))
             (38 (ICONST_0))
             (39 (JVM::IUSHR))
             (40 (JVM::SIPUSH 255))
             (43 (JVM::IAND))
             (44 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
             (47 (RETURN))
             (ENDOFCODE 48))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeLong" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 104)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (JVM::LLOAD_1))
            (2 (BIPUSH 56))
            (4 (JVM::LUSHR))
            (5 (JVM::L2I))
            (6 (JVM::SIPUSH 255))
            (9 (JVM::IAND))
            (10 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (13 (ALOAD_0))
            (14 (JVM::LLOAD_1))
            (15 (BIPUSH 48))
            (17 (JVM::LUSHR))
            (18 (JVM::L2I))
            (19 (JVM::SIPUSH 255))
            (22 (JVM::IAND))
            (23 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (26 (ALOAD_0))
            (27 (JVM::LLOAD_1))
            (28 (BIPUSH 40))
            (30 (JVM::LUSHR))
            (31 (JVM::L2I))
            (32 (JVM::SIPUSH 255))
            (35 (JVM::IAND))
            (36 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (39 (ALOAD_0))
            (40 (JVM::LLOAD_1))
            (41 (BIPUSH 32))
            (43 (JVM::LUSHR))
            (44 (JVM::L2I))
            (45 (JVM::SIPUSH 255))
            (48 (JVM::IAND))
            (49 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (52 (ALOAD_0))
            (53 (JVM::LLOAD_1))
            (54 (BIPUSH 24))
            (56 (JVM::LUSHR))
            (57 (JVM::L2I))
            (58 (JVM::SIPUSH 255))
            (61 (JVM::IAND))
            (62 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (65 (ALOAD_0))
            (66 (JVM::LLOAD_1))
            (67 (BIPUSH 16))
            (69 (JVM::LUSHR))
            (70 (JVM::L2I))
            (71 (JVM::SIPUSH 255))
            (74 (JVM::IAND))
            (75 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (78 (ALOAD_0))
            (79 (JVM::LLOAD_1))
            (80 (BIPUSH 8))
            (82 (JVM::LUSHR))
            (83 (JVM::L2I))
            (84 (JVM::SIPUSH 255))
            (87 (JVM::IAND))
            (88 (INVOKEVIRTUAL (METHODCP "write"
                                         "com.sun.cldc.io.GeneralBase" (INT)
                                         VOID)))
            (91 (ALOAD_0))
            (92 (JVM::LLOAD_1))
            (93 (ICONST_0))
            (94 (JVM::LUSHR))
            (95 (JVM::L2I))
            (96 (JVM::SIPUSH 255))
            (99 (JVM::IAND))
            (100 (INVOKEVIRTUAL (METHODCP "write"
                                          "com.sun.cldc.io.GeneralBase" (INT)
                                          VOID)))
            (103 (RETURN))
            (ENDOFCODE 104))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeBytes"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeChars"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 51)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (4 (ISTORE_2))
           (5 (ICONST_0))
           (6 (ISTORE_3))
           (7 (GOTO 45))
           (10 (ALOAD_1))
           (11 (ILOAD_3))
           (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                        CHAR)))
           (15 (ISTORE 4))
           (17 (ALOAD_0))
           (18 (ILOAD 4))
           (20 (BIPUSH 8))
           (22 (JVM::IUSHR))
           (23 (JVM::SIPUSH 255))
           (26 (JVM::IAND))
           (27 (INVOKEVIRTUAL (METHODCP "write"
                                        "com.sun.cldc.io.GeneralBase" (INT)
                                        VOID)))
           (30 (ALOAD_0))
           (31 (ILOAD 4))
           (33 (ICONST_0))
           (34 (JVM::IUSHR))
           (35 (JVM::SIPUSH 255))
           (38 (JVM::IAND))
           (39 (INVOKEVIRTUAL (METHODCP "write"
                                        "com.sun.cldc.io.GeneralBase" (INT)
                                        VOID)))
           (42 (IINC 3 1))
           (45 (ILOAD_3))
           (46 (ILOAD_2))
           (47 (IF_ICMPLT 10))
           (50 (RETURN))
           (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ALOAD_1))
          (1 (ALOAD_0))
          (2 (INVOKESTATIC (METHODCP "writeUTF" "com.sun.cldc.io.GeneralBase"
                                     ((CLASS "java.lang.String")
                                      (CLASS "java.io.DataOutput"))
                                     INT)))
          (5 (POP))
          (6 (RETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String")
                  (CLASS "java.io.DataOutput"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 10)
       (CODE_LENGTH . 311)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (4 (ISTORE_2))
          (5 (ICONST_0))
          (6 (ISTORE_3))
          (7 (ILOAD_2))
          (8 (NEWARRAY CHAR))
          (10 (ASTORE 4))
          (12 (ICONST_0))
          (13 (ISTORE 6))
          (15 (ALOAD_0))
          (16 (ICONST_0))
          (17 (ILOAD_2))
          (18 (ALOAD 4))
          (20 (ICONST_0))
          (21 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                       (INT INT (ARRAY CHAR) INT)
                                       VOID)))
          (24 (ICONST_0))
          (25 (ISTORE 7))
          (27 (GOTO 76))
          (30 (ALOAD 4))
          (32 (ILOAD 7))
          (34 (CALOAD))
          (35 (ISTORE 5))
          (37 (ILOAD 5))
          (39 (ICONST_1))
          (40 (IF_ICMPLT 56))
          (43 (ILOAD 5))
          (45 (BIPUSH 127))
          (47 (IF_ICMPGT 56))
          (50 (IINC 3 1))
          (53 (GOTO 73))
          (56 (ILOAD 5))
          (58 (JVM::SIPUSH 2047))
          (61 (IF_ICMPLE 70))
          (64 (IINC 3 3))
          (67 (GOTO 73))
          (70 (IINC 3 2))
          (73 (IINC 7 1))
          (76 (ILOAD 7))
          (78 (ILOAD_2))
          (79 (IF_ICMPLT 30))
          (82 (ILOAD_3))
          (83 (LDC 2))
          (85 (IF_ICMPLE 96))
          (88 (NEW (CLASS "java.io.UTFDataFormatException")))
          (91 (DUP))
          (92 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.io.UTFDataFormatException"
                                       NIL VOID)))
          (95 (ATHROW))
          (96 (ILOAD_3))
          (97 (ICONST_2))
          (98 (IADD))
          (99 (NEWARRAY BYTE))
          (101 (ASTORE 8))
          (103 (ALOAD 8))
          (105 (ILOAD 6))
          (107 (IINC 6 1))
          (110 (ILOAD_3))
          (111 (BIPUSH 8))
          (113 (JVM::IUSHR))
          (114 (JVM::SIPUSH 255))
          (117 (JVM::IAND))
          (118 (JVM::I2B))
          (119 (BASTORE))
          (120 (ALOAD 8))
          (122 (ILOAD 6))
          (124 (IINC 6 1))
          (127 (ILOAD_3))
          (128 (ICONST_0))
          (129 (JVM::IUSHR))
          (130 (JVM::SIPUSH 255))
          (133 (JVM::IAND))
          (134 (JVM::I2B))
          (135 (BASTORE))
          (136 (ICONST_0))
          (137 (ISTORE 9))
          (139 (GOTO 293))
          (142 (ALOAD 4))
          (144 (ILOAD 9))
          (146 (CALOAD))
          (147 (ISTORE 5))
          (149 (ILOAD 5))
          (151 (ICONST_1))
          (152 (IF_ICMPLT 176))
          (155 (ILOAD 5))
          (157 (BIPUSH 127))
          (159 (IF_ICMPGT 176))
          (162 (ALOAD 8))
          (164 (ILOAD 6))
          (166 (IINC 6 1))
          (169 (ILOAD 5))
          (171 (JVM::I2B))
          (172 (BASTORE))
          (173 (GOTO 290))
          (176 (ILOAD 5))
          (178 (JVM::SIPUSH 2047))
          (181 (IF_ICMPLE 249))
          (184 (ALOAD 8))
          (186 (ILOAD 6))
          (188 (IINC 6 1))
          (191 (JVM::SIPUSH 224))
          (194 (ILOAD 5))
          (196 (BIPUSH 12))
          (198 (JVM::ISHR))
          (199 (BIPUSH 15))
          (201 (JVM::IAND))
          (202 (JVM::IOR))
          (203 (JVM::I2B))
          (204 (BASTORE))
          (205 (ALOAD 8))
          (207 (ILOAD 6))
          (209 (IINC 6 1))
          (212 (JVM::SIPUSH 128))
          (215 (ILOAD 5))
          (217 (BIPUSH 6))
          (219 (JVM::ISHR))
          (220 (BIPUSH 63))
          (222 (JVM::IAND))
          (223 (JVM::IOR))
          (224 (JVM::I2B))
          (225 (BASTORE))
          (226 (ALOAD 8))
          (228 (ILOAD 6))
          (230 (IINC 6 1))
          (233 (JVM::SIPUSH 128))
          (236 (ILOAD 5))
          (238 (ICONST_0))
          (239 (JVM::ISHR))
          (240 (BIPUSH 63))
          (242 (JVM::IAND))
          (243 (JVM::IOR))
          (244 (JVM::I2B))
          (245 (BASTORE))
          (246 (GOTO 290))
          (249 (ALOAD 8))
          (251 (ILOAD 6))
          (253 (IINC 6 1))
          (256 (JVM::SIPUSH 192))
          (259 (ILOAD 5))
          (261 (BIPUSH 6))
          (263 (JVM::ISHR))
          (264 (BIPUSH 31))
          (266 (JVM::IAND))
          (267 (JVM::IOR))
          (268 (JVM::I2B))
          (269 (BASTORE))
          (270 (ALOAD 8))
          (272 (ILOAD 6))
          (274 (IINC 6 1))
          (277 (JVM::SIPUSH 128))
          (280 (ILOAD 5))
          (282 (ICONST_0))
          (283 (JVM::ISHR))
          (284 (BIPUSH 63))
          (286 (JVM::IAND))
          (287 (JVM::IOR))
          (288 (JVM::I2B))
          (289 (BASTORE))
          (290 (IINC 9 1))
          (293 (ILOAD 9))
          (295 (ILOAD_2))
          (296 (IF_ICMPLT 142))
          (299 (ALOAD_1))
          (300 (ALOAD 8))
          (302 (INVOKEINTERFACE (METHODCP "write"
                                          "java.io.DataOutput" ((ARRAY BYTE))
                                          VOID)
                                2))
          (307 (ILOAD_3))
          (308 (ICONST_2))
          (309 (IADD))
          (310 (IRETURN))
          (ENDOFCODE 311))
       (EXCEPTIONS)
       (STACKMAP (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    TOPX INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (70 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (73 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (76 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    TOPX INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (96 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.io.DataOutput")
                                    INT INT (ARRAY CHAR)
                                    TOPX INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (142 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     TOPX INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (176 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     INT INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (249 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     INT INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (290 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     INT INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL))
                 (293 (FRAME (LOCALS (CLASS "java.lang.String")
                                     (CLASS "java.io.DataOutput")
                                     INT INT (ARRAY CHAR)
                                     TOPX INT INT (ARRAY BYTE)
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD "flush" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 3))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 29)
       (PARSEDCODE
         (0 (JVM::LLOAD_1))
         (1 (JVM::LSTORE_3))
         (2 (GOTO 19))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (IFGE 15))
         (12 (GOTO 25))
         (15 (JVM::LLOAD_3))
         (16 (LCONST_1))
         (17 (JVM::LSUB))
         (18 (JVM::LSTORE_3))
         (19 (JVM::LLOAD_3))
         (20 (LCONST_0))
         (21 (LCMP))
         (22 (IFGT 5))
         (25 (JVM::LLOAD_1))
         (26 (JVM::LLOAD_3))
         (27 (JVM::LSUB))
         (28 (JVM::LRETURN))
         (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (5 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                   LONG TOPX LONG TOPX)
                           (STACK)
                           NIL))
                 (15 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "readFully" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE (0 (ALOAD_0))
                    (1 (ALOAD_1))
                    (2 (ICONST_0))
                    (3 (ALOAD_1))
                    (4 (ARRAYLENGTH))
                    (5 (INVOKEVIRTUAL (METHODCP "readFully"
                                                "com.sun.cldc.io.GeneralBase"
                                                ((ARRAY BYTE) INT INT)
                                                VOID)))
                    (8 (RETURN))
                    (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readFully"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 56)
       (PARSEDCODE
        (0 (ILOAD_3))
        (1 (IFGE 12))
        (4 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.IndexOutOfBoundsException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ICONST_0))
        (13 (ISTORE 4))
        (15 (GOTO 49))
        (18 (ALOAD_0))
        (19 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
        (22 (ISTORE 5))
        (24 (ILOAD 5))
        (26 (IFGE 37))
        (29 (NEW (CLASS "java.io.EOFException")))
        (32 (DUP))
        (33 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.EOFException" NIL VOID)))
        (36 (ATHROW))
        (37 (ALOAD_1))
        (38 (ILOAD_2))
        (39 (ILOAD 4))
        (41 (IINC 4 1))
        (44 (IADD))
        (45 (ILOAD 5))
        (47 (JVM::I2B))
        (48 (BASTORE))
        (49 (ILOAD 4))
        (51 (ILOAD_3))
        (52 (IF_ICMPLT 18))
        (55 (RETURN))
        (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "skipBytes" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 32)
       (PARSEDCODE
            (0 (ICONST_0))
            (1 (ISTORE_2))
            (2 (ICONST_0))
            (3 (ISTORE_3))
            (4 (GOTO 11))
            (7 (ILOAD_2))
            (8 (ILOAD_3))
            (9 (IADD))
            (10 (ISTORE_2))
            (11 (ILOAD_2))
            (12 (ILOAD_1))
            (13 (IF_ICMPGE 30))
            (16 (ALOAD_0))
            (17 (ILOAD_1))
            (18 (ILOAD_2))
            (19 (ISUB))
            (20 (JVM::I2L))
            (21 (INVOKEVIRTUAL (METHODCP "skip"
                                         "com.sun.cldc.io.GeneralBase" (LONG)
                                         LONG)))
            (24 (JVM::L2I))
            (25 (DUP))
            (26 (ISTORE_3))
            (27 (IFGT 7))
            (30 (ILOAD_2))
            (31 (IRETURN))
            (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                   INT INT INT)
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readBoolean" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 27)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ILOAD_1))
         (6 (IFGE 17))
         (9 (NEW (CLASS "java.io.EOFException")))
         (12 (DUP))
         (13 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (16 (ATHROW))
         (17 (ILOAD_1))
         (18 (IFEQ 25))
         (21 (ICONST_1))
         (22 (GOTO 26))
         (25 (ICONST_0))
         (26 (IRETURN))
         (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK INT)
                            NIL)))))
     (METHOD
      "readByte" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 20)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ILOAD_1))
         (6 (IFGE 17))
         (9 (NEW (CLASS "java.io.EOFException")))
         (12 (DUP))
         (13 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (16 (ATHROW))
         (17 (ILOAD_1))
         (18 (JVM::I2B))
         (19 (IRETURN))
         (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readUnsignedByte" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 19)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ILOAD_1))
         (6 (IFGE 17))
         (9 (NEW (CLASS "java.io.EOFException")))
         (12 (DUP))
         (13 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (16 (ATHROW))
         (17 (ILOAD_1))
         (18 (IRETURN))
         (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readShort" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 34)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (ISTORE_2))
         (10 (ILOAD_1))
         (11 (ILOAD_2))
         (12 (JVM::IOR))
         (13 (IFGE 24))
         (16 (NEW (CLASS "java.io.EOFException")))
         (19 (DUP))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (23 (ATHROW))
         (24 (ILOAD_1))
         (25 (BIPUSH 8))
         (27 (JVM::ISHL))
         (28 (ILOAD_2))
         (29 (ICONST_0))
         (30 (JVM::ISHL))
         (31 (IADD))
         (32 (JVM::I2S))
         (33 (IRETURN))
         (ENDOFCODE 34))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readUnsignedShort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 33)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (ISTORE_2))
         (10 (ILOAD_1))
         (11 (ILOAD_2))
         (12 (JVM::IOR))
         (13 (IFGE 24))
         (16 (NEW (CLASS "java.io.EOFException")))
         (19 (DUP))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (23 (ATHROW))
         (24 (ILOAD_1))
         (25 (BIPUSH 8))
         (27 (JVM::ISHL))
         (28 (ILOAD_2))
         (29 (ICONST_0))
         (30 (JVM::ISHL))
         (31 (IADD))
         (32 (IRETURN))
         (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readChar" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 34)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (ISTORE_1))
         (5 (ALOAD_0))
         (6 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (9 (ISTORE_2))
         (10 (ILOAD_1))
         (11 (ILOAD_2))
         (12 (JVM::IOR))
         (13 (IFGE 24))
         (16 (NEW (CLASS "java.io.EOFException")))
         (19 (DUP))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.EOFException" NIL VOID)))
         (23 (ATHROW))
         (24 (ILOAD_1))
         (25 (BIPUSH 8))
         (27 (JVM::ISHL))
         (28 (ILOAD_2))
         (29 (ICONST_0))
         (30 (JVM::ISHL))
         (31 (IADD))
         (32 (JVM::I2C))
         (33 (IRETURN))
         (ENDOFCODE 34))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readInt" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 60)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "read"
                                    "com.sun.cldc.io.GeneralBase" NIL INT)))
        (4 (ISTORE_1))
        (5 (ALOAD_0))
        (6 (INVOKEVIRTUAL (METHODCP "read"
                                    "com.sun.cldc.io.GeneralBase" NIL INT)))
        (9 (ISTORE_2))
        (10 (ALOAD_0))
        (11 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
        (14 (ISTORE_3))
        (15 (ALOAD_0))
        (16 (INVOKEVIRTUAL (METHODCP "read"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
        (19 (ISTORE 4))
        (21 (ILOAD_1))
        (22 (ILOAD_2))
        (23 (JVM::IOR))
        (24 (ILOAD_3))
        (25 (JVM::IOR))
        (26 (ILOAD 4))
        (28 (JVM::IOR))
        (29 (IFGE 40))
        (32 (NEW (CLASS "java.io.EOFException")))
        (35 (DUP))
        (36 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.EOFException" NIL VOID)))
        (39 (ATHROW))
        (40 (ILOAD_1))
        (41 (BIPUSH 24))
        (43 (JVM::ISHL))
        (44 (ILOAD_2))
        (45 (BIPUSH 16))
        (47 (JVM::ISHL))
        (48 (IADD))
        (49 (ILOAD_3))
        (50 (BIPUSH 8))
        (52 (JVM::ISHL))
        (53 (IADD))
        (54 (ILOAD 4))
        (56 (ICONST_0))
        (57 (JVM::ISHL))
        (58 (IADD))
        (59 (IRETURN))
        (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.GeneralBase")
                                    INT INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "readInt"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (4 (JVM::I2L))
         (5 (BIPUSH 32))
         (7 (JVM::LSHL))
         (8 (ALOAD_0))
         (9 (INVOKEVIRTUAL (METHODCP "readInt"
                                     "com.sun.cldc.io.GeneralBase" NIL INT)))
         (12 (JVM::I2L))
         (13 (JVM::LDC2_W 4))
         (16 (JVM::LAND))
         (17 (JVM::LADD))
         (18 (JVM::LRETURN))
         (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readUTF" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESTATIC (METHODCP "readUTF" "java.io.DataInputStream"
                                          ((CLASS "java.io.DataInput"))
                                          (CLASS "java.lang.String"))))
               (4 (ARETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "readLine" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "iowait" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE)))
    (INTERFACES "java.io.DataInput"
                "java.io.DataOutput")
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.ConnectionBase"
    "com.sun.cldc.io.GeneralBase"
    (CONSTANT_POOL (STRING "No openInputStream")
                   (STRING "No openOutputStream"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>" "com.sun.cldc.io.GeneralBase"
                                       NIL VOID)))
           (4 (RETURN))
           (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 9)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_1))
         (2 (ILOAD_2))
         (3 (ILOAD_3))
         (4 (INVOKEVIRTUAL (METHODCP "open" "com.sun.cldc.io.ConnectionBase"
                                     ((CLASS "java.lang.String") INT BOOLEAN)
                                     VOID)))
         (7 (ALOAD_0))
         (8 (ARETURN))
         (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 1))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openDataInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 12)
        (PARSEDCODE
             (0 (NEW (CLASS "java.io.DataInputStream")))
             (3 (DUP))
             (4 (ALOAD_0))
             (5 (INVOKEVIRTUAL (METHODCP "openInputStream"
                                         "com.sun.cldc.io.ConnectionBase"
                                         NIL (CLASS "java.io.InputStream"))))
             (8 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataInputStream"
                                         ((CLASS "java.io.InputStream"))
                                         VOID)))
             (11 (ARETURN))
             (ENDOFCODE 12))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "openDataOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataOutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
            (0 (NEW (CLASS "java.io.DataOutputStream")))
            (3 (DUP))
            (4 (ALOAD_0))
            (5 (INVOKEVIRTUAL (METHODCP "openOutputStream"
                                        "com.sun.cldc.io.ConnectionBase"
                                        NIL (CLASS "java.io.OutputStream"))))
            (8 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataOutputStream"
                                        ((CLASS "java.io.OutputStream"))
                                        VOID)))
            (11 (ARETURN))
            (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES "javax.microedition.io.Connection"
                "com.sun.cldc.io.ConnectionBaseInterface")
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.NetworkConnectionBase"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.io.ConnectionBase"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "initializeInternal" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 0)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 4)
       (PARSEDCODE
           (0 (INVOKESTATIC (METHODCP "initializeInternal"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
           (3 (RETURN))
           (ENDOFCODE 4))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "com.sun.cldc.io.connections.HttpConnection"
          "java.lang.Object"
          (CONSTANT_POOL (STRING "HEAD")
                         (STRING "GET")
                         (STRING "POST")
                         (INT 200)
                         (INT 201)
                         (INT 202)
                         (INT 203)
                         (INT 204)
                         (INT 205)
                         (INT 206)
                         (INT 300)
                         (INT 301)
                         (INT 302)
                         (INT 303)
                         (INT 304)
                         (INT 305)
                         (INT 307)
                         (INT 400)
                         (INT 401)
                         (INT 402)
                         (INT 403)
                         (INT 404)
                         (INT 405)
                         (INT 406)
                         (INT 407)
                         (INT 408)
                         (INT 409)
                         (INT 410)
                         (INT 411)
                         (INT 412)
                         (INT 413)
                         (INT 414)
                         (INT 415)
                         (INT 416)
                         (INT 417)
                         (INT 500)
                         (INT 501)
                         (INT 502)
                         (INT 503)
                         (INT 504)
                         (INT 505))
          (FIELDS (FIELD "HEAD" (CLASS "java.lang.String")
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         0)
                  (FIELD "GET" (CLASS "java.lang.String")
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         1)
                  (FIELD "POST" (CLASS "java.lang.String")
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         2)
                  (FIELD "HTTP_OK" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         3)
                  (FIELD "HTTP_CREATED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         4)
                  (FIELD "HTTP_ACCEPTED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         5)
                  (FIELD "HTTP_NOT_AUTHORITATIVE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         6)
                  (FIELD "HTTP_NO_CONTENT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         7)
                  (FIELD "HTTP_RESET" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         8)
                  (FIELD "HTTP_PARTIAL" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         9)
                  (FIELD "HTTP_MULT_CHOICE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         10)
                  (FIELD "HTTP_MOVED_PERM" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         11)
                  (FIELD "HTTP_MOVED_TEMP" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         12)
                  (FIELD "HTTP_SEE_OTHER" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         13)
                  (FIELD "HTTP_NOT_MODIFIED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         14)
                  (FIELD "HTTP_USE_PROXY" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         15)
                  (FIELD "HTTP_TEMP_REDIRECT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         16)
                  (FIELD "HTTP_BAD_REQUEST" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         17)
                  (FIELD "HTTP_UNAUTHORIZED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         18)
                  (FIELD "HTTP_PAYMENT_REQUIRED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         19)
                  (FIELD "HTTP_FORBIDDEN" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         20)
                  (FIELD "HTTP_NOT_FOUND" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         21)
                  (FIELD "HTTP_BAD_METHOD" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         22)
                  (FIELD "HTTP_NOT_ACCEPTABLE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         23)
                  (FIELD "HTTP_PROXY_AUTH" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         24)
                  (FIELD "HTTP_CLIENT_TIMEOUT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         25)
                  (FIELD "HTTP_CONFLICT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         26)
                  (FIELD "HTTP_GONE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         27)
                  (FIELD "HTTP_LENGTH_REQUIRED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         28)
                  (FIELD "HTTP_PRECON_FAILED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         29)
                  (FIELD "HTTP_ENTITY_TOO_LARGE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         30)
                  (FIELD "HTTP_REQ_TOO_LONG" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         31)
                  (FIELD "HTTP_UNSUPPORTED_TYPE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         32)
                  (FIELD "HTTP_UNSUPPORTED_RANGE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         33)
                  (FIELD "HTTP_EXPECT_FAILED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         34)
                  (FIELD "HTTP_INTERNAL_ERROR" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         35)
                  (FIELD "HTTP_NOT_IMPLEMENTED" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         36)
                  (FIELD "HTTP_BAD_GATEWAY" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         37)
                  (FIELD "HTTP_UNAVAILABLE" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         38)
                  (FIELD "HTTP_GATEWAY_TIMEOUT" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         39)
                  (FIELD "HTTP_VERSION" INT
                         (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                         40))
          (METHODS (METHOD "getURL" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getProtocol" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHost" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getFile" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getRef" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getQuery" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getPort" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getRequestMethod" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "setRequestMethod"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getRequestProperty"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "setRequestProperty"
                           (PARAMETERS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getResponseCode" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getResponseMessage" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getExpiration" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getDate" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getLastModified" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderField"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderFieldInt"
                           (PARAMETERS (CLASS "java.lang.String")
                                       INT)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderFieldDate"
                           (PARAMETERS (CLASS "java.lang.String")
                                       LONG)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderField" (PARAMETERS INT)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getHeaderFieldKey" (PARAMETERS INT)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.ContentConnection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (INT 0)
                   (INT 1)
                   (INT 2)
                   (INT 4)
                   (INT 16)
                   (INT 32)
                   (INT 128)
                   (INT 192)
                   (STRING "baudrate=110")
                   (STRING "baudrate=300")
                   (STRING "baudrate=600")
                   (STRING "baudrate=1200")
                   (STRING "baudrate=2400")
                   (STRING "baudrate=4800")
                   (STRING "baudrate=9600")
                   (STRING "baudrate=14400")
                   (STRING "baudrate=19200")
                   (STRING "baudrate=38400")
                   (INT 38400)
                   (STRING "baudrate=56000")
                   (INT 56000)
                   (STRING "baudrate=57600")
                   (INT 57600)
                   (STRING "baudrate=115200")
                   (INT 115200)
                   (STRING "baudrate=128000")
                   (INT 128000)
                   (STRING "baudrate=256000")
                   (INT 256000)
                   (STRING "bitsperchar=7")
                   (STRING "bitsperchar=8")
                   (STRING "stopbits=1")
                   (STRING "stopbits=2")
                   (STRING "parity=none")
                   (STRING "parity=odd")
                   (STRING "parity=even")
                   (STRING "autorts=off")
                   (STRING "autorts=on")
                   (STRING "autocts=off")
                   (STRING "autocts=on")
                   (STRING "blocking=off")
                   (STRING "blocking=on")
                   (STRING "Bad parameter")
                   (STRING "Missing port ID")
                   (STRING ";")
                   (STRING "missing parameter delimiter")
                   (STRING "com.sun.cldc.io.j2me.comm.buffersize"))
    (FIELDS (FIELD "bufferSize" INT
                   (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
                   -1)
            (FIELD "opens"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "copen" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "outputStream"
                   (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "inputStream"
                   (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "hPort" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "serSettingsFlagStopBits1" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "serSettingsFlagStopBits2" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "serSettingsFlagParityOddM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "serSettingsFlagParityEvenM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   3)
            (FIELD "serSettingsFlagRTSAutoM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   4)
            (FIELD "serSettingsFlagCTSAutoM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   5)
            (FIELD "serSettingsFlagBitsPerChar7" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   6)
            (FIELD "serSettingsFlagBitsPerChar8" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   7)
            (FIELD "bbc" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "stop" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "parity" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "rts" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "cts" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "baud" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "blocking" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 56)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "com.sun.cldc.io.ConnectionBase"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (ICONST_0))
             (6 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (9 (ALOAD_0))
             (10 (ICONST_0))
             (11 (PUTFIELD (JVM::FIELDCP "copen"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         BOOLEAN)))
             (14 (ALOAD_0))
             (15 (JVM::SIPUSH 192))
             (18 (PUTFIELD (JVM::FIELDCP "bbc"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (21 (ALOAD_0))
             (22 (ICONST_0))
             (23 (PUTFIELD (JVM::FIELDCP "stop"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (26 (ALOAD_0))
             (27 (ICONST_0))
             (28 (PUTFIELD (JVM::FIELDCP "parity"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (31 (ALOAD_0))
             (32 (BIPUSH 16))
             (34 (PUTFIELD (JVM::FIELDCP "rts"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (37 (ALOAD_0))
             (38 (BIPUSH 32))
             (40 (PUTFIELD (JVM::FIELDCP "cts"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (43 (ALOAD_0))
             (44 (JVM::SIPUSH 19200))
             (47 (PUTFIELD (JVM::FIELDCP "baud"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (50 (ALOAD_0))
             (51 (ICONST_1))
             (52 (PUTFIELD (JVM::FIELDCP "blocking"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (55 (RETURN))
             (ENDOFCODE 56))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "parseParameter"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 523)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (ILOAD_2))
         (2 (ILOAD_3))
         (3 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
         (6 (ASTORE_1))
         (7 (ALOAD_1))
         (8 (LDC 8))
         (10 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (13 (IFEQ 25))
         (16 (ALOAD_0))
         (17 (BIPUSH 110))
         (19 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (22 (GOTO 522))
         (25 (ALOAD_1))
         (26 (LDC 9))
         (28 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (31 (IFEQ 44))
         (34 (ALOAD_0))
         (35 (JVM::SIPUSH 300))
         (38 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (41 (GOTO 522))
         (44 (ALOAD_1))
         (45 (LDC 10))
         (47 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (50 (IFEQ 63))
         (53 (ALOAD_0))
         (54 (JVM::SIPUSH 600))
         (57 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (60 (GOTO 522))
         (63 (ALOAD_1))
         (64 (LDC 11))
         (66 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (69 (IFEQ 82))
         (72 (ALOAD_0))
         (73 (JVM::SIPUSH 1200))
         (76 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (79 (GOTO 522))
         (82 (ALOAD_1))
         (83 (LDC 12))
         (85 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (88 (IFEQ 101))
         (91 (ALOAD_0))
         (92 (JVM::SIPUSH 2400))
         (95 (PUTFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
         (98 (GOTO 522))
         (101 (ALOAD_1))
         (102 (LDC 13))
         (104 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (107 (IFEQ 120))
         (110 (ALOAD_0))
         (111 (JVM::SIPUSH 4800))
         (114 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (117 (GOTO 522))
         (120 (ALOAD_1))
         (121 (LDC 14))
         (123 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (126 (IFEQ 139))
         (129 (ALOAD_0))
         (130 (JVM::SIPUSH 9600))
         (133 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (136 (GOTO 522))
         (139 (ALOAD_1))
         (140 (LDC 15))
         (142 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (145 (IFEQ 158))
         (148 (ALOAD_0))
         (149 (JVM::SIPUSH 14400))
         (152 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (155 (GOTO 522))
         (158 (ALOAD_1))
         (159 (LDC 16))
         (161 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (164 (IFEQ 177))
         (167 (ALOAD_0))
         (168 (JVM::SIPUSH 19200))
         (171 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (174 (GOTO 522))
         (177 (ALOAD_1))
         (178 (LDC 17))
         (180 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (183 (IFEQ 195))
         (186 (ALOAD_0))
         (187 (LDC 18))
         (189 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (192 (GOTO 522))
         (195 (ALOAD_1))
         (196 (LDC 19))
         (198 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (201 (IFEQ 213))
         (204 (ALOAD_0))
         (205 (LDC 20))
         (207 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (210 (GOTO 522))
         (213 (ALOAD_1))
         (214 (LDC 21))
         (216 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (219 (IFEQ 231))
         (222 (ALOAD_0))
         (223 (LDC 22))
         (225 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (228 (GOTO 522))
         (231 (ALOAD_1))
         (232 (LDC 23))
         (234 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (237 (IFEQ 249))
         (240 (ALOAD_0))
         (241 (LDC 24))
         (243 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (246 (GOTO 522))
         (249 (ALOAD_1))
         (250 (LDC 25))
         (252 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (255 (IFEQ 267))
         (258 (ALOAD_0))
         (259 (LDC 26))
         (261 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (264 (GOTO 522))
         (267 (ALOAD_1))
         (268 (LDC 27))
         (270 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (273 (IFEQ 285))
         (276 (ALOAD_0))
         (277 (LDC 28))
         (279 (PUTFIELD (JVM::FIELDCP "baud"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (282 (GOTO 522))
         (285 (ALOAD_1))
         (286 (LDC 29))
         (288 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (291 (IFEQ 304))
         (294 (ALOAD_0))
         (295 (JVM::SIPUSH 128))
         (298 (PUTFIELD (JVM::FIELDCP "bbc"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (301 (GOTO 522))
         (304 (ALOAD_1))
         (305 (LDC 30))
         (307 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (310 (IFEQ 323))
         (313 (ALOAD_0))
         (314 (JVM::SIPUSH 192))
         (317 (PUTFIELD (JVM::FIELDCP "bbc"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (320 (GOTO 522))
         (323 (ALOAD_1))
         (324 (LDC 31))
         (326 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (329 (IFEQ 340))
         (332 (ALOAD_0))
         (333 (ICONST_0))
         (334 (PUTFIELD (JVM::FIELDCP "stop"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (337 (GOTO 522))
         (340 (ALOAD_1))
         (341 (LDC 32))
         (343 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (346 (IFEQ 357))
         (349 (ALOAD_0))
         (350 (ICONST_1))
         (351 (PUTFIELD (JVM::FIELDCP "stop"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (354 (GOTO 522))
         (357 (ALOAD_1))
         (358 (LDC 33))
         (360 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (363 (IFEQ 374))
         (366 (ALOAD_0))
         (367 (ICONST_0))
         (368 (PUTFIELD (JVM::FIELDCP "parity"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (371 (GOTO 522))
         (374 (ALOAD_1))
         (375 (LDC 34))
         (377 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (380 (IFEQ 391))
         (383 (ALOAD_0))
         (384 (ICONST_2))
         (385 (PUTFIELD (JVM::FIELDCP "parity"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (388 (GOTO 522))
         (391 (ALOAD_1))
         (392 (LDC 35))
         (394 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (397 (IFEQ 408))
         (400 (ALOAD_0))
         (401 (ICONST_4))
         (402 (PUTFIELD (JVM::FIELDCP "parity"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (405 (GOTO 522))
         (408 (ALOAD_1))
         (409 (LDC 36))
         (411 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (414 (IFEQ 425))
         (417 (ALOAD_0))
         (418 (ICONST_0))
         (419 (PUTFIELD (JVM::FIELDCP "rts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (422 (GOTO 522))
         (425 (ALOAD_1))
         (426 (LDC 37))
         (428 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (431 (IFEQ 443))
         (434 (ALOAD_0))
         (435 (BIPUSH 16))
         (437 (PUTFIELD (JVM::FIELDCP "rts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (440 (GOTO 522))
         (443 (ALOAD_1))
         (444 (LDC 38))
         (446 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (449 (IFEQ 460))
         (452 (ALOAD_0))
         (453 (ICONST_0))
         (454 (PUTFIELD (JVM::FIELDCP "cts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (457 (GOTO 522))
         (460 (ALOAD_1))
         (461 (LDC 39))
         (463 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (466 (IFEQ 478))
         (469 (ALOAD_0))
         (470 (BIPUSH 32))
         (472 (PUTFIELD (JVM::FIELDCP "cts"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (475 (GOTO 522))
         (478 (ALOAD_1))
         (479 (LDC 40))
         (481 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (484 (IFEQ 495))
         (487 (ALOAD_0))
         (488 (ICONST_0))
         (489 (PUTFIELD (JVM::FIELDCP "blocking"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (492 (GOTO 522))
         (495 (ALOAD_1))
         (496 (LDC 41))
         (498 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                       ((CLASS "java.lang.Object"))
                                       BOOLEAN)))
         (501 (IFEQ 512))
         (504 (ALOAD_0))
         (505 (ICONST_1))
         (506 (PUTFIELD (JVM::FIELDCP "blocking"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
         (509 (GOTO 522))
         (512 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (515 (DUP))
         (516 (LDC 42))
         (518 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.IllegalArgumentException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
         (521 (ATHROW))
         (522 (RETURN))
         (ENDOFCODE 523))
       (EXCEPTIONS)
       (STACKMAP
            (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (44 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (63 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (82 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (101 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (120 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (139 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (158 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (177 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (195 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (213 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (231 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (249 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (267 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (285 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (304 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (323 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (340 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (357 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (374 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (391 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (408 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (425 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (443 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (460 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (478 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (495 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (512 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (522 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL)))))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 338)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE 4))
        (3 (ACONST_NULL))
        (4 (ASTORE 5))
        (6 (ICONST_0))
        (7 (ISTORE 6))
        (9 (ICONST_0))
        (10 (ISTORE 7))
        (12 (ALOAD_1))
        (13 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (16 (IFNE 29))
        (19 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (22 (DUP))
        (23 (LDC 43))
        (25 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (28 (ATHROW))
        (29 (ALOAD_1))
        (30 (ICONST_0))
        (31 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (34 (INVOKESTATIC (METHODCP "isDigit" "java.lang.Character" (CHAR)
                                    BOOLEAN)))
        (37 (IFEQ 57))
        (40 (ALOAD_1))
        (41 (ICONST_0))
        (42 (ICONST_1))
        (43 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (46 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (49 (ISTORE 4))
        (51 (IINC 7 1))
        (54 (GOTO 175))
        (57 (ALOAD_1))
        (58 (LDC 44))
        (60 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (63 (ISTORE 7))
        (65 (ILOAD 7))
        (67 (IFGE 82))
        (70 (ALOAD_1))
        (71 (ASTORE 5))
        (73 (ALOAD_1))
        (74 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (77 (ISTORE 7))
        (79 (GOTO 175))
        (82 (ALOAD_1))
        (83 (ICONST_0))
        (84 (ILOAD 7))
        (86 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (89 (ASTORE 5))
        (91 (GOTO 175))
        (94 (ALOAD_1))
        (95 (ILOAD 7))
        (97 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (100 (BIPUSH 59))
        (102 (IF_ICMPEQ 115))
        (105 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (108 (DUP))
        (109 (LDC 45))
        (111 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (114 (ATHROW))
        (115 (IINC 7 1))
        (118 (ILOAD 7))
        (120 (ISTORE 6))
        (122 (GOTO 125))
        (125 (ILOAD 7))
        (127 (ALOAD_1))
        (128 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (131 (IF_ICMPNE 146))
        (134 (ALOAD_0))
        (135 (ALOAD_1))
        (136 (ILOAD 6))
        (138 (ILOAD 7))
        (140 (INVOKESPECIAL (METHODCP "parseParameter"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      ((CLASS "java.lang.String") INT INT)
                                      VOID)))
        (143 (GOTO 175))
        (146 (ALOAD_1))
        (147 (ILOAD 7))
        (149 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (152 (BIPUSH 59))
        (154 (IF_ICMPNE 169))
        (157 (ALOAD_0))
        (158 (ALOAD_1))
        (159 (ILOAD 6))
        (161 (ILOAD 7))
        (163 (INVOKESPECIAL (METHODCP "parseParameter"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      ((CLASS "java.lang.String") INT INT)
                                      VOID)))
        (166 (GOTO 175))
        (169 (IINC 7 1))
        (172 (GOTO 125))
        (175 (ALOAD_1))
        (176 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (179 (ILOAD 7))
        (181 (IF_ICMPGT 94))
        (184 (ALOAD 5))
        (186 (IFNULL 233))
        (189 (ALOAD_0))
        (190 (ALOAD 5))
        (192 (ALOAD_0))
        (193 (GETFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (196 (ALOAD_0))
        (197 (GETFIELD (JVM::FIELDCP "bbc"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (200 (ALOAD_0))
        (201 (GETFIELD (JVM::FIELDCP "stop"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (204 (JVM::IOR))
        (205 (ALOAD_0))
        (206 (GETFIELD (JVM::FIELDCP "parity"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (209 (JVM::IOR))
        (210 (ALOAD_0))
        (211 (GETFIELD (JVM::FIELDCP "rts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (214 (JVM::IOR))
        (215 (ALOAD_0))
        (216 (GETFIELD (JVM::FIELDCP "cts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (219 (JVM::IOR))
        (220 (ALOAD_0))
        (221 (GETFIELD (JVM::FIELDCP "blocking"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (224 (INVOKESTATIC (METHODCP "native_openByName"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     ((CLASS "java.lang.String") INT INT INT)
                                     INT)))
        (227 (PUTFIELD (JVM::FIELDCP "hPort"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (230 (GOTO 274))
        (233 (ALOAD_0))
        (234 (ILOAD 4))
        (236 (ALOAD_0))
        (237 (GETFIELD (JVM::FIELDCP "baud"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (240 (ALOAD_0))
        (241 (GETFIELD (JVM::FIELDCP "bbc"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (244 (ALOAD_0))
        (245 (GETFIELD (JVM::FIELDCP "stop"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (248 (JVM::IOR))
        (249 (ALOAD_0))
        (250 (GETFIELD (JVM::FIELDCP "parity"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (253 (JVM::IOR))
        (254 (ALOAD_0))
        (255 (GETFIELD (JVM::FIELDCP "rts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (258 (JVM::IOR))
        (259 (ALOAD_0))
        (260 (GETFIELD (JVM::FIELDCP "cts"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (263 (JVM::IOR))
        (264 (ALOAD_0))
        (265 (GETFIELD (JVM::FIELDCP "blocking"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (268 (INVOKESTATIC (METHODCP "native_openByNumber"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (INT INT INT INT)
                                     INT)))
        (271 (PUTFIELD (JVM::FIELDCP "hPort"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (274 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
        (277 (IFNE 295))
        (280 (ALOAD_0))
        (281 (NEW (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")))
        (284 (DUP))
        (285 (ALOAD_0))
        (286 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                            ((CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                            VOID)))
        (289 (PUTFIELD (JVM::FIELDCP "inputStream"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (CLASS "java.io.InputStream"))))
        (292 (GOTO 310))
        (295 (ALOAD_0))
        (296
         (NEW
           (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")))
        (299 (DUP))
        (300 (ALOAD_0))
        (301 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                      "com.sun.cldc.io.j2me.comm.Protocol"
                                      INT)))
        (304
         (INVOKESPECIAL
           (METHODCP "<init>"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     ((CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                      INT)
                     VOID)))
        (307 (PUTFIELD (JVM::FIELDCP "inputStream"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (CLASS "java.io.InputStream"))))
        (310 (ALOAD_0))
        (311 (NEW (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream")))
        (314 (DUP))
        (315 (ALOAD_0))
        (316 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                            ((CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                            VOID)))
        (319 (PUTFIELD (JVM::FIELDCP "outputStream"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     (CLASS "java.io.OutputStream"))))
        (322 (ALOAD_0))
        (323 (DUP))
        (324 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (327 (ICONST_1))
        (328 (IADD))
        (329 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     INT)))
        (332 (ALOAD_0))
        (333 (ICONST_1))
        (334 (PUTFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     BOOLEAN)))
        (337 (RETURN))
        (ENDOFCODE 338))
       (EXCEPTIONS)
       (STACKMAP
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT NULL INT INT)
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT NULL INT INT)
                       (STACK)
                       NIL))
            (82 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT NULL INT INT)
                       (STACK)
                       NIL))
            (94 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                               (CLASS "java.lang.String")
                               INT INT INT (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (115 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (125 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (146 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (169 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (175 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (233 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (274 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (295 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL))
            (310 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                                (CLASS "java.lang.String")
                                INT INT INT (CLASS "java.lang.String")
                                INT INT)
                        (STACK)
                        NIL)))))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 15)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (GETFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (5 (ICONST_1))
             (6 (IADD))
             (7 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (10 (ALOAD_0))
             (11 (GETFIELD (JVM::FIELDCP "inputStream"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (CLASS "java.io.InputStream"))))
             (14 (ARETURN))
             (ENDOFCODE 15))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 15)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (GETFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (5 (ICONST_1))
             (6 (IADD))
             (7 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (10 (ALOAD_0))
             (11 (GETFIELD (JVM::FIELDCP "outputStream"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (CLASS "java.io.OutputStream"))))
             (14 (ARETURN))
             (ENDOFCODE 15))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.comm.Protocol"
                                       BOOLEAN)))
            (4 (IFEQ 16))
            (7 (ALOAD_0))
            (8 (ICONST_0))
            (9 (PUTFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.comm.Protocol"
                                       BOOLEAN)))
            (12 (ALOAD_0))
            (13 (INVOKEVIRTUAL (METHODCP "realClose"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         NIL VOID)))
            (16 (RETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP
            (16 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "realClose" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 22)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (GETFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (5 (ICONST_1))
             (6 (ISUB))
             (7 (DUP_X1))
             (8 (PUTFIELD (JVM::FIELDCP "opens"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
             (11 (IFNE 21))
             (14 (ALOAD_0))
             (15 (GETFIELD (JVM::FIELDCP "hPort"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
             (18 (INVOKESTATIC (METHODCP "native_close"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (INT)
                                         VOID)))
             (21 (RETURN))
             (ENDOFCODE 22))
        (EXCEPTIONS)
        (STACKMAP
             (21 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                        (STACK)
                        NIL)))))
     (METHOD "native_openByNumber"
             (PARAMETERS INT INT INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "native_openByName"
             (PARAMETERS (CLASS "java.lang.String")
                         INT INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "native_close" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "native_readBytes"
             (PARAMETERS INT (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "native_available" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "native_writeBytes"
             (PARAMETERS INT (ARRAY BYTE) INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *STATIC*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
            (0 (ICONST_0))
            (1 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                        "com.sun.cldc.io.j2me.comm.Protocol"
                                        INT)))
            (4 (LDC 46))
            (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.String"))))
            (9 (ASTORE_0))
            (10 (ALOAD_0))
            (11 (IFNULL 28))
            (14 (ALOAD_0))
            (15 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                        ((CLASS "java.lang.String"))
                                        INT)))
            (18 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         INT)))
            (21 (GOTO 28))
            (24 (ASTORE_1))
            (25 (GOTO 28))
            (28 (RETURN))
            (ENDOFCODE 29))
       (EXCEPTIONS (JVM::HANDLER 14 21 24
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK (CLASS "java.lang.NumberFormatException"))
                            NIL))
                 (28 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))))))
    (INTERFACES "javax.microedition.io.StreamConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "Stream closed")
                   (STRING "Read overrun in comm:"))
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_1))
        (6 (NEWARRAY BYTE))
        (8 (PUTFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (ARRAY BYTE))))
        (11 (ALOAD_0))
        (12 (ALOAD_1))
        (13
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream"))
              (STACK)
              NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 26)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (ARRAY BYTE))))
        (5 (ICONST_0))
        (6 (ICONST_1))
        (7 (INVOKEVIRTUAL
                (METHODCP "read"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          ((ARRAY BYTE) INT INT)
                          INT)))
        (10 (IFLE 24))
        (13 (ALOAD_0))
        (14 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                               (ARRAY BYTE))))
        (17 (ICONST_0))
        (18 (BALOAD))
        (19 (JVM::SIPUSH 255))
        (22 (JVM::IAND))
        (23 (IRETURN))
        (24 (ICONST_M1))
        (25 (IRETURN))
        (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP
        (24
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream"))
              (STACK)
              NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 108)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_1))
        (5 (IFNONNULL 16))
        (8 (NEW (CLASS "java.lang.NullPointerException")))
        (11 (DUP))
        (12 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (15 (ATHROW))
        (16 (ILOAD_2))
        (17 (IFLT 44))
        (20 (ILOAD_2))
        (21 (ALOAD_1))
        (22 (ARRAYLENGTH))
        (23 (IF_ICMPGT 44))
        (26 (ILOAD_3))
        (27 (IFLT 44))
        (30 (ILOAD_2))
        (31 (ILOAD_3))
        (32 (IADD))
        (33 (ALOAD_1))
        (34 (ARRAYLENGTH))
        (35 (IF_ICMPGT 44))
        (38 (ILOAD_2))
        (39 (ILOAD_3))
        (40 (IADD))
        (41 (IFGE 52))
        (44 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (47 (DUP))
        (48 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     NIL VOID)))
        (51 (ATHROW))
        (52 (ALOAD_0))
        (53 (ALOAD_0))
        (54
           (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (57 (GETFIELD (JVM::FIELDCP "hPort"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    INT)))
        (60 (ALOAD_1))
        (61 (ILOAD_2))
        (62 (ILOAD_3))
        (63 (INVOKEVIRTUAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                           (INT (ARRAY BYTE) INT INT)
                           INT)))
        (66 (ISTORE 4))
        (68 (ILOAD 4))
        (70 (IFNE 83))
        (73 (ALOAD_0))
        (74
           (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (77 (GETFIELD (JVM::FIELDCP "blocking"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    INT)))
        (80 (IFNE 102))
        (83 (ILOAD 4))
        (85 (ILOAD_3))
        (86 (IF_ICMPLE 99))
        (89 (NEW (CLASS "java.io.IOException")))
        (92 (DUP))
        (93 (LDC 1))
        (95 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (98 (ATHROW))
        (99 (ILOAD 4))
        (101 (IRETURN))
        (102 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                     NIL VOID)))
        (105 (GOTO 52))
        (ENDOFCODE 108))
       (EXCEPTIONS)
       (STACKMAP
        (16
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT TOPX)
               (STACK)
               NIL))
        (44
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT TOPX)
               (STACK)
               NIL))
        (52
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT TOPX)
               (STACK)
               NIL))
        (83
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT INT)
               (STACK)
               NIL))
        (99
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT INT)
               (STACK)
               NIL))
        (102
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream")
                       (ARRAY BYTE)
                       INT INT INT)
               (STACK)
               NIL)))))
     (METHOD
      "read1"
      (PARAMETERS INT (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 5)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ILOAD_1))
              (1 (ALOAD_2))
              (2 (ILOAD_3))
              (3 (ILOAD 4))
              (5 (INVOKESTATIC (METHODCP "native_readBytes"
                                         "com.sun.cldc.io.j2me.comm.Protocol"
                                         (INT (ARRAY BYTE) INT INT)
                                         INT)))
              (8 (IRETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 15)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (8 (GETFIELD (JVM::FIELDCP "hPort"
                                   "com.sun.cldc.io.j2me.comm.Protocol"
                                   INT)))
        (11 (INVOKESTATIC (METHODCP "native_available"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    (INT)
                                    INT)))
        (14 (IRETURN))
        (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNULL 19))
        (7 (ALOAD_0))
        (8 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (11 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     NIL VOID)))
        (14 (ALOAD_0))
        (15 (ACONST_NULL))
        (16
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (19 (RETURN))
        (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP
        (19
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStream"))
              (STACK)
              NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
    "com.sun.cldc.io.j2me.comm.PrivateInputStream"
    (CONSTANT_POOL)
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "pos"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_1))
        (2 (INVOKESPECIAL
                (METHODCP "<init>"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          ((CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
                          VOID)))
        (5 (ALOAD_0))
        (6 (ILOAD_2))
        (7 (NEWARRAY BYTE))
        (9 (PUTFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read1"
      (PARAMETERS INT (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 121)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (4 (IFNE 66))
        (7 (ILOAD 4))
        (9 (ALOAD_0))
        (10
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (13 (ARRAYLENGTH))
        (14 (IF_ICMPLT 27))
        (17 (ALOAD_0))
        (18 (ILOAD_1))
        (19 (ALOAD_2))
        (20 (ILOAD_3))
        (21 (ILOAD 4))
        (23 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                           (INT (ARRAY BYTE) INT INT)
                           INT)))
        (26 (IRETURN))
        (27 (ALOAD_0))
        (28 (ICONST_0))
        (29
           (PUTFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (32 (ALOAD_0))
        (33 (ILOAD_1))
        (34 (ALOAD_0))
        (35
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (38 (ALOAD_0))
        (39
           (GETFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (42 (ALOAD_0))
        (43
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (46 (ARRAYLENGTH))
        (47 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                           (INT (ARRAY BYTE) INT INT)
                           INT)))
        (50 (ISTORE 5))
        (52 (ILOAD 5))
        (54 (IFGT 60))
        (57 (ILOAD 5))
        (59 (IRETURN))
        (60 (ALOAD_0))
        (61 (ILOAD 5))
        (63
           (PUTFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (66 (ILOAD 4))
        (68 (ALOAD_0))
        (69
           (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (72 (IF_ICMPLE 81))
        (75 (ALOAD_0))
        (76
           (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (79 (ISTORE 4))
        (81 (ALOAD_0))
        (82
           (GETFIELD
                (JVM::FIELDCP
                     "buf"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     (ARRAY BYTE))))
        (85 (ALOAD_0))
        (86
           (GETFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (89 (ALOAD_2))
        (90 (ILOAD_3))
        (91 (ILOAD 4))
        (93 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (96 (ALOAD_0))
        (97 (DUP))
        (98
           (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (101 (ILOAD 4))
        (103 (ISUB))
        (104
           (PUTFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (107 (ALOAD_0))
        (108 (DUP))
        (109
           (GETFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (112 (ILOAD 4))
        (114 (IADD))
        (115
           (PUTFIELD
                (JVM::FIELDCP
                     "pos"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (118 (ILOAD 4))
        (120 (IRETURN))
        (ENDOFCODE 121))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT TOPX)
          (STACK)
          NIL))
        (60
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT INT)
          (STACK)
          NIL))
        (66
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT TOPX)
          (STACK)
          NIL))
        (81
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer")
             INT (ARRAY BYTE)
             INT INT TOPX)
          (STACK)
          NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP
                     "count"
                     "com.sun.cldc.io.j2me.comm.PrivateInputStreamWithBuffer"
                     INT)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.comm.Protocol")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_1))
        (6 (NEWARRAY BYTE))
        (8 (PUTFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (ARRAY BYTE))))
        (11 (ALOAD_0))
        (12 (ALOAD_1))
        (13
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream"))
             (STACK)
             NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 19)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (ARRAY BYTE))))
        (4 (ICONST_0))
        (5 (ILOAD_1))
        (6 (JVM::I2B))
        (7 (BASTORE))
        (8 (ALOAD_0))
        (9 (ALOAD_0))
        (10
           (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (ARRAY BYTE))))
        (13 (ICONST_0))
        (14 (ICONST_1))
        (15 (INVOKEVIRTUAL
                 (METHODCP "write"
                           "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                           ((ARRAY BYTE) INT INT)
                           VOID)))
        (18 (RETURN))
        (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                          NIL VOID)))
        (4 (ILOAD_3))
        (5 (IFGT 9))
        (8 (RETURN))
        (9 (ALOAD_1))
        (10 (ILOAD_2))
        (11 (BALOAD))
        (12 (ALOAD_1))
        (13 (ILOAD_2))
        (14 (ILOAD_3))
        (15 (IADD))
        (16 (ICONST_1))
        (17 (ISUB))
        (18 (BALOAD))
        (19 (IADD))
        (20 (ISTORE 4))
        (22 (ALOAD_0))
        (23
           (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (26 (GETFIELD (JVM::FIELDCP "hPort"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    INT)))
        (29 (ALOAD_1))
        (30 (ILOAD_2))
        (31 (ILOAD_3))
        (32 (INVOKESTATIC (METHODCP "native_writeBytes"
                                    "com.sun.cldc.io.j2me.comm.Protocol"
                                    (INT (ARRAY BYTE) INT INT)
                                    VOID)))
        (35 (RETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP
        (9
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream")
                      (ARRAY BYTE)
                      INT INT TOPX)
              (STACK)
              NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (4 (IFNULL 19))
        (7 (ALOAD_0))
        (8 (GETFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (11 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.comm.Protocol"
                                     NIL VOID)))
        (14 (ALOAD_0))
        (15 (ACONST_NULL))
        (16
           (PUTFIELD
                (JVM::FIELDCP "parent"
                              "com.sun.cldc.io.j2me.comm.PrivateOutputStream"
                              (CLASS "com.sun.cldc.io.j2me.comm.Protocol"))))
        (19 (RETURN))
        (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP
        (19
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.comm.PrivateOutputStream"))
             (STACK)
             NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.datagram.DatagramObject"
    "com.sun.cldc.io.GeneralBase"
    (CONSTANT_POOL (INT 256)
                   (STRING "datagram://")
                   (STRING ":")
                   (STRING "Invalid datagram address")
                   (STRING "Illegal length or offset"))
    (FIELDS (FIELD "MAX_HOST_LENGTH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "off" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "len" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "ipNumber" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "host" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "port" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "pointer" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                  (ARRAY BYTE)
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 22)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "com.sun.cldc.io.GeneralBase"
                                    NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD
                (JVM::FIELDCP "off"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (9 (ALOAD_0))
        (10 (ALOAD_1))
        (11
         (PUTFIELD
            (JVM::FIELDCP "parent"
                          "com.sun.cldc.io.j2me.datagram.DatagramObject"
                          (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))))
        (14 (ALOAD_0))
        (15 (ALOAD_2))
        (16 (ICONST_0))
        (17 (ILOAD_3))
        (18 (INVOKEVIRTUAL
                 (METHODCP "setData"
                           "com.sun.cldc.io.j2me.datagram.DatagramObject"
                           ((ARRAY BYTE) INT INT)
                           VOID)))
        (21 (RETURN))
        (ENDOFCODE 22))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getAddress" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "host"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (CLASS "java.lang.String"))))
        (4 (IFNONNULL 56))
        (7 (ALOAD_0))
        (8 (GETFIELD
                (JVM::FIELDCP "ipNumber"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (11 (IFNE 16))
        (14 (ACONST_NULL))
        (15 (ARETURN))
        (16 (JVM::SIPUSH 256))
        (19 (NEWARRAY BYTE))
        (21 (ASTORE_1))
        (22 (ALOAD_0))
        (23
         (GETFIELD
            (JVM::FIELDCP "parent"
                          "com.sun.cldc.io.j2me.datagram.DatagramObject"
                          (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))))
        (26 (ALOAD_0))
        (27 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (30 (ALOAD_1))
        (31 (INVOKEVIRTUAL (METHODCP "getHostByAddr"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (INT (ARRAY BYTE))
                                     VOID)))
        (34 (ALOAD_0))
        (35 (NEW (CLASS "java.lang.String")))
        (38 (DUP))
        (39 (ALOAD_1))
        (40 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.String" ((ARRAY BYTE))
                                     VOID)))
        (43 (INVOKEVIRTUAL (METHODCP "trim" "java.lang.String"
                                     NIL (CLASS "java.lang.String"))))
        (46 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (49 (GOTO 56))
        (52 (ASTORE_1))
        (53 (GOTO 56))
        (56 (NEW (CLASS "java.lang.StringBuffer")))
        (59 (DUP))
        (60 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (63 (LDC 1))
        (65 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (68 (ALOAD_0))
        (69 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (72 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (75 (LDC 2))
        (77 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (80 (ALOAD_0))
        (81 (GETFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (84 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (87 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (90 (ARETURN))
        (ENDOFCODE 91))
       (EXCEPTIONS (JVM::HANDLER 16 49 52 (CLASS "java.io.IOException")))
       (STACKMAP
        (16
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX)
               (STACK)
               NIL))
        (52
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX)
               (STACK (CLASS "java.io.IOException"))
               NIL))
        (56
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "getData" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
         (4 (ARETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getOffset" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
         (4 (IRETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getLength" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
         (4 (IRETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setAddress"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 96)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_0))
        (2 (PUTFIELD
                (JVM::FIELDCP "ipNumber"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (5 (ALOAD_1))
        (6 (LDC 1))
        (8 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                    ((CLASS "java.lang.String"))
                                    BOOLEAN)))
        (11 (IFNE 41))
        (14 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (17 (DUP))
        (18 (NEW (CLASS "java.lang.StringBuffer")))
        (21 (DUP))
        (22 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (25 (LDC 3))
        (27 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (30 (ALOAD_1))
        (31 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (34 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (37 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (40 (ATHROW))
        (41 (ALOAD_1))
        (42 (BIPUSH 11))
        (44 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (47 (ASTORE_2))
        (48 (ALOAD_0))
        (49 (ALOAD_2))
        (50 (INVOKESTATIC (METHODCP "getAddress"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (53 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (56 (ALOAD_0))
        (57 (ALOAD_2))
        (58 (INVOKESTATIC (METHODCP "getPort"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (61 (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (64 (GOTO 95))
        (67 (ASTORE_3))
        (68 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (71 (DUP))
        (72 (NEW (CLASS "java.lang.StringBuffer")))
        (75 (DUP))
        (76 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (79 (LDC 3))
        (81 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (84 (ALOAD_1))
        (85 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (88 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (91 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (94 (ATHROW))
        (95 (RETURN))
        (ENDOFCODE 96))
       (EXCEPTIONS (JVM::HANDLER 48 64 67
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
        (41
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (CLASS "java.lang.String")
                       TOPX TOPX)
               (STACK)
               NIL))
        (67
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (CLASS "java.lang.String")
                       (CLASS "java.lang.String")
                       TOPX)
               (STACK (CLASS "java.lang.NumberFormatException"))
               NIL))
        (95
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (CLASS "java.lang.String")
                       (CLASS "java.lang.String")
                       TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "setAddress"
      (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 27)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1
          (CHECKCAST (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (4 (ASTORE_2))
        (5 (ALOAD_0))
        (6 (ALOAD_2))
        (7 (GETFIELD
                (JVM::FIELDCP "host"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (CLASS "java.lang.String"))))
        (10 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (13 (ALOAD_0))
        (14 (ALOAD_2))
        (15 (GETFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (18 (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (21 (ALOAD_0))
        (22 (ICONST_0))
        (23 (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (26 (RETURN))
        (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setData"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 42)
       (PARSEDCODE
        (0 (ILOAD_3))
        (1 (IFLT 16))
        (4 (ILOAD_2))
        (5 (IFLT 16))
        (8 (ILOAD_3))
        (9 (ILOAD_2))
        (10 (IADD))
        (11 (ALOAD_1))
        (12 (ARRAYLENGTH))
        (13 (IF_ICMPLE 26))
        (16 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (19 (DUP))
        (20 (LDC 4))
        (22 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (25 (ATHROW))
        (26 (ALOAD_0))
        (27 (ALOAD_1))
        (28 (PUTFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (31 (ALOAD_0))
        (32 (ILOAD_2))
        (33 (PUTFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (36 (ALOAD_0))
        (37 (ILOAD_3))
        (38 (PUTFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (41 (RETURN))
        (ENDOFCODE 42))
       (EXCEPTIONS)
       (STACKMAP
        (16
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (ARRAY BYTE)
                       INT INT)
               (STACK)
               NIL))
        (26
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       (ARRAY BYTE)
                       INT INT)
               (STACK)
               NIL)))))
     (METHOD
      "setLength" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 14)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_0))
         (2 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
         (5 (ALOAD_0))
         (6 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
         (9 (ILOAD_1))
         (10 (INVOKEVIRTUAL
                  (METHODCP "setData"
                            "com.sun.cldc.io.j2me.datagram.DatagramObject"
                            ((ARRAY BYTE) INT INT)
                            VOID)))
         (13 (RETURN))
         (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 16)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (ARRAY BYTE))))
        (5 (ICONST_0))
        (6 (ICONST_0))
        (7 (INVOKEVIRTUAL
                (METHODCP "setData"
                          "com.sun.cldc.io.j2me.datagram.DatagramObject"
                          ((ARRAY BYTE) INT INT)
                          VOID)))
        (10 (ALOAD_0))
        (11 (ICONST_0))
        (12 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (15 (RETURN))
        (ENDOFCODE 16))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (JVM::LLOAD_1))
        (1 (JVM::L2I))
        (2 (ALOAD_0))
        (3 (GETFIELD
                (JVM::FIELDCP "len"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (6 (ALOAD_0))
        (7 (GETFIELD
                (JVM::FIELDCP "pointer"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (10 (ISUB))
        (11 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                    INT)))
        (14 (ISTORE_3))
        (15 (ALOAD_0))
        (16 (DUP))
        (17 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (20 (ILOAD_3))
        (21 (IADD))
        (22 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (25 (ILOAD_3))
        (26 (JVM::I2L))
        (27 (JVM::LRETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 39)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "pointer"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP "len"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (8 (IF_ICMPLT 13))
        (11 (ICONST_M1))
        (12 (IRETURN))
        (13 (ALOAD_0))
        (14 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (17 (ALOAD_0))
        (18 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (21 (ALOAD_0))
        (22 (DUP))
        (23 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (26 (DUP_X1))
        (27 (ICONST_1))
        (28 (IADD))
        (29 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (32 (IADD))
        (33 (BALOAD))
        (34 (JVM::SIPUSH 255))
        (37 (JVM::IAND))
        (38 (IRETURN))
        (ENDOFCODE 39))
       (EXCEPTIONS)
       (STACKMAP
        (13
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
              (STACK)
              NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 52)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP "pointer"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              INT)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP "buf"
                              "com.sun.cldc.io.j2me.datagram.DatagramObject"
                              (ARRAY BYTE))))
        (8 (ARRAYLENGTH))
        (9 (IF_ICMPLT 20))
        (12 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_0))
        (21 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (24 (ALOAD_0))
        (25 (DUP))
        (26 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (29 (DUP_X1))
        (30 (ICONST_1))
        (31 (IADD))
        (32 (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (35 (ILOAD_1))
        (36 (JVM::I2B))
        (37 (BASTORE))
        (38 (ALOAD_0))
        (39 (ICONST_0))
        (40 (PUTFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (43 (ALOAD_0))
        (44 (ALOAD_0))
        (45 (GETFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (48 (PUTFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (51 (RETURN))
        (ENDOFCODE 52))
       (EXCEPTIONS)
       (STACKMAP
        (20
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT)
               (STACK)
               NIL))))))
    (INTERFACES "javax.microedition.io.Datagram")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.datagram.Protocol"
    "com.sun.cldc.io.NetworkConnectionBase"
    (CONSTANT_POOL (STRING "No n:n in protocol name ")
                   (INT 65535)
                   (STRING "Bad port number ")
                   (STRING "Protocol must start with \"//\" ")
                   (STRING "Bad port number \"//\" ")
                   (STRING "Connection closed")
                   (STRING "Function not implemented")
                   (STRING "localhost")
                   (STRING "Failed to send datagram")
                   (STRING "Socket closed")
                   (STRING "Bad datagram length"))
    (FIELDS (FIELD "handle"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "host" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "port"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "open"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
          (4 (ALOAD_0))
          (5 (ACONST_NULL))
          (6 (PUTFIELD (JVM::FIELDCP "host"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (CLASS "java.lang.String"))))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getAddress"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PROTECTED* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 51)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (BIPUSH 58))
        (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                    INT)))
        (6 (ISTORE_1))
        (7 (ILOAD_1))
        (8 (IFGE 38))
        (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (14 (DUP))
        (15 (NEW (CLASS "java.lang.StringBuffer")))
        (18 (DUP))
        (19 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (22 (LDC 0))
        (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (27 (ALOAD_0))
        (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (34 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (37 (ATHROW))
        (38 (ILOAD_1))
        (39 (IFNE 44))
        (42 (ACONST_NULL))
        (43 (ARETURN))
        (44 (ALOAD_0))
        (45 (ICONST_0))
        (46 (ILOAD_1))
        (47 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (50 (ARETURN))
        (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String") INT)
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.String") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getPort"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 88)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (BIPUSH 58))
            (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                        INT)))
            (6 (ISTORE_1))
            (7 (ILOAD_1))
            (8 (IFGE 38))
            (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (14 (DUP))
            (15 (NEW (CLASS "java.lang.StringBuffer")))
            (18 (DUP))
            (19 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (22 (LDC 0))
            (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (27 (ALOAD_0))
            (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (34 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (37 (ATHROW))
            (38 (ALOAD_0))
            (39 (ILOAD_1))
            (40 (ICONST_1))
            (41 (IADD))
            (42 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                         (CLASS "java.lang.String"))))
            (45 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                        ((CLASS "java.lang.String"))
                                        INT)))
            (48 (ISTORE_2))
            (49 (ILOAD_2))
            (50 (IFLT 59))
            (53 (ILOAD_2))
            (54 (LDC 1))
            (56 (IF_ICMPLE 86))
            (59 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (62 (DUP))
            (63 (NEW (CLASS "java.lang.StringBuffer")))
            (66 (DUP))
            (67 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (70 (LDC 2))
            (72 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (75 (ALOAD_0))
            (76 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (79 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (82 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (85 (ATHROW))
            (86 (ILOAD_2))
            (87 (IRETURN))
            (ENDOFCODE 88))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (86 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 134)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (ICONST_0))
        (2 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                    CHAR)))
        (5 (BIPUSH 47))
        (7 (IF_ICMPNE 20))
        (10 (ALOAD_1))
        (11 (ICONST_1))
        (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (15 (BIPUSH 47))
        (17 (IF_ICMPEQ 47))
        (20 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (23 (DUP))
        (24 (NEW (CLASS "java.lang.StringBuffer")))
        (27 (DUP))
        (28 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (31 (LDC 3))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (ALOAD_1))
        (37 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (40 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (43 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (46 (ATHROW))
        (47 (ALOAD_1))
        (48 (ICONST_2))
        (49 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (52 (ASTORE_1))
        (53 (ALOAD_0))
        (54 (ALOAD_1))
        (55 (INVOKESTATIC (METHODCP "getAddress"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (58 (PUTFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    (CLASS "java.lang.String"))))
        (61 (ALOAD_0))
        (62 (ALOAD_1))
        (63 (INVOKESTATIC (METHODCP "getPort"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (66 (PUTFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    INT)))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    INT)))
        (73 (IFGT 103))
        (76 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (79 (DUP))
        (80 (NEW (CLASS "java.lang.StringBuffer")))
        (83 (DUP))
        (84 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (87 (LDC 4))
        (89 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (92 (ALOAD_1))
        (93 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (96 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (99 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (102 (ATHROW))
        (103 (ALOAD_0))
        (104 (ILOAD_2))
        (105 (ILOAD_3))
        (106 (ALOAD_0))
        (107 (GETFIELD (JVM::FIELDCP "host"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (CLASS "java.lang.String"))))
        (110 (IFNONNULL 120))
        (113 (ALOAD_0))
        (114 (GETFIELD (JVM::FIELDCP "port"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     INT)))
        (117 (GOTO 121))
        (120 (ICONST_0))
        (121
            (INVOKEVIRTUAL (METHODCP "open0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (INT BOOLEAN INT)
                                     VOID)))
        (124 (ALOAD_0))
        (125
            (INVOKESPECIAL (METHODCP "registerCleanup"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
        (128 (ALOAD_0))
        (129 (ICONST_1))
        (130 (PUTFIELD (JVM::FIELDCP "open"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     BOOLEAN)))
        (133 (RETURN))
        (ENDOFCODE 134))
       (EXCEPTIONS)
       (STACKMAP
         (20 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "java.lang.String")
                            INT INT)
                    (STACK)
                    NIL))
         (47 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "java.lang.String")
                            INT INT)
                    (STACK)
                    NIL))
         (103 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (CLASS "java.lang.String")
                             INT INT)
                     (STACK)
                     NIL))
         (120 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (CLASS "java.lang.String")
                             INT INT)
                     (STACK INT INT
                            (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                     NIL))
         (121 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (CLASS "java.lang.String")
                             INT INT)
                     (STACK INT INT INT
                            (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                     NIL)))))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "open"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     BOOLEAN)))
          (4 (IFNE 17))
          (7 (NEW (CLASS "java.io.IOException")))
          (10 (DUP))
          (11 (LDC 5))
          (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
          (16 (ATHROW))
          (17 (RETURN))
          (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
         (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                    (STACK)
                    NIL)))))
     (METHOD
      "getAddress" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (NEW (CLASS "java.lang.RuntimeException")))
         (7 (DUP))
         (8 (LDC 6))
         (10 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (13 (ATHROW))
         (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getMaximumLength" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (INVOKEVIRTUAL (METHODCP "getMaximumLength0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL INT)))
         (8 (IRETURN))
         (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getNominalLength" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (INVOKEVIRTUAL (METHODCP "getNominalLength0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL INT)))
         (8 (IRETURN))
         (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "send"
      (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 133)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (DUP))
        (2 (ASTORE_2))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    NIL VOID)))
        (8 (ALOAD_1))
        (9
          (CHECKCAST (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (12 (ASTORE_3))
        (13 (ALOAD_3))
        (14 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (17 (IFNE 47))
        (20 (ALOAD_3))
        (21 (ALOAD_0))
        (22 (ALOAD_3))
        (23 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (26 (IFNONNULL 34))
        (29 (LDC 7))
        (31 (GOTO 38))
        (34 (ALOAD_3))
        (35 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (38 (INVOKEVIRTUAL (METHODCP "getIpNumber"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (41 (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (44 (GOTO 47))
        (47 (ALOAD_0))
        (48 (ALOAD_3))
        (49 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (52 (ALOAD_3))
        (53 (GETFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (56 (ALOAD_3))
        (57 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (60 (ALOAD_3))
        (61 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (64 (ALOAD_3))
        (65 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (68 (INVOKEVIRTUAL (METHODCP "send0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     (INT INT (ARRAY BYTE) INT INT)
                                     INT)))
        (71 (ISTORE 4))
        (73 (ILOAD 4))
        (75 (ALOAD_3))
        (76 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (79 (IF_ICMPNE 85))
        (82 (GOTO 120))
        (85 (ILOAD 4))
        (87 (IFEQ 100))
        (90 (NEW (CLASS "java.io.IOException")))
        (93 (DUP))
        (94 (LDC 8))
        (96 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (99 (ATHROW))
        (100 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                     NIL VOID)))
        (103 (ALOAD_0))
        (104 (GETFIELD (JVM::FIELDCP "open"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     BOOLEAN)))
        (107 (IFNE 47))
        (110 (NEW (CLASS "java.io.InterruptedIOException")))
        (113 (DUP))
        (114 (LDC 9))
        (116 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.InterruptedIOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (119 (ATHROW))
        (120 (ALOAD_2))
        (121 (MONITOREXIT))
        (122 (GOTO 132))
        (125 (ASTORE 5))
        (127 (ALOAD_2))
        (128 (MONITOREXIT))
        (129 (ALOAD 5))
        (131 (ATHROW))
        (132 (RETURN))
        (ENDOFCODE 133))
       (EXCEPTIONS (JVM::HANDLER 4 122 125 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 125
                                 129 125 (CLASS "java.lang.Throwable")))
       (STACKMAP
        (34
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX)
               (STACK (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (38
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX)
               (STACK (CLASS "java.lang.String")
                      (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (47
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX)
               (STACK)
               NIL))
        (85
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL))
        (100
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL))
        (120
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL))
        (125 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "javax.microedition.io.Datagram")
                            (CLASS "javax.microedition.io.Datagram")
                            TOPX TOPX TOPX)
                    (STACK (CLASS "java.lang.Throwable"))
                    NIL))
        (132
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       INT TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "receive"
      (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 162)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (DUP))
        (2 (ASTORE_2))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    NIL VOID)))
        (8 (ALOAD_1))
        (9
          (CHECKCAST (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (12 (ASTORE_3))
        (13 (ALOAD_3))
        (14 (GETFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (17 (IFNE 44))
        (20 (ALOAD_3))
        (21 (ALOAD_0))
        (22 (ALOAD_3))
        (23 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (26 (IFNONNULL 34))
        (29 (LDC 7))
        (31 (GOTO 38))
        (34 (ALOAD_3))
        (35 (GETFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (38 (INVOKEVIRTUAL (METHODCP "getIpNumber"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (41 (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (44 (ALOAD_3))
        (45 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (48 (IFNE 61))
        (51 (NEW (CLASS "java.io.IOException")))
        (54 (DUP))
        (55 (LDC 10))
        (57 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (60 (ATHROW))
        (61 (ALOAD_0))
        (62 (ALOAD_3))
        (63 (GETFIELD
                 (JVM::FIELDCP "buf"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (ARRAY BYTE))))
        (66 (ALOAD_3))
        (67 (GETFIELD
                 (JVM::FIELDCP "off"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (70 (ALOAD_3))
        (71 (GETFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (74 (INVOKEVIRTUAL (METHODCP "receive0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     ((ARRAY BYTE) INT INT)
                                     LONG)))
        (77 (JVM::LSTORE 4))
        (79 (JVM::LLOAD 4))
        (81 (JVM::L2I))
        (82 (LDC 1))
        (84 (JVM::IAND))
        (85 (ISTORE 6))
        (87 (ILOAD 6))
        (89 (IFEQ 95))
        (92 (GOTO 115))
        (95 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                    NIL VOID)))
        (98 (ALOAD_0))
        (99 (GETFIELD (JVM::FIELDCP "open"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    BOOLEAN)))
        (102 (IFNE 61))
        (105 (NEW (CLASS "java.io.InterruptedIOException")))
        (108 (DUP))
        (109 (LDC 9))
        (111 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.InterruptedIOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (114 (ATHROW))
        (115 (ALOAD_3))
        (116 (ILOAD 6))
        (118
            (PUTFIELD
                 (JVM::FIELDCP "len"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (121 (ALOAD_3))
        (122 (JVM::LLOAD 4))
        (124 (BIPUSH 32))
        (126 (JVM::LSHR))
        (127 (JVM::L2I))
        (128
            (PUTFIELD
                 (JVM::FIELDCP "ipNumber"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (131 (ALOAD_3))
        (132 (JVM::LLOAD 4))
        (134 (BIPUSH 16))
        (136 (JVM::LSHR))
        (137 (JVM::L2I))
        (138 (LDC 1))
        (140 (JVM::IAND))
        (141
            (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (144 (ALOAD_3))
        (145 (ICONST_0))
        (146
            (PUTFIELD
                 (JVM::FIELDCP "pointer"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (149 (ALOAD_2))
        (150 (MONITOREXIT))
        (151 (GOTO 161))
        (154 (ASTORE 7))
        (156 (ALOAD_2))
        (157 (MONITOREXIT))
        (158 (ALOAD 7))
        (160 (ATHROW))
        (161 (RETURN))
        (ENDOFCODE 162))
       (EXCEPTIONS (JVM::HANDLER 4 151 154 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 154
                                 158 154 (CLASS "java.lang.Throwable")))
       (STACKMAP
        (34
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (38
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK (CLASS "java.lang.String")
                      (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
               NIL))
        (44
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK)
               NIL))
        (61
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       TOPX TOPX TOPX TOPX)
               (STACK)
               NIL))
        (95
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       LONG TOPX INT TOPX)
               (STACK)
               NIL))
        (115
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       LONG TOPX INT TOPX)
               (STACK)
               NIL))
        (154 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (CLASS "javax.microedition.io.Datagram")
                            (CLASS "javax.microedition.io.Datagram")
                            TOPX TOPX TOPX TOPX TOPX)
                    (STACK (CLASS "java.lang.Throwable"))
                    NIL))
        (161
          (FRAME
               (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "javax.microedition.io.Datagram")
                       (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")
                       LONG TOPX INT TOPX)
               (STACK)
               NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "open"
                                   "com.sun.cldc.io.j2me.datagram.Protocol"
                                   BOOLEAN)))
        (4 (IFEQ 16))
        (7 (ALOAD_0))
        (8 (ICONST_0))
        (9 (PUTFIELD (JVM::FIELDCP "open"
                                   "com.sun.cldc.io.j2me.datagram.Protocol"
                                   BOOLEAN)))
        (12 (ALOAD_0))
        (13 (INVOKEVIRTUAL (METHODCP "close0"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP
         (16 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol"))
                    (STACK)
                    NIL)))))
     (METHOD
      "newDatagram" (PARAMETERS INT)
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (NEWARRAY BYTE))
        (4 (ILOAD_1))
        (5
         (INVOKEVIRTUAL (METHODCP "newDatagram"
                                  "com.sun.cldc.io.j2me.datagram.Protocol"
                                  ((ARRAY BYTE) INT)
                                  (CLASS "javax.microedition.io.Datagram"))))
        (8 (ARETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "newDatagram"
      (PARAMETERS INT (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (NEWARRAY BYTE))
        (4 (ILOAD_1))
        (5 (ALOAD_2))
        (6
         (INVOKEVIRTUAL (METHODCP "newDatagram"
                                  "com.sun.cldc.io.j2me.datagram.Protocol"
                                  ((ARRAY BYTE)
                                   INT (CLASS "java.lang.String"))
                                  (CLASS "javax.microedition.io.Datagram"))))
        (9 (ARETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "newDatagram"
      (PARAMETERS (ARRAY BYTE) INT)
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    NIL VOID)))
        (4 (NEW (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
        (7 (DUP))
        (8 (ALOAD_0))
        (9 (ALOAD_1))
        (10 (ILOAD_2))
        (11 (INVOKESPECIAL
                 (METHODCP "<init>"
                           "com.sun.cldc.io.j2me.datagram.DatagramObject"
                           ((CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                            (ARRAY BYTE)
                            INT)
                           VOID)))
        (14 (ASTORE_3))
        (15 (ALOAD_0))
        (16 (GETFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    (CLASS "java.lang.String"))))
        (19 (IFNULL 38))
        (22 (ALOAD_3))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    (CLASS "java.lang.String"))))
        (27 (PUTFIELD
                 (JVM::FIELDCP "host"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               (CLASS "java.lang.String"))))
        (30 (ALOAD_3))
        (31 (ALOAD_0))
        (32 (GETFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.datagram.Protocol"
                                    INT)))
        (35 (PUTFIELD
                 (JVM::FIELDCP "port"
                               "com.sun.cldc.io.j2me.datagram.DatagramObject"
                               INT)))
        (38 (ALOAD_3))
        (39 (ARETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP
        (38
         (FRAME
              (LOCALS (CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                      (ARRAY BYTE)
                      INT
                      (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject"))
              (STACK)
              NIL)))))
     (METHOD
      "newDatagram"
      (PARAMETERS (ARRAY BYTE)
                  INT (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "javax.microedition.io.Datagram")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 25)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.datagram.Protocol"
                                     NIL VOID)))
         (4 (NEW (CLASS "com.sun.cldc.io.j2me.datagram.DatagramObject")))
         (7 (DUP))
         (8 (ALOAD_0))
         (9 (ALOAD_1))
         (10 (ILOAD_2))
         (11 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.datagram.DatagramObject"
                            ((CLASS "com.sun.cldc.io.j2me.datagram.Protocol")
                             (ARRAY BYTE)
                             INT)
                            VOID)))
         (14 (ASTORE 4))
         (16 (ALOAD 4))
         (18 (ALOAD_3))
         (19 (INVOKEVIRTUAL
                  (METHODCP "setAddress"
                            "com.sun.cldc.io.j2me.datagram.DatagramObject"
                            ((CLASS "java.lang.String"))
                            VOID)))
         (22 (ALOAD 4))
         (24 (ARETURN))
         (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open0" (PARAMETERS INT BOOLEAN INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "send0"
             (PARAMETERS INT INT (ARRAY BYTE)
                         INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "receive0"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getHostByAddr"
             (PARAMETERS INT (ARRAY BYTE))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getIpNumber"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getMaximumLength0" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "getNominalLength0" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "close0" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*)
             (CODE))
     (METHOD "registerCleanup" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES "javax.microedition.io.DatagramConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.debug.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (STRING "")
                   (STRING "Bad protocol option:")
                   (STRING "Stream already opened"))
    (FIELDS (FIELD "opened" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "com.sun.cldc.io.ConnectionBase"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (ICONST_0))
             (6 (PUTFIELD (JVM::FIELDCP "opened"
                                        "com.sun.cldc.io.j2me.debug.Protocol"
                                        BOOLEAN)))
             (9 (RETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 37)
       (PARSEDCODE
            (0 (ALOAD_1))
            (1 (LDC 0))
            (3 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                        ((CLASS "java.lang.Object"))
                                        BOOLEAN)))
            (6 (IFNE 36))
            (9 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (12 (DUP))
            (13 (NEW (CLASS "java.lang.StringBuffer")))
            (16 (DUP))
            (17 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (20 (LDC 1))
            (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (25 (ALOAD_1))
            (26 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (29 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (32 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (35 (ATHROW))
            (36 (RETURN))
            (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP
            (36 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 31)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "opened"
                                     "com.sun.cldc.io.j2me.debug.Protocol"
                                     BOOLEAN)))
          (4 (IFEQ 17))
          (7 (NEW (CLASS "java.io.IOException")))
          (10 (DUP))
          (11 (LDC 2))
          (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
          (16 (ATHROW))
          (17 (ALOAD_0))
          (18 (ICONST_1))
          (19 (PUTFIELD (JVM::FIELDCP "opened"
                                      "com.sun.cldc.io.j2me.debug.Protocol"
                                      BOOLEAN)))
          (22 (NEW (CLASS "com.sun.cldc.io.j2me.debug.PrivateOutputStream")))
          (25 (DUP))
          (26 (ALOAD_0))
          (27 (INVOKESPECIAL
                   (METHODCP "<init>"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             ((CLASS "com.sun.cldc.io.j2me.debug.Protocol"))
                             VOID)))
          (30 (ARETURN))
          (ENDOFCODE 31))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))
                       (STACK)
                       NIL))))))
    (INTERFACES "javax.microedition.io.OutputConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Connection closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.debug.Protocol")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6
          (PUTFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (9 (RETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 23)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (GETFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (ILOAD_1))
        (18 (JVM::I2C))
        (19 (INVOKESTATIC
                 (METHODCP "putchar"
                           "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                           (CHAR)
                           VOID)))
        (22 (RETURN))
        (ENDOFCODE 23))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.PrivateOutputStream")
                     INT)
             (STACK)
             NIL)))))
     (METHOD "putchar" (PARAMETERS CHAR)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 21)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (GETFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (4 (IFNULL 20))
        (7 (ALOAD_0))
        (8
          (GETFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (11 (ICONST_0))
        (12 (PUTFIELD (JVM::FIELDCP "opened"
                                    "com.sun.cldc.io.j2me.debug.Protocol"
                                    BOOLEAN)))
        (15 (ALOAD_0))
        (16 (ACONST_NULL))
        (17
          (PUTFIELD
               (JVM::FIELDCP "parent"
                             "com.sun.cldc.io.j2me.debug.PrivateOutputStream"
                             (CLASS "com.sun.cldc.io.j2me.debug.Protocol"))))
        (20 (RETURN))
        (ENDOFCODE 21))
       (EXCEPTIONS)
       (STACKMAP
        (20
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.debug.PrivateOutputStream"))
            (STACK)
            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.events.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.io.ConnectionBase"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "open"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
           (0 (NEW (CLASS "com.sun.cldc.io.j2me.events.PrivateInputStream")))
           (3 (DUP))
           (4 (INVOKESPECIAL
                   (METHODCP "<init>"
                             "com.sun.cldc.io.j2me.events.PrivateInputStream"
                             NIL VOID)))
           (7 (ARETURN))
           (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "readByteArray"
      (PARAMETERS (CLASS "java.io.DataInput"))
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 8)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (CHECKCAST
                   (CLASS "com.sun.cldc.io.j2me.events.PrivateInputStream")))
           (4 (INVOKEVIRTUAL
                   (METHODCP "readByteArray"
                             "com.sun.cldc.io.j2me.events.PrivateInputStream"
                             NIL (ARRAY BYTE))))
           (7 (ARETURN))
           (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES "javax.microedition.io.InputConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.events.PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "events: function not implemented"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.io.InputStream" NIL VOID)))
           (4 (ALOAD_0))
           (5 (INVOKESPECIAL
                   (METHODCP "open"
                             "com.sun.cldc.io.j2me.events.PrivateInputStream"
                             NIL VOID)))
           (8 (RETURN))
           (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "readInt" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "readByteArray" (PARAMETERS)
             (RETURNTYPE ARRAY BYTE)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "readFully" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readFully"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skipBytes" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readBoolean" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readByte" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readUnsignedByte" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readShort" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readUnsignedShort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readChar" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "readUTF" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE)))
    (INTERFACES "java.io.DataInput")
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "transfer-encoding")
                   (STRING "chunked")
                   (STRING "connection is not open")
                   (LONG -1)
                   (STRING "No Chunk Size")
                   (STRING "Bogus chunk size")
                   (STRING "missing CRLF"))
    (FIELDS (FIELD "bytesleft" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "bytesread" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "chunked" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "eof" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "this$0"
                   (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 85)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6 (PUTFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (9 (ALOAD_0))
        (10 (ICONST_0))
        (11 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (14 (ALOAD_0))
        (15 (ICONST_0))
        (16 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (19 (ALOAD_0))
        (20 (ICONST_0))
        (21 (PUTFIELD
                 (JVM::FIELDCP
                      "chunked"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (24 (ALOAD_0))
        (25 (ICONST_0))
        (26 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (29 (ALOAD_1))
        (30 (INVOKESTATIC
                 (METHODCP "access$000"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.util.Hashtable"))))
        (33 (LDC 0))
        (35 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                     ((CLASS "java.lang.Object"))
                                     (CLASS "java.lang.Object"))))
        (38 (CHECKCAST (CLASS "java.lang.String")))
        (41 (ASTORE_2))
        (42 (ALOAD_2))
        (43 (IFNULL 84))
        (46 (ALOAD_2))
        (47 (LDC 1))
        (49 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (52 (IFEQ 84))
        (55 (ALOAD_0))
        (56 (ICONST_1))
        (57 (PUTFIELD
                 (JVM::FIELDCP
                      "chunked"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (60 (ALOAD_0))
        (61 (ALOAD_0))
        (62
         (INVOKESPECIAL
            (METHODCP "readChunkSize"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      NIL INT)))
        (65 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (68 (ALOAD_0))
        (69 (ALOAD_0))
        (70 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (73 (IFNE 80))
        (76 (ICONST_1))
        (77 (GOTO 81))
        (80 (ICONST_0))
        (81 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (84 (RETURN))
        (ENDOFCODE 85))
       (EXCEPTIONS)
       (STACKMAP
        (80
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (CLASS "com.sun.cldc.io.j2me.http.Protocol")
              (CLASS "java.lang.String"))
          (STACK
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (81
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (CLASS "com.sun.cldc.io.j2me.http.Protocol")
              (CLASS "java.lang.String"))
          (STACK
             INT
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (84
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (CLASS "com.sun.cldc.io.j2me.http.Protocol")
              (CLASS "java.lang.String"))
          (STACK)
          NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 25)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKESTATIC
                (METHODCP "access$100"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          BOOLEAN)))
        (7 (IFEQ 15))
        (10 (ALOAD_0))
        (11 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (14 (IRETURN))
        (15 (NEW (CLASS "java.io.IOException")))
        (18 (DUP))
        (19 (LDC 2))
        (21 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (24 (ATHROW))
        (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP
        (15
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          (STACK)
          NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 96)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "eof"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     BOOLEAN)))
        (4 (IFEQ 9))
        (7 (ICONST_M1))
        (8 (IRETURN))
        (9 (ALOAD_0))
        (10 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (13 (IFGT 49))
        (16 (ALOAD_0))
        (17 (GETFIELD
                 (JVM::FIELDCP
                      "chunked"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (20 (IFEQ 49))
        (23 (ALOAD_0))
        (24
         (INVOKESPECIAL
            (METHODCP "readCRLF"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      NIL VOID)))
        (27 (ALOAD_0))
        (28 (ALOAD_0))
        (29
         (INVOKESPECIAL
            (METHODCP "readChunkSize"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      NIL INT)))
        (32 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (35 (ALOAD_0))
        (36 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (39 (IFNE 49))
        (42 (ALOAD_0))
        (43 (ICONST_1))
        (44 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (47 (ICONST_M1))
        (48 (IRETURN))
        (49 (ALOAD_0))
        (50 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (53 (INVOKESTATIC
                 (METHODCP "access$200"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.io.DataInputStream"))))
        (56 (INVOKEVIRTUAL (METHODCP "read"
                                     "java.io.DataInputStream" NIL INT)))
        (59 (ISTORE_1))
        (60 (ALOAD_0))
        (61 (ILOAD_1))
        (62 (ICONST_M1))
        (63 (IF_ICMPNE 70))
        (66 (ICONST_1))
        (67 (GOTO 71))
        (70 (ICONST_0))
        (71 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (74 (ALOAD_0))
        (75 (DUP))
        (76 (GETFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (79 (ICONST_1))
        (80 (ISUB))
        (81 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesleft"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (84 (ALOAD_0))
        (85 (DUP))
        (86 (GETFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (89 (ICONST_1))
        (90 (IADD))
        (91 (PUTFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (94 (ILOAD_1))
        (95 (IRETURN))
        (ENDOFCODE 96))
       (EXCEPTIONS)
       (STACKMAP
        (9
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              TOPX)
          (STACK)
          NIL))
        (49
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              TOPX)
          (STACK)
          NIL))
        (70
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (71
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK
             INT
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKEVIRTUAL (METHODCP "getLength"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    NIL LONG)))
        (7 (JVM::LSTORE_2))
        (8 (JVM::LLOAD_2))
        (9 (JVM::LDC2_W 3))
        (12 (LCMP))
        (13 (IFEQ 27))
        (16 (JVM::LLOAD_2))
        (17 (ALOAD_0))
        (18 (GETFIELD
                 (JVM::FIELDCP
                      "bytesread"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      INT)))
        (21 (JVM::I2L))
        (22 (JVM::LSUB))
        (23 (JVM::LSTORE_2))
        (24 (GOTO 31))
        (27 (ALOAD_1))
        (28 (ARRAYLENGTH))
        (29 (JVM::I2L))
        (30 (JVM::LSTORE_2))
        (31 (JVM::LLOAD_2))
        (32 (LCONST_0))
        (33 (LCMP))
        (34 (IFNE 44))
        (37 (ALOAD_0))
        (38 (ICONST_1))
        (39 (PUTFIELD
                 (JVM::FIELDCP
                      "eof"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      BOOLEAN)))
        (42 (ICONST_M1))
        (43 (IRETURN))
        (44 (ALOAD_0))
        (45 (ALOAD_1))
        (46 (ICONST_0))
        (47 (JVM::LLOAD_2))
        (48 (ALOAD_1))
        (49 (ARRAYLENGTH))
        (50 (JVM::I2L))
        (51 (LCMP))
        (52 (IFGE 59))
        (55 (JVM::LLOAD_2))
        (56 (GOTO 62))
        (59 (ALOAD_1))
        (60 (ARRAYLENGTH))
        (61 (JVM::I2L))
        (62 (JVM::L2I))
        (63 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (66 (IRETURN))
        (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK)
          NIL))
        (31
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK)
          NIL))
        (44
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK)
          NIL))
        (59
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK
             INT (ARRAY BYTE)
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL))
        (62
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              (ARRAY BYTE)
              LONG TOPX)
          (STACK
             TOPX LONG INT (ARRAY BYTE)
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          NIL)))))
     (METHOD
      "readChunkSize" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 96)
       (PARSEDCODE
        (0 (ICONST_M1))
        (1 (ISTORE_1))
        (2 (ALOAD_0))
        (3 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (6 (ALOAD_0))
        (7 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (10 (INVOKESTATIC
                 (METHODCP "access$200"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.io.DataInputStream"))))
        (13 (INVOKESTATIC
                 (METHODCP "access$300"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol")
                            (CLASS "java.io.InputStream"))
                           (CLASS "java.lang.String"))))
        (16 (ASTORE_2))
        (17 (ALOAD_2))
        (18 (IFNONNULL 31))
        (21 (NEW (CLASS "java.io.IOException")))
        (24 (DUP))
        (25 (LDC 4))
        (27 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (30 (ATHROW))
        (31 (ICONST_0))
        (32 (ISTORE_3))
        (33 (GOTO 60))
        (36 (ALOAD_2))
        (37 (ILOAD_3))
        (38 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (41 (ISTORE 4))
        (43 (ILOAD 4))
        (45 (BIPUSH 16))
        (47 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                    INT)))
        (50 (ICONST_M1))
        (51 (IF_ICMPNE 57))
        (54 (GOTO 68))
        (57 (IINC 3 1))
        (60 (ILOAD_3))
        (61 (ALOAD_2))
        (62 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (65 (IF_ICMPLT 36))
        (68 (ALOAD_2))
        (69 (ICONST_0))
        (70 (ILOAD_3))
        (71 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (74 (BIPUSH 16))
        (76 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String") INT)
                                    INT)))
        (79 (ISTORE_1))
        (80 (GOTO 94))
        (83 (ASTORE_2))
        (84 (NEW (CLASS "java.io.IOException")))
        (87 (DUP))
        (88 (LDC 5))
        (90 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (93 (ATHROW))
        (94 (ILOAD_1))
        (95 (IRETURN))
        (ENDOFCODE 96))
       (EXCEPTIONS (JVM::HANDLER 2 80 83
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
        (31
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              TOPX TOPX)
          (STACK)
          NIL))
        (36
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL))
        (57
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT INT)
          (STACK)
          NIL))
        (60
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL))
        (68
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL))
        (83
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT TOPX TOPX TOPX)
          (STACK (CLASS "java.lang.NumberFormatException"))
          NIL))
        (94
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT (CLASS "java.lang.String")
              INT TOPX)
          (STACK)
          NIL)))))
     (METHOD
      "readCRLF" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 55)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKESTATIC
                (METHODCP "access$200"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          (CLASS "java.io.DataInputStream"))))
        (7 (INVOKEVIRTUAL (METHODCP "read"
                                    "java.io.DataInputStream" NIL INT)))
        (10 (ISTORE_1))
        (11 (ILOAD_1))
        (12 (BIPUSH 13))
        (14 (IF_ICMPEQ 27))
        (17 (NEW (CLASS "java.io.IOException")))
        (20 (DUP))
        (21 (LDC 6))
        (23 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (26 (ATHROW))
        (27 (ALOAD_0))
        (28 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (31 (INVOKESTATIC
                 (METHODCP "access$200"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           (CLASS "java.io.DataInputStream"))))
        (34 (INVOKEVIRTUAL (METHODCP "read"
                                     "java.io.DataInputStream" NIL INT)))
        (37 (ISTORE_1))
        (38 (ILOAD_1))
        (39 (BIPUSH 10))
        (41 (IF_ICMPEQ 54))
        (44 (NEW (CLASS "java.io.IOException")))
        (47 (DUP))
        (48 (LDC 6))
        (50 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (53 (ATHROW))
        (54 (RETURN))
        (ENDOFCODE 55))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK)
          NIL))
        (54
         (FRAME
          (LOCALS
              (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
              INT)
          (STACK)
          NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (4 (INVOKESTATIC
                (METHODCP "access$406"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          INT)))
        (7 (IFNE 27))
        (10 (ALOAD_0))
        (11 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (14 (INVOKESTATIC
                 (METHODCP "access$100"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           BOOLEAN)))
        (17 (IFEQ 27))
        (20 (ALOAD_0))
        (21 (GETFIELD
                 (JVM::FIELDCP
                      "this$0"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (24 (INVOKEVIRTUAL (METHODCP "disconnect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
        (27
         (FRAME
          (LOCALS
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))
          (STACK)
          NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
    "java.io.OutputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "output"
                   (CLASS "java.io.ByteArrayOutputStream")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "this$0"
                   (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 21)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6 (PUTFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (9 (ALOAD_0))
        (10 (NEW (CLASS "java.io.ByteArrayOutputStream")))
        (13 (DUP))
        (14 (INVOKESPECIAL (METHODCP "<init>" "java.io.ByteArrayOutputStream"
                                     NIL VOID)))
        (17
           (PUTFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (20 (RETURN))
        (ENDOFCODE 21))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (ILOAD_1))
        (5 (INVOKEVIRTUAL (METHODCP "write"
                                    "java.io.ByteArrayOutputStream" (INT)
                                    VOID)))
        (8 (RETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "size" "java.io.ByteArrayOutputStream"
                                    NIL INT)))
        (7 (IFLE 17))
        (10 (ALOAD_0))
        (11
           (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (14 (INVOKEVIRTUAL (METHODCP "connect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
          (LOCALS
            (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))
          (STACK)
          NIL)))))
     (METHOD
      "toByteArray" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "toByteArray"
                                    "java.io.ByteArrayOutputStream"
                                    NIL (ARRAY BYTE))))
        (7 (ARETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD
                (JVM::FIELDCP
                     "output"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "java.io.ByteArrayOutputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "size" "java.io.ByteArrayOutputStream"
                                    NIL INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 32)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (INVOKEVIRTUAL
           (METHODCP "flush"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (8 (INVOKESTATIC
                (METHODCP "access$406"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                          INT)))
        (11 (IFNE 31))
        (14 (ALOAD_0))
        (15
           (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (18 (INVOKESTATIC
                 (METHODCP "access$100"
                           "com.sun.cldc.io.j2me.http.Protocol"
                           ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                           BOOLEAN)))
        (21 (IFEQ 31))
        (24 (ALOAD_0))
        (25
           (GETFIELD
                (JVM::FIELDCP
                     "this$0"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     (CLASS "com.sun.cldc.io.j2me.http.Protocol"))))
        (28 (INVOKEVIRTUAL (METHODCP "disconnect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (31 (RETURN))
        (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP
        (31
         (FRAME
          (LOCALS
            (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))
          (STACK)
          NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.http.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (STRING "HTTP/1.1")
                   (STRING "GET")
                   (STRING "http")
                   (STRING "already connected")
                   (STRING "illegal mode: ")
                   (STRING "already open")
                   (STRING "connection is closed")
                   (STRING "write-only connection")
                   (STRING "read-only connection")
                   (STRING ":")
                   (STRING "connection already open")
                   (STRING "HEAD")
                   (STRING "POST")
                   (STRING "unsupported method: ")
                   (LONG -1)
                   (STRING "content-length")
                   (STRING "content-type")
                   (STRING "content-encoding")
                   (STRING "expires")
                   (STRING "date")
                   (STRING "last-modified")
                   (STRING "socket://")
                   (STRING "Content-Length")
                   (STRING "")
                   (STRING " ")
                   (STRING "#")
                   (STRING "?")
                   (STRING "rn")
                   (STRING "Host")
                   (STRING ": ")
                   (STRING "HTTP")
                   (STRING "malformed response message")
                   (STRING "malformed header field")
                   (STRING "malformed URL")
                   (STRING "protocol must be nhttpn")
                   (STRING "//")
                   (STRING "invalid port")
                   (STRING "/")
                   (STRING "invalid path")
                   (STRING "invalid ref"))
    (FIELDS
      (FIELD "index"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "url" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "protocol" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "host" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "file" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "ref" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "query" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "port"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "responseCode"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "responseMsg" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "reqProperties"
             (CLASS "java.util.Hashtable")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "headerFields"
             (CLASS "java.util.Hashtable")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "headerFieldNames"
             (ARRAY (CLASS "java.lang.String"))
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "headerFieldValues"
             (ARRAY (CLASS "java.lang.String"))
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "method" (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "opens"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "mode"
             INT (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "connected"
             BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "in"
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "out"
             (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "appDataIn"
             (CLASS "java.io.DataInputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "appDataOut"
             (CLASS "java.io.DataOutputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "streamConnnection"
             (CLASS "javax.microedition.io.StreamConnection")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "streamOutput"
             (CLASS "java.io.DataOutputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "streamInput"
             (CLASS "java.io.DataInputStream")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "stringbuffer"
             (CLASS "java.lang.StringBuffer")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1)
      (FIELD "http_version"
             (CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PRIVATE*)
             -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 79)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "com.sun.cldc.io.ConnectionBase"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (BIPUSH 80))
         (7 (PUTFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
         (10 (ALOAD_0))
         (11 (LDC 0))
         (13 (PUTFIELD (JVM::FIELDCP "http_version"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (16 (ALOAD_0))
         (17 (NEW (CLASS "java.util.Hashtable")))
         (20 (DUP))
         (21 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.Hashtable" NIL VOID)))
         (24 (PUTFIELD (JVM::FIELDCP "reqProperties"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (27 (ALOAD_0))
         (28 (NEW (CLASS "java.util.Hashtable")))
         (31 (DUP))
         (32 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.Hashtable" NIL VOID)))
         (35 (PUTFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (38 (ALOAD_0))
         (39 (NEW (CLASS "java.lang.StringBuffer")))
         (42 (DUP))
         (43 (BIPUSH 32))
         (45 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                      VOID)))
         (48 (PUTFIELD (JVM::FIELDCP "stringbuffer"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.StringBuffer"))))
         (51 (ALOAD_0))
         (52 (ICONST_0))
         (53 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (56 (ALOAD_0))
         (57 (ICONST_0))
         (58 (PUTFIELD (JVM::FIELDCP "connected"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     BOOLEAN)))
         (61 (ALOAD_0))
         (62 (LDC 1))
         (64 (PUTFIELD (JVM::FIELDCP "method"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (67 (ALOAD_0))
         (68 (ICONST_M1))
         (69 (PUTFIELD (JVM::FIELDCP "responseCode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (72 (ALOAD_0))
         (73 (LDC 2))
         (75 (PUTFIELD (JVM::FIELDCP "protocol"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (78 (RETURN))
         (ENDOFCODE 79))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 84)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
         (4 (IFLE 17))
         (7 (NEW (CLASS "java.io.IOException")))
         (10 (DUP))
         (11 (LDC 3))
         (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (16 (ATHROW))
         (17 (ALOAD_0))
         (18 (DUP))
         (19 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (22 (ICONST_1))
         (23 (IADD))
         (24 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (27 (ILOAD_2))
         (28 (ICONST_1))
         (29 (IF_ICMPEQ 69))
         (32 (ILOAD_2))
         (33 (ICONST_2))
         (34 (IF_ICMPEQ 69))
         (37 (ILOAD_2))
         (38 (ICONST_3))
         (39 (IF_ICMPEQ 69))
         (42 (NEW (CLASS "java.io.IOException")))
         (45 (DUP))
         (46 (NEW (CLASS "java.lang.StringBuffer")))
         (49 (DUP))
         (50 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (53 (LDC 4))
         (55 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (58 (ILOAD_2))
         (59 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (62 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (65 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (68 (ATHROW))
         (69 (ALOAD_0))
         (70 (ALOAD_1))
         (71 (PUTFIELD (JVM::FIELDCP "url"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
         (74 (ALOAD_0))
         (75 (ILOAD_2))
         (76 (PUTFIELD (JVM::FIELDCP "mode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
         (79 (ALOAD_0))
         (80 (INVOKEVIRTUAL (METHODCP "parseURL"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL VOID)))
         (83 (RETURN))
         (ENDOFCODE 84))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (69 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 26)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (DUP))
            (2 (GETFIELD (JVM::FIELDCP "opens"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       INT)))
            (5 (ICONST_1))
            (6 (ISUB))
            (7 (DUP_X1))
            (8 (PUTFIELD (JVM::FIELDCP "opens"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       INT)))
            (11 (IFNE 25))
            (14 (ALOAD_0))
            (15 (GETFIELD (JVM::FIELDCP "connected"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        BOOLEAN)))
            (18 (IFEQ 25))
            (21 (ALOAD_0))
            (22 (INVOKEVIRTUAL (METHODCP "disconnect"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
            (25 (RETURN))
            (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP
            (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (4 (IFNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 5))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (ALOAD_0))
        (18 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (21 (IFNE 34))
        (24 (NEW (CLASS "java.io.IOException")))
        (27 (DUP))
        (28 (LDC 6))
        (30 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (33 (ATHROW))
        (34 (ALOAD_0))
        (35 (GETFIELD (JVM::FIELDCP "mode"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (38 (ICONST_1))
        (39 (IF_ICMPEQ 60))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "mode"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (46 (ICONST_3))
        (47 (IF_ICMPEQ 60))
        (50 (NEW (CLASS "java.io.IOException")))
        (53 (DUP))
        (54 (LDC 7))
        (56 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (59 (ATHROW))
        (60 (ALOAD_0))
        (61 (INVOKEVIRTUAL (METHODCP "connect"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL VOID)))
        (64 (ALOAD_0))
        (65 (DUP))
        (66 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (69 (ICONST_1))
        (70 (IADD))
        (71 (PUTFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (74 (ALOAD_0))
        (75
         (NEW
            (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream")))
        (78 (DUP))
        (79 (ALOAD_0))
        (80
         (INVOKESPECIAL
            (METHODCP "<init>"
                      "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"
                      ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                      VOID)))
        (83
         (PUTFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (86 (ALOAD_0))
        (87
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (90 (ARETURN))
        (ENDOFCODE 91))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (34 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openDataInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 49)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "appDataIn"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.io.DataInputStream"))))
        (4 (IFNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 5))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (ALOAD_0))
        (18
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (21 (IFNONNULL 29))
        (24 (ALOAD_0))
        (25 (INVOKEVIRTUAL (METHODCP "openInputStream"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     NIL (CLASS "java.io.InputStream"))))
        (28 (POP))
        (29 (ALOAD_0))
        (30 (NEW (CLASS "java.io.DataInputStream")))
        (33 (DUP))
        (34 (ALOAD_0))
        (35
         (GETFIELD
          (JVM::FIELDCP
           "in"
           "com.sun.cldc.io.j2me.http.Protocol"
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateInputStream"))))
        (38 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataInputStream"
                                     ((CLASS "java.io.InputStream"))
                                     VOID)))
        (41 (PUTFIELD (JVM::FIELDCP "appDataIn"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataInputStream"))))
        (44 (ALOAD_0))
        (45 (GETFIELD (JVM::FIELDCP "appDataIn"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataInputStream"))))
        (48 (ARETURN))
        (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "openDataOutputStream"
                                     "com.sun.cldc.io.j2me.http.Protocol" NIL
                                     (CLASS "java.io.DataOutputStream"))))
         (4 (ARETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openDataOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.DataOutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 94)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "mode"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (4 (ICONST_2))
        (5 (IF_ICMPEQ 26))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "mode"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (12 (ICONST_3))
        (13 (IF_ICMPEQ 26))
        (16 (NEW (CLASS "java.io.IOException")))
        (19 (DUP))
        (20 (LDC 8))
        (22 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (25 (ATHROW))
        (26 (ALOAD_0))
        (27 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (30 (IFNE 43))
        (33 (NEW (CLASS "java.io.IOException")))
        (36 (DUP))
        (37 (LDC 6))
        (39 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (42 (ATHROW))
        (43 (ALOAD_0))
        (44
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (47 (IFNULL 60))
        (50 (NEW (CLASS "java.io.IOException")))
        (53 (DUP))
        (54 (LDC 5))
        (56 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (59 (ATHROW))
        (60 (ALOAD_0))
        (61 (DUP))
        (62 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (65 (ICONST_1))
        (66 (IADD))
        (67 (PUTFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (70 (ALOAD_0))
        (71
         (NEW
           (CLASS "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream")))
        (74 (DUP))
        (75 (ALOAD_0))
        (76
         (INVOKESPECIAL
           (METHODCP "<init>"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     ((CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                     VOID)))
        (79
         (PUTFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (82 (NEW (CLASS "java.io.DataOutputStream")))
        (85 (DUP))
        (86 (ALOAD_0))
        (87
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (90 (INVOKESPECIAL (METHODCP "<init>" "java.io.DataOutputStream"
                                     ((CLASS "java.io.OutputStream"))
                                     VOID)))
        (93 (ARETURN))
        (ENDOFCODE 94))
       (EXCEPTIONS)
       (STACKMAP
            (26 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (43 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getURL" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 30)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (ALOAD_0))
             (8 (GETFIELD (JVM::FIELDCP "protocol"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
             (11 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (14 (LDC 9))
             (16 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (19 (ALOAD_0))
             (20 (GETFIELD (JVM::FIELDCP "url"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.lang.String"))))
             (23 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (26 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (29 (ARETURN))
             (ENDOFCODE 30))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getProtocol" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "protocol"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.lang.String"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "getHost" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "host"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "host"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getFile" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "file"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "file"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getRef" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "ref"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "ref"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getQuery" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "query"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      (CLASS "java.lang.String"))))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (IFNE 14))
           (10 (ACONST_NULL))
           (11 (GOTO 18))
           (14 (ALOAD_0))
           (15 (GETFIELD (JVM::FIELDCP "query"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       (CLASS "java.lang.String"))))
           (18 (ARETURN))
           (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL))
            (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK (CLASS "java.lang.String"))
                       NIL)))))
     (METHOD
      "getPort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "port"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "getRequestMethod" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "method"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.lang.String"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "setRequestMethod"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 84)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "connected"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       BOOLEAN)))
            (4 (IFEQ 17))
            (7 (NEW (CLASS "java.io.IOException")))
            (10 (DUP))
            (11 (LDC 10))
            (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (16 (ATHROW))
            (17 (ALOAD_1))
            (18 (LDC 11))
            (20 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (23 (IFNE 71))
            (26 (ALOAD_1))
            (27 (LDC 1))
            (29 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (32 (IFNE 71))
            (35 (ALOAD_1))
            (36 (LDC 12))
            (38 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (41 (IFNE 71))
            (44 (NEW (CLASS "java.io.IOException")))
            (47 (DUP))
            (48 (NEW (CLASS "java.lang.StringBuffer")))
            (51 (DUP))
            (52 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (55 (LDC 13))
            (57 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (60 (ALOAD_1))
            (61 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (64 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (67 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (70 (ATHROW))
            (71 (ALOAD_0))
            (72 (NEW (CLASS "java.lang.String")))
            (75 (DUP))
            (76 (ALOAD_1))
            (77 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (80 (PUTFIELD (JVM::FIELDCP "method"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (83 (RETURN))
            (ENDOFCODE 84))
       (EXCEPTIONS)
       (STACKMAP
            (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String"))
                       (STACK)
                       NIL))
            (71 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getRequestProperty"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 12)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "reqProperties"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.util.Hashtable"))))
              (4 (ALOAD_1))
              (5 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                          ((CLASS "java.lang.Object"))
                                          (CLASS "java.lang.Object"))))
              (8 (CHECKCAST (CLASS "java.lang.String")))
              (11 (ARETURN))
              (ENDOFCODE 12))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "setRequestProperty"
      (PARAMETERS (CLASS "java.lang.String")
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 28)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "connected"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        BOOLEAN)))
             (4 (IFEQ 17))
             (7 (NEW (CLASS "java.io.IOException")))
             (10 (DUP))
             (11 (LDC 10))
             (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                          ((CLASS "java.lang.String"))
                                          VOID)))
             (16 (ATHROW))
             (17 (ALOAD_0))
             (18 (GETFIELD (JVM::FIELDCP "reqProperties"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.util.Hashtable"))))
             (21 (ALOAD_1))
             (22 (ALOAD_2))
             (23 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                          ((CLASS "java.lang.Object")
                                           (CLASS "java.lang.Object"))
                                          (CLASS "java.lang.Object"))))
             (26 (POP))
             (27 (RETURN))
             (ENDOFCODE 28))
        (EXCEPTIONS)
        (STACKMAP
             (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.lang.String"))
                        (STACK)
                        NIL)))))
     (METHOD
      "getResponseCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "connect"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "responseCode"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        INT)))
             (8 (IRETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getResponseMessage" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "connect"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "responseMsg"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
             (8 (ARETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getLength" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 21)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 12))
            (7 (ASTORE_1))
            (8 (JVM::LDC2_W 14))
            (11 (JVM::LRETURN))
            (12 (ALOAD_0))
            (13 (LDC 15))
            (15 (ICONST_M1))
            (16 (INVOKEVIRTUAL (METHODCP "getHeaderFieldInt"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") INT)
                                         INT)))
            (19 (JVM::I2L))
            (20 (JVM::LRETURN))
            (ENDOFCODE 21))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (12 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getType" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_1))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (LDC 16))
            (13 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (16 (ARETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getEncoding" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_1))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (LDC 17))
            (13 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (16 (ARETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getExpiration" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (LDC 18))
             (3 (LCONST_0))
             (4 (INVOKEVIRTUAL (METHODCP "getHeaderFieldDate"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") LONG)
                                         LONG)))
             (7 (JVM::LRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getDate" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (LDC 19))
             (3 (LCONST_0))
             (4 (INVOKEVIRTUAL (METHODCP "getHeaderFieldDate"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") LONG)
                                         LONG)))
             (7 (JVM::LRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getLastModified" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (LDC 20))
             (3 (LCONST_0))
             (4 (INVOKEVIRTUAL (METHODCP "getHeaderFieldDate"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String") LONG)
                                         LONG)))
             (7 (JVM::LRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getHeaderField"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 26)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_2))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "headerFields"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.util.Hashtable"))))
            (14 (ALOAD_0))
            (15 (ALOAD_1))
            (16 (INVOKESPECIAL (METHODCP "toLowerCase"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (19 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                         ((CLASS "java.lang.Object"))
                                         (CLASS "java.lang.Object"))))
            (22 (CHECKCAST (CLASS "java.lang.String")))
            (25 (ARETURN))
            (ENDOFCODE 26))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.lang.String")
                              TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderField" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 39)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_2))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (14 (IFNONNULL 21))
            (17 (ALOAD_0))
            (18 (INVOKESPECIAL (METHODCP "makeHeaderFieldValues"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
            (21 (ILOAD_1))
            (22 (ALOAD_0))
            (23 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (26 (ARRAYLENGTH))
            (27 (IF_ICMPLT 32))
            (30 (ACONST_NULL))
            (31 (ARETURN))
            (32 (ALOAD_0))
            (33 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (36 (ILOAD_1))
            (37 (AALOAD))
            (38 (ARETURN))
            (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              INT TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (21 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderFieldKey" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 39)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_2))
            (8 (ACONST_NULL))
            (9 (ARETURN))
            (10 (ALOAD_0))
            (11 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (14 (IFNONNULL 21))
            (17 (ALOAD_0))
            (18 (INVOKESPECIAL (METHODCP "makeHeaderFields"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL VOID)))
            (21 (ILOAD_1))
            (22 (ALOAD_0))
            (23 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (26 (ARRAYLENGTH))
            (27 (IF_ICMPLT 32))
            (30 (ACONST_NULL))
            (31 (ARETURN))
            (32 (ALOAD_0))
            (33 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (ARRAY (CLASS "java.lang.String")))))
            (36 (ILOAD_1))
            (37 (AALOAD))
            (38 (ARETURN))
            (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              INT TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (21 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "makeHeaderFields" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 55)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_1))
         (2 (ALOAD_0))
         (3 (ALOAD_0))
         (4 (GETFIELD (JVM::FIELDCP "headerFields"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.util.Hashtable"))))
         (7 (INVOKEVIRTUAL (METHODCP "size" "java.util.Hashtable" NIL INT)))
         (10 (ANEWARRAY (CLASS "java.lang.String")))
         (13 (PUTFIELD (JVM::FIELDCP "headerFieldNames"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (16 (ALOAD_0))
         (17 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (20 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (23 (ASTORE_2))
         (24 (GOTO 45))
         (27 (ALOAD_0))
         (28 (GETFIELD (JVM::FIELDCP "headerFieldNames"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (31 (ILOAD_1))
         (32 (IINC 1 1))
         (35 (ALOAD_2))
         (36 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (41 (CHECKCAST (CLASS "java.lang.String")))
         (44 (AASTORE))
         (45 (ALOAD_2))
         (46 (INVOKEINTERFACE (METHODCP "hasMoreElements"
                                        "java.util.Enumeration" NIL BOOLEAN)
                              1))
         (51 (IFNE 27))
         (54 (RETURN))
         (ENDOFCODE 55))
       (EXCEPTIONS)
       (STACKMAP
            (27 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL))
            (45 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL)))))
     (METHOD
      "makeHeaderFieldValues" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 62)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_1))
         (2 (ALOAD_0))
         (3 (ALOAD_0))
         (4 (GETFIELD (JVM::FIELDCP "headerFields"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.util.Hashtable"))))
         (7 (INVOKEVIRTUAL (METHODCP "size" "java.util.Hashtable" NIL INT)))
         (10 (ANEWARRAY (CLASS "java.lang.String")))
         (13 (PUTFIELD (JVM::FIELDCP "headerFieldValues"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (16 (ALOAD_0))
         (17 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (20 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (23 (ASTORE_2))
         (24 (GOTO 52))
         (27 (ALOAD_0))
         (28 (GETFIELD (JVM::FIELDCP "headerFieldValues"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (ARRAY (CLASS "java.lang.String")))))
         (31 (ILOAD_1))
         (32 (IINC 1 1))
         (35 (ALOAD_0))
         (36 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
         (39 (ALOAD_2))
         (40 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (45 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
         (48 (CHECKCAST (CLASS "java.lang.String")))
         (51 (AASTORE))
         (52 (ALOAD_2))
         (53 (INVOKEINTERFACE (METHODCP "hasMoreElements"
                                        "java.util.Enumeration" NIL BOOLEAN)
                              1))
         (58 (IFNE 27))
         (61 (RETURN))
         (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP
            (27 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL))
            (52 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.util.Enumeration"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderFieldInt"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 25)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 10))
            (7 (ASTORE_3))
            (8 (ILOAD_2))
            (9 (IRETURN))
            (10 (ALOAD_0))
            (11 (ALOAD_1))
            (12 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (15 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                        ((CLASS "java.lang.String"))
                                        INT)))
            (18 (IRETURN))
            (19 (ASTORE_3))
            (20 (GOTO 23))
            (23 (ILOAD_2))
            (24 (IRETURN))
            (ENDOFCODE 25))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 10 18 19 (CLASS "java.lang.Throwable")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.lang.String")
                              INT TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (19 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK (CLASS "java.lang.Throwable"))
                       NIL))
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT (CLASS "java.lang.Throwable"))
                       (STACK)
                       NIL)))))
     (METHOD
      "getHeaderFieldDate"
      (PARAMETERS (CLASS "java.lang.String")
                  LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 27)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "connect"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL VOID)))
            (4 (GOTO 11))
            (7 (ASTORE 4))
            (9 (JVM::LLOAD_2))
            (10 (JVM::LRETURN))
            (11 (ALOAD_0))
            (12 (ALOAD_1))
            (13 (INVOKEVIRTUAL (METHODCP "getHeaderField"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.String"))))
            (16 (INVOKESTATIC (METHODCP "parse" "com.sun.cldc.io.DateParser"
                                        ((CLASS "java.lang.String"))
                                        LONG)))
            (19 (JVM::LRETURN))
            (20 (ASTORE 4))
            (22 (GOTO 25))
            (25 (JVM::LLOAD_2))
            (26 (JVM::LRETURN))
            (ENDOFCODE 27))
       (EXCEPTIONS (JVM::HANDLER 0 4 7 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 11 19 20 (CLASS "java.lang.Throwable")))
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.lang.String")
                              LONG TOPX TOPX)
                      (STACK (CLASS "java.io.IOException"))
                      NIL))
            (11 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               LONG TOPX TOPX)
                       (STACK)
                       NIL))
            (20 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               LONG TOPX TOPX)
                       (STACK (CLASS "java.lang.Throwable"))
                       NIL))
            (25 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               LONG TOPX (CLASS "java.lang.Throwable"))
                       (STACK)
                       NIL)))))
     (METHOD
      "connect" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 462)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "connected"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   BOOLEAN)))
        (4 (IFEQ 8))
        (7 (RETURN))
        (8 (ALOAD_0))
        (9 (NEW (CLASS "java.lang.StringBuffer")))
        (12 (DUP))
        (13 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (16 (LDC 21))
        (18 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "host"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (LDC 9))
        (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (33 (ALOAD_0))
        (34 (GETFIELD (JVM::FIELDCP "port"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (37 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (40 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (43 (INVOKESTATIC
                 (METHODCP "open" "javax.microedition.io.Connector"
                           ((CLASS "java.lang.String"))
                           (CLASS "javax.microedition.io.Connection"))))
        (46 (CHECKCAST (CLASS "javax.microedition.io.StreamConnection")))
        (49
         (PUTFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (52 (ALOAD_0))
        (53 (ALOAD_0))
        (54
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (57
          (INVOKEINTERFACE (METHODCP "openDataOutputStream"
                                     "javax.microedition.io.OutputConnection"
                                     NIL (CLASS "java.io.DataOutputStream"))
                           1))
        (62 (PUTFIELD (JVM::FIELDCP "streamOutput"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataOutputStream"))))
        (65 (ALOAD_0))
        (66 (LDC 22))
        (68 (INVOKEVIRTUAL (METHODCP "getRequestProperty"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.String"))))
        (71 (IFNONNULL 116))
        (74 (ALOAD_0))
        (75 (LDC 22))
        (77 (NEW (CLASS "java.lang.StringBuffer")))
        (80 (DUP))
        (81 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (84 (LDC 23))
        (86 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (89 (ALOAD_0))
        (90
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (93 (IFNONNULL 100))
        (96 (ICONST_0))
        (97 (GOTO 107))
        (100 (ALOAD_0))
        (101
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (104
         (INVOKEVIRTUAL
           (METHODCP "size"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     NIL INT)))
        (107 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (110 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (113 (INVOKEVIRTUAL (METHODCP "setRequestProperty"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.lang.String")
                                       (CLASS "java.lang.String"))
                                      VOID)))
        (116 (NEW (CLASS "java.lang.StringBuffer")))
        (119 (DUP))
        (120 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (123 (ALOAD_0))
        (124 (GETFIELD (JVM::FIELDCP "method"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (127 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (130 (LDC 24))
        (132 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (135 (ALOAD_0))
        (136 (INVOKEVIRTUAL (METHODCP "getFile"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (139 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (142 (ALOAD_0))
        (143 (INVOKEVIRTUAL (METHODCP "getRef"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (146 (IFNONNULL 154))
        (149 (LDC 23))
        (151 (GOTO 176))
        (154 (NEW (CLASS "java.lang.StringBuffer")))
        (157 (DUP))
        (158 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (161 (LDC 25))
        (163 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (166 (ALOAD_0))
        (167 (INVOKEVIRTUAL (METHODCP "getRef"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (170 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (173 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (176 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (179 (ALOAD_0))
        (180 (INVOKEVIRTUAL (METHODCP "getQuery"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (183 (IFNONNULL 191))
        (186 (LDC 23))
        (188 (GOTO 213))
        (191 (NEW (CLASS "java.lang.StringBuffer")))
        (194 (DUP))
        (195 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (198 (LDC 26))
        (200 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (203 (ALOAD_0))
        (204 (INVOKEVIRTUAL (METHODCP "getQuery"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      NIL (CLASS "java.lang.String"))))
        (207 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (210 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (213 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (216 (LDC 24))
        (218 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (221 (ALOAD_0))
        (222 (GETFIELD (JVM::FIELDCP "http_version"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (225 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (228 (LDC 27))
        (230 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (233 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (236 (ASTORE_1))
        (237 (ALOAD_0))
        (238 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (241 (ALOAD_1))
        (242 (INVOKEVIRTUAL (METHODCP "getBytes"
                                      "java.lang.String" NIL (ARRAY BYTE))))
        (245 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (248 (ALOAD_0))
        (249 (LDC 28))
        (251 (NEW (CLASS "java.lang.StringBuffer")))
        (254 (DUP))
        (255 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (258 (ALOAD_0))
        (259 (GETFIELD (JVM::FIELDCP "host"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (262 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (265 (LDC 9))
        (267 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "port"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (274 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (277 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (280 (INVOKEVIRTUAL (METHODCP "setRequestProperty"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.lang.String")
                                       (CLASS "java.lang.String"))
                                      VOID)))
        (283 (ALOAD_0))
        (284 (GETFIELD (JVM::FIELDCP "reqProperties"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
        (287 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
        (290 (ASTORE_2))
        (291 (GOTO 353))
        (294 (ALOAD_2))
        (295 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
        (300 (CHECKCAST (CLASS "java.lang.String")))
        (303 (ASTORE_3))
        (304 (NEW (CLASS "java.lang.StringBuffer")))
        (307 (DUP))
        (308 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (311 (ALOAD_3))
        (312 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (315 (LDC 29))
        (317 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (320 (ALOAD_0))
        (321 (GETFIELD (JVM::FIELDCP "reqProperties"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
        (324 (ALOAD_3))
        (325 (INVOKEVIRTUAL (METHODCP "get" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (328 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.StringBuffer"))))
        (331 (LDC 27))
        (333 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (336 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (339 (ASTORE 4))
        (341 (ALOAD_0))
        (342 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (345 (ALOAD 4))
        (347 (INVOKEVIRTUAL (METHODCP "getBytes"
                                      "java.lang.String" NIL (ARRAY BYTE))))
        (350 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (353 (ALOAD_2))
        (354 (INVOKEINTERFACE (METHODCP "hasMoreElements"
                                        "java.util.Enumeration" NIL BOOLEAN)
                              1))
        (359 (IFNE 294))
        (362 (ALOAD_0))
        (363 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (366 (LDC 27))
        (368 (INVOKEVIRTUAL (METHODCP "getBytes"
                                      "java.lang.String" NIL (ARRAY BYTE))))
        (371 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (374 (ALOAD_0))
        (375
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (378 (IFNULL 395))
        (381 (ALOAD_0))
        (382 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (385 (ALOAD_0))
        (386
         (GETFIELD
          (JVM::FIELDCP
            "out"
            "com.sun.cldc.io.j2me.http.Protocol"
            (CLASS
                 "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"))))
        (389
         (INVOKEVIRTUAL
           (METHODCP "toByteArray"
                     "com.sun.cldc.io.j2me.http.Protocol$PrivateOutputStream"
                     NIL (ARRAY BYTE))))
        (392 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.OutputStream" ((ARRAY BYTE))
                                      VOID)))
        (395 (ALOAD_0))
        (396 (GETFIELD (JVM::FIELDCP "streamOutput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataOutputStream"))))
        (399 (INVOKEVIRTUAL (METHODCP "flush"
                                      "java.io.DataOutputStream" NIL VOID)))
        (402 (ALOAD_0))
        (403 (ALOAD_0))
        (404
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (407
           (INVOKEINTERFACE (METHODCP "openDataInputStream"
                                      "javax.microedition.io.InputConnection"
                                      NIL (CLASS "java.io.DataInputStream"))
                            1))
        (412 (PUTFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (415 (ALOAD_0))
        (416 (ALOAD_0))
        (417 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (420 (INVOKESPECIAL (METHODCP "readResponseMessage"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (423 (ALOAD_0))
        (424 (ALOAD_0))
        (425 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (428 (INVOKESPECIAL (METHODCP "readHeaders"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (431 (ALOAD_0))
        (432 (GETFIELD (JVM::FIELDCP "responseCode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (435 (BIPUSH 100))
        (437 (IF_ICMPNE 456))
        (440 (ALOAD_0))
        (441 (ALOAD_0))
        (442 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (445 (INVOKESPECIAL (METHODCP "readResponseMessage"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (448 (ALOAD_0))
        (449 (ALOAD_0))
        (450 (GETFIELD (JVM::FIELDCP "streamInput"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.io.DataInputStream"))))
        (453 (INVOKESPECIAL (METHODCP "readHeaders"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.io.InputStream"))
                                      VOID)))
        (456 (ALOAD_0))
        (457 (ICONST_1))
        (458 (PUTFIELD (JVM::FIELDCP "connected"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     BOOLEAN)))
        (461 (RETURN))
        (ENDOFCODE 462))
       (EXCEPTIONS)
       (STACKMAP
            (8 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              TOPX TOPX TOPX TOPX)
                      (STACK)
                      NIL))
            (100 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.StringBuffer")
                               (CLASS "java.lang.String")
                               (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                        NIL))
            (107 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK INT (CLASS "java.lang.StringBuffer")
                               (CLASS "java.lang.String")
                               (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                        NIL))
            (116 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (154 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.StringBuffer"))
                        NIL))
            (176 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.String")
                               (CLASS "java.lang.StringBuffer"))
                        NIL))
            (191 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.StringBuffer"))
                        NIL))
            (213 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                TOPX TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.String")
                               (CLASS "java.lang.StringBuffer"))
                        NIL))
            (294 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL))
            (353 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL))
            (395 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL))
            (456 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.lang.String")
                                (CLASS "java.util.Enumeration")
                                TOPX TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "readResponseMessage"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 158)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_1))
        (2 (INVOKESPECIAL (METHODCP "readLine"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    ((CLASS "java.io.InputStream"))
                                    (CLASS "java.lang.String"))))
        (5 (ASTORE_2))
        (6 (ALOAD_0))
        (7 (ICONST_M1))
        (8 (PUTFIELD (JVM::FIELDCP "responseCode"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (11 (ALOAD_0))
        (12 (ACONST_NULL))
        (13 (PUTFIELD (JVM::FIELDCP "responseMsg"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (16 (ALOAD_2))
        (17 (IFNONNULL 23))
        (20 (GOTO 148))
        (23 (ALOAD_2))
        (24 (BIPUSH 32))
        (26 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (29 (ISTORE_3))
        (30 (ILOAD_3))
        (31 (IFGE 37))
        (34 (GOTO 148))
        (37 (ALOAD_2))
        (38 (ICONST_0))
        (39 (ILOAD_3))
        (40 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (43 (ASTORE 5))
        (45 (ALOAD 5))
        (47 (LDC 30))
        (49 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (52 (IFNE 58))
        (55 (GOTO 148))
        (58 (ALOAD_2))
        (59 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (62 (ILOAD_3))
        (63 (IF_ICMPGT 69))
        (66 (GOTO 148))
        (69 (ALOAD_2))
        (70 (ILOAD_3))
        (71 (ICONST_1))
        (72 (IADD))
        (73 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (76 (BIPUSH 32))
        (78 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (81 (ISTORE 4))
        (83 (ILOAD 4))
        (85 (IFGE 91))
        (88 (GOTO 148))
        (91 (ILOAD 4))
        (93 (ILOAD_3))
        (94 (ICONST_1))
        (95 (IADD))
        (96 (IADD))
        (97 (ISTORE 4))
        (99 (ALOAD_2))
        (100 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (103 (ILOAD 4))
        (105 (IF_ICMPGT 111))
        (108 (GOTO 148))
        (111 (ALOAD_0))
        (112 (ALOAD_2))
        (113 (ILOAD_3))
        (114 (ICONST_1))
        (115 (IADD))
        (116 (ILOAD 4))
        (118
            (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (121 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                     ((CLASS "java.lang.String"))
                                     INT)))
        (124 (PUTFIELD (JVM::FIELDCP "responseCode"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (127 (GOTO 135))
        (130 (ASTORE 6))
        (132 (GOTO 148))
        (135 (ALOAD_0))
        (136 (ALOAD_2))
        (137 (ILOAD 4))
        (139 (ICONST_1))
        (140 (IADD))
        (141 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                      (CLASS "java.lang.String"))))
        (144 (PUTFIELD (JVM::FIELDCP "responseMsg"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.lang.String"))))
        (147 (RETURN))
        (148 (NEW (CLASS "java.io.IOException")))
        (151 (DUP))
        (152 (LDC 31))
        (154 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (157 (ATHROW))
        (ENDOFCODE 158))
       (EXCEPTIONS (JVM::HANDLER 111 127 130
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (58 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT TOPX (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (69 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT TOPX (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (91 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               INT INT (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (111 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                TOPX)
                        (STACK)
                        NIL))
            (130 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                TOPX)
                        (STACK (CLASS "java.lang.NumberFormatException"))
                        NIL))
            (135 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                TOPX)
                        (STACK)
                        NIL))
            (148 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                                (CLASS "java.io.InputStream")
                                (CLASS "java.lang.String")
                                TOPX TOPX TOPX TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "readHeaders"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 117)
       (PARSEDCODE
        (0 (GOTO 3))
        (3 (ALOAD_0))
        (4 (ALOAD_1))
        (5 (INVOKESPECIAL (METHODCP "readLine"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    ((CLASS "java.io.InputStream"))
                                    (CLASS "java.lang.String"))))
        (8 (ASTORE_2))
        (9 (ALOAD_2))
        (10 (IFNULL 22))
        (13 (ALOAD_2))
        (14 (LDC 23))
        (16 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (19 (IFEQ 23))
        (22 (RETURN))
        (23 (ALOAD_2))
        (24 (BIPUSH 58))
        (26 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (29 (ISTORE 5))
        (31 (ILOAD 5))
        (33 (IFGE 46))
        (36 (NEW (CLASS "java.io.IOException")))
        (39 (DUP))
        (40 (LDC 32))
        (42 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (45 (ATHROW))
        (46 (ALOAD_2))
        (47 (ICONST_0))
        (48 (ILOAD 5))
        (50 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (53 (ASTORE_3))
        (54 (ALOAD_3))
        (55 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (58 (IFNE 71))
        (61 (NEW (CLASS "java.io.IOException")))
        (64 (DUP))
        (65 (LDC 32))
        (67 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (70 (ATHROW))
        (71 (ALOAD_2))
        (72 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (75 (ILOAD 5))
        (77 (ICONST_2))
        (78 (IADD))
        (79 (IF_ICMPGT 89))
        (82 (LDC 23))
        (84 (ASTORE 4))
        (86 (GOTO 99))
        (89 (ALOAD_2))
        (90 (ILOAD 5))
        (92 (ICONST_2))
        (93 (IADD))
        (94 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (97 (ASTORE 4))
        (99 (ALOAD_0))
        (100 (GETFIELD (JVM::FIELDCP "headerFields"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     (CLASS "java.util.Hashtable"))))
        (103 (ALOAD_0))
        (104 (ALOAD_3))
        (105 (INVOKESPECIAL (METHODCP "toLowerCase"
                                      "com.sun.cldc.io.j2me.http.Protocol"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.String"))))
        (108 (ALOAD 4))
        (110 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (113 (POP))
        (114 (GOTO 3))
        (ENDOFCODE 117))
       (EXCEPTIONS)
       (STACKMAP
            (3 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                              (CLASS "java.io.InputStream")
                              TOPX TOPX TOPX TOPX)
                      (STACK)
                      NIL))
            (22 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (46 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               TOPX TOPX INT)
                       (STACK)
                       NIL))
            (71 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX INT)
                       (STACK)
                       NIL))
            (89 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX INT)
                       (STACK)
                       NIL))
            (99 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "readLine"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.StringBuffer"))))
        (4 (ICONST_0))
        (5 (INVOKEVIRTUAL (METHODCP "setLength"
                                    "java.lang.StringBuffer" (INT)
                                    VOID)))
        (8 (GOTO 11))
        (11 (ALOAD_1))
        (12 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
        (15 (ISTORE_2))
        (16 (ILOAD_2))
        (17 (IFGE 22))
        (20 (ACONST_NULL))
        (21 (ARETURN))
        (22 (ILOAD_2))
        (23 (BIPUSH 13))
        (25 (IF_ICMPNE 31))
        (28 (GOTO 11))
        (31 (GOTO 37))
        (34 (ASTORE_3))
        (35 (ACONST_NULL))
        (36 (ARETURN))
        (37 (ILOAD_2))
        (38 (BIPUSH 10))
        (40 (IF_ICMPNE 46))
        (43 (GOTO 59))
        (46 (ALOAD_0))
        (47 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (50 (ILOAD_2))
        (51 (JVM::I2C))
        (52 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (55 (POP))
        (56 (GOTO 11))
        (59 (ALOAD_0))
        (60 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (63 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (66 (ARETURN))
        (ENDOFCODE 67))
       (EXCEPTIONS (JVM::HANDLER 11 21 34 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 22 28 34 (CLASS "java.io.IOException")))
       (STACKMAP
            (11 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (22 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (31 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (34 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               TOPX TOPX)
                       (STACK (CLASS "java.io.IOException"))
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (46 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL))
            (59 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.io.InputStream")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "disconnect" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 51)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (4 (IFNULL 35))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "streamInput"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.io.DataInputStream"))))
        (11 (INVOKEVIRTUAL (METHODCP "close"
                                     "java.io.DataInputStream" NIL VOID)))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "streamOutput"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.io.DataOutputStream"))))
        (18 (INVOKEVIRTUAL (METHODCP "close"
                                     "java.io.DataOutputStream" NIL VOID)))
        (21 (ALOAD_0))
        (22
         (GETFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (25 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (30 (ALOAD_0))
        (31 (ACONST_NULL))
        (32
         (PUTFIELD
            (JVM::FIELDCP "streamConnnection"
                          "com.sun.cldc.io.j2me.http.Protocol"
                          (CLASS "javax.microedition.io.StreamConnection"))))
        (35 (ALOAD_0))
        (36 (ICONST_M1))
        (37 (PUTFIELD (JVM::FIELDCP "responseCode"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (40 (ALOAD_0))
        (41 (ACONST_NULL))
        (42 (PUTFIELD (JVM::FIELDCP "responseMsg"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (45 (ALOAD_0))
        (46 (ICONST_0))
        (47 (PUTFIELD (JVM::FIELDCP "connected"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    BOOLEAN)))
        (50 (RETURN))
        (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP
            (35 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
                       (STACK)
                       NIL)))))
     (METHOD
      "parseProtocol" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 62)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (BIPUSH 58))
        (6 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                    INT)))
        (9 (ISTORE_1))
        (10 (ILOAD_1))
        (11 (IFGT 24))
        (14 (NEW (CLASS "java.io.IOException")))
        (17 (DUP))
        (18 (LDC 33))
        (20 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (23 (ATHROW))
        (24 (ALOAD_0))
        (25 (GETFIELD (JVM::FIELDCP "url"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.String"))))
        (28 (ICONST_0))
        (29 (ILOAD_1))
        (30 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (33 (ASTORE_2))
        (34 (ALOAD_2))
        (35 (LDC 2))
        (37 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (40 (IFNE 53))
        (43 (NEW (CLASS "java.io.IOException")))
        (46 (DUP))
        (47 (LDC 34))
        (49 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (52 (ATHROW))
        (53 (ALOAD_0))
        (54 (ILOAD_1))
        (55 (ICONST_1))
        (56 (IADD))
        (57 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (60 (ALOAD_2))
        (61 (ARETURN))
        (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP
            (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT TOPX)
                       (STACK)
                       NIL))
            (53 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String"))
                       (STACK)
                       NIL)))))
     (METHOD
      "parseHostname" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 83)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (8 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                    (CLASS "java.lang.String"))))
        (11 (ASTORE_1))
        (12 (ALOAD_1))
        (13 (LDC 35))
        (15 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (18 (IFEQ 37))
        (21 (ALOAD_1))
        (22 (ICONST_2))
        (23 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (26 (ASTORE_1))
        (27 (ALOAD_0))
        (28 (DUP))
        (29 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (32 (ICONST_2))
        (33 (IADD))
        (34 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (37 (ALOAD_1))
        (38 (BIPUSH 58))
        (40 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (43 (ISTORE_2))
        (44 (ILOAD_2))
        (45 (IFGE 55))
        (48 (ALOAD_1))
        (49 (BIPUSH 47))
        (51 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (54 (ISTORE_2))
        (55 (ILOAD_2))
        (56 (IFGE 64))
        (59 (ALOAD_1))
        (60 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (63 (ISTORE_2))
        (64 (ALOAD_1))
        (65 (ICONST_0))
        (66 (ILOAD_2))
        (67 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (70 (ASTORE_3))
        (71 (ALOAD_0))
        (72 (DUP))
        (73 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (76 (ILOAD_2))
        (77 (IADD))
        (78 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (81 (ALOAD_3))
        (82 (ARETURN))
        (ENDOFCODE 83))
       (EXCEPTIONS)
       (STACKMAP
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (55 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (64 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "parsePort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 107)
       (PARSEDCODE
        (0 (BIPUSH 80))
        (2 (ISTORE_1))
        (3 (ALOAD_0))
        (4 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (11 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (14 (ASTORE_2))
        (15 (ALOAD_2))
        (16 (LDC 9))
        (18 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (21 (IFNE 26))
        (24 (ILOAD_1))
        (25 (IRETURN))
        (26 (ALOAD_2))
        (27 (ICONST_1))
        (28 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (31 (ASTORE_2))
        (32 (ALOAD_0))
        (33 (DUP))
        (34 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (37 (ICONST_1))
        (38 (IADD))
        (39 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (42 (ALOAD_2))
        (43 (BIPUSH 47))
        (45 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (48 (ISTORE_3))
        (49 (ILOAD_3))
        (50 (IFGE 58))
        (53 (ALOAD_2))
        (54 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (57 (ISTORE_3))
        (58 (ALOAD_2))
        (59 (ICONST_0))
        (60 (ILOAD_3))
        (61 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (64 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String"))
                                    INT)))
        (67 (ISTORE_1))
        (68 (ILOAD_1))
        (69 (IFGT 80))
        (72 (NEW (CLASS "java.lang.NumberFormatException")))
        (75 (DUP))
        (76 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     NIL VOID)))
        (79 (ATHROW))
        (80 (GOTO 95))
        (83 (ASTORE 4))
        (85 (NEW (CLASS "java.io.IOException")))
        (88 (DUP))
        (89 (LDC 36))
        (91 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (94 (ATHROW))
        (95 (ALOAD_0))
        (96 (DUP))
        (97 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (100 (ILOAD_3))
        (101 (IADD))
        (102 (PUTFIELD (JVM::FIELDCP "index"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (105 (ILOAD_1))
        (106 (IRETURN))
        (ENDOFCODE 107))
       (EXCEPTIONS (JVM::HANDLER 58 80 83
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP
            (26 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (58 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (80 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL))
            (83 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK (CLASS "java.lang.NumberFormatException"))
                       NIL))
            (95 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               INT (CLASS "java.lang.String")
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseFile" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 112)
       (PARSEDCODE
        (0 (LDC 23))
        (2 (ASTORE_1))
        (3 (ALOAD_0))
        (4 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (11 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (14 (ASTORE_2))
        (15 (ALOAD_2))
        (16 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (19 (IFNE 24))
        (22 (ALOAD_1))
        (23 (ARETURN))
        (24 (ALOAD_2))
        (25 (LDC 37))
        (27 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (30 (IFNE 43))
        (33 (NEW (CLASS "java.io.IOException")))
        (36 (DUP))
        (37 (LDC 38))
        (39 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (42 (ATHROW))
        (43 (ALOAD_2))
        (44 (BIPUSH 35))
        (46 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (49 (ISTORE_3))
        (50 (ALOAD_2))
        (51 (BIPUSH 63))
        (53 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (56 (ISTORE 4))
        (58 (ILOAD_3))
        (59 (IFGE 75))
        (62 (ILOAD 4))
        (64 (IFGE 75))
        (67 (ALOAD_2))
        (68 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (71 (ISTORE_3))
        (72 (GOTO 93))
        (75 (ILOAD_3))
        (76 (IFLT 90))
        (79 (ILOAD 4))
        (81 (IFLE 93))
        (84 (ILOAD 4))
        (86 (ILOAD_3))
        (87 (IF_ICMPGE 93))
        (90 (ILOAD 4))
        (92 (ISTORE_3))
        (93 (ALOAD_2))
        (94 (ICONST_0))
        (95 (ILOAD_3))
        (96 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (99 (ASTORE_1))
        (100 (ALOAD_0))
        (101 (DUP))
        (102 (GETFIELD (JVM::FIELDCP "index"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (105 (ILOAD_3))
        (106 (IADD))
        (107 (PUTFIELD (JVM::FIELDCP "index"
                                     "com.sun.cldc.io.j2me.http.Protocol"
                                     INT)))
        (110 (ALOAD_1))
        (111 (ARETURN))
        (ENDOFCODE 112))
       (EXCEPTIONS)
       (STACKMAP
            (24 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (43 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (75 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (90 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL))
            (93 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseRef" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 84)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (8 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                    (CLASS "java.lang.String"))))
        (11 (ASTORE_1))
        (12 (ALOAD_1))
        (13 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (16 (IFEQ 29))
        (19 (ALOAD_1))
        (20 (ICONST_0))
        (21 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (24 (BIPUSH 63))
        (26 (IF_ICMPNE 32))
        (29 (LDC 23))
        (31 (ARETURN))
        (32 (ALOAD_1))
        (33 (LDC 25))
        (35 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (38 (IFNE 51))
        (41 (NEW (CLASS "java.io.IOException")))
        (44 (DUP))
        (45 (LDC 39))
        (47 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (50 (ATHROW))
        (51 (ALOAD_1))
        (52 (BIPUSH 63))
        (54 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (57 (ISTORE_2))
        (58 (ILOAD_2))
        (59 (IFGE 67))
        (62 (ALOAD_1))
        (63 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (66 (ISTORE_2))
        (67 (ALOAD_0))
        (68 (DUP))
        (69 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (72 (ILOAD_2))
        (73 (IADD))
        (74 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (77 (ALOAD_1))
        (78 (ICONST_1))
        (79 (ILOAD_2))
        (80 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (83 (ARETURN))
        (ENDOFCODE 84))
       (EXCEPTIONS)
       (STACKMAP
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (51 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (67 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseQuery" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 70)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "url"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.String"))))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "index"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   INT)))
        (8 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                    (CLASS "java.lang.String"))))
        (11 (ASTORE_1))
        (12 (ALOAD_1))
        (13 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (16 (IFNE 22))
        (19 (LDC 23))
        (21 (ARETURN))
        (22 (ALOAD_1))
        (23 (LDC 26))
        (25 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                     ((CLASS "java.lang.String"))
                                     BOOLEAN)))
        (28 (IFEQ 67))
        (31 (ALOAD_1))
        (32 (ICONST_1))
        (33 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (36 (ASTORE_2))
        (37 (ALOAD_1))
        (38 (BIPUSH 35))
        (40 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (43 (ISTORE_3))
        (44 (ILOAD_3))
        (45 (IFLE 65))
        (48 (ALOAD_1))
        (49 (ICONST_1))
        (50 (ILOAD_3))
        (51 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (54 (ASTORE_2))
        (55 (ALOAD_0))
        (56 (DUP))
        (57 (GETFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (60 (ILOAD_3))
        (61 (IADD))
        (62 (PUTFIELD (JVM::FIELDCP "index"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    INT)))
        (65 (ALOAD_2))
        (66 (ARETURN))
        (67 (LDC 23))
        (69 (ARETURN))
        (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP
            (22 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (65 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (67 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               TOPX TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "parseURL" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*
                   *PROTECTED* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 46)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ICONST_0))
            (2 (PUTFIELD (JVM::FIELDCP "index"
                                       "com.sun.cldc.io.j2me.http.Protocol"
                                       INT)))
            (5 (ALOAD_0))
            (6 (ALOAD_0))
            (7 (INVOKESPECIAL (METHODCP "parseHostname"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        NIL (CLASS "java.lang.String"))))
            (10 (PUTFIELD (JVM::FIELDCP "host"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (13 (ALOAD_0))
            (14 (ALOAD_0))
            (15 (INVOKESPECIAL (METHODCP "parsePort"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL INT)))
            (18 (PUTFIELD (JVM::FIELDCP "port"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        INT)))
            (21 (ALOAD_0))
            (22 (ALOAD_0))
            (23 (INVOKESPECIAL (METHODCP "parseFile"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL (CLASS "java.lang.String"))))
            (26 (PUTFIELD (JVM::FIELDCP "file"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (29 (ALOAD_0))
            (30 (ALOAD_0))
            (31 (INVOKESPECIAL (METHODCP "parseQuery"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL (CLASS "java.lang.String"))))
            (34 (PUTFIELD (JVM::FIELDCP "query"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (37 (ALOAD_0))
            (38 (ALOAD_0))
            (39 (INVOKESPECIAL (METHODCP "parseRef"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         NIL (CLASS "java.lang.String"))))
            (42 (PUTFIELD (JVM::FIELDCP "ref"
                                        "com.sun.cldc.io.j2me.http.Protocol"
                                        (CLASS "java.lang.String"))))
            (45 (RETURN))
            (ENDOFCODE 46))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toLowerCase"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 48)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                   "com.sun.cldc.io.j2me.http.Protocol"
                                   (CLASS "java.lang.StringBuffer"))))
        (4 (ICONST_0))
        (5 (INVOKEVIRTUAL (METHODCP "setLength"
                                    "java.lang.StringBuffer" (INT)
                                    VOID)))
        (8 (ICONST_0))
        (9 (ISTORE_2))
        (10 (GOTO 32))
        (13 (ALOAD_0))
        (14 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (17 (ALOAD_1))
        (18 (ILOAD_2))
        (19 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (22 (INVOKESTATIC (METHODCP "toLowerCase"
                                    "java.lang.Character" (CHAR)
                                    CHAR)))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (POP))
        (29 (IINC 2 1))
        (32 (ILOAD_2))
        (33 (ALOAD_1))
        (34 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (37 (IF_ICMPLT 13))
        (40 (ALOAD_0))
        (41 (GETFIELD (JVM::FIELDCP "stringbuffer"
                                    "com.sun.cldc.io.j2me.http.Protocol"
                                    (CLASS "java.lang.StringBuffer"))))
        (44 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (47 (ARETURN))
        (ENDOFCODE 48))
       (EXCEPTIONS)
       (STACKMAP
            (13 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (32 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "access$000"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE CLASS "java.util.Hashtable")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "headerFields"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.util.Hashtable"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "access$100"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "connected"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         BOOLEAN)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "access$200"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "streamInput"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         (CLASS "java.io.DataInputStream"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "access$300"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol")
                  (CLASS "java.io.InputStream"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "readLine"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         ((CLASS "java.io.InputStream"))
                                         (CLASS "java.lang.String"))))
             (5 (ARETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "access$406"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.http.Protocol"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 12)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (DUP))
              (2 (GETFIELD (JVM::FIELDCP "opens"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         INT)))
              (5 (ICONST_1))
              (6 (ISUB))
              (7 (DUP_X1))
              (8 (PUTFIELD (JVM::FIELDCP "opens"
                                         "com.sun.cldc.io.j2me.http.Protocol"
                                         INT)))
              (11 (IRETURN))
              (ENDOFCODE 12))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES "com.sun.cldc.io.connections.HttpConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.resource.Protocol"
    "com.sun.cldc.io.ConnectionBase"
    (CONSTANT_POOL (STRING "Should not be called"))
    (FIELDS (FIELD "name" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "com.sun.cldc.io.ConnectionBase"
                                             NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (PUTFIELD (JVM::FIELDCP "name"
                                     "com.sun.cldc.io.j2me.resource.Protocol"
                                     (CLASS "java.lang.String"))))
          (5 (ALOAD_0))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
         (0 (NEW (CLASS "com.sun.cldc.io.j2me.resource.PrivateInputStream")))
         (3 (DUP))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "name"
                                    "com.sun.cldc.io.j2me.resource.Protocol"
                                    (CLASS "java.lang.String"))))
         (8 (INVOKESPECIAL
                 (METHODCP "<init>"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           ((CLASS "java.lang.String"))
                           VOID)))
         (11 (ARETURN))
         (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES "javax.microedition.io.InputConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.resource.PrivateInputStream"
    "java.io.InputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "handle" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5
         (GETFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (8 (IFNULL 19))
        (11 (NEW (CLASS "java.io.IOException")))
        (14 (DUP))
        (15 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.IOException" NIL VOID)))
        (18 (ATHROW))
        (19 (ALOAD_0))
        (20 (ALOAD_1))
        (21 (INVOKESTATIC
                 (METHODCP "open"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           ((CLASS "java.lang.String"))
                           (CLASS "java.lang.Object"))))
        (24
         (PUTFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (27 (RETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
        (19
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2me.resource.PrivateInputStream")
                   (CLASS "java.lang.String"))
           (STACK)
           NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (4 (INVOKESTATIC
                (METHODCP "read"
                          "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                          ((CLASS "java.lang.Object"))
                          INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (4 (INVOKESTATIC
                (METHODCP "close"
                          "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                          ((CLASS "java.lang.Object"))
                          VOID)))
        (7 (ALOAD_0))
        (8 (ACONST_NULL))
        (9
         (PUTFIELD
             (JVM::FIELDCP "handle"
                           "com.sun.cldc.io.j2me.resource.PrivateInputStream"
                           (CLASS "java.lang.Object"))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "open"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.lang.Object")
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "read"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD "close"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.serversocket.Protocol"
    "com.sun.cldc.io.NetworkConnectionBase"
    (CONSTANT_POOL)
    (FIELDS (FIELD "handle" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 4)
          (JVM::MAX_LOCALS . 4)
          (CODE_LENGTH . 12)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ALOAD_1))
               (2 (ILOAD_2))
               (3 (ILOAD_3))
               (4 (INVOKEVIRTUAL
                       (METHODCP "open0"
                                 "com.sun.cldc.io.j2me.serversocket.Protocol"
                                 ((CLASS "java.lang.String") INT BOOLEAN)
                                 VOID)))
               (7 (ALOAD_0))
               (8 (INVOKESPECIAL
                       (METHODCP "registerCleanup"
                                 "com.sun.cldc.io.j2me.serversocket.Protocol"
                                 NIL VOID)))
               (11 (RETURN))
               (ENDOFCODE 12))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD "open0"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "acceptAndOpen" (PARAMETERS)
      (RETURNTYPE CLASS
                  "javax.microedition.io.StreamConnection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 37)
       (PARSEDCODE
          (0 (GOTO 3))
          (3 (ALOAD_0))
          (4 (INVOKESPECIAL
                  (METHODCP "accept"
                            "com.sun.cldc.io.j2me.serversocket.Protocol"
                            NIL INT)))
          (7 (ISTORE_2))
          (8 (ILOAD_2))
          (9 (IFLT 29))
          (12 (NEW (CLASS "com.sun.cldc.io.j2me.socket.Protocol")))
          (15 (DUP))
          (16 (INVOKESPECIAL (METHODCP "<init>"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       NIL VOID)))
          (19 (ASTORE_1))
          (20 (ALOAD_1))
          (21 (ILOAD_2))
          (22 (ICONST_3))
          (23 (INVOKEVIRTUAL (METHODCP "open"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       (INT INT)
                                       VOID)))
          (26 (GOTO 35))
          (29 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                      NIL VOID)))
          (32 (GOTO 3))
          (35 (ALOAD_1))
          (36 (ARETURN))
          (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP
        (3
          (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")
                         TOPX TOPX)
                 (STACK)
                 NIL))
        (29
          (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")
                         TOPX INT)
                 (STACK)
                 NIL))
        (35
          (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")
                         (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                         INT)
                 (STACK)
                 NIL)))))
     (METHOD "accept" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "registerCleanup" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES "javax.microedition.io.StreamConnectionNotifier")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.Protocol"
    "com.sun.cldc.io.NetworkConnectionBase"
    (CONSTANT_POOL (STRING "Should not be called")
                   (STRING "Connection closed")
                   (STRING "Connection not open for reading")
                   (STRING "Input stream already opened")
                   (STRING "Connection not open for writing")
                   (STRING "Output stream already opened")
                   (STRING "com.sun.cldc.io.j2me.socket.buffersize"))
    (FIELDS (FIELD "handle" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "iocb" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "mode"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "opens" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "copen"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "isopen" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "osopen" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "bufferSize" INT
                   (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 25)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.io.NetworkConnectionBase"
                                      NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
          (9 (ALOAD_0))
          (10 (ICONST_0))
          (11 (PUTFIELD (JVM::FIELDCP "copen"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      BOOLEAN)))
          (14 (ALOAD_0))
          (15 (ICONST_0))
          (16 (PUTFIELD (JVM::FIELDCP "isopen"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      BOOLEAN)))
          (19 (ALOAD_0))
          (20 (ICONST_0))
          (21 (PUTFIELD (JVM::FIELDCP "osopen"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      BOOLEAN)))
          (24 (RETURN))
          (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (NEW (CLASS "java.lang.RuntimeException")))
            (3 (DUP))
            (4 (LDC 0))
            (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (9 (ATHROW))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 55)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_1))
         (2 (ILOAD_2))
         (3 (ILOAD_3))
         (4 (INVOKEVIRTUAL (METHODCP "open0"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     ((CLASS "java.lang.String") INT BOOLEAN)
                                     VOID)))
         (7 (ALOAD_0))
         (8 (INVOKESPECIAL (METHODCP "registerCleanup"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
         (11 (ALOAD_0))
         (12 (DUP))
         (13 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (16 (ICONST_1))
         (17 (IADD))
         (18 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (21 (ALOAD_0))
         (22 (ICONST_1))
         (23 (PUTFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
         (26 (ALOAD_0))
         (27 (ILOAD_2))
         (28 (PUTFIELD (JVM::FIELDCP "mode"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (31 (ALOAD_0))
         (32 (ARETURN))
         (33 (ASTORE 4))
         (35 (NEW (CLASS "com.sun.cldc.io.j2me.serversocket.Protocol")))
         (38 (DUP))
         (39 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.serversocket.Protocol"
                            NIL VOID)))
         (42 (ASTORE 5))
         (44 (ALOAD 5))
         (46 (ALOAD_1))
         (47 (ILOAD_2))
         (48 (ILOAD_3))
         (49 (INVOKEVIRTUAL
                  (METHODCP "open"
                            "com.sun.cldc.io.j2me.serversocket.Protocol"
                            ((CLASS "java.lang.String") INT BOOLEAN)
                            VOID)))
         (52 (ALOAD 5))
         (54 (ARETURN))
         (ENDOFCODE 55))
       (EXCEPTIONS (JVM::HANDLER 0 32 33
                                 (CLASS "java.lang.InterruptedException")))
       (STACKMAP
            (33 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                               (CLASS "java.lang.String")
                               INT INT TOPX TOPX)
                       (STACK (CLASS "java.lang.InterruptedException"))
                       NIL)))))
     (METHOD
      "open" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 26)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ILOAD_1))
           (2 (PUTFIELD (JVM::FIELDCP "handle"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      INT)))
           (5 (ALOAD_0))
           (6 (DUP))
           (7 (GETFIELD (JVM::FIELDCP "opens"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      INT)))
           (10 (ICONST_1))
           (11 (IADD))
           (12 (PUTFIELD (JVM::FIELDCP "opens"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       INT)))
           (15 (ALOAD_0))
           (16 (ICONST_1))
           (17 (PUTFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       BOOLEAN)))
           (20 (ALOAD_0))
           (21 (ILOAD_2))
           (22 (PUTFIELD (JVM::FIELDCP "mode"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       INT)))
           (25 (RETURN))
           (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "copen"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       BOOLEAN)))
            (4 (IFNE 17))
            (7 (NEW (CLASS "java.io.IOException")))
            (10 (DUP))
            (11 (LDC 1))
            (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (16 (ATHROW))
            (17 (RETURN))
            (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
           (17 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                      (STACK)
                      NIL)))))
     (METHOD
      "openInputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 87)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    NIL VOID)))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "mode"
                                   "com.sun.cldc.io.j2me.socket.Protocol"
                                   INT)))
        (8 (ICONST_1))
        (9 (JVM::IAND))
        (10 (IFNE 23))
        (13 (NEW (CLASS "java.io.IOException")))
        (16 (DUP))
        (17 (LDC 2))
        (19 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (22 (ATHROW))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "isopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (27 (IFEQ 40))
        (30 (NEW (CLASS "java.io.IOException")))
        (33 (DUP))
        (34 (LDC 3))
        (36 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (39 (ATHROW))
        (40 (ALOAD_0))
        (41 (ICONST_1))
        (42 (PUTFIELD (JVM::FIELDCP "isopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (45 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
        (48 (IFNE 63))
        (51 (NEW (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")))
        (54 (DUP))
        (55 (ALOAD_0))
        (56 (INVOKESPECIAL
                 (METHODCP "<init>"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                           VOID)))
        (59 (ASTORE_1))
        (60 (GOTO 75))
        (63
         (NEW
           (CLASS
                "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")))
        (66 (DUP))
        (67 (ALOAD_0))
        (68 (GETSTATIC (JVM::FIELDCP "bufferSize"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
        (71
         (INVOKESPECIAL
              (METHODCP
                   "<init>"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   ((CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                    INT)
                   VOID)))
        (74 (ASTORE_1))
        (75 (ALOAD_0))
        (76 (DUP))
        (77 (GETFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    INT)))
        (80 (ICONST_1))
        (81 (IADD))
        (82 (PUTFIELD (JVM::FIELDCP "opens"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    INT)))
        (85 (ALOAD_1))
        (86 (ARETURN))
        (ENDOFCODE 87))
       (EXCEPTIONS)
       (STACKMAP
        (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                           TOPX)
                   (STACK)
                   NIL))
        (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                           TOPX)
                   (STACK)
                   NIL))
        (63 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                           TOPX)
                   (STACK)
                   NIL))
        (75
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                    (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream"))
            (STACK)
            NIL)))))
     (METHOD
      "openOutputStream" (PARAMETERS)
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 66)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "ensureOpen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "mode"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    INT)))
         (8 (ICONST_2))
         (9 (JVM::IAND))
         (10 (IFNE 23))
         (13 (NEW (CLASS "java.io.IOException")))
         (16 (DUP))
         (17 (LDC 4))
         (19 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (22 (ATHROW))
         (23 (ALOAD_0))
         (24 (GETFIELD (JVM::FIELDCP "osopen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
         (27 (IFEQ 40))
         (30 (NEW (CLASS "java.io.IOException")))
         (33 (DUP))
         (34 (LDC 5))
         (36 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (39 (ATHROW))
         (40 (ALOAD_0))
         (41 (ICONST_1))
         (42 (PUTFIELD (JVM::FIELDCP "osopen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
         (45 (NEW (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")))
         (48 (DUP))
         (49 (ALOAD_0))
         (50 (INVOKESPECIAL
                  (METHODCP "<init>"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            ((CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                            VOID)))
         (53 (ASTORE_1))
         (54 (ALOAD_0))
         (55 (DUP))
         (56 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (59 (ICONST_1))
         (60 (IADD))
         (61 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
         (64 (ALOAD_1))
         (65 (ARETURN))
         (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP
            (23 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                               TOPX)
                       (STACK)
                       NIL))
            (40 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
          (4 (IFEQ 16))
          (7 (ALOAD_0))
          (8 (ICONST_0))
          (9 (PUTFIELD (JVM::FIELDCP "copen"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     BOOLEAN)))
          (12 (ALOAD_0))
          (13 (INVOKEVIRTUAL (METHODCP "realClose"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       NIL VOID)))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP
           (16 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                      (STACK)
                      NIL)))))
     (METHOD
      "realClose" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (DUP))
          (2 (GETFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
          (5 (ICONST_1))
          (6 (ISUB))
          (7 (DUP_X1))
          (8 (PUTFIELD (JVM::FIELDCP "opens"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     INT)))
          (11 (IFNE 18))
          (14 (ALOAD_0))
          (15 (INVOKEVIRTUAL (METHODCP "close0"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       NIL VOID)))
          (18 (RETURN))
          (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP
           (18 (FRAME (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                      (STACK)
                      NIL)))))
     (METHOD "open0"
             (PARAMETERS (CLASS "java.lang.String")
                         INT BOOLEAN)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "read0"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "write0"
             (PARAMETERS (ARRAY BYTE) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "available0" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "close0" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PROTECTED*)
             (CODE))
     (METHOD "registerCleanup" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
          (0 (ICONST_0))
          (1 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                      "com.sun.cldc.io.j2me.socket.Protocol"
                                      INT)))
          (4 (LDC 6))
          (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.String"))))
          (9 (ASTORE_0))
          (10 (ALOAD_0))
          (11 (IFNULL 28))
          (14 (ALOAD_0))
          (15 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                      ((CLASS "java.lang.String"))
                                      INT)))
          (18 (PUTSTATIC (JVM::FIELDCP "bufferSize"
                                       "com.sun.cldc.io.j2me.socket.Protocol"
                                       INT)))
          (21 (GOTO 28))
          (24 (ASTORE_1))
          (25 (GOTO 28))
          (28 (RETURN))
          (ENDOFCODE 29))
       (EXCEPTIONS (JVM::HANDLER 14 21 24
                                 (CLASS "java.lang.NumberFormatException")))
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK (CLASS "java.lang.NumberFormatException"))
                            NIL))
                 (28 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))))))
    (INTERFACES "javax.microedition.io.StreamConnection")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.PrivateInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "eof" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "bytebuf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 15)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6
          (PUTFIELD
               (JVM::FIELDCP "eof"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             BOOLEAN)))
        (9 (ALOAD_0))
        (10 (ALOAD_1))
        (11
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (14 (RETURN))
        (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream"))
            (STACK)
            NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 43)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (GETFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (4 (IFNONNULL 14))
        (7 (ALOAD_0))
        (8 (ICONST_1))
        (9 (NEWARRAY BYTE))
        (11
          (PUTFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (14 (ALOAD_0))
        (15 (ALOAD_0))
        (16
          (GETFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (19 (ICONST_0))
        (20 (ICONST_1))
        (21 (INVOKEVIRTUAL
                 (METHODCP "read"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (24 (ISTORE_1))
        (25 (ILOAD_1))
        (26 (ICONST_1))
        (27 (IF_ICMPNE 41))
        (30 (ALOAD_0))
        (31
          (GETFIELD
               (JVM::FIELDCP "bytebuf"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             (ARRAY BYTE))))
        (34 (ICONST_0))
        (35 (BALOAD))
        (36 (JVM::SIPUSH 255))
        (39 (JVM::IAND))
        (40 (IRETURN))
        (41 (ILOAD_1))
        (42 (IRETURN))
        (ENDOFCODE 43))
       (EXCEPTIONS)
       (STACKMAP
        (14
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     TOPX)
             (STACK)
             NIL))
        (41
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     INT)
             (STACK)
             NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5
          (GETFIELD
               (JVM::FIELDCP "eof"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             BOOLEAN)))
        (8 (IFEQ 13))
        (11 (ICONST_M1))
        (12 (IRETURN))
        (13 (ALOAD_1))
        (14 (IFNONNULL 25))
        (17 (NEW (CLASS "java.lang.NullPointerException")))
        (20 (DUP))
        (21 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
        (24 (ATHROW))
        (25 (ILOAD_3))
        (26 (IFNE 31))
        (29 (ICONST_0))
        (30 (IRETURN))
        (31 (ILOAD_3))
        (32 (IFGE 43))
        (35 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
        (38 (DUP))
        (39 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IndexOutOfBoundsException"
                                     NIL VOID)))
        (42 (ATHROW))
        (43 (ALOAD_0))
        (44 (ALOAD_1))
        (45 (ILOAD_2))
        (46 (ILOAD_3))
        (47 (INVOKEVIRTUAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (50 (ISTORE 4))
        (52 (ALOAD_0))
        (53
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (56 (IFNONNULL 67))
        (59 (NEW (CLASS "java.io.InterruptedIOException")))
        (62 (DUP))
        (63 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.InterruptedIOException"
                                     NIL VOID)))
        (66 (ATHROW))
        (67 (ILOAD 4))
        (69 (IFEQ 85))
        (72 (ILOAD 4))
        (74 (IFGE 82))
        (77 (ALOAD_0))
        (78 (ICONST_1))
        (79
          (PUTFIELD
               (JVM::FIELDCP "eof"
                             "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                             BOOLEAN)))
        (82 (ILOAD 4))
        (84 (IRETURN))
        (85 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                    NIL VOID)))
        (88 (GOTO 43))
        (ENDOFCODE 91))
       (EXCEPTIONS)
       (STACKMAP
        (13
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (25
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (31
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (43
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT TOPX)
             (STACK)
             NIL))
        (67
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT INT)
             (STACK)
             NIL))
        (82
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT INT)
             (STACK)
             NIL))
        (85
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT INT)
             (STACK)
             NIL)))))
     (METHOD
      "read1"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 20)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNULL 18))
        (7 (ALOAD_0))
        (8
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (11 (ALOAD_1))
        (12 (ILOAD_2))
        (13 (ILOAD_3))
        (14 (INVOKEVIRTUAL (METHODCP "read0"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (17 (IRETURN))
        (18 (ICONST_M1))
        (19 (IRETURN))
        (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP
        (18
         (FRAME
             (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream")
                     (ARRAY BYTE)
                     INT INT)
             (STACK)
             NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (8 (INVOKEVIRTUAL (METHODCP "available0"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    NIL INT)))
        (11 (IRETURN))
        (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 32)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNULL 31))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (11 (ALOAD_0))
        (12
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (15 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
        (18 (ALOAD_0))
        (19
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (22 (ICONST_0))
        (23 (PUTFIELD (JVM::FIELDCP "isopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (26 (ALOAD_0))
        (27 (ACONST_NULL))
        (28
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (31 (RETURN))
        (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP
        (31
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStream"))
            (STACK)
            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
    "com.sun.cldc.io.j2me.socket.PrivateInputStream"
    (CONSTANT_POOL)
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "pos"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_1))
        (2 (INVOKESPECIAL
                (METHODCP "<init>"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          ((CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
                          VOID)))
        (5 (ALOAD_0))
        (6 (ILOAD_2))
        (7 (NEWARRAY BYTE))
        (9
         (PUTFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read1"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 111)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (4 (IFNE 62))
        (7 (ILOAD_3))
        (8 (ALOAD_0))
        (9
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (12 (ARRAYLENGTH))
        (13 (IF_ICMPLT 24))
        (16 (ALOAD_0))
        (17 (ALOAD_1))
        (18 (ILOAD_2))
        (19 (ILOAD_3))
        (20 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (23 (IRETURN))
        (24 (ALOAD_0))
        (25 (ICONST_0))
        (26
         (PUTFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (29 (ALOAD_0))
        (30 (ALOAD_0))
        (31
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (34 (ALOAD_0))
        (35
         (GETFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (38 (ALOAD_0))
        (39
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (42 (ARRAYLENGTH))
        (43 (INVOKESPECIAL
                 (METHODCP "read1"
                           "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                           ((ARRAY BYTE) INT INT)
                           INT)))
        (46 (ISTORE 4))
        (48 (ILOAD 4))
        (50 (IFGT 56))
        (53 (ILOAD 4))
        (55 (IRETURN))
        (56 (ALOAD_0))
        (57 (ILOAD 4))
        (59
         (PUTFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (62 (ILOAD_3))
        (63 (ALOAD_0))
        (64
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (67 (IF_ICMPLE 75))
        (70 (ALOAD_0))
        (71
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (74 (ISTORE_3))
        (75 (ALOAD_0))
        (76
         (GETFIELD
              (JVM::FIELDCP
                   "buf"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   (ARRAY BYTE))))
        (79 (ALOAD_0))
        (80
         (GETFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (83 (ALOAD_1))
        (84 (ILOAD_2))
        (85 (ILOAD_3))
        (86 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (89 (ALOAD_0))
        (90 (DUP))
        (91
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (94 (ILOAD_3))
        (95 (ISUB))
        (96
         (PUTFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (99 (ALOAD_0))
        (100 (DUP))
        (101
         (GETFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (104 (ILOAD_3))
        (105 (IADD))
        (106
         (PUTFIELD
              (JVM::FIELDCP
                   "pos"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (109 (ILOAD_3))
        (110 (IRETURN))
        (ENDOFCODE 111))
       (EXCEPTIONS)
       (STACKMAP
        (24
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT TOPX)
          (STACK)
          NIL))
        (56
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT INT)
          (STACK)
          NIL))
        (62
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT TOPX)
          (STACK)
          NIL))
        (75
         (FRAME
          (LOCALS
           (CLASS "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer")
           (ARRAY BYTE)
           INT INT TOPX)
          (STACK)
          NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL VOID)))
        (4 (ALOAD_0))
        (5
         (GETFIELD
              (JVM::FIELDCP
                   "count"
                   "com.sun.cldc.io.j2me.socket.PrivateInputStreamWithBuffer"
                   INT)))
        (8 (ALOAD_0))
        (9 (INVOKESPECIAL
                (METHODCP "available"
                          "com.sun.cldc.io.j2me.socket.PrivateInputStream"
                          NIL INT)))
        (12 (IADD))
        (13 (IRETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "parent"
                   (CLASS "com.sun.cldc.io.j2me.socket.Protocol")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "bytebuf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.OutputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (9 (RETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNONNULL 17))
        (7 (NEW (CLASS "java.io.IOException")))
        (10 (DUP))
        (11 (LDC 0))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (16 (ATHROW))
        (17 (RETURN))
        (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP
        (17
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream"))
           (STACK)
           NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (4 (IFNONNULL 14))
        (7 (ALOAD_0))
        (8 (ICONST_1))
        (9 (NEWARRAY BYTE))
        (11
         (PUTFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (14 (ALOAD_0))
        (15
         (GETFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (18 (ICONST_0))
        (19 (ILOAD_1))
        (20 (JVM::I2B))
        (21 (BASTORE))
        (22 (ALOAD_0))
        (23 (ALOAD_0))
        (24
         (GETFIELD
              (JVM::FIELDCP "bytebuf"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (ARRAY BYTE))))
        (27 (ICONST_0))
        (28 (ICONST_1))
        (29 (INVOKEVIRTUAL
                 (METHODCP "write"
                           "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                           ((ARRAY BYTE) INT INT)
                           VOID)))
        (32 (RETURN))
        (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP
        (14
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    INT)
            (STACK)
            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 70)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL
                 (METHODCP "ensureOpen"
                           "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                           NIL VOID)))
         (4 (ALOAD_1))
         (5 (IFNONNULL 16))
         (8 (NEW (CLASS "java.lang.NullPointerException")))
         (11 (DUP))
         (12 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NullPointerException"
                                      NIL VOID)))
         (15 (ATHROW))
         (16 (ILOAD_3))
         (17 (IFNE 21))
         (20 (RETURN))
         (21 (ICONST_0))
         (22 (ISTORE 4))
         (24 (GOTO 27))
         (27 (ALOAD_0))
         (28 (ALOAD_1))
         (29 (ILOAD_2))
         (30 (ILOAD 4))
         (32 (IADD))
         (33 (ILOAD_3))
         (34 (ILOAD 4))
         (36 (ISUB))
         (37 (INVOKEVIRTUAL
                  (METHODCP "write1"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            ((ARRAY BYTE) INT INT)
                            INT)))
         (40 (ISTORE 5))
         (42 (ILOAD 4))
         (44 (ILOAD 5))
         (46 (IADD))
         (47 (ISTORE 4))
         (49 (ILOAD 4))
         (51 (ILOAD_3))
         (52 (IF_ICMPNE 58))
         (55 (GOTO 69))
         (58 (ILOAD 5))
         (60 (IFNE 27))
         (63 (INVOKESTATIC (METHODCP "iowait" "com.sun.cldc.io.GeneralBase"
                                     NIL VOID)))
         (66 (GOTO 27))
         (69 (RETURN))
         (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP
        (16
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT TOPX TOPX)
            (STACK)
            NIL))
        (21
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT TOPX TOPX)
            (STACK)
            NIL))
        (27
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT INT TOPX)
            (STACK)
            NIL))
        (58
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT INT INT)
            (STACK)
            NIL))
        (69
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT INT INT)
            (STACK)
            NIL)))))
     (METHOD
      "write1"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 26)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNONNULL 15))
        (7 (NEW (CLASS "java.io.InterruptedIOException")))
        (10 (DUP))
        (11 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.InterruptedIOException"
                                     NIL VOID)))
        (14 (ATHROW))
        (15 (ALOAD_0))
        (16
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (19 (ALOAD_1))
        (20 (ILOAD_2))
        (21 (ILOAD_3))
        (22 (INVOKEVIRTUAL (METHODCP "write0"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     ((ARRAY BYTE) INT INT)
                                     INT)))
        (25 (IRETURN))
        (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP
        (15
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream")
                    (ARRAY BYTE)
                    INT INT)
            (STACK)
            NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (4 (IFNULL 35))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL
                (METHODCP "ensureOpen"
                          "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                          NIL VOID)))
        (11 (ALOAD_0))
        (12 (INVOKEVIRTUAL (METHODCP "flush"
                                     "java.io.OutputStream" NIL VOID)))
        (15 (ALOAD_0))
        (16
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (19 (INVOKEVIRTUAL (METHODCP "realClose"
                                     "com.sun.cldc.io.j2me.socket.Protocol"
                                     NIL VOID)))
        (22 (ALOAD_0))
        (23
         (GETFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (26 (ICONST_0))
        (27 (PUTFIELD (JVM::FIELDCP "osopen"
                                    "com.sun.cldc.io.j2me.socket.Protocol"
                                    BOOLEAN)))
        (30 (ALOAD_0))
        (31 (ACONST_NULL))
        (32
         (PUTFIELD
              (JVM::FIELDCP "parent"
                            "com.sun.cldc.io.j2me.socket.PrivateOutputStream"
                            (CLASS "com.sun.cldc.io.j2me.socket.Protocol"))))
        (35 (RETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP
        (35
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2me.socket.PrivateOutputStream"))
           (STACK)
           NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.io.j2se.UniversalFilterInputStream"
    "java.io.InputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "in" (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "marked" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "con"
                   (CLASS "javax.microedition.io.Connection")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 42)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.io.InputStream" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6
         (PUTFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (9 (ALOAD_0))
        (10 (ALOAD_1))
        (11
         (PUTFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (14 (ALOAD_1))
        (15 (INVOKEVIRTUAL (METHODCP "markSupported"
                                     "java.io.InputStream" NIL BOOLEAN)))
        (18 (IFEQ 41))
        (21 (ALOAD_1))
        (22 (ALOAD_1))
        (23 (INVOKEVIRTUAL (METHODCP "available"
                                     "java.io.InputStream" NIL INT)))
        (26 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                     VOID)))
        (29 (ALOAD_0))
        (30 (ICONST_1))
        (31
         (PUTFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (34 (GOTO 41))
        (37 (ASTORE_2))
        (38 (GOTO 41))
        (41 (RETURN))
        (ENDOFCODE 42))
       (EXCEPTIONS (JVM::HANDLER 21 34 37 (CLASS "java.io.IOException")))
       (STACKMAP
        (37
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    (CLASS "java.io.InputStream")
                    TOPX)
            (STACK (CLASS "java.io.IOException"))
            NIL))
        (41
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    (CLASS "java.io.InputStream")
                    TOPX)
            (STACK)
            NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "javax.microedition.io.Connection")
                  (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 11)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_2))
        (2 (INVOKESPECIAL
                (METHODCP "<init>"
                          "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                          ((CLASS "java.io.InputStream"))
                          VOID)))
        (5 (ALOAD_0))
        (6 (ALOAD_1))
        (7
         (PUTFIELD
              (JVM::FIELDCP "con"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "javax.microedition.io.Connection"))))
        (10 (RETURN))
        (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 11)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (ALOAD_1))
        (5 (ILOAD_2))
        (6 (ILOAD_3))
        (7 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                    ((ARRAY BYTE) INT INT)
                                    INT)))
        (10 (IRETURN))
        (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (JVM::LLOAD_1))
        (5 (INVOKEVIRTUAL (METHODCP "skip" "java.io.InputStream" (LONG)
                                    LONG)))
        (8 (JVM::LRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "available"
                                    "java.io.InputStream" NIL INT)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 24)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "close"
                                    "java.io.InputStream" NIL VOID)))
        (7 (ALOAD_0))
        (8
         (GETFIELD
              (JVM::FIELDCP "con"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "javax.microedition.io.Connection"))))
        (11 (IFNULL 23))
        (14 (ALOAD_0))
        (15
         (GETFIELD
              (JVM::FIELDCP "con"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "javax.microedition.io.Connection"))))
        (18 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (23 (RETURN))
        (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP
        (23
         (FRAME
           (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream"))
           (STACK)
           NIL)))))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_0))
        (2
         (PUTFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (5 (ALOAD_0))
        (6
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (9 (ILOAD_1))
        (10 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                     VOID)))
        (13 (RETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "reset"
                                    "java.io.InputStream" NIL VOID)))
        (7 (RETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "markSupported" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                    "java.io.InputStream" NIL BOOLEAN)))
        (7 (IRETURN))
        (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "seek" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 37)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
         (GETFIELD
              (JVM::FIELDCP "marked"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            BOOLEAN)))
        (4 (IFEQ 28))
        (7 (ALOAD_0))
        (8
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (11 (INVOKEVIRTUAL (METHODCP "reset"
                                     "java.io.InputStream" NIL VOID)))
        (14 (ALOAD_0))
        (15
         (GETFIELD
              (JVM::FIELDCP "in"
                            "com.sun.cldc.io.j2se.UniversalFilterInputStream"
                            (CLASS "java.io.InputStream"))))
        (18 (JVM::LLOAD_1))
        (19 (JVM::L2I))
        (20 (JVM::I2L))
        (21 (INVOKEVIRTUAL (METHODCP "skip" "java.io.InputStream" (LONG)
                                     LONG)))
        (24 (POP2))
        (25 (GOTO 36))
        (28 (NEW (CLASS "java.lang.IllegalAccessException")))
        (31 (DUP))
        (32 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalAccessException"
                                     NIL VOID)))
        (35 (ATHROW))
        (36 (RETURN))
        (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP
        (28
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    LONG TOPX)
            (STACK)
            NIL))
        (36
         (FRAME
            (LOCALS (CLASS "com.sun.cldc.io.j2se.UniversalFilterInputStream")
                    LONG TOPX)
            (STACK)
            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.util.TimeZoneImplementation"
    "java.util.TimeZone" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "java.util.TimeZone" NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "getIDs" (PARAMETERS)
             (RETURNTYPE ARRAY (CLASS "java.lang.String"))
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "getInstance"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.util.TimeZone")
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.util.j2me.CalendarImpl"
    "java.util.Calendar"
    (CONSTANT_POOL (STRING "00")
                   (STRING "0")
                   (STRING "Sun, ")
                   (STRING "Mon, ")
                   (STRING "Tue, ")
                   (STRING "Wed, ")
                   (STRING "Thu, ")
                   (STRING "Fri, ")
                   (STRING "Sat, ")
                   (STRING ", ")
                   (STRING " ")
                   (STRING ":")
                   (STRING "Jan")
                   (STRING "Feb")
                   (STRING "Mar")
                   (STRING "Apr")
                   (STRING "May")
                   (STRING "Jun")
                   (STRING "Jul")
                   (STRING "Aug")
                   (STRING "Sep")
                   (STRING "Oct")
                   (STRING "Nov")
                   (STRING "Dec"))
    (FIELDS (FIELD "months"
                   (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESPECIAL (METHODCP "<init>"
                                             "java.util.Calendar" NIL VOID)))
                 (4 (RETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "getMilliseconds" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 2)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                 (4 (JVM::LRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "setMilliseconds" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 6)
          (PARSEDCODE (0 (ALOAD_0))
                      (1 (JVM::LLOAD_1))
                      (2 (INVOKEVIRTUAL (METHODCP "setTimeInMillis"
                                                  "java.util.Calendar" (LONG)
                                                  VOID)))
                      (5 (RETURN))
                      (ENDOFCODE 6))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.io.DataOutput"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 75)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (BIPUSH 11))
         (3 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                     INT)))
         (6 (BIPUSH 22))
         (8 (JVM::ISHL))
         (9 (ALOAD_0))
         (10 (BIPUSH 12))
         (12 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (15 (BIPUSH 16))
         (17 (JVM::ISHL))
         (18 (JVM::IOR))
         (19 (ALOAD_0))
         (20 (BIPUSH 13))
         (22 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (25 (BIPUSH 10))
         (27 (JVM::ISHL))
         (28 (JVM::IOR))
         (29 (ALOAD_0))
         (30 (BIPUSH 14))
         (32 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (35 (JVM::IOR))
         (36 (ISTORE_2))
         (37 (ALOAD_0))
         (38 (ICONST_1))
         (39 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (42 (BIPUSH 9))
         (44 (JVM::ISHL))
         (45 (ALOAD_0))
         (46 (ICONST_2))
         (47 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (50 (ICONST_5))
         (51 (JVM::ISHL))
         (52 (JVM::IOR))
         (53 (ALOAD_0))
         (54 (ICONST_5))
         (55 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
         (58 (JVM::IOR))
         (59 (ISTORE_3))
         (60 (ALOAD_1))
         (61 (ILOAD_2))
         (62 (INVOKEINTERFACE (METHODCP "writeInt" "java.io.DataOutput" (INT)
                                        VOID)
                              2))
         (67 (ALOAD_1))
         (68 (ILOAD_3))
         (69 (INVOKEINTERFACE (METHODCP "writeInt" "java.io.DataOutput" (INT)
                                        VOID)
                              2))
         (74 (RETURN))
         (ENDOFCODE 75))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read"
      (PARAMETERS (CLASS "java.io.DataInput"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 75)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (INVOKEINTERFACE (METHODCP "readInt" "java.io.DataInput" NIL INT)
                             1))
         (6 (ISTORE_2))
         (7 (ALOAD_1))
         (8 (INVOKEINTERFACE (METHODCP "readInt" "java.io.DataInput" NIL INT)
                             1))
         (13 (ISTORE_3))
         (14 (ALOAD_0))
         (15 (BIPUSH 11))
         (17 (ILOAD_2))
         (18 (BIPUSH 22))
         (20 (JVM::ISHR))
         (21 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (24 (ALOAD_0))
         (25 (BIPUSH 12))
         (27 (ILOAD_2))
         (28 (BIPUSH 16))
         (30 (JVM::ISHR))
         (31 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (34 (ALOAD_0))
         (35 (BIPUSH 13))
         (37 (ILOAD_2))
         (38 (BIPUSH 10))
         (40 (JVM::ISHR))
         (41 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (44 (ALOAD_0))
         (45 (BIPUSH 14))
         (47 (ILOAD_2))
         (48 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (51 (ALOAD_0))
         (52 (ICONST_1))
         (53 (ILOAD_3))
         (54 (BIPUSH 9))
         (56 (JVM::ISHR))
         (57 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (60 (ALOAD_0))
         (61 (ICONST_2))
         (62 (ILOAD_3))
         (63 (ICONST_5))
         (64 (JVM::ISHR))
         (65 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (68 (ALOAD_0))
         (69 (ICONST_5))
         (70 (ILOAD_3))
         (71 (INVOKEVIRTUAL (METHODCP "set" "java.util.Calendar" (INT INT)
                                      VOID)))
         (74 (RETURN))
         (ENDOFCODE 75))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "twoDigitString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 41)
       (PARSEDCODE
            (0 (ILOAD_1))
            (1 (IFNE 7))
            (4 (LDC 0))
            (6 (ARETURN))
            (7 (ILOAD_1))
            (8 (BIPUSH 10))
            (10 (IF_ICMPGE 36))
            (13 (NEW (CLASS "java.lang.StringBuffer")))
            (16 (DUP))
            (17 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (20 (LDC 1))
            (22 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (25 (ILOAD_1))
            (26 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                        (CLASS "java.lang.String"))))
            (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (35 (ARETURN))
            (36 (ILOAD_1))
            (37 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT)
                                        (CLASS "java.lang.String"))))
            (40 (ARETURN))
            (ENDOFCODE 41))
       (EXCEPTIONS)
       (STACKMAP
            (7 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                              INT)
                      (STACK)
                      NIL))
            (36 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 241)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (BIPUSH 7))
        (3 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                    INT)))
        (6 (JVM::TABLESWITCH (JVM::TABLESWITCHINFO 90 (1 . 7)
                                                   (48 54 60 66 72 78 84))))
        (48 (LDC 2))
        (50 (ASTORE_1))
        (51 (GOTO 115))
        (54 (LDC 3))
        (56 (ASTORE_1))
        (57 (GOTO 115))
        (60 (LDC 4))
        (62 (ASTORE_1))
        (63 (GOTO 115))
        (66 (LDC 5))
        (68 (ASTORE_1))
        (69 (GOTO 115))
        (72 (LDC 6))
        (74 (ASTORE_1))
        (75 (GOTO 115))
        (78 (LDC 7))
        (80 (ASTORE_1))
        (81 (GOTO 115))
        (84 (LDC 8))
        (86 (ASTORE_1))
        (87 (GOTO 115))
        (90 (NEW (CLASS "java.lang.StringBuffer")))
        (93 (DUP))
        (94 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (97 (ALOAD_0))
        (98 (BIPUSH 7))
        (100 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (103 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (106 (LDC 9))
        (108 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (111 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (114 (ASTORE_1))
        (115 (NEW (CLASS "java.lang.StringBuffer")))
        (118 (DUP))
        (119 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (122 (ALOAD_1))
        (123 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (126 (ALOAD_0))
        (127 (ALOAD_0))
        (128 (ICONST_5))
        (129 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (132 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (135 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (138 (LDC 10))
        (140 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (143 (GETSTATIC (JVM::FIELDCP "months"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
        (146 (ALOAD_0))
        (147 (ICONST_2))
        (148 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (151 (AALOAD))
        (152 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (155 (LDC 10))
        (157 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (160 (ALOAD_0))
        (161 (ICONST_1))
        (162 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (165 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (168 (LDC 10))
        (170 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (173 (ALOAD_0))
        (174 (ALOAD_0))
        (175 (BIPUSH 11))
        (177 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (180 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (183 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (186 (LDC 11))
        (188 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (191 (ALOAD_0))
        (192 (ALOAD_0))
        (193 (BIPUSH 12))
        (195 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (198 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (201 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (204 (LDC 11))
        (206 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (209 (ALOAD_0))
        (210 (ALOAD_0))
        (211 (BIPUSH 13))
        (213 (INVOKEVIRTUAL (METHODCP "get" "java.util.Calendar" (INT)
                                      INT)))
        (216 (INVOKESPECIAL (METHODCP "twoDigitString"
                                      "com.sun.cldc.util.j2me.CalendarImpl"
                                      (INT)
                                      (CLASS "java.lang.String"))))
        (219 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (222 (LDC 10))
        (224 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (227 (ALOAD_0))
        (228 (INVOKEVIRTUAL (METHODCP "getTimeZone" "java.util.Calendar"
                                      NIL (CLASS "java.util.TimeZone"))))
        (231 (INVOKEVIRTUAL (METHODCP "getID" "java.util.TimeZone"
                                      NIL (CLASS "java.lang.String"))))
        (234 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (237 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (240 (ARETURN))
        (ENDOFCODE 241))
       (EXCEPTIONS)
       (STACKMAP
            (48 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (54 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (60 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (66 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (72 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (78 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (84 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (90 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                               TOPX)
                       (STACK)
                       NIL))
            (115 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.CalendarImpl")
                                (CLASS "java.lang.String"))
                        (STACK)
                        NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 75)
       (PARSEDCODE
           (0 (BIPUSH 12))
           (2 (ANEWARRAY (CLASS "java.lang.String")))
           (5 (DUP))
           (6 (ICONST_0))
           (7 (LDC 12))
           (9 (AASTORE))
           (10 (DUP))
           (11 (ICONST_1))
           (12 (LDC 13))
           (14 (AASTORE))
           (15 (DUP))
           (16 (ICONST_2))
           (17 (LDC 14))
           (19 (AASTORE))
           (20 (DUP))
           (21 (ICONST_3))
           (22 (LDC 15))
           (24 (AASTORE))
           (25 (DUP))
           (26 (ICONST_4))
           (27 (LDC 16))
           (29 (AASTORE))
           (30 (DUP))
           (31 (ICONST_5))
           (32 (LDC 17))
           (34 (AASTORE))
           (35 (DUP))
           (36 (BIPUSH 6))
           (38 (LDC 18))
           (40 (AASTORE))
           (41 (DUP))
           (42 (BIPUSH 7))
           (44 (LDC 19))
           (46 (AASTORE))
           (47 (DUP))
           (48 (BIPUSH 8))
           (50 (LDC 20))
           (52 (AASTORE))
           (53 (DUP))
           (54 (BIPUSH 9))
           (56 (LDC 21))
           (58 (AASTORE))
           (59 (DUP))
           (60 (BIPUSH 10))
           (62 (LDC 22))
           (64 (AASTORE))
           (65 (DUP))
           (66 (BIPUSH 11))
           (68 (LDC 23))
           (70 (AASTORE))
           (71 (PUTSTATIC (JVM::FIELDCP "months"
                                        "com.sun.cldc.util.j2me.CalendarImpl"
                                        (ARRAY (CLASS "java.lang.String")))))
           (74 (RETURN))
           (ENDOFCODE 75))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "com.sun.cldc.util.j2me.TimeZoneImpl"
    "com.sun.cldc.util.TimeZoneImplementation"
    (CONSTANT_POOL (INT 60000)
                   (INT 3600000)
                   (INT 86400000)
                   (INT 1)
                   (INT 2)
                   (INT 3)
                   (INT 4)
                   (STRING "Illegal DST savings")
                   (STRING "Illegal month ")
                   (STRING "com.sun.cldc.util.j2me.TimeZoneImpl.timezone")
                   (STRING "UTC")
                   (STRING "Illegal start month ")
                   (STRING "Illegal start time ")
                   (STRING "Illegal start day of week ")
                   (STRING "Illegal start day of week in month ")
                   (STRING "Illegal start day ")
                   (STRING "Illegal end month ")
                   (STRING "Illegal end time ")
                   (STRING "Illegal end day of week ")
                   (STRING "Illegal end day of week in month ")
                   (STRING "Illegal end day ")
                   (STRING "GMT"))
    (FIELDS (FIELD "HOME_ID" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1)
            (FIELD "ONE_MINUTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "ONE_HOUR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "ONE_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "ID" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "ids" (ARRAY (CLASS "java.lang.String"))
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1)
            (FIELD "startMonth"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startDay"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startDayOfWeek"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startTime"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endMonth"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endDay"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endDayOfWeek"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endTime"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "startYear"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "rawOffset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "useDaylight"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "millisPerHour" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "millisPerDay" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "monthLength" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1)
            (FIELD "staticMonthLength" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "startMode"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "endMode"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "dstSavings"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "DOM_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   3)
            (FIELD "DOW_IN_MONTH_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   4)
            (FIELD "DOW_GE_DOM_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   5)
            (FIELD "DOW_LE_DOM_MODE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   6)
            (FIELD "zones"
                   (ARRAY (CLASS "java.util.TimeZone"))
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (INVOKESPECIAL (METHODCP "<init>"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   BOOLEAN)))
        (9 (ALOAD_0))
        (10 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (13 (PUTFIELD (JVM::FIELDCP "monthLength"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY BYTE))))
        (16 (RETURN))
        (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS INT (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (INVOKESPECIAL (METHODCP "<init>"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   BOOLEAN)))
        (9 (ALOAD_0))
        (10 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (13 (PUTFIELD (JVM::FIELDCP "monthLength"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY BYTE))))
        (16 (ALOAD_0))
        (17 (ILOAD_1))
        (18 (PUTFIELD (JVM::FIELDCP "rawOffset"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (21 (ALOAD_0))
        (22 (ALOAD_2))
        (23 (PUTFIELD (JVM::FIELDCP "ID"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (CLASS "java.lang.String"))))
        (26 (ALOAD_0))
        (27 (LDC 1))
        (29 (PUTFIELD (JVM::FIELDCP "dstSavings"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (32 (RETURN))
        (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS INT (CLASS "java.lang.String")
                  INT INT INT INT INT INT INT INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 12)
       (CODE_LENGTH . 99)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1
          (INVOKESPECIAL (METHODCP "<init>"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL VOID)))
        (4 (ALOAD_0))
        (5 (ICONST_0))
        (6 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   BOOLEAN)))
        (9 (ALOAD_0))
        (10 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (13 (PUTFIELD (JVM::FIELDCP "monthLength"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY BYTE))))
        (16 (ALOAD_0))
        (17 (ALOAD_2))
        (18 (PUTFIELD (JVM::FIELDCP "ID"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (CLASS "java.lang.String"))))
        (21 (ALOAD_0))
        (22 (ILOAD_1))
        (23 (PUTFIELD (JVM::FIELDCP "rawOffset"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (26 (ALOAD_0))
        (27 (ILOAD_3))
        (28 (PUTFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (31 (ALOAD_0))
        (32 (ILOAD 4))
        (34 (PUTFIELD (JVM::FIELDCP "startDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (37 (ALOAD_0))
        (38 (ILOAD 5))
        (40 (PUTFIELD (JVM::FIELDCP "startDayOfWeek"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (43 (ALOAD_0))
        (44 (ILOAD 6))
        (46 (PUTFIELD (JVM::FIELDCP "startTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (49 (ALOAD_0))
        (50 (ILOAD 7))
        (52 (PUTFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (55 (ALOAD_0))
        (56 (ILOAD 8))
        (58 (PUTFIELD (JVM::FIELDCP "endDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (61 (ALOAD_0))
        (62 (ILOAD 9))
        (64 (PUTFIELD (JVM::FIELDCP "endDayOfWeek"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (67 (ALOAD_0))
        (68 (ILOAD 10))
        (70 (PUTFIELD (JVM::FIELDCP "endTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (73 (ALOAD_0))
        (74 (ILOAD 11))
        (76 (PUTFIELD (JVM::FIELDCP "dstSavings"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (79 (ALOAD_0))
        (80 (INVOKESPECIAL (METHODCP "decodeRules"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     NIL VOID)))
        (83 (ILOAD 11))
        (85 (IFGT 98))
        (88 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (91 (DUP))
        (92 (LDC 7))
        (94 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (97 (ATHROW))
        (98 (RETURN))
        (ENDOFCODE 99))
       (EXCEPTIONS)
       (STACKMAP
            (98 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT (CLASS "java.lang.String")
                               INT INT INT INT INT INT INT INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "getOffset"
      (PARAMETERS INT INT INT INT INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 9)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ILOAD_3))
         (1 (IFLT 10))
         (4 (ILOAD_3))
         (5 (BIPUSH 11))
         (7 (IF_ICMPLE 37))
         (10 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (13 (DUP))
         (14 (NEW (CLASS "java.lang.StringBuffer")))
         (17 (DUP))
         (18 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (21 (LDC 8))
         (23 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (26 (ILOAD_3))
         (27 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (30 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (33 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (36 (ATHROW))
         (37 (ALOAD_0))
         (38 (ILOAD_1))
         (39 (ILOAD_2))
         (40 (ILOAD_3))
         (41 (ILOAD 4))
         (43 (ILOAD 5))
         (45 (ILOAD 6))
         (47 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY BYTE))))
         (50 (ILOAD_3))
         (51 (BALOAD))
         (52 (INVOKEVIRTUAL (METHODCP "getOffset"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (INT INT INT INT INT INT INT)
                                      INT)))
         (55 (IRETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP
            (10 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT INT INT INT INT)
                       (STACK)
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT INT INT INT INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "getOffset"
      (PARAMETERS INT INT INT INT INT INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 10)
       (JVM::MAX_LOCALS . 12)
       (CODE_LENGTH . 305)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFEQ 9))
        (4 (ILOAD_1))
        (5 (ICONST_1))
        (6 (IF_ICMPNE 71))
        (9 (ILOAD_3))
        (10 (IFLT 71))
        (13 (ILOAD_3))
        (14 (BIPUSH 11))
        (16 (IF_ICMPGT 71))
        (19 (ILOAD 4))
        (21 (ICONST_1))
        (22 (IF_ICMPLT 71))
        (25 (ILOAD 4))
        (27 (ILOAD 7))
        (29 (IF_ICMPGT 71))
        (32 (ILOAD 5))
        (34 (ICONST_1))
        (35 (IF_ICMPLT 71))
        (38 (ILOAD 5))
        (40 (BIPUSH 7))
        (42 (IF_ICMPGT 71))
        (45 (ILOAD 6))
        (47 (IFLT 71))
        (50 (ILOAD 6))
        (52 (LDC 2))
        (54 (IF_ICMPGE 71))
        (57 (ILOAD 7))
        (59 (BIPUSH 28))
        (61 (IF_ICMPLT 71))
        (64 (ILOAD 7))
        (66 (BIPUSH 31))
        (68 (IF_ICMPLE 79))
        (71 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (74 (DUP))
        (75 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     NIL VOID)))
        (78 (ATHROW))
        (79 (ALOAD_0))
        (80 (GETFIELD (JVM::FIELDCP "rawOffset"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (83 (ISTORE 8))
        (85 (ALOAD_0))
        (86 (GETFIELD (JVM::FIELDCP "useDaylight"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    BOOLEAN)))
        (89 (IFEQ 105))
        (92 (ILOAD_2))
        (93 (ALOAD_0))
        (94 (GETFIELD (JVM::FIELDCP "startYear"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (97 (IF_ICMPLT 105))
        (100 (ILOAD_1))
        (101 (ICONST_1))
        (102 (IF_ICMPEQ 108))
        (105 (ILOAD 8))
        (107 (IRETURN))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "startMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (112 (ALOAD_0))
        (113 (GETFIELD (JVM::FIELDCP "endMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (116 (IF_ICMPLE 123))
        (119 (ICONST_1))
        (120 (GOTO 124))
        (123 (ICONST_0))
        (124 (ISTORE 9))
        (126 (ILOAD_3))
        (127 (ILOAD 7))
        (129 (ILOAD 4))
        (131 (ILOAD 5))
        (133 (ILOAD 6))
        (135 (ALOAD_0))
        (136 (GETFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (139 (ALOAD_0))
        (140 (GETFIELD (JVM::FIELDCP "startMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (143 (ALOAD_0))
        (144 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (147 (ALOAD_0))
        (148 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (151 (ALOAD_0))
        (152 (GETFIELD (JVM::FIELDCP "startTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (155
            (INVOKESTATIC (METHODCP "compareToRule"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (INT INT INT INT INT INT INT INT INT INT)
                                    INT)))
        (158 (ISTORE 10))
        (160 (ICONST_0))
        (161 (ISTORE 11))
        (163 (ILOAD 9))
        (165 (ILOAD 10))
        (167 (IFLT 174))
        (170 (ICONST_1))
        (171 (GOTO 175))
        (174 (ICONST_0))
        (175 (IF_ICMPEQ 263))
        (178 (ILOAD 6))
        (180 (ALOAD_0))
        (181 (GETFIELD (JVM::FIELDCP "dstSavings"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (184 (IADD))
        (185 (ISTORE 6))
        (187 (GOTO 222))
        (190 (ILOAD 6))
        (192 (LDC 2))
        (194 (ISUB))
        (195 (ISTORE 6))
        (197 (IINC 4 1))
        (200 (ICONST_1))
        (201 (ILOAD 5))
        (203 (BIPUSH 7))
        (205 (IREM))
        (206 (IADD))
        (207 (ISTORE 5))
        (209 (ILOAD 4))
        (211 (ILOAD 7))
        (213 (IF_ICMPLE 222))
        (216 (ICONST_1))
        (217 (ISTORE 4))
        (219 (IINC 3 1))
        (222 (ILOAD 6))
        (224 (LDC 2))
        (226 (IF_ICMPGE 190))
        (229 (ILOAD_3))
        (230 (ILOAD 7))
        (232 (ILOAD 4))
        (234 (ILOAD 5))
        (236 (ILOAD 6))
        (238 (ALOAD_0))
        (239 (GETFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (242 (ALOAD_0))
        (243 (GETFIELD (JVM::FIELDCP "endMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (246 (ALOAD_0))
        (247 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (250 (ALOAD_0))
        (251 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (254 (ALOAD_0))
        (255 (GETFIELD (JVM::FIELDCP "endTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (258
            (INVOKESTATIC (METHODCP "compareToRule"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (INT INT INT INT INT INT INT INT INT INT)
                                    INT)))
        (261 (ISTORE 11))
        (263 (ILOAD 9))
        (265 (IFNE 278))
        (268 (ILOAD 10))
        (270 (IFLT 278))
        (273 (ILOAD 11))
        (275 (IFLT 293))
        (278 (ILOAD 9))
        (280 (IFEQ 302))
        (283 (ILOAD 10))
        (285 (IFGE 293))
        (288 (ILOAD 11))
        (290 (IFGE 302))
        (293 (ILOAD 8))
        (295 (ALOAD_0))
        (296 (GETFIELD (JVM::FIELDCP "dstSavings"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (299 (IADD))
        (300 (ISTORE 8))
        (302 (ILOAD 8))
        (304 (IRETURN))
        (ENDOFCODE 305))
       (EXCEPTIONS)
       (STACKMAP
            (9 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                              INT INT
                              INT INT INT INT INT TOPX TOPX TOPX TOPX)
                      (STACK)
                      NIL))
            (71 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT
                               INT INT INT INT INT TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (79 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT INT
                               INT INT INT INT INT TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (105 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (108 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (123 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK)
                        NIL))
            (124 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT INT
                                INT INT INT INT INT INT TOPX TOPX TOPX)
                        (STACK INT)
                        NIL))
            (174 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK INT)
                        NIL))
            (175 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK INT INT)
                        NIL))
            (190 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (222 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (263 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (278 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (293 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL))
            (302 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                                INT
                                INT INT INT INT INT INT INT INT INT INT)
                        (STACK)
                        NIL)))))
     (METHOD
      "compareToRule"
      (PARAMETERS INT INT INT INT INT INT INT INT INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 11)
       (CODE_LENGTH . 201)
       (PARSEDCODE
            (0 (ILOAD_0))
            (1 (ILOAD 6))
            (3 (IF_ICMPGE 8))
            (6 (ICONST_M1))
            (7 (IRETURN))
            (8 (ILOAD_0))
            (9 (ILOAD 6))
            (11 (IF_ICMPLE 16))
            (14 (ICONST_1))
            (15 (IRETURN))
            (16 (ICONST_0))
            (17 (ISTORE 10))
            (19 (ILOAD 5))
            (21 (JVM::TABLESWITCH (JVM::TABLESWITCHINFO 165 (1 . 4)
                                                        (52 59 122 145))))
            (52 (ILOAD 8))
            (54 (ISTORE 10))
            (56 (GOTO 165))
            (59 (ILOAD 8))
            (61 (IFLE 93))
            (64 (ICONST_1))
            (65 (ILOAD 8))
            (67 (ICONST_1))
            (68 (ISUB))
            (69 (BIPUSH 7))
            (71 (IMUL))
            (72 (IADD))
            (73 (BIPUSH 7))
            (75 (ILOAD 7))
            (77 (IADD))
            (78 (ILOAD_3))
            (79 (ILOAD_2))
            (80 (ISUB))
            (81 (ICONST_1))
            (82 (IADD))
            (83 (ISUB))
            (84 (BIPUSH 7))
            (86 (IREM))
            (87 (IADD))
            (88 (ISTORE 10))
            (90 (GOTO 165))
            (93 (ILOAD_1))
            (94 (ILOAD 8))
            (96 (ICONST_1))
            (97 (IADD))
            (98 (BIPUSH 7))
            (100 (IMUL))
            (101 (IADD))
            (102 (BIPUSH 7))
            (104 (ILOAD_3))
            (105 (ILOAD_1))
            (106 (IADD))
            (107 (ILOAD_2))
            (108 (ISUB))
            (109 (IADD))
            (110 (ILOAD 7))
            (112 (ISUB))
            (113 (BIPUSH 7))
            (115 (IREM))
            (116 (ISUB))
            (117 (ISTORE 10))
            (119 (GOTO 165))
            (122 (ILOAD 8))
            (124 (BIPUSH 49))
            (126 (ILOAD 7))
            (128 (IADD))
            (129 (ILOAD 8))
            (131 (ISUB))
            (132 (ILOAD_3))
            (133 (ISUB))
            (134 (ILOAD_2))
            (135 (IADD))
            (136 (BIPUSH 7))
            (138 (IREM))
            (139 (IADD))
            (140 (ISTORE 10))
            (142 (GOTO 165))
            (145 (ILOAD 8))
            (147 (BIPUSH 49))
            (149 (ILOAD 7))
            (151 (ISUB))
            (152 (ILOAD 8))
            (154 (IADD))
            (155 (ILOAD_3))
            (156 (IADD))
            (157 (ILOAD_2))
            (158 (ISUB))
            (159 (BIPUSH 7))
            (161 (IREM))
            (162 (ISUB))
            (163 (ISTORE 10))
            (165 (ILOAD_2))
            (166 (ILOAD 10))
            (168 (IF_ICMPGE 173))
            (171 (ICONST_M1))
            (172 (IRETURN))
            (173 (ILOAD_2))
            (174 (ILOAD 10))
            (176 (IF_ICMPLE 181))
            (179 (ICONST_1))
            (180 (IRETURN))
            (181 (ILOAD 4))
            (183 (ILOAD 9))
            (185 (IF_ICMPGE 190))
            (188 (ICONST_M1))
            (189 (IRETURN))
            (190 (ILOAD 4))
            (192 (ILOAD 9))
            (194 (IF_ICMPLE 199))
            (197 (ICONST_1))
            (198 (IRETURN))
            (199 (ICONST_0))
            (200 (IRETURN))
            (ENDOFCODE 201))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS INT INT
                                   INT INT INT INT INT INT INT INT TOPX)
                           (STACK)
                           NIL))
                 (16 (FRAME (LOCALS INT INT
                                    INT INT INT INT INT INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (52 (FRAME (LOCALS INT
                                    INT INT INT INT INT INT INT INT INT INT)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS INT
                                    INT INT INT INT INT INT INT INT INT INT)
                            (STACK)
                            NIL))
                 (93 (FRAME (LOCALS INT
                                    INT INT INT INT INT INT INT INT INT INT)
                            (STACK)
                            NIL))
                 (122 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (145 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (165 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (173 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (181 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (190 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (199 (FRAME (LOCALS INT
                                     INT INT INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "getRawOffset" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "rawOffset"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        INT)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "useDaylightTime" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "useDaylight"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        BOOLEAN)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getID" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "ID"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        (CLASS "java.lang.String"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getInstance"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 72)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 33))
         (4 (GETSTATIC (JVM::FIELDCP "HOME_ID"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (CLASS "java.lang.String"))))
         (7 (IFNONNULL 29))
         (10 (LDC 9))
         (12 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.String"))))
         (15 (PUTSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (18 (GETSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (21 (IFNONNULL 29))
         (24 (LDC 10))
         (26 (PUTSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (29 (GETSTATIC (JVM::FIELDCP "HOME_ID"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (CLASS "java.lang.String"))))
         (32 (ASTORE_1))
         (33 (ICONST_0))
         (34 (ISTORE_2))
         (35 (GOTO 62))
         (38 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (41 (ILOAD_2))
         (42 (AALOAD))
         (43 (INVOKEVIRTUAL (METHODCP "getID" "java.util.TimeZone"
                                      NIL (CLASS "java.lang.String"))))
         (46 (ALOAD_1))
         (47 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (50 (IFEQ 59))
         (53 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (56 (ILOAD_2))
         (57 (AALOAD))
         (58 (ARETURN))
         (59 (IINC 2 1))
         (62 (ILOAD_2))
         (63 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (66 (ARRAYLENGTH))
         (67 (IF_ICMPLT 38))
         (70 (ACONST_NULL))
         (71 (ARETURN))
         (ENDOFCODE 72))
       (EXCEPTIONS)
       (STACKMAP
            (29 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (33 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               TOPX)
                       (STACK)
                       NIL))
            (38 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (59 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL))
            (62 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               (CLASS "java.lang.String")
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "getIDs" (PARAMETERS)
      (RETURNTYPE ARRAY (CLASS "java.lang.String"))
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 49)
       (PARSEDCODE
         (0 (GETSTATIC (JVM::FIELDCP "ids"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY (CLASS "java.lang.String")))))
         (3 (IFNONNULL 45))
         (6 (GETSTATIC (JVM::FIELDCP "zones"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY (CLASS "java.util.TimeZone")))))
         (9 (ARRAYLENGTH))
         (10 (ANEWARRAY (CLASS "java.lang.String")))
         (13 (PUTSTATIC (JVM::FIELDCP "ids"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
         (16 (ICONST_0))
         (17 (ISTORE_1))
         (18 (GOTO 37))
         (21 (GETSTATIC (JVM::FIELDCP "ids"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
         (24 (ILOAD_1))
         (25 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (28 (ILOAD_1))
         (29 (AALOAD))
         (30 (INVOKEVIRTUAL (METHODCP "getID" "java.util.TimeZone"
                                      NIL (CLASS "java.lang.String"))))
         (33 (AASTORE))
         (34 (IINC 1 1))
         (37 (ILOAD_1))
         (38 (GETSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
         (41 (ARRAYLENGTH))
         (42 (IF_ICMPLT 21))
         (45 (GETSTATIC (JVM::FIELDCP "ids"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.lang.String")))))
         (48 (ARETURN))
         (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP
            (21 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT)
                       (STACK)
                       NIL))
            (37 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               INT)
                       (STACK)
                       NIL))
            (45 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")
                               TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "decodeRules" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "decodeStartRule"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        NIL VOID)))
            (4 (ALOAD_0))
            (5 (INVOKESPECIAL (METHODCP "decodeEndRule"
                                        "com.sun.cldc.util.j2me.TimeZoneImpl"
                                        NIL VOID)))
            (8 (RETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "decodeStartRule" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 330)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "startDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (5 (IFEQ 19))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "endDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (12 (IFEQ 19))
        (15 (ICONST_1))
        (16 (GOTO 20))
        (19 (ICONST_0))
        (20 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    BOOLEAN)))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "startDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (27 (IFEQ 329))
        (30 (ALOAD_0))
        (31 (GETFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (34 (IFLT 46))
        (37 (ALOAD_0))
        (38 (GETFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (41 (BIPUSH 11))
        (43 (IF_ICMPLE 76))
        (46 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (49 (DUP))
        (50 (NEW (CLASS "java.lang.StringBuffer")))
        (53 (DUP))
        (54 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (57 (LDC 11))
        (59 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (62 (ALOAD_0))
        (63 (GETFIELD (JVM::FIELDCP "startMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (66 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (69 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (72 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (75 (ATHROW))
        (76 (ALOAD_0))
        (77 (GETFIELD (JVM::FIELDCP "startTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (80 (IFLT 92))
        (83 (ALOAD_0))
        (84 (GETFIELD (JVM::FIELDCP "startTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (87 (LDC 2))
        (89 (IF_ICMPLE 122))
        (92 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (95 (DUP))
        (96 (NEW (CLASS "java.lang.StringBuffer")))
        (99 (DUP))
        (100 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (103 (LDC 12))
        (105 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "startTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (112 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (115 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (118 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (121 (ATHROW))
        (122 (ALOAD_0))
        (123 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (126 (IFNE 137))
        (129 (ALOAD_0))
        (130 (ICONST_1))
        (131 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (134 (GOTO 229))
        (137 (ALOAD_0))
        (138 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (141 (IFLE 152))
        (144 (ALOAD_0))
        (145 (ICONST_2))
        (146 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (149 (GOTO 190))
        (152 (ALOAD_0))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (157 (INEG))
        (158 (PUTFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (161 (ALOAD_0))
        (162 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (165 (IFLE 176))
        (168 (ALOAD_0))
        (169 (ICONST_3))
        (170 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (173 (GOTO 190))
        (176 (ALOAD_0))
        (177 (ALOAD_0))
        (178 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (181 (INEG))
        (182 (PUTFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (185 (ALOAD_0))
        (186 (ICONST_4))
        (187 (PUTFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (190 (ALOAD_0))
        (191 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (194 (BIPUSH 7))
        (196 (IF_ICMPLE 229))
        (199 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (202 (DUP))
        (203 (NEW (CLASS "java.lang.StringBuffer")))
        (206 (DUP))
        (207 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (210 (LDC 13))
        (212 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (215 (ALOAD_0))
        (216 (GETFIELD (JVM::FIELDCP "startDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (219 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (222 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (225 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (228 (ATHROW))
        (229 (ALOAD_0))
        (230 (GETFIELD (JVM::FIELDCP "startMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (233 (ICONST_2))
        (234 (IF_ICMPNE 284))
        (237 (ALOAD_0))
        (238 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (241 (BIPUSH -5))
        (243 (IF_ICMPLT 254))
        (246 (ALOAD_0))
        (247 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (250 (ICONST_5))
        (251 (IF_ICMPLE 329))
        (254 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (257 (DUP))
        (258 (NEW (CLASS "java.lang.StringBuffer")))
        (261 (DUP))
        (262 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (265 (LDC 14))
        (267 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (274 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (277 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (280 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (283 (ATHROW))
        (284 (ALOAD_0))
        (285 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (288 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY BYTE))))
        (291 (ALOAD_0))
        (292 (GETFIELD (JVM::FIELDCP "startMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (295 (BALOAD))
        (296 (IF_ICMPLE 329))
        (299 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (302 (DUP))
        (303 (NEW (CLASS "java.lang.StringBuffer")))
        (306 (DUP))
        (307 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (310 (LDC 15))
        (312 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (315 (ALOAD_0))
        (316 (GETFIELD (JVM::FIELDCP "startDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (319 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (322 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (325 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (328 (ATHROW))
        (329 (RETURN))
        (ENDOFCODE 330))
       (EXCEPTIONS)
       (STACKMAP
           (19 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (20 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK INT
                             (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (46 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (76 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (92 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (122 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (137 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (152 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (176 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (190 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (229 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (254 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (284 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (329 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL)))))
     (METHOD
      "decodeEndRule" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 330)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "startDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (5 (IFEQ 19))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "endDay"
                                   "com.sun.cldc.util.j2me.TimeZoneImpl"
                                   INT)))
        (12 (IFEQ 19))
        (15 (ICONST_1))
        (16 (GOTO 20))
        (19 (ICONST_0))
        (20 (PUTFIELD (JVM::FIELDCP "useDaylight"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    BOOLEAN)))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "endDay"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (27 (IFEQ 329))
        (30 (ALOAD_0))
        (31 (GETFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (34 (IFLT 46))
        (37 (ALOAD_0))
        (38 (GETFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (41 (BIPUSH 11))
        (43 (IF_ICMPLE 76))
        (46 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (49 (DUP))
        (50 (NEW (CLASS "java.lang.StringBuffer")))
        (53 (DUP))
        (54 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (57 (LDC 16))
        (59 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (62 (ALOAD_0))
        (63 (GETFIELD (JVM::FIELDCP "endMonth"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (66 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (69 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (72 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (75 (ATHROW))
        (76 (ALOAD_0))
        (77 (GETFIELD (JVM::FIELDCP "endTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (80 (IFLT 92))
        (83 (ALOAD_0))
        (84 (GETFIELD (JVM::FIELDCP "endTime"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    INT)))
        (87 (LDC 2))
        (89 (IF_ICMPLE 122))
        (92 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (95 (DUP))
        (96 (NEW (CLASS "java.lang.StringBuffer")))
        (99 (DUP))
        (100 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (103 (LDC 17))
        (105 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "endTime"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (112 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (115 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (118 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (121 (ATHROW))
        (122 (ALOAD_0))
        (123 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (126 (IFNE 137))
        (129 (ALOAD_0))
        (130 (ICONST_1))
        (131 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (134 (GOTO 229))
        (137 (ALOAD_0))
        (138 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (141 (IFLE 152))
        (144 (ALOAD_0))
        (145 (ICONST_2))
        (146 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (149 (GOTO 190))
        (152 (ALOAD_0))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (157 (INEG))
        (158 (PUTFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (161 (ALOAD_0))
        (162 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (165 (IFLE 176))
        (168 (ALOAD_0))
        (169 (ICONST_3))
        (170 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (173 (GOTO 190))
        (176 (ALOAD_0))
        (177 (ALOAD_0))
        (178 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (181 (INEG))
        (182 (PUTFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (185 (ALOAD_0))
        (186 (ICONST_4))
        (187 (PUTFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (190 (ALOAD_0))
        (191 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (194 (BIPUSH 7))
        (196 (IF_ICMPLE 229))
        (199 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (202 (DUP))
        (203 (NEW (CLASS "java.lang.StringBuffer")))
        (206 (DUP))
        (207 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (210 (LDC 18))
        (212 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (215 (ALOAD_0))
        (216 (GETFIELD (JVM::FIELDCP "endDayOfWeek"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (219 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (222 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (225 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (228 (ATHROW))
        (229 (ALOAD_0))
        (230 (GETFIELD (JVM::FIELDCP "endMode"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (233 (ICONST_2))
        (234 (IF_ICMPNE 284))
        (237 (ALOAD_0))
        (238 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (241 (BIPUSH -5))
        (243 (IF_ICMPLT 254))
        (246 (ALOAD_0))
        (247 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (250 (ICONST_5))
        (251 (IF_ICMPLE 329))
        (254 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (257 (DUP))
        (258 (NEW (CLASS "java.lang.StringBuffer")))
        (261 (DUP))
        (262 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (265 (LDC 19))
        (267 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (274 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (277 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (280 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (283 (ATHROW))
        (284 (ALOAD_0))
        (285 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (288 (GETSTATIC (JVM::FIELDCP "staticMonthLength"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY BYTE))))
        (291 (ALOAD_0))
        (292 (GETFIELD (JVM::FIELDCP "endMonth"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (295 (BALOAD))
        (296 (IF_ICMPLE 329))
        (299 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (302 (DUP))
        (303 (NEW (CLASS "java.lang.StringBuffer")))
        (306 (DUP))
        (307 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
        (310 (LDC 20))
        (312 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
        (315 (ALOAD_0))
        (316 (GETFIELD (JVM::FIELDCP "endDay"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     INT)))
        (319 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
        (322 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
        (325 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (328 (ATHROW))
        (329 (RETURN))
        (ENDOFCODE 330))
       (EXCEPTIONS)
       (STACKMAP
           (19 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (20 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK INT
                             (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      NIL))
           (46 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (76 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (92 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                      (STACK)
                      NIL))
           (122 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (137 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (152 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (176 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (190 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (229 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (254 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (284 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL))
           (329 (FRAME (LOCALS (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl"))
                       (STACK)
                       NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 115)
       (PARSEDCODE
        (0 (ACONST_NULL))
        (1 (PUTSTATIC (JVM::FIELDCP "HOME_ID"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (CLASS "java.lang.String"))))
        (4 (ACONST_NULL))
        (5 (PUTSTATIC (JVM::FIELDCP "ids"
                                    "com.sun.cldc.util.j2me.TimeZoneImpl"
                                    (ARRAY (CLASS "java.lang.String")))))
        (8 (BIPUSH 12))
        (10 (NEWARRAY BYTE))
        (12 (DUP))
        (13 (ICONST_0))
        (14 (BIPUSH 31))
        (16 (BASTORE))
        (17 (DUP))
        (18 (ICONST_1))
        (19 (BIPUSH 29))
        (21 (BASTORE))
        (22 (DUP))
        (23 (ICONST_2))
        (24 (BIPUSH 31))
        (26 (BASTORE))
        (27 (DUP))
        (28 (ICONST_3))
        (29 (BIPUSH 30))
        (31 (BASTORE))
        (32 (DUP))
        (33 (ICONST_4))
        (34 (BIPUSH 31))
        (36 (BASTORE))
        (37 (DUP))
        (38 (ICONST_5))
        (39 (BIPUSH 30))
        (41 (BASTORE))
        (42 (DUP))
        (43 (BIPUSH 6))
        (45 (BIPUSH 31))
        (47 (BASTORE))
        (48 (DUP))
        (49 (BIPUSH 7))
        (51 (BIPUSH 31))
        (53 (BASTORE))
        (54 (DUP))
        (55 (BIPUSH 8))
        (57 (BIPUSH 30))
        (59 (BASTORE))
        (60 (DUP))
        (61 (BIPUSH 9))
        (63 (BIPUSH 31))
        (65 (BASTORE))
        (66 (DUP))
        (67 (BIPUSH 10))
        (69 (BIPUSH 30))
        (71 (BASTORE))
        (72 (DUP))
        (73 (BIPUSH 11))
        (75 (BIPUSH 31))
        (77 (BASTORE))
        (78 (PUTSTATIC (JVM::FIELDCP "staticMonthLength"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (ARRAY BYTE))))
        (81 (ICONST_2))
        (82 (ANEWARRAY (CLASS "java.util.TimeZone")))
        (85 (DUP))
        (86 (ICONST_0))
        (87 (NEW (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")))
        (90 (DUP))
        (91 (ICONST_0))
        (92 (LDC 21))
        (94 (INVOKESPECIAL (METHODCP "<init>"
                                     "com.sun.cldc.util.j2me.TimeZoneImpl"
                                     (INT (CLASS "java.lang.String"))
                                     VOID)))
        (97 (AASTORE))
        (98 (DUP))
        (99 (ICONST_1))
        (100 (NEW (CLASS "com.sun.cldc.util.j2me.TimeZoneImpl")))
        (103 (DUP))
        (104 (ICONST_0))
        (105 (LDC 10))
        (107 (INVOKESPECIAL (METHODCP "<init>"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (INT (CLASS "java.lang.String"))
                                      VOID)))
        (110 (AASTORE))
        (111 (PUTSTATIC (JVM::FIELDCP "zones"
                                      "com.sun.cldc.util.j2me.TimeZoneImpl"
                                      (ARRAY (CLASS "java.util.TimeZone")))))
        (114 (RETURN))
        (ENDOFCODE 115))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Object" ""
    (CONSTANT_POOL (STRING "@")
                   (STRING "timeout value is negative")
                   (INT 999999)
                   (STRING "nanosecond timeout value out of range")
                   (INT 500000))
    (FIELDS)
    (METHODS
     (METHOD "<init>" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "getClass" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.Class")
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "hashCode" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "equals"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ALOAD_1))
                               (2 (JVM::IF_ACMPNE 9))
                               (5 (ICONST_1))
                               (6 (GOTO 10))
                               (9 (ICONST_0))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object")
                                               (CLASS "java.lang.Object"))
                                       (STACK)
                                       NIL))
                             (10 (FRAME (LOCALS (CLASS "java.lang.Object")
                                                (CLASS "java.lang.Object"))
                                        (STACK INT)
                                        NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                    NIL (CLASS "java.lang.Class"))))
        (11 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (17 (LDC 0))
        (19 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (22 (ALOAD_0))
        (23 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (26 (INVOKESTATIC (METHODCP "toHexString" "java.lang.Integer" (INT)
                                    (CLASS "java.lang.String"))))
        (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (35 (ARETURN))
        (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "notify" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "notifyAll" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "wait" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "wait" (PARAMETERS LONG INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 62)
       (PARSEDCODE
            (0 (JVM::LLOAD_1))
            (1 (LCONST_0))
            (2 (LCMP))
            (3 (IFGE 16))
            (6 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (9 (DUP))
            (10 (LDC 1))
            (12 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (15 (ATHROW))
            (16 (ILOAD_3))
            (17 (IFLT 26))
            (20 (ILOAD_3))
            (21 (LDC 2))
            (23 (IF_ICMPLE 36))
            (26 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (29 (DUP))
            (30 (LDC 3))
            (32 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (35 (ATHROW))
            (36 (ILOAD_3))
            (37 (LDC 4))
            (39 (IF_ICMPGE 52))
            (42 (ILOAD_3))
            (43 (IFEQ 56))
            (46 (JVM::LLOAD_1))
            (47 (LCONST_0))
            (48 (LCMP))
            (49 (IFNE 56))
            (52 (JVM::LLOAD_1))
            (53 (LCONST_1))
            (54 (JVM::LADD))
            (55 (JVM::LSTORE_1))
            (56 (ALOAD_0))
            (57 (JVM::LLOAD_1))
            (58 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                         VOID)))
            (61 (RETURN))
            (ENDOFCODE 62))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (36 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (52 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Object")
                                    LONG TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "wait" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 6)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (LCONST_0))
                 (2 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" (LONG)
                                             VOID)))
                 (5 (RETURN))
                 (ENDOFCODE 6))
            (EXCEPTIONS)
            (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Class" "java.lang.Object"
    (CONSTANT_POOL (STRING "interface ")
                   (STRING "class ")
                   (STRING "resource:"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 35)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (ALOAD_0))
             (8 (INVOKEVIRTUAL (METHODCP "isInterface"
                                         "java.lang.Class" NIL BOOLEAN)))
             (11 (IFEQ 19))
             (14 (LDC 0))
             (16 (GOTO 21))
             (19 (LDC 1))
             (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (24 (ALOAD_0))
             (25 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                          NIL (CLASS "java.lang.String"))))
             (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (31 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (34 (ARETURN))
             (ENDOFCODE 35))
        (EXCEPTIONS)
        (STACKMAP (19 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.StringBuffer"))
                             NIL))
                  (21 (FRAME (LOCALS (CLASS "java.lang.Class"))
                             (STACK (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer"))
                             NIL)))))
     (METHOD "forName"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.lang.Class")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "newInstance" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.Object")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isInstance"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isAssignableFrom"
             (PARAMETERS (CLASS "java.lang.Class"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isInterface" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "isArray" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "getName" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "getResourceAsStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 101)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (4 (IFLE 26))
        (7 (ALOAD_1))
        (8 (ICONST_0))
        (9 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                    CHAR)))
        (12 (BIPUSH 47))
        (14 (IF_ICMPNE 26))
        (17 (ALOAD_1))
        (18 (ICONST_1))
        (19 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (22 (ASTORE_1))
        (23 (GOTO 75))
        (26 (ALOAD_0))
        (27 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (30 (ASTORE_2))
        (31 (ALOAD_2))
        (32 (BIPUSH 46))
        (34 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.lang.String" (INT)
                                     INT)))
        (37 (ISTORE_3))
        (38 (ILOAD_3))
        (39 (IFLT 75))
        (42 (NEW (CLASS "java.lang.StringBuffer")))
        (45 (DUP))
        (46 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (49 (ALOAD_2))
        (50 (ICONST_0))
        (51 (ILOAD_3))
        (52 (ICONST_1))
        (53 (IADD))
        (54 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (57 (BIPUSH 46))
        (59 (BIPUSH 47))
        (61 (INVOKEVIRTUAL (METHODCP "replace" "java.lang.String" (CHAR CHAR)
                                     (CLASS "java.lang.String"))))
        (64 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (67 (ALOAD_1))
        (68 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (71 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (74 (ASTORE_1))
        (75 (NEW (CLASS "java.lang.StringBuffer")))
        (78 (DUP))
        (79 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (82 (LDC 2))
        (84 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (87 (ALOAD_1))
        (88 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (91 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (94 (INVOKESTATIC (METHODCP "openInputStream"
                                    "javax.microedition.io.Connector"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.io.InputStream"))))
        (97 (ARETURN))
        (98 (ASTORE_2))
        (99 (ACONST_NULL))
        (100 (ARETURN))
        (ENDOFCODE 101))
       (EXCEPTIONS (JVM::HANDLER 0 97 98 (CLASS "java.io.IOException")))
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (75 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.lang.Class")
                                    (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL)))))
     (METHOD "runCustomCode" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 0)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.String" "java.lang.Object"
    (CONSTANT_POOL (STRING "null")
                   (STRING "true")
                   (STRING "false"))
    (FIELDS (FIELD "value" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "offset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (NEWARRAY CHAR))
          (8 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (11 (RETURN))
          (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 37)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (9 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (12 (ALOAD_0))
          (13 (ALOAD_0))
          (14 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (17 (NEWARRAY CHAR))
          (19 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (22 (ALOAD_1))
          (23 (ICONST_0))
          (24 (ALOAD_0))
          (25 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (28 (ALOAD_0))
          (29 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (32 (ICONST_0))
          (33 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                       (INT INT (ARRAY CHAR) INT)
                                       VOID)))
          (36 (RETURN))
          (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (ARRAYLENGTH))
          (7 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (10 (ALOAD_0))
          (11 (ALOAD_0))
          (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (15 (NEWARRAY CHAR))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_1))
          (21 (ICONST_0))
          (22 (ALOAD_0))
          (23 (GETFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (26 (ICONST_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (31 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                      ((CLASS "java.lang.Object")
                                       INT (CLASS "java.lang.Object")
                                       INT INT)
                                      VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 73)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
        (4 (ILOAD_2))
        (5 (IFGE 17))
        (8 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (ILOAD_2))
        (13
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (16 (ATHROW))
        (17 (ILOAD_3))
        (18 (IFGE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_3))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_2))
        (31 (ALOAD_1))
        (32 (ARRAYLENGTH))
        (33 (ILOAD_3))
        (34 (ISUB))
        (35 (IF_ICMPLE 49))
        (38 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (41 (DUP))
        (42 (ILOAD_2))
        (43 (ILOAD_3))
        (44 (IADD))
        (45
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (48 (ATHROW))
        (49 (ALOAD_0))
        (50 (ILOAD_3))
        (51 (NEWARRAY CHAR))
        (53 (PUTFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (56 (ALOAD_0))
        (57 (ILOAD_3))
        (58 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (61 (ALOAD_1))
        (62 (ILOAD_2))
        (63 (ALOAD_0))
        (64 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (67 (ICONST_0))
        (68 (ILOAD_3))
        (69 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (72 (RETURN))
        (ENDOFCODE 73))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE)
                  INT INT (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 5)
         (JVM::MAX_LOCALS . 5)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ALOAD_1))
              (2 (ILOAD_2))
              (3 (ILOAD_3))
              (4 (ALOAD 4))
              (6 (INVOKESTATIC (METHODCP "byteToCharArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY CHAR))))
              (9 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.lang.String" ((ARRAY CHAR))
                                          VOID)))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE)
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (ICONST_0))
             (3 (ALOAD_1))
             (4 (ARRAYLENGTH))
             (5 (ALOAD_2))
             (6 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                         ((ARRAY BYTE)
                                          INT INT (CLASS "java.lang.String"))
                                         VOID)))
             (9 (RETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 4)
           (CODE_LENGTH . 11)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ILOAD_2))
                (3 (ILOAD_3))
                (4 (INVOKESTATIC (METHODCP "byteToCharArray"
                                           "com.sun.cldc.i18n.Helper"
                                           ((ARRAY BYTE) INT INT)
                                           (ARRAY CHAR))))
                (7 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (10 (RETURN))
                (ENDOFCODE 11))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 4)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE (0 (ALOAD_0))
                      (1 (ALOAD_1))
                      (2 (ICONST_0))
                      (3 (ALOAD_1))
                      (4 (ARRAYLENGTH))
                      (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY BYTE) INT INT)
                                                  VOID)))
                      (8 (RETURN))
                      (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.StringBuffer"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 44)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_1))
          (5 (DUP))
          (6 (ASTORE_2))
          (7 (MONITORENTER))
          (8 (ALOAD_1))
          (9 (INVOKEVIRTUAL (METHODCP "setShared"
                                      "java.lang.StringBuffer" NIL VOID)))
          (12 (ALOAD_0))
          (13 (ALOAD_1))
          (14 (INVOKEVIRTUAL (METHODCP "getValue" "java.lang.StringBuffer"
                                       NIL (ARRAY CHAR))))
          (17 (PUTFIELD (JVM::FIELDCP "value"
                                      "java.lang.String" (ARRAY CHAR))))
          (20 (ALOAD_0))
          (21 (ICONST_0))
          (22 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (25 (ALOAD_0))
          (26 (ALOAD_1))
          (27 (INVOKEVIRTUAL (METHODCP "length"
                                       "java.lang.StringBuffer" NIL INT)))
          (30 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (33 (ALOAD_2))
          (34 (MONITOREXIT))
          (35 (GOTO 43))
          (38 (ASTORE_3))
          (39 (ALOAD_2))
          (40 (MONITOREXIT))
          (41 (ALOAD_3))
          (42 (ATHROW))
          (43 (RETURN))
          (ENDOFCODE 44))
       (EXCEPTIONS (JVM::HANDLER 8 35 38 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 38 41 38 (CLASS "java.lang.Throwable")))
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.StringBuffer")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>"
      (PARAMETERS INT INT (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_3))
          (6 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.String" (ARRAY CHAR))))
          (9 (ALOAD_0))
          (10 (ILOAD_1))
          (11 (PUTFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
          (14 (ALOAD_0))
          (15 (ILOAD_2))
          (16 (PUTFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
          (19 (RETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "length" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (4 (IRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD "charAt" (PARAMETERS INT)
             (RETURNTYPE . CHAR)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "getChars"
      (PARAMETERS INT INT (ARRAY CHAR) INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 66)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ALOAD_0))
        (47 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (50 (ALOAD_0))
        (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ALOAD_3))
        (57 (ILOAD 4))
        (59 (ILOAD_2))
        (60 (ILOAD_1))
        (61 (ISUB))
        (62 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (65 (RETURN))
        (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getBytes"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 17)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value"
                                        "java.lang.String" (ARRAY CHAR))))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (8 (ALOAD_0))
             (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (12 (ALOAD_1))
             (13 (INVOKESTATIC (METHODCP "charToByteArray"
                                         "com.sun.cldc.i18n.Helper"
                                         ((ARRAY CHAR)
                                          INT INT (CLASS "java.lang.String"))
                                         (ARRAY BYTE))))
             (16 (ARETURN))
             (ENDOFCODE 17))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "getBytes" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 16)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (4 (ALOAD_0))
                (5 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (8 (ALOAD_0))
                (9 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (12 (INVOKESTATIC (METHODCP "charToByteArray"
                                            "com.sun.cldc.i18n.Helper"
                                            ((ARRAY CHAR) INT INT)
                                            (ARRAY BYTE))))
                (15 (ARETURN))
                (ENDOFCODE 16))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD "equals"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "compareTo"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 11)
          (CODE_LENGTH . 91)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (ISTORE_2))
               (5 (ALOAD_1))
               (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (9 (ISTORE_3))
               (10 (ILOAD_2))
               (11 (ILOAD_3))
               (12 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                           INT)))
               (15 (ISTORE 4))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (21 (ASTORE 5))
               (23 (ALOAD_1))
               (24 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (27 (ASTORE 6))
               (29 (ALOAD_0))
               (30 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (33 (ISTORE 7))
               (35 (ALOAD_1))
               (36 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (39 (ISTORE 8))
               (41 (GOTO 77))
               (44 (ALOAD 5))
               (46 (ILOAD 7))
               (48 (IINC 7 1))
               (51 (CALOAD))
               (52 (ISTORE 9))
               (54 (ALOAD 6))
               (56 (ILOAD 8))
               (58 (IINC 8 1))
               (61 (CALOAD))
               (62 (ISTORE 10))
               (64 (ILOAD 9))
               (66 (ILOAD 10))
               (68 (IF_ICMPEQ 77))
               (71 (ILOAD 9))
               (73 (ILOAD 10))
               (75 (ISUB))
               (76 (IRETURN))
               (77 (ILOAD 4))
               (79 (DUP))
               (80 (ICONST_1))
               (81 (ISUB))
               (82 (ISTORE 4))
               (84 (IFNE 44))
               (87 (ILOAD_2))
               (88 (ILOAD_3))
               (89 (ISUB))
               (90 (IRETURN))
               (ENDOFCODE 91))
          (EXCEPTIONS)
          (STACKMAP (44 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL))
                    (77 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT TOPX TOPX)
                               (STACK)
                               NIL)))))
     (METHOD
      "regionMatches"
      (PARAMETERS BOOLEAN INT (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 6)
          (JVM::MAX_LOCALS . 15)
          (CODE_LENGTH . 170)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE 6))
               (6 (ALOAD_0))
               (7 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (10 (ILOAD_2))
               (11 (IADD))
               (12 (ISTORE 7))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (22 (IADD))
               (23 (ISTORE 8))
               (25 (ALOAD_3))
               (26 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (29 (ASTORE 9))
               (31 (ALOAD_3))
               (32 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (35 (ILOAD 4))
               (37 (IADD))
               (38 (ISTORE 10))
               (40 (ILOAD 4))
               (42 (IFLT 80))
               (45 (ILOAD_2))
               (46 (IFLT 80))
               (49 (ILOAD_2))
               (50 (JVM::I2L))
               (51 (ALOAD_0))
               (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (55 (JVM::I2L))
               (56 (ILOAD 5))
               (58 (JVM::I2L))
               (59 (JVM::LSUB))
               (60 (LCMP))
               (61 (IFGT 80))
               (64 (ILOAD 4))
               (66 (JVM::I2L))
               (67 (ALOAD_3))
               (68 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (71 (JVM::I2L))
               (72 (ILOAD 5))
               (74 (JVM::I2L))
               (75 (JVM::LSUB))
               (76 (LCMP))
               (77 (IFLE 158))
               (80 (ICONST_0))
               (81 (IRETURN))
               (82 (ALOAD 6))
               (84 (ILOAD 7))
               (86 (IINC 7 1))
               (89 (CALOAD))
               (90 (ISTORE 11))
               (92 (ALOAD 9))
               (94 (ILOAD 10))
               (96 (IINC 10 1))
               (99 (CALOAD))
               (100 (ISTORE 12))
               (102 (ILOAD 11))
               (104 (ILOAD 12))
               (106 (IF_ICMPNE 112))
               (109 (GOTO 158))
               (112 (ILOAD_1))
               (113 (IFEQ 156))
               (116 (ILOAD 11))
               (118 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (121 (ISTORE 13))
               (123 (ILOAD 12))
               (125 (INVOKESTATIC (METHODCP "toUpperCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (128 (ISTORE 14))
               (130 (ILOAD 13))
               (132 (ILOAD 14))
               (134 (IF_ICMPNE 140))
               (137 (GOTO 158))
               (140 (ILOAD 13))
               (142 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (145 (ILOAD 14))
               (147 (INVOKESTATIC (METHODCP "toLowerCase"
                                            "java.lang.Character" (CHAR)
                                            CHAR)))
               (150 (IF_ICMPNE 156))
               (153 (GOTO 158))
               (156 (ICONST_0))
               (157 (IRETURN))
               (158 (ILOAD 5))
               (160 (DUP))
               (161 (ICONST_1))
               (162 (ISUB))
               (163 (ISTORE 5))
               (165 (IFGT 82))
               (168 (ICONST_1))
               (169 (IRETURN))
               (ENDOFCODE 170))
          (EXCEPTIONS)
          (STACKMAP (80 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT (CLASS "java.lang.String")
                                       INT INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT TOPX TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                    (112 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (140 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT INT INT)
                                (STACK)
                                NIL))
                    (156 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT INT INT TOPX TOPX)
                                (STACK)
                                NIL))
                    (158 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT (ARRAY CHAR)
                                        INT TOPX TOPX TOPX TOPX)
                                (STACK)
                                NIL)))))
     (METHOD
      "startsWith"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 9)
          (CODE_LENGTH . 89)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (4 (ASTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (9 (ILOAD_2))
               (10 (IADD))
               (11 (ISTORE 4))
               (13 (ALOAD_0))
               (14 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (17 (ALOAD_0))
               (18 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (21 (IADD))
               (22 (ISTORE 5))
               (24 (ALOAD_1))
               (25 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (28 (ASTORE 6))
               (30 (ALOAD_1))
               (31 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (34 (ISTORE 7))
               (36 (ALOAD_1))
               (37 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (40 (ISTORE 8))
               (42 (ILOAD_2))
               (43 (IFLT 57))
               (46 (ILOAD_2))
               (47 (ALOAD_0))
               (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (51 (ILOAD 8))
               (53 (ISUB))
               (54 (IF_ICMPLE 79))
               (57 (ICONST_0))
               (58 (IRETURN))
               (59 (ALOAD_3))
               (60 (ILOAD 4))
               (62 (IINC 4 1))
               (65 (CALOAD))
               (66 (ALOAD 6))
               (68 (ILOAD 7))
               (70 (IINC 7 1))
               (73 (CALOAD))
               (74 (IF_ICMPEQ 79))
               (77 (ICONST_0))
               (78 (IRETURN))
               (79 (IINC 8 -1))
               (82 (ILOAD 8))
               (84 (IFGE 59))
               (87 (ICONST_1))
               (88 (IRETURN))
               (ENDOFCODE 89))
          (EXCEPTIONS)
          (STACKMAP (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL))
                    (79 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       INT INT (ARRAY CHAR)
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "startsWith"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "endsWith"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 15)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (6 (ALOAD_1))
                (7 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (10 (ISUB))
                (11 (INVOKEVIRTUAL (METHODCP "startsWith" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             BOOLEAN)))
                (14 (IRETURN))
                (ENDOFCODE 15))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 6)
           (CODE_LENGTH . 48)
           (PARSEDCODE
                (0 (ICONST_0))
                (1 (ISTORE_1))
                (2 (ALOAD_0))
                (3 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
                (6 (ISTORE_2))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
                (11 (ASTORE_3))
                (12 (ALOAD_0))
                (13 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (16 (ISTORE 4))
                (18 (ICONST_0))
                (19 (ISTORE 5))
                (21 (GOTO 39))
                (24 (BIPUSH 31))
                (26 (ILOAD_1))
                (27 (IMUL))
                (28 (ALOAD_3))
                (29 (ILOAD_2))
                (30 (IINC 2 1))
                (33 (CALOAD))
                (34 (IADD))
                (35 (ISTORE_1))
                (36 (IINC 5 1))
                (39 (ILOAD 5))
                (41 (ILOAD 4))
                (43 (IF_ICMPLT 24))
                (46 (ILOAD_1))
                (47 (IRETURN))
                (ENDOFCODE 48))
           (EXCEPTIONS)
           (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL))
                     (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                        INT INT (ARRAY CHAR)
                                        INT INT)
                                (STACK)
                                NIL)))))
     (METHOD "indexOf" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "indexOf" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "lastIndexOf" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 12)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ILOAD_1))
                 (2 (ALOAD_0))
                 (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                 (6 (ICONST_1))
                 (7 (ISUB))
                 (8 (INVOKEVIRTUAL (METHODCP "lastIndexOf"
                                             "java.lang.String" (INT INT)
                                             INT)))
                 (11 (IRETURN))
                 (ENDOFCODE 12))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "lastIndexOf" (PARAMETERS INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 6)
          (CODE_LENGTH . 67)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (4 (ISTORE_3))
               (5 (ALOAD_0))
               (6 (GETFIELD (JVM::FIELDCP "value"
                                          "java.lang.String" (ARRAY CHAR))))
               (9 (ASTORE 4))
               (11 (ALOAD_0))
               (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (15 (ILOAD_2))
               (16 (ALOAD_0))
               (17 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (20 (IF_ICMPLT 32))
               (23 (ALOAD_0))
               (24 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (27 (ICONST_1))
               (28 (ISUB))
               (29 (GOTO 33))
               (32 (ILOAD_2))
               (33 (IADD))
               (34 (ISTORE 5))
               (36 (GOTO 59))
               (39 (ALOAD 4))
               (41 (ILOAD 5))
               (43 (CALOAD))
               (44 (ILOAD_1))
               (45 (IF_ICMPNE 56))
               (48 (ILOAD 5))
               (50 (ALOAD_0))
               (51 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (54 (ISUB))
               (55 (IRETURN))
               (56 (IINC 5 -1))
               (59 (ILOAD 5))
               (61 (ILOAD_3))
               (62 (IF_ICMPGE 39))
               (65 (ICONST_M1))
               (66 (IRETURN))
               (ENDOFCODE 67))
          (EXCEPTIONS)
          (STACKMAP (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT)
                               NIL))
                    (33 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       TOPX)
                               (STACK INT INT)
                               NIL))
                    (39 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (56 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (59 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT INT (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String"
                                             ((CLASS "java.lang.String") INT)
                                             INT)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 12)
         (CODE_LENGTH . 189)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (4 (ASTORE_3))
              (5 (ALOAD_1))
              (6 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
              (9 (ASTORE 4))
              (11 (ALOAD_0))
              (12 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (15 (ALOAD_0))
              (16 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (19 (ALOAD_1))
              (20 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (23 (ISUB))
              (24 (IADD))
              (25 (ISTORE 5))
              (27 (ILOAD_2))
              (28 (ALOAD_0))
              (29 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (32 (IF_ICMPLT 57))
              (35 (ALOAD_0))
              (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (39 (IFNE 55))
              (42 (ILOAD_2))
              (43 (IFNE 55))
              (46 (ALOAD_1))
              (47 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (50 (IFNE 55))
              (53 (ICONST_0))
              (54 (IRETURN))
              (55 (ICONST_M1))
              (56 (IRETURN))
              (57 (ILOAD_2))
              (58 (IFGE 63))
              (61 (ICONST_0))
              (62 (ISTORE_2))
              (63 (ALOAD_1))
              (64 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (67 (IFNE 72))
              (70 (ILOAD_2))
              (71 (IRETURN))
              (72 (ALOAD_1))
              (73 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (76 (ISTORE 6))
              (78 (ALOAD 4))
              (80 (ILOAD 6))
              (82 (CALOAD))
              (83 (ISTORE 7))
              (85 (ALOAD_0))
              (86 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (89 (ILOAD_2))
              (90 (IADD))
              (91 (ISTORE 8))
              (93 (GOTO 99))
              (96 (IINC 8 1))
              (99 (ILOAD 8))
              (101 (ILOAD 5))
              (103 (IF_ICMPGT 115))
              (106 (ALOAD_3))
              (107 (ILOAD 8))
              (109 (CALOAD))
              (110 (ILOAD 7))
              (112 (IF_ICMPNE 96))
              (115 (ILOAD 8))
              (117 (ILOAD 5))
              (119 (IF_ICMPLE 124))
              (122 (ICONST_M1))
              (123 (IRETURN))
              (124 (ILOAD 8))
              (126 (ICONST_1))
              (127 (IADD))
              (128 (ISTORE 9))
              (130 (ILOAD 9))
              (132 (ALOAD_1))
              (133 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
              (136 (IADD))
              (137 (ICONST_1))
              (138 (ISUB))
              (139 (ISTORE 10))
              (141 (ILOAD 6))
              (143 (ICONST_1))
              (144 (IADD))
              (145 (ISTORE 11))
              (147 (GOTO 174))
              (150 (ALOAD_3))
              (151 (ILOAD 9))
              (153 (IINC 9 1))
              (156 (CALOAD))
              (157 (ALOAD 4))
              (159 (ILOAD 11))
              (161 (IINC 11 1))
              (164 (CALOAD))
              (165 (IF_ICMPEQ 174))
              (168 (IINC 8 1))
              (171 (GOTO 99))
              (174 (ILOAD 9))
              (176 (ILOAD 10))
              (178 (IF_ICMPLT 150))
              (181 (ILOAD 8))
              (183 (ALOAD_0))
              (184 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
              (187 (ISUB))
              (188 (IRETURN))
              (ENDOFCODE 189))
         (EXCEPTIONS)
         (STACKMAP (55 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (57 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (63 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (72 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (96 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (99 (FRAME (LOCALS (CLASS "java.lang.String")
                                      (CLASS "java.lang.String")
                                      INT (ARRAY CHAR)
                                      (ARRAY CHAR)
                                      INT INT INT INT TOPX TOPX TOPX)
                              (STACK)
                              NIL))
                   (115 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (124 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT TOPX TOPX TOPX)
                               (STACK)
                               NIL))
                   (150 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL))
                   (174 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (CLASS "java.lang.String")
                                       INT (ARRAY CHAR)
                                       (ARRAY CHAR)
                                       INT INT INT INT INT INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "substring" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (ALOAD_0))
         (3 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
         (6 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
         (9 (ARETURN))
         (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "substring" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 83)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (18 (IF_ICMPLE 30))
        (21 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (24 (DUP))
        (25 (ILOAD_2))
        (26
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (29 (ATHROW))
        (30 (ILOAD_1))
        (31 (ILOAD_2))
        (32 (IF_ICMPLE 46))
        (35 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (38 (DUP))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (45 (ATHROW))
        (46 (ILOAD_1))
        (47 (IFNE 62))
        (50 (ILOAD_2))
        (51 (ALOAD_0))
        (52 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (55 (IF_ICMPNE 62))
        (58 (ALOAD_0))
        (59 (GOTO 82))
        (62 (NEW (CLASS "java.lang.String")))
        (65 (DUP))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (70 (ILOAD_1))
        (71 (IADD))
        (72 (ILOAD_2))
        (73 (ILOAD_1))
        (74 (ISUB))
        (75 (ALOAD_0))
        (76 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (79 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                     (INT INT (ARRAY CHAR))
                                     VOID)))
        (82 (ARETURN))
        (ENDOFCODE 83))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (82 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT)
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "concat"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 58)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (4 (ISTORE_2))
           (5 (ILOAD_2))
           (6 (IFNE 11))
           (9 (ALOAD_0))
           (10 (ARETURN))
           (11 (ALOAD_0))
           (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (15 (ILOAD_2))
           (16 (IADD))
           (17 (NEWARRAY CHAR))
           (19 (ASTORE_3))
           (20 (ALOAD_0))
           (21 (ICONST_0))
           (22 (ALOAD_0))
           (23 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (26 (ALOAD_3))
           (27 (ICONST_0))
           (28 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (31 (ALOAD_1))
           (32 (ICONST_0))
           (33 (ILOAD_2))
           (34 (ALOAD_3))
           (35 (ALOAD_0))
           (36 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (39 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                        (INT INT (ARRAY CHAR) INT)
                                        VOID)))
           (42 (NEW (CLASS "java.lang.String")))
           (45 (DUP))
           (46 (ICONST_0))
           (47 (ALOAD_0))
           (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
           (51 (ILOAD_2))
           (52 (IADD))
           (53 (ALOAD_3))
           (54 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                        (INT INT (ARRAY CHAR))
                                        VOID)))
           (57 (ARETURN))
           (ENDOFCODE 58))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.String")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "replace" (PARAMETERS CHAR CHAR)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 5)
        (JVM::MAX_LOCALS . 10)
        (CODE_LENGTH . 145)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ILOAD_2))
             (2 (IF_ICMPEQ 143))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
             (9 (ISTORE_3))
             (10 (ICONST_M1))
             (11 (ISTORE 4))
             (13 (ALOAD_0))
             (14 (GETFIELD (JVM::FIELDCP "value"
                                         "java.lang.String" (ARRAY CHAR))))
             (17 (ASTORE 5))
             (19 (ALOAD_0))
             (20 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
             (23 (ISTORE 6))
             (25 (GOTO 43))
             (28 (ALOAD 5))
             (30 (ILOAD 6))
             (32 (ILOAD 4))
             (34 (IADD))
             (35 (CALOAD))
             (36 (ILOAD_1))
             (37 (IF_ICMPNE 43))
             (40 (GOTO 52))
             (43 (IINC 4 1))
             (46 (ILOAD 4))
             (48 (ILOAD_3))
             (49 (IF_ICMPLT 28))
             (52 (ILOAD 4))
             (54 (ILOAD_3))
             (55 (IF_ICMPGE 143))
             (58 (ILOAD_3))
             (59 (NEWARRAY CHAR))
             (61 (ASTORE 7))
             (63 (ICONST_0))
             (64 (ISTORE 8))
             (66 (GOTO 85))
             (69 (ALOAD 7))
             (71 (ILOAD 8))
             (73 (ALOAD 5))
             (75 (ILOAD 6))
             (77 (ILOAD 8))
             (79 (IADD))
             (80 (CALOAD))
             (81 (CASTORE))
             (82 (IINC 8 1))
             (85 (ILOAD 8))
             (87 (ILOAD 4))
             (89 (IF_ICMPLT 69))
             (92 (GOTO 125))
             (95 (ALOAD 5))
             (97 (ILOAD 6))
             (99 (ILOAD 4))
             (101 (IADD))
             (102 (CALOAD))
             (103 (ISTORE 9))
             (105 (ALOAD 7))
             (107 (ILOAD 4))
             (109 (ILOAD 9))
             (111 (ILOAD_1))
             (112 (IF_ICMPNE 119))
             (115 (ILOAD_2))
             (116 (GOTO 121))
             (119 (ILOAD 9))
             (121 (CASTORE))
             (122 (IINC 4 1))
             (125 (ILOAD 4))
             (127 (ILOAD_3))
             (128 (IF_ICMPLT 95))
             (131 (NEW (CLASS "java.lang.String")))
             (134 (DUP))
             (135 (ICONST_0))
             (136 (ILOAD_3))
             (137 (ALOAD 7))
             (139 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           (INT INT (ARRAY CHAR))
                                           VOID)))
             (142 (ARETURN))
             (143 (ALOAD_0))
             (144 (ARETURN))
             (ENDOFCODE 145))
        (EXCEPTIONS)
        (STACKMAP (28 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (52 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (69 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (95 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT (ARRAY CHAR)
                                     INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (119 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT (ARRAY CHAR))
                              NIL))
                  (121 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT INT)
                              (STACK INT INT (ARRAY CHAR))
                              NIL))
                  (125 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT INT INT INT (ARRAY CHAR)
                                      INT (ARRAY CHAR)
                                      INT TOPX)
                              (STACK)
                              NIL))
                  (143 (FRAME (LOCALS (CLASS "java.lang.String")
                                      INT
                                      INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                              (STACK)
                              NIL)))))
     (METHOD
      "toLowerCase" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toLowerCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "toUpperCase" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (4 (NEWARRAY CHAR))
               (6 (ASTORE_1))
               (7 (ICONST_0))
               (8 (ISTORE_2))
               (9 (GOTO 32))
               (12 (ALOAD_1))
               (13 (ILOAD_2))
               (14 (ALOAD_0))
               (15 (GETFIELD (JVM::FIELDCP "value"
                                           "java.lang.String" (ARRAY CHAR))))
               (18 (ALOAD_0))
               (19 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
               (22 (ILOAD_2))
               (23 (IADD))
               (24 (CALOAD))
               (25 (INVOKESTATIC (METHODCP "toUpperCase"
                                           "java.lang.Character" (CHAR)
                                           CHAR)))
               (28 (CASTORE))
               (29 (IINC 2 1))
               (32 (ILOAD_2))
               (33 (ALOAD_0))
               (34 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (37 (IF_ICMPLT 12))
               (40 (NEW (CLASS "java.lang.String")))
               (43 (DUP))
               (44 (ICONST_0))
               (45 (ALOAD_0))
               (46 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
               (49 (ALOAD_1))
               (50 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                            (INT INT (ARRAY CHAR))
                                            VOID)))
               (53 (ARETURN))
               (ENDOFCODE 54))
          (EXCEPTIONS)
          (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL))
                    (32 (FRAME (LOCALS (CLASS "java.lang.String")
                                       (ARRAY CHAR)
                                       INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "trim" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 87)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (4 (ISTORE_1))
        (5 (ICONST_0))
        (6 (ISTORE_2))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "offset" "java.lang.String" INT)))
        (11 (ISTORE_3))
        (12 (ALOAD_0))
        (13 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.String" (ARRAY CHAR))))
        (16 (ASTORE 4))
        (18 (GOTO 24))
        (21 (IINC 2 1))
        (24 (ILOAD_2))
        (25 (ILOAD_1))
        (26 (IF_ICMPGE 46))
        (29 (ALOAD 4))
        (31 (ILOAD_3))
        (32 (ILOAD_2))
        (33 (IADD))
        (34 (CALOAD))
        (35 (BIPUSH 32))
        (37 (IF_ICMPLE 21))
        (40 (GOTO 46))
        (43 (IINC 1 -1))
        (46 (ILOAD_2))
        (47 (ILOAD_1))
        (48 (IF_ICMPGE 64))
        (51 (ALOAD 4))
        (53 (ILOAD_3))
        (54 (ILOAD_1))
        (55 (IADD))
        (56 (ICONST_1))
        (57 (ISUB))
        (58 (CALOAD))
        (59 (BIPUSH 32))
        (61 (IF_ICMPLE 43))
        (64 (ILOAD_2))
        (65 (IFGT 76))
        (68 (ILOAD_1))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
        (73 (IF_ICMPGE 85))
        (76 (ALOAD_0))
        (77 (ILOAD_2))
        (78 (ILOAD_1))
        (79 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (82 (GOTO 86))
        (85 (ALOAD_0))
        (86 (ARETURN))
        (ENDOFCODE 87))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (24 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (43 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (64 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (76 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (85 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK)
                            NIL))
                 (86 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT INT INT (ARRAY CHAR))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD "toString" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ALOAD_0))
                               (1 (ARETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "toCharArray" (PARAMETERS)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 5)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 20)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (4 (NEWARRAY CHAR))
                (6 (ASTORE_1))
                (7 (ALOAD_0))
                (8 (ICONST_0))
                (9 (ALOAD_0))
                (10 (GETFIELD (JVM::FIELDCP "count" "java.lang.String" INT)))
                (13 (ALOAD_1))
                (14 (ICONST_0))
                (15 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                             (INT INT (ARRAY CHAR) INT)
                                             VOID)))
                (18 (ALOAD_1))
                (19 (ARETURN))
                (ENDOFCODE 20))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 14)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (IFNONNULL 9))
               (4 (LDC 0))
               (6 (GOTO 13))
               (9 (ALOAD_0))
               (10 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                            NIL (CLASS "java.lang.String"))))
               (13 (ARETURN))
               (ENDOFCODE 14))
          (EXCEPTIONS)
          (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.Object"))
                              (STACK)
                              NIL))
                    (13 (FRAME (LOCALS (CLASS "java.lang.Object"))
                               (STACK (CLASS "java.lang.String"))
                               NIL)))))
     (METHOD
      "valueOf" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 9)
           (PARSEDCODE
                (0 (NEW (CLASS "java.lang.String")))
                (3 (DUP))
                (4 (ALOAD_0))
                (5 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.String" ((ARRAY CHAR))
                                            VOID)))
                (8 (ARETURN))
                (ENDOFCODE 9))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 11)
          (PARSEDCODE (0 (NEW (CLASS "java.lang.String")))
                      (3 (DUP))
                      (4 (ALOAD_0))
                      (5 (ILOAD_1))
                      (6 (ILOAD_2))
                      (7 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  ((ARRAY CHAR) INT INT)
                                                  VOID)))
                      (10 (ARETURN))
                      (ENDOFCODE 11))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD "valueOf" (PARAMETERS BOOLEAN)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFEQ 9))
                               (4 (LDC 1))
                               (6 (GOTO 11))
                               (9 (LDC 2))
                               (11 (ARETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT) (STACK) NIL))
                             (11 (FRAME (LOCALS INT)
                                        (STACK (CLASS "java.lang.String"))
                                        NIL)))))
     (METHOD
      "valueOf" (PARAMETERS CHAR)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 5)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 19)
         (PARSEDCODE (0 (ICONST_1))
                     (1 (NEWARRAY CHAR))
                     (3 (DUP))
                     (4 (ICONST_0))
                     (5 (ILOAD_0))
                     (6 (CASTORE))
                     (7 (ASTORE_1))
                     (8 (NEW (CLASS "java.lang.String")))
                     (11 (DUP))
                     (12 (ICONST_0))
                     (13 (ICONST_1))
                     (14 (ALOAD_1))
                     (15 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                                  (INT INT (ARRAY CHAR))
                                                  VOID)))
                     (18 (ARETURN))
                     (ENDOFCODE 19))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "valueOf" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ILOAD_0))
          (1 (BIPUSH 10))
          (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT INT)
                                     (CLASS "java.lang.String"))))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "valueOf" (PARAMETERS LONG)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (JVM::LLOAD_0))
            (1 (BIPUSH 10))
            (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Long" (LONG INT)
                                       (CLASS "java.lang.String"))))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Exception"
    "java.lang.Throwable" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Throwable" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Throwable"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Throwable" "java.lang.Object"
    (CONSTANT_POOL (STRING ": "))
    (FIELDS (FIELD "detailMessage"
                   (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "backtrace" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                     (CLASS "java.lang.String"))))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getMessage" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "detailMessage" "java.lang.Throwable"
                                        (CLASS "java.lang.String"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 45)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                        NIL (CLASS "java.lang.Class"))))
            (4 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                        NIL (CLASS "java.lang.String"))))
            (7 (ASTORE_1))
            (8 (ALOAD_0))
            (9 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                        NIL (CLASS "java.lang.String"))))
            (12 (ASTORE_2))
            (13 (ALOAD_2))
            (14 (IFNULL 43))
            (17 (NEW (CLASS "java.lang.StringBuffer")))
            (20 (DUP))
            (21 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (24 (ALOAD_1))
            (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (28 (LDC 0))
            (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (33 (ALOAD_2))
            (34 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (37 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (40 (GOTO 44))
            (43 (ALOAD_1))
            (44 (ARETURN))
            (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (43 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.lang.String")
                                    (CLASS "java.lang.String"))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "printStackTrace" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 57)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                    (CLASS "java.io.PrintStream"))))
        (3 (ASTORE_1))
        (4 (ALOAD_0))
        (5 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                    NIL (CLASS "java.lang.String"))))
        (8 (ASTORE_2))
        (9 (ALOAD_1))
        (10 (ALOAD_0))
        (11 (INVOKEVIRTUAL (METHODCP "getClass" "java.lang.Object"
                                     NIL (CLASS "java.lang.Class"))))
        (14 (INVOKEVIRTUAL (METHODCP "getName" "java.lang.Class"
                                     NIL (CLASS "java.lang.String"))))
        (17 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (20 (ALOAD_2))
        (21 (IFNULL 38))
        (24 (ALOAD_1))
        (25 (LDC 0))
        (27 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (30 (ALOAD_1))
        (31 (ALOAD_2))
        (32 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (35 (GOTO 42))
        (38 (ALOAD_1))
        (39 (INVOKEVIRTUAL (METHODCP "println"
                                     "java.io.PrintStream" NIL VOID)))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "backtrace" "java.lang.Throwable"
                                    (CLASS "java.lang.Object"))))
        (46 (IFNULL 56))
        (49 (ALOAD_0))
        (50 (GETSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                     (CLASS "java.io.PrintStream"))))
        (53 (INVOKESPECIAL (METHODCP "printStackTrace0" "java.lang.Throwable"
                                     ((CLASS "java.lang.Object"))
                                     VOID)))
        (56 (RETURN))
        (ENDOFCODE 57))
       (EXCEPTIONS)
       (STACKMAP (38 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (42 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.lang.Throwable")
                                    (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "printStackTrace0"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.StringBuffer"
    "java.lang.Object"
    (CONSTANT_POOL (INT 2147483647)
                   (STRING "srcBegin > srcEnd"))
    (FIELDS (FIELD "value" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "shared"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (BIPUSH 16))
          (3 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                      VOID)))
          (6 (RETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (NEWARRAY CHAR))
          (8 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (11 (ALOAD_0))
          (12 (ICONST_0))
          (13 (PUTFIELD (JVM::FIELDCP "shared"
                                      "java.lang.StringBuffer" BOOLEAN)))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 18)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
          (5 (BIPUSH 16))
          (7 (IADD))
          (8 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                      VOID)))
          (11 (ALOAD_0))
          (12 (ALOAD_1))
          (13 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.StringBuffer"))))
          (16 (POP))
          (17 (RETURN))
          (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "length" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
           (4 (IRETURN))
           (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "capacity" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (4 (ARRAYLENGTH))
          (5 (IRETURN))
          (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "copy" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 33)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (4 (ARRAYLENGTH))
         (5 (NEWARRAY CHAR))
         (7 (ASTORE_1))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (12 (ICONST_0))
         (13 (ALOAD_1))
         (14 (ICONST_0))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (19 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (22 (ALOAD_0))
         (23 (ALOAD_1))
         (24 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (27 (ALOAD_0))
         (28 (ICONST_0))
         (29 (PUTFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
         (32 (RETURN))
         (ENDOFCODE 33))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureCapacity" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 15)
       (PARSEDCODE
          (0 (ILOAD_1))
          (1 (ALOAD_0))
          (2 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (5 (ARRAYLENGTH))
          (6 (IF_ICMPLE 14))
          (9 (ALOAD_0))
          (10 (ILOAD_1))
          (11 (INVOKESPECIAL (METHODCP "expandCapacity"
                                       "java.lang.StringBuffer" (INT)
                                       VOID)))
          (14 (RETURN))
          (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "expandCapacity" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (4 (ARRAYLENGTH))
         (5 (ICONST_1))
         (6 (IADD))
         (7 (ICONST_2))
         (8 (IMUL))
         (9 (ISTORE_2))
         (10 (ILOAD_2))
         (11 (IFGE 20))
         (14 (LDC 0))
         (16 (ISTORE_2))
         (17 (GOTO 27))
         (20 (ILOAD_1))
         (21 (ILOAD_2))
         (22 (IF_ICMPLE 27))
         (25 (ILOAD_1))
         (26 (ISTORE_2))
         (27 (ILOAD_2))
         (28 (NEWARRAY CHAR))
         (30 (ASTORE_3))
         (31 (ALOAD_0))
         (32 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (35 (ICONST_0))
         (36 (ALOAD_3))
         (37 (ICONST_0))
         (38 (ALOAD_0))
         (39 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (42 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (45 (ALOAD_0))
         (46 (ALOAD_3))
         (47 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (50 (ALOAD_0))
         (51 (ICONST_0))
         (52 (PUTFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
         (55 (RETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "setLength" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 117)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_1))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (18 (ARRAYLENGTH))
        (19 (IF_ICMPLE 27))
        (22 (ALOAD_0))
        (23 (ILOAD_1))
        (24 (INVOKESPECIAL (METHODCP "expandCapacity"
                                     "java.lang.StringBuffer" (INT)
                                     VOID)))
        (27 (ALOAD_0))
        (28 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (31 (ILOAD_1))
        (32 (IF_ICMPGE 80))
        (35 (ALOAD_0))
        (36 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (39 (IFEQ 69))
        (42 (ALOAD_0))
        (43 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (46 (GOTO 69))
        (49 (ALOAD_0))
        (50 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (53 (ALOAD_0))
        (54 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (57 (ICONST_0))
        (58 (CASTORE))
        (59 (ALOAD_0))
        (60 (DUP))
        (61 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (64 (ICONST_1))
        (65 (IADD))
        (66 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (69 (ALOAD_0))
        (70 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (73 (ILOAD_1))
        (74 (IF_ICMPLT 49))
        (77 (GOTO 116))
        (80 (ALOAD_0))
        (81 (ILOAD_1))
        (82 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (85 (ALOAD_0))
        (86 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (89 (IFEQ 116))
        (92 (ILOAD_1))
        (93 (IFLE 103))
        (96 (ALOAD_0))
        (97 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (100 (GOTO 116))
        (103 (ALOAD_0))
        (104 (BIPUSH 16))
        (106 (NEWARRAY CHAR))
        (108 (PUTFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
        (111 (ALOAD_0))
        (112 (ICONST_0))
        (113 (PUTFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
        (116 (RETURN))
        (ENDOFCODE 117))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (69 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (80 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (103 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                     INT)
                             (STACK)
                             NIL))
                 (116 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "charAt" (PARAMETERS INT)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 28)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLT 21))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16 (ILOAD_1))
        (17
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (20 (ATHROW))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (25 (ILOAD_1))
        (26 (CALOAD))
        (27 (IRETURN))
        (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (21 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getChars"
      (PARAMETERS INT INT (ARRAY CHAR) INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 64)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (IFLT 25))
        (17 (ILOAD_2))
        (18 (ALOAD_0))
        (19 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (22 (IF_ICMPLE 34))
        (25 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (28 (DUP))
        (29 (ILOAD_2))
        (30
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (33 (ATHROW))
        (34 (ILOAD_1))
        (35 (ILOAD_2))
        (36 (IF_ICMPLE 49))
        (39 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (42 (DUP))
        (43 (LDC 1))
        (45
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  ((CLASS "java.lang.String"))
                                  VOID)))
        (48 (ATHROW))
        (49 (ALOAD_0))
        (50 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (53 (ILOAD_1))
        (54 (ALOAD_3))
        (55 (ILOAD 4))
        (57 (ILOAD_2))
        (58 (ILOAD_1))
        (59 (ISUB))
        (60 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (63 (RETURN))
        (ENDOFCODE 64))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (34 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT (ARRAY CHAR)
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "setCharAt" (PARAMETERS INT CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLT 21))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16 (ILOAD_1))
        (17
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (20 (ATHROW))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (25 (IFEQ 32))
        (28 (ALOAD_0))
        (29 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (32 (ALOAD_0))
        (33 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (36 (ILOAD_1))
        (37 (ILOAD_2))
        (38 (CASTORE))
        (39 (RETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (21 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ALOAD_1))
              (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         (CLASS "java.lang.String"))))
              (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (8 (ARETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "append"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 9))
         (4 (ALOAD_1))
         (5 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                    ((CLASS "java.lang.Object"))
                                    (CLASS "java.lang.String"))))
         (8 (ASTORE_1))
         (9 (ALOAD_1))
         (10 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
         (13 (ISTORE_2))
         (14 (ALOAD_0))
         (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (18 (ILOAD_2))
         (19 (IADD))
         (20 (ISTORE_3))
         (21 (ILOAD_3))
         (22 (ALOAD_0))
         (23 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (26 (ARRAYLENGTH))
         (27 (IF_ICMPLE 35))
         (30 (ALOAD_0))
         (31 (ILOAD_3))
         (32 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (35 (ALOAD_1))
         (36 (ICONST_0))
         (37 (ILOAD_2))
         (38 (ALOAD_0))
         (39 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (42 (ALOAD_0))
         (43 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (46 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                      (INT INT (ARRAY CHAR) INT)
                                      VOID)))
         (49 (ALOAD_0))
         (50 (ILOAD_3))
         (51 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (54 (ALOAD_0))
         (55 (ARETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (9 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                   (CLASS "java.lang.String")
                                   TOPX TOPX)
                           (STACK)
                           NIL))
                 (35 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 45)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (ARRAYLENGTH))
         (2 (ISTORE_2))
         (3 (ALOAD_0))
         (4 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (7 (ILOAD_2))
         (8 (IADD))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (15 (ARRAYLENGTH))
         (16 (IF_ICMPLE 24))
         (19 (ALOAD_0))
         (20 (ILOAD_3))
         (21 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (24 (ALOAD_1))
         (25 (ICONST_0))
         (26 (ALOAD_0))
         (27 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (30 (ALOAD_0))
         (31 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (34 (ILOAD_2))
         (35 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (38 (ALOAD_0))
         (39 (ILOAD_3))
         (40 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (43 (ALOAD_0))
         (44 (ARETURN))
         (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 46)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (4 (ILOAD_3))
         (5 (IADD))
         (6 (ISTORE 4))
         (8 (ILOAD 4))
         (10 (ALOAD_0))
         (11 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (14 (ARRAYLENGTH))
         (15 (IF_ICMPLE 24))
         (18 (ALOAD_0))
         (19 (ILOAD 4))
         (21 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (24 (ALOAD_1))
         (25 (ILOAD_2))
         (26 (ALOAD_0))
         (27 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (30 (ALOAD_0))
         (31 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (34 (ILOAD_3))
         (35 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (38 (ALOAD_0))
         (39 (ILOAD 4))
         (41 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (44 (ALOAD_0))
         (45 (ARETURN))
         (ENDOFCODE 46))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    (ARRAY CHAR)
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append" (PARAMETERS BOOLEAN)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ILOAD_1))
            (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (BOOLEAN)
                                       (CLASS "java.lang.String"))))
            (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
            (8 (ARETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "append" (PARAMETERS CHAR)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 40)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (4 (ICONST_1))
         (5 (IADD))
         (6 (ISTORE_2))
         (7 (ILOAD_2))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (12 (ARRAYLENGTH))
         (13 (IF_ICMPLE 21))
         (16 (ALOAD_0))
         (17 (ILOAD_2))
         (18 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (21 (ALOAD_0))
         (22 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (25 (ALOAD_0))
         (26 (DUP))
         (27 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (30 (DUP_X1))
         (31 (ICONST_1))
         (32 (IADD))
         (33 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (36 (ILOAD_1))
         (37 (CASTORE))
         (38 (ALOAD_0))
         (39 (ARETURN))
         (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "append" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                         (CLASS "java.lang.String"))))
              (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (8 (ARETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "append" (PARAMETERS LONG)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (JVM::LLOAD_1))
              (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                         (CLASS "java.lang.String"))))
              (5 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (8 (ARETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "delete" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 91)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFGE 13))
        (4 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (7 (DUP))
        (8 (ILOAD_1))
        (9
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  (INT)
                                  VOID)))
        (12 (ATHROW))
        (13 (ILOAD_2))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (18 (IF_ICMPLE 26))
        (21 (ALOAD_0))
        (22 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (25 (ISTORE_2))
        (26 (ILOAD_1))
        (27 (ILOAD_2))
        (28 (IF_ICMPLE 39))
        (31 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (34 (DUP))
        (35
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (38 (ATHROW))
        (39 (ILOAD_2))
        (40 (ILOAD_1))
        (41 (ISUB))
        (42 (ISTORE_3))
        (43 (ILOAD_3))
        (44 (IFLE 89))
        (47 (ALOAD_0))
        (48 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (51 (IFEQ 58))
        (54 (ALOAD_0))
        (55 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (58 (ALOAD_0))
        (59 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (62 (ILOAD_1))
        (63 (ILOAD_3))
        (64 (IADD))
        (65 (ALOAD_0))
        (66 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (69 (ILOAD_1))
        (70 (ALOAD_0))
        (71 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (74 (ILOAD_2))
        (75 (ISUB))
        (76 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (79 (ALOAD_0))
        (80 (DUP))
        (81 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (84 (ILOAD_3))
        (85 (ISUB))
        (86 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (89 (ALOAD_0))
        (90 (ARETURN))
        (ENDOFCODE 91))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (39 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (58 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (89 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "deleteCharAt" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 66)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLT 20))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_0))
        (21 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (24 (IFEQ 31))
        (27 (ALOAD_0))
        (28 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (31 (ALOAD_0))
        (32 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (35 (ILOAD_1))
        (36 (ICONST_1))
        (37 (IADD))
        (38 (ALOAD_0))
        (39 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (42 (ILOAD_1))
        (43 (ALOAD_0))
        (44 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (47 (ILOAD_1))
        (48 (ISUB))
        (49 (ICONST_1))
        (50 (ISUB))
        (51 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (54 (ALOAD_0))
        (55 (DUP))
        (56 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (59 (ICONST_1))
        (60 (ISUB))
        (61 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (64 (ALOAD_0))
        (65 (ARETURN))
        (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL))
                 (31 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert"
      (PARAMETERS INT (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 10)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (ALOAD_2))
              (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         (CLASS "java.lang.String"))))
              (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                          (INT (CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (9 (ARETURN))
              (ENDOFCODE 10))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "insert"
      (PARAMETERS INT (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 112)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLE 20))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_2))
        (21 (IFNONNULL 29))
        (24 (ALOAD_2))
        (25 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                    ((CLASS "java.lang.Object"))
                                    (CLASS "java.lang.String"))))
        (28 (ASTORE_2))
        (29 (ALOAD_2))
        (30 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (33 (ISTORE_3))
        (34 (ALOAD_0))
        (35 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (38 (ILOAD_3))
        (39 (IADD))
        (40 (ISTORE 4))
        (42 (ILOAD 4))
        (44 (ALOAD_0))
        (45 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (48 (ARRAYLENGTH))
        (49 (IF_ICMPLE 61))
        (52 (ALOAD_0))
        (53 (ILOAD 4))
        (55 (INVOKESPECIAL (METHODCP "expandCapacity"
                                     "java.lang.StringBuffer" (INT)
                                     VOID)))
        (58 (GOTO 72))
        (61 (ALOAD_0))
        (62 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (65 (IFEQ 72))
        (68 (ALOAD_0))
        (69 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (72 (ALOAD_0))
        (73 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (76 (ILOAD_1))
        (77 (ALOAD_0))
        (78 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (81 (ILOAD_1))
        (82 (ILOAD_3))
        (83 (IADD))
        (84 (ALOAD_0))
        (85 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (88 (ILOAD_1))
        (89 (ISUB))
        (90 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (93 (ALOAD_2))
        (94 (ICONST_0))
        (95 (ILOAD_3))
        (96 (ALOAD_0))
        (97 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (100 (ILOAD_1))
        (101 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                      (INT INT (ARRAY CHAR) INT)
                                      VOID)))
        (104 (ALOAD_0))
        (105 (ILOAD 4))
        (107 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (110 (ALOAD_0))
        (111 (ARETURN))
        (ENDOFCODE 112))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (61 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert" (PARAMETERS INT (ARRAY CHAR))
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 101)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (IFLT 12))
        (4 (ILOAD_1))
        (5 (ALOAD_0))
        (6 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (9 (IF_ICMPLE 20))
        (12 (NEW (CLASS "java.lang.StringIndexOutOfBoundsException")))
        (15 (DUP))
        (16
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.lang.StringIndexOutOfBoundsException"
                                  NIL VOID)))
        (19 (ATHROW))
        (20 (ALOAD_2))
        (21 (ARRAYLENGTH))
        (22 (ISTORE_3))
        (23 (ALOAD_0))
        (24 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (27 (ILOAD_3))
        (28 (IADD))
        (29 (ISTORE 4))
        (31 (ILOAD 4))
        (33 (ALOAD_0))
        (34 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (37 (ARRAYLENGTH))
        (38 (IF_ICMPLE 50))
        (41 (ALOAD_0))
        (42 (ILOAD 4))
        (44 (INVOKESPECIAL (METHODCP "expandCapacity"
                                     "java.lang.StringBuffer" (INT)
                                     VOID)))
        (47 (GOTO 61))
        (50 (ALOAD_0))
        (51 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
        (54 (IFEQ 61))
        (57 (ALOAD_0))
        (58 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
        (61 (ALOAD_0))
        (62 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (65 (ILOAD_1))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (70 (ILOAD_1))
        (71 (ILOAD_3))
        (72 (IADD))
        (73 (ALOAD_0))
        (74 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (77 (ILOAD_1))
        (78 (ISUB))
        (79 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (82 (ALOAD_2))
        (83 (ICONST_0))
        (84 (ALOAD_0))
        (85 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
        (88 (ILOAD_1))
        (89 (ILOAD_3))
        (90 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (93 (ALOAD_0))
        (94 (ILOAD 4))
        (96 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
        (99 (ALOAD_0))
        (100 (ARETURN))
        (ENDOFCODE 101))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (50 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (61 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert" (PARAMETERS INT BOOLEAN)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ILOAD_1))
            (2 (ILOAD_2))
            (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (BOOLEAN)
                                       (CLASS "java.lang.String"))))
            (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                        (INT (CLASS "java.lang.String"))
                                        (CLASS "java.lang.StringBuffer"))))
            (9 (ARETURN))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "insert" (PARAMETERS INT CHAR)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 70)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (4 (ICONST_1))
         (5 (IADD))
         (6 (ISTORE_3))
         (7 (ILOAD_3))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "value"
                                    "java.lang.StringBuffer" (ARRAY CHAR))))
         (12 (ARRAYLENGTH))
         (13 (IF_ICMPLE 24))
         (16 (ALOAD_0))
         (17 (ILOAD_3))
         (18 (INVOKESPECIAL (METHODCP "expandCapacity"
                                      "java.lang.StringBuffer" (INT)
                                      VOID)))
         (21 (GOTO 35))
         (24 (ALOAD_0))
         (25 (GETFIELD (JVM::FIELDCP "shared"
                                     "java.lang.StringBuffer" BOOLEAN)))
         (28 (IFEQ 35))
         (31 (ALOAD_0))
         (32 (INVOKESPECIAL (METHODCP "copy"
                                      "java.lang.StringBuffer" NIL VOID)))
         (35 (ALOAD_0))
         (36 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (39 (ILOAD_1))
         (40 (ALOAD_0))
         (41 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (44 (ILOAD_1))
         (45 (ICONST_1))
         (46 (IADD))
         (47 (ALOAD_0))
         (48 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (51 (ILOAD_1))
         (52 (ISUB))
         (53 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (56 (ALOAD_0))
         (57 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (60 (ILOAD_1))
         (61 (ILOAD_2))
         (62 (CASTORE))
         (63 (ALOAD_0))
         (64 (ILOAD_3))
         (65 (PUTFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (68 (ALOAD_0))
         (69 (ARETURN))
         (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insert" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 10)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (ILOAD_2))
              (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                         (CLASS "java.lang.String"))))
              (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                          (INT (CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (9 (ARETURN))
              (ENDOFCODE 10))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "insert" (PARAMETERS INT LONG)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 4)
         (CODE_LENGTH . 10)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (JVM::LLOAD_2))
              (3 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                         (CLASS "java.lang.String"))))
              (6 (INVOKEVIRTUAL (METHODCP "insert" "java.lang.StringBuffer"
                                          (INT (CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
              (9 (ARETURN))
              (ENDOFCODE 10))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "reverse" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.StringBuffer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 66)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "shared"
                                    "java.lang.StringBuffer" BOOLEAN)))
         (4 (IFEQ 11))
         (7 (ALOAD_0))
         (8 (INVOKESPECIAL (METHODCP "copy"
                                     "java.lang.StringBuffer" NIL VOID)))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "count" "java.lang.StringBuffer" INT)))
         (15 (ICONST_1))
         (16 (ISUB))
         (17 (ISTORE_1))
         (18 (ILOAD_1))
         (19 (ICONST_1))
         (20 (ISUB))
         (21 (ICONST_1))
         (22 (JVM::ISHR))
         (23 (ISTORE_2))
         (24 (GOTO 60))
         (27 (ALOAD_0))
         (28 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (31 (ILOAD_2))
         (32 (CALOAD))
         (33 (ISTORE_3))
         (34 (ALOAD_0))
         (35 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (38 (ILOAD_2))
         (39 (ALOAD_0))
         (40 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (43 (ILOAD_1))
         (44 (ILOAD_2))
         (45 (ISUB))
         (46 (CALOAD))
         (47 (CASTORE))
         (48 (ALOAD_0))
         (49 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
         (52 (ILOAD_1))
         (53 (ILOAD_2))
         (54 (ISUB))
         (55 (ILOAD_3))
         (56 (CASTORE))
         (57 (IINC 2 -1))
         (60 (ILOAD_2))
         (61 (IFGE 27))
         (64 (ALOAD_0))
         (65 (ARETURN))
         (ENDOFCODE 66))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (60 (FRAME (LOCALS (CLASS "java.lang.StringBuffer")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (NEW (CLASS "java.lang.String")))
               (3 (DUP))
               (4 (ALOAD_0))
               (5 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           ((CLASS "java.lang.StringBuffer"))
                                           VOID)))
               (8 (ARETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "setShared" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 6)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ICONST_1))
               (2 (PUTFIELD (JVM::FIELDCP "shared"
                                          "java.lang.StringBuffer" BOOLEAN)))
               (5 (RETURN))
               (ENDOFCODE 6))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getValue" (PARAMETERS)
      (RETURNTYPE ARRAY CHAR)
      (ACCESSFLAGS *CLASS* *FINAL*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "value"
                                     "java.lang.StringBuffer" (ARRAY CHAR))))
          (4 (ARETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ClassNotFoundException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.InstantiationException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalAccessException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.InterruptedException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Integer" "java.lang.Object"
    (CONSTANT_POOL (INT -2147483648)
                   (INT 2147483647)
                   (STRING "null")
                   (STRING "radix ")
                   (STRING " less than Character.MIN_RADIX")
                   (STRING " greater than Character.MAX_RADIX")
                   (INT -2147483647))
    (FIELDS (FIELD "MIN_VALUE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "digits" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *FINAL* *STATIC*)
                   -1)
            (FIELD "value"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "toString" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 6)
        (JVM::MAX_LOCALS . 5)
        (CODE_LENGTH . 109)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ICONST_2))
             (2 (IF_ICMPLT 11))
             (5 (ILOAD_1))
             (6 (BIPUSH 36))
             (8 (IF_ICMPLE 14))
             (11 (BIPUSH 10))
             (13 (ISTORE_1))
             (14 (BIPUSH 33))
             (16 (NEWARRAY CHAR))
             (18 (ASTORE_2))
             (19 (ILOAD_0))
             (20 (IFGE 27))
             (23 (ICONST_1))
             (24 (GOTO 28))
             (27 (ICONST_0))
             (28 (ISTORE_3))
             (29 (BIPUSH 32))
             (31 (ISTORE 4))
             (33 (ILOAD_3))
             (34 (IFNE 64))
             (37 (ILOAD_0))
             (38 (INEG))
             (39 (ISTORE_0))
             (40 (GOTO 64))
             (43 (ALOAD_2))
             (44 (ILOAD 4))
             (46 (DUP))
             (47 (ICONST_1))
             (48 (ISUB))
             (49 (ISTORE 4))
             (51 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (54 (ILOAD_0))
             (55 (ILOAD_1))
             (56 (IREM))
             (57 (INEG))
             (58 (CALOAD))
             (59 (CASTORE))
             (60 (ILOAD_0))
             (61 (ILOAD_1))
             (62 (IDIV))
             (63 (ISTORE_0))
             (64 (ILOAD_0))
             (65 (ILOAD_1))
             (66 (INEG))
             (67 (IF_ICMPLE 43))
             (70 (ALOAD_2))
             (71 (ILOAD 4))
             (73 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (76 (ILOAD_0))
             (77 (INEG))
             (78 (CALOAD))
             (79 (CASTORE))
             (80 (ILOAD_3))
             (81 (IFEQ 93))
             (84 (ALOAD_2))
             (85 (IINC 4 -1))
             (88 (ILOAD 4))
             (90 (BIPUSH 45))
             (92 (CASTORE))
             (93 (NEW (CLASS "java.lang.String")))
             (96 (DUP))
             (97 (ALOAD_2))
             (98 (ILOAD 4))
             (100 (BIPUSH 33))
             (102 (ILOAD 4))
             (104 (ISUB))
             (105 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           ((ARRAY CHAR) INT INT)
                                           VOID)))
             (108 (ARETURN))
             (ENDOFCODE 109))
        (EXCEPTIONS)
        (STACKMAP (11 (FRAME (LOCALS INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (14 (FRAME (LOCALS INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (27 (FRAME (LOCALS INT INT (ARRAY CHAR) TOPX TOPX)
                             (STACK)
                             NIL))
                  (28 (FRAME (LOCALS INT INT (ARRAY CHAR) TOPX TOPX)
                             (STACK INT)
                             NIL))
                  (43 (FRAME (LOCALS INT INT (ARRAY CHAR) INT INT)
                             (STACK)
                             NIL))
                  (64 (FRAME (LOCALS INT INT (ARRAY CHAR) INT INT)
                             (STACK)
                             NIL))
                  (93 (FRAME (LOCALS INT INT (ARRAY CHAR) INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "toHexString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (ICONST_4))
                     (2 (INVOKESTATIC (METHODCP "toUnsignedString"
                                                "java.lang.Integer" (INT INT)
                                                (CLASS "java.lang.String"))))
                     (5 (ARETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "toOctalString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (ICONST_3))
                     (2 (INVOKESTATIC (METHODCP "toUnsignedString"
                                                "java.lang.Integer" (INT INT)
                                                (CLASS "java.lang.String"))))
                     (5 (ARETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "toBinaryString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (ICONST_1))
                     (2 (INVOKESTATIC (METHODCP "toUnsignedString"
                                                "java.lang.Integer" (INT INT)
                                                (CLASS "java.lang.String"))))
                     (5 (ARETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "toUnsignedString" (PARAMETERS INT INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
        (MAX_STACK . 6)
        (JVM::MAX_LOCALS . 6)
        (CODE_LENGTH . 55)
        (PARSEDCODE
             (0 (BIPUSH 32))
             (2 (NEWARRAY CHAR))
             (4 (ASTORE_2))
             (5 (BIPUSH 32))
             (7 (ISTORE_3))
             (8 (ICONST_1))
             (9 (ILOAD_1))
             (10 (JVM::ISHL))
             (11 (ISTORE 4))
             (13 (ILOAD 4))
             (15 (ICONST_1))
             (16 (ISUB))
             (17 (ISTORE 5))
             (19 (ALOAD_2))
             (20 (IINC 3 -1))
             (23 (ILOAD_3))
             (24 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (27 (ILOAD_0))
             (28 (ILOAD 5))
             (30 (JVM::IAND))
             (31 (CALOAD))
             (32 (CASTORE))
             (33 (ILOAD_0))
             (34 (ILOAD_1))
             (35 (JVM::IUSHR))
             (36 (ISTORE_0))
             (37 (ILOAD_0))
             (38 (IFNE 19))
             (41 (NEW (CLASS "java.lang.String")))
             (44 (DUP))
             (45 (ALOAD_2))
             (46 (ILOAD_3))
             (47 (BIPUSH 32))
             (49 (ILOAD_3))
             (50 (ISUB))
             (51 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                          ((ARRAY CHAR) INT INT)
                                          VOID)))
             (54 (ARETURN))
             (ENDOFCODE 55))
        (EXCEPTIONS)
        (STACKMAP (19 (FRAME (LOCALS INT INT (ARRAY CHAR)
                                     INT INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "toString" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
          (0 (ILOAD_0))
          (1 (BIPUSH 10))
          (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Integer" (INT INT)
                                     (CLASS "java.lang.String"))))
          (6 (ARETURN))
          (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "parseInt"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 296)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 14))
        (4 (NEW (CLASS "java.lang.NumberFormatException")))
        (7 (DUP))
        (8 (LDC 2))
        (10 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (13 (ATHROW))
        (14 (ILOAD_1))
        (15 (ICONST_2))
        (16 (IF_ICMPGE 51))
        (19 (NEW (CLASS "java.lang.NumberFormatException")))
        (22 (DUP))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (LDC 3))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (ILOAD_1))
        (36 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (39 (LDC 4))
        (41 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (44 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (47 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (50 (ATHROW))
        (51 (ILOAD_1))
        (52 (BIPUSH 36))
        (54 (IF_ICMPLE 89))
        (57 (NEW (CLASS "java.lang.NumberFormatException")))
        (60 (DUP))
        (61 (NEW (CLASS "java.lang.StringBuffer")))
        (64 (DUP))
        (65 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (68 (LDC 3))
        (70 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (73 (ILOAD_1))
        (74 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (77 (LDC 5))
        (79 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (82 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (85 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (88 (ATHROW))
        (89 (ICONST_0))
        (90 (ISTORE_2))
        (91 (ICONST_0))
        (92 (ISTORE_3))
        (93 (ICONST_0))
        (94 (ISTORE 4))
        (96 (ALOAD_0))
        (97 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (100 (ISTORE 5))
        (102 (ILOAD 5))
        (104 (IFLE 263))
        (107 (ALOAD_0))
        (108 (ICONST_0))
        (109 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (112 (BIPUSH 45))
        (114 (IF_ICMPNE 129))
        (117 (ICONST_1))
        (118 (ISTORE_3))
        (119 (LDC 0))
        (121 (ISTORE 6))
        (123 (IINC 4 1))
        (126 (GOTO 133))
        (129 (LDC 6))
        (131 (ISTORE 6))
        (133 (ILOAD 6))
        (135 (ILOAD_1))
        (136 (IDIV))
        (137 (ISTORE 7))
        (139 (ILOAD 4))
        (141 (ILOAD 5))
        (143 (IF_ICMPGE 253))
        (146 (ALOAD_0))
        (147 (ILOAD 4))
        (149 (IINC 4 1))
        (152 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (155 (ILOAD_1))
        (156 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (159 (ISTORE 8))
        (161 (ILOAD 8))
        (163 (IFGE 175))
        (166 (NEW (CLASS "java.lang.NumberFormatException")))
        (169 (DUP))
        (170 (ALOAD_0))
        (171 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (174 (ATHROW))
        (175 (ILOAD 8))
        (177 (INEG))
        (178 (ISTORE_2))
        (179 (GOTO 253))
        (182 (ALOAD_0))
        (183 (ILOAD 4))
        (185 (IINC 4 1))
        (188 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (191 (ILOAD_1))
        (192 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (195 (ISTORE 8))
        (197 (ILOAD 8))
        (199 (IFGE 211))
        (202 (NEW (CLASS "java.lang.NumberFormatException")))
        (205 (DUP))
        (206 (ALOAD_0))
        (207 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (210 (ATHROW))
        (211 (ILOAD_2))
        (212 (ILOAD 7))
        (214 (IF_ICMPGE 226))
        (217 (NEW (CLASS "java.lang.NumberFormatException")))
        (220 (DUP))
        (221 (ALOAD_0))
        (222 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (225 (ATHROW))
        (226 (ILOAD_2))
        (227 (ILOAD_1))
        (228 (IMUL))
        (229 (ISTORE_2))
        (230 (ILOAD_2))
        (231 (ILOAD 6))
        (233 (ILOAD 8))
        (235 (IADD))
        (236 (IF_ICMPGE 248))
        (239 (NEW (CLASS "java.lang.NumberFormatException")))
        (242 (DUP))
        (243 (ALOAD_0))
        (244 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (247 (ATHROW))
        (248 (ILOAD_2))
        (249 (ILOAD 8))
        (251 (ISUB))
        (252 (ISTORE_2))
        (253 (ILOAD 4))
        (255 (ILOAD 5))
        (257 (IF_ICMPLT 182))
        (260 (GOTO 272))
        (263 (NEW (CLASS "java.lang.NumberFormatException")))
        (266 (DUP))
        (267 (ALOAD_0))
        (268 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (271 (ATHROW))
        (272 (ILOAD_3))
        (273 (IFEQ 293))
        (276 (ILOAD 4))
        (278 (ICONST_1))
        (279 (IF_ICMPLE 284))
        (282 (ILOAD_2))
        (283 (IRETURN))
        (284 (NEW (CLASS "java.lang.NumberFormatException")))
        (287 (DUP))
        (288 (ALOAD_0))
        (289 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (292 (ATHROW))
        (293 (ILOAD_2))
        (294 (INEG))
        (295 (IRETURN))
        (ENDOFCODE 296))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (89 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (129 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (133 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (175 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (182 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (211 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (226 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (248 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT INT)
                             (STACK)
                             NIL))
                 (253 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (263 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (272 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (284 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (293 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT INT INT INT INT INT INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
       "parseInt"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                             ((CLASS "java.lang.String") INT)
                                             INT)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE CLASS "java.lang.Integer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 4)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 13)
          (PARSEDCODE
               (0 (NEW (CLASS "java.lang.Integer")))
               (3 (DUP))
               (4 (ALOAD_0))
               (5 (ILOAD_1))
               (6 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                          ((CLASS "java.lang.String") INT)
                                          INT)))
               (9 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                           VOID)))
               (12 (ARETURN))
               (ENDOFCODE 13))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "valueOf"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.Integer")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 14)
         (PARSEDCODE
              (0 (NEW (CLASS "java.lang.Integer")))
              (3 (DUP))
              (4 (ALOAD_0))
              (5 (BIPUSH 10))
              (7 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                         ((CLASS "java.lang.String") INT)
                                         INT)))
              (10 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Integer" (INT)
                                           VOID)))
              (13 (ARETURN))
              (ENDOFCODE 14))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "byteValue" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 6)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (JVM::I2B))
                (5 (IRETURN))
                (ENDOFCODE 6))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "shortValue" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 6)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (JVM::I2S))
                (5 (IRETURN))
                (ENDOFCODE 6))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "intValue" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "longValue" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 6)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (JVM::I2L))
                (5 (JVM::LRETURN))
                (ENDOFCODE 6))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (7 (ARETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 29)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.lang.Integer")))
                (4 (IFEQ 27))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Integer" INT)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.lang.Integer")))
                (15 (INVOKEVIRTUAL (METHODCP "intValue"
                                             "java.lang.Integer" NIL INT)))
                (18 (IF_ICMPNE 25))
                (21 (ICONST_1))
                (22 (GOTO 26))
                (25 (ICONST_0))
                (26 (IRETURN))
                (27 (ICONST_0))
                (28 (IRETURN))
                (ENDOFCODE 29))
           (EXCEPTIONS)
           (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Integer")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (26 (FRAME (LOCALS (CLASS "java.lang.Integer")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.lang.Integer")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 218)
       (PARSEDCODE
            (0 (BIPUSH 36))
            (2 (NEWARRAY CHAR))
            (4 (DUP))
            (5 (ICONST_0))
            (6 (BIPUSH 48))
            (8 (CASTORE))
            (9 (DUP))
            (10 (ICONST_1))
            (11 (BIPUSH 49))
            (13 (CASTORE))
            (14 (DUP))
            (15 (ICONST_2))
            (16 (BIPUSH 50))
            (18 (CASTORE))
            (19 (DUP))
            (20 (ICONST_3))
            (21 (BIPUSH 51))
            (23 (CASTORE))
            (24 (DUP))
            (25 (ICONST_4))
            (26 (BIPUSH 52))
            (28 (CASTORE))
            (29 (DUP))
            (30 (ICONST_5))
            (31 (BIPUSH 53))
            (33 (CASTORE))
            (34 (DUP))
            (35 (BIPUSH 6))
            (37 (BIPUSH 54))
            (39 (CASTORE))
            (40 (DUP))
            (41 (BIPUSH 7))
            (43 (BIPUSH 55))
            (45 (CASTORE))
            (46 (DUP))
            (47 (BIPUSH 8))
            (49 (BIPUSH 56))
            (51 (CASTORE))
            (52 (DUP))
            (53 (BIPUSH 9))
            (55 (BIPUSH 57))
            (57 (CASTORE))
            (58 (DUP))
            (59 (BIPUSH 10))
            (61 (BIPUSH 97))
            (63 (CASTORE))
            (64 (DUP))
            (65 (BIPUSH 11))
            (67 (BIPUSH 98))
            (69 (CASTORE))
            (70 (DUP))
            (71 (BIPUSH 12))
            (73 (BIPUSH 99))
            (75 (CASTORE))
            (76 (DUP))
            (77 (BIPUSH 13))
            (79 (BIPUSH 100))
            (81 (CASTORE))
            (82 (DUP))
            (83 (BIPUSH 14))
            (85 (BIPUSH 101))
            (87 (CASTORE))
            (88 (DUP))
            (89 (BIPUSH 15))
            (91 (BIPUSH 102))
            (93 (CASTORE))
            (94 (DUP))
            (95 (BIPUSH 16))
            (97 (BIPUSH 103))
            (99 (CASTORE))
            (100 (DUP))
            (101 (BIPUSH 17))
            (103 (BIPUSH 104))
            (105 (CASTORE))
            (106 (DUP))
            (107 (BIPUSH 18))
            (109 (BIPUSH 105))
            (111 (CASTORE))
            (112 (DUP))
            (113 (BIPUSH 19))
            (115 (BIPUSH 106))
            (117 (CASTORE))
            (118 (DUP))
            (119 (BIPUSH 20))
            (121 (BIPUSH 107))
            (123 (CASTORE))
            (124 (DUP))
            (125 (BIPUSH 21))
            (127 (BIPUSH 108))
            (129 (CASTORE))
            (130 (DUP))
            (131 (BIPUSH 22))
            (133 (BIPUSH 109))
            (135 (CASTORE))
            (136 (DUP))
            (137 (BIPUSH 23))
            (139 (BIPUSH 110))
            (141 (CASTORE))
            (142 (DUP))
            (143 (BIPUSH 24))
            (145 (BIPUSH 111))
            (147 (CASTORE))
            (148 (DUP))
            (149 (BIPUSH 25))
            (151 (BIPUSH 112))
            (153 (CASTORE))
            (154 (DUP))
            (155 (BIPUSH 26))
            (157 (BIPUSH 113))
            (159 (CASTORE))
            (160 (DUP))
            (161 (BIPUSH 27))
            (163 (BIPUSH 114))
            (165 (CASTORE))
            (166 (DUP))
            (167 (BIPUSH 28))
            (169 (BIPUSH 115))
            (171 (CASTORE))
            (172 (DUP))
            (173 (BIPUSH 29))
            (175 (BIPUSH 116))
            (177 (CASTORE))
            (178 (DUP))
            (179 (BIPUSH 30))
            (181 (BIPUSH 117))
            (183 (CASTORE))
            (184 (DUP))
            (185 (BIPUSH 31))
            (187 (BIPUSH 118))
            (189 (CASTORE))
            (190 (DUP))
            (191 (BIPUSH 32))
            (193 (BIPUSH 119))
            (195 (CASTORE))
            (196 (DUP))
            (197 (BIPUSH 33))
            (199 (BIPUSH 120))
            (201 (CASTORE))
            (202 (DUP))
            (203 (BIPUSH 34))
            (205 (BIPUSH 121))
            (207 (CASTORE))
            (208 (DUP))
            (209 (BIPUSH 35))
            (211 (BIPUSH 122))
            (213 (CASTORE))
            (214 (PUTSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
            (217 (RETURN))
            (ENDOFCODE 218))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.NumberFormatException"
    "java.lang.IllegalArgumentException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         NIL VOID)))
             (4 (RETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalArgumentException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.RuntimeException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.System" "java.lang.Object"
    (CONSTANT_POOL (STRING "debug:")
                   (STRING "Could not open debug stream")
                   (STRING "key cannt be null")
                   (STRING "")
                   (STRING "key cannt be empty"))
    (FIELDS (FIELD "out" (CLASS "java.io.PrintStream")
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   -1)
            (FIELD "err" (CLASS "java.io.PrintStream")
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "getOutput" (PARAMETERS)
             (RETURNTYPE CLASS "java.io.PrintStream")
             (ACCESSFLAGS *CLASS* *PRIVATE* *NATIVE* *STATIC*)
             (CODE))
     (METHOD "currentTimeMillis" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "arraycopy"
             (PARAMETERS (CLASS "java.lang.Object")
                         INT (CLASS "java.lang.Object")
                         INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "identityHashCode"
             (PARAMETERS (CLASS "java.lang.Object"))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD
      "getProperty"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 38)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (IFNONNULL 14))
            (4 (NEW (CLASS "java.lang.NullPointerException")))
            (7 (DUP))
            (8 (LDC 2))
            (10 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.NullPointerException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (13 (ATHROW))
            (14 (ALOAD_0))
            (15 (LDC 3))
            (17 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.String"
                                         ((CLASS "java.lang.Object"))
                                         BOOLEAN)))
            (20 (IFEQ 33))
            (23 (NEW (CLASS "java.lang.IllegalArgumentException")))
            (26 (DUP))
            (27 (LDC 4))
            (29 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
            (32 (ATHROW))
            (33 (ALOAD_0))
            (34 (INVOKESTATIC (METHODCP "getProperty0" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (37 (ARETURN))
            (ENDOFCODE 38))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL))
                 (33 (FRAME (LOCALS (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD "getProperty0"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE* *STATIC*)
             (CODE))
     (METHOD
      "exit" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                           NIL (CLASS "java.lang.Runtime"))))
                (3 (ILOAD_0))
                (4 (INVOKEVIRTUAL (METHODCP "exit" "java.lang.Runtime" (INT)
                                            VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "gc" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 0)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (INVOKESTATIC (METHODCP "getRuntime" "java.lang.Runtime"
                                        NIL (CLASS "java.lang.Runtime"))))
             (3 (INVOKEVIRTUAL (METHODCP "gc" "java.lang.Runtime" NIL VOID)))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 0)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (INVOKESTATIC (METHODCP "getOutput" "java.lang.System"
                                         NIL (CLASS "java.io.PrintStream"))))
              (3 (PUTSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (6 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (9 (PUTSTATIC (JVM::FIELDCP "err" "java.lang.System"
                                          (CLASS "java.io.PrintStream"))))
              (12 (RETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.NullPointerException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ClassCastException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IndexOutOfBoundsException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Character" "java.lang.Object"
    (CONSTANT_POOL (INT 2)
                   (INT 36)
                   (INT 0)
                   (INT 65535)
                   (STRING "?")
                   (STRING "java.lang.Character.caseConverter")
                   (STRING "com.sun.cldc.i18n.uclc.DefaultCaseConverter")
                   (STRING "Cannot find case converter class ")
                   (STRING " -> "))
    (FIELDS (FIELD "MIN_RADIX" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_RADIX" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "MIN_VALUE" CHAR
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "MAX_VALUE" CHAR
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "value"
                   CHAR (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "cc"
                   (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter")
                   (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "charValue" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (4 (IRETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 29)
        (PARSEDCODE
             (0 (ALOAD_1))
             (1 (JVM::INSTANCEOF (CLASS "java.lang.Character")))
             (4 (IFEQ 27))
             (7 (ALOAD_0))
             (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (11 (ALOAD_1))
             (12 (CHECKCAST (CLASS "java.lang.Character")))
             (15 (INVOKEVIRTUAL (METHODCP "charValue"
                                          "java.lang.Character" NIL CHAR)))
             (18 (IF_ICMPNE 25))
             (21 (ICONST_1))
             (22 (GOTO 26))
             (25 (ICONST_0))
             (26 (IRETURN))
             (27 (ICONST_0))
             (28 (IRETURN))
             (ENDOFCODE 29))
        (EXCEPTIONS)
        (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Character")
                                     (CLASS "java.lang.Object"))
                             (STACK)
                             NIL))
                  (26 (FRAME (LOCALS (CLASS "java.lang.Character")
                                     (CLASS "java.lang.Object"))
                             (STACK INT)
                             NIL))
                  (27 (FRAME (LOCALS (CLASS "java.lang.Character")
                                     (CLASS "java.lang.Object"))
                             (STACK)
                             NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 16)
        (PARSEDCODE
             (0 (ICONST_1))
             (1 (NEWARRAY CHAR))
             (3 (DUP))
             (4 (ICONST_0))
             (5 (ALOAD_0))
             (6 (GETFIELD (JVM::FIELDCP "value" "java.lang.Character" CHAR)))
             (9 (CASTORE))
             (10 (ASTORE_1))
             (11 (ALOAD_1))
             (12 (INVOKESTATIC (METHODCP "valueOf"
                                         "java.lang.String" ((ARRAY CHAR))
                                         (CLASS "java.lang.String"))))
             (15 (ARETURN))
             (ENDOFCODE 16))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "isLowerCase" (PARAMETERS CHAR)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "isLowerCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          BOOLEAN)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "isUpperCase" (PARAMETERS CHAR)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "isUpperCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          BOOLEAN)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "isDigit" (PARAMETERS CHAR)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "isDigit"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          BOOLEAN)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toLowerCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "toLowerCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          CHAR)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toUpperCase" (PARAMETERS CHAR)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (INVOKESTATIC
                (METHODCP "toUpperCase"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR)
                          CHAR)))
        (8 (IRETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "digit" (PARAMETERS CHAR INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
        (0
         (INVOKESTATIC
           (METHODCP "caseConverter"
                     "java.lang.Character" NIL
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (POP))
        (4 (ILOAD_0))
        (5 (ILOAD_1))
        (6 (INVOKESTATIC
                (METHODCP "digit"
                          "com.sun.cldc.i18n.uclc.DefaultCaseConverter"
                          (CHAR INT)
                          INT)))
        (9 (IRETURN))
        (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "caseConverter" (PARAMETERS)
      (RETURNTYPE CLASS
                  "com.sun.cldc.i18n.uclc.DefaultCaseConverter")
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 88)
       (PARSEDCODE
        (0 (GETSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (3 (IFNULL 10))
        (6 (GETSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (9 (ARETURN))
        (10 (LDC 4))
        (12 (ASTORE_0))
        (13 (LDC 5))
        (15 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (18 (ASTORE_0))
        (19 (ALOAD_0))
        (20 (IFNONNULL 26))
        (23 (LDC 6))
        (25 (ASTORE_0))
        (26 (ALOAD_0))
        (27 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (30 (ASTORE_1))
        (31 (ALOAD_1))
        (32 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (35
           (CHECKCAST (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter")))
        (38
           (PUTSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (41 (GOTO 84))
        (44 (ASTORE_1))
        (45 (NEW (CLASS "java.lang.RuntimeException")))
        (48 (DUP))
        (49 (NEW (CLASS "java.lang.StringBuffer")))
        (52 (DUP))
        (53 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (56 (LDC 7))
        (58 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (61 (ALOAD_0))
        (62 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (65 (LDC 8))
        (67 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (70 (ALOAD_1))
        (71 (INVOKEVIRTUAL (METHODCP "getMessage" "java.lang.Throwable"
                                     NIL (CLASS "java.lang.String"))))
        (74 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (77 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (80 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (83 (ATHROW))
        (84
           (GETSTATIC
                (JVM::FIELDCP
                     "cc" "java.lang.Character"
                     (CLASS "com.sun.cldc.i18n.uclc.DefaultCaseConverter"))))
        (87 (ARETURN))
        (ENDOFCODE 88))
       (EXCEPTIONS (JVM::HANDLER 13 41 44 (CLASS "java.lang.Exception")))
       (STACKMAP (10 (FRAME (LOCALS TOPX TOPX) (STACK) NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK (CLASS "java.lang.Exception"))
                            NIL))
                 (84 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.lang.Class"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Error"
    "java.lang.Throwable" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Throwable" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Throwable"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.StringIndexOutOfBoundsException"
    "java.lang.IndexOutOfBoundsException"
    (CONSTANT_POOL (STRING "String index out of range: "))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (NEW (CLASS "java.lang.StringBuffer")))
         (4 (DUP))
         (5 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
         (8 (LDC 0))
         (10 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (13 (ILOAD_1))
         (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (17 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (23 (RETURN))
         (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Math"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*STRICT*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "abs" (PARAMETERS INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFGE 9))
                               (4 (ILOAD_0))
                               (5 (INEG))
                               (6 (GOTO 10))
                               (9 (ILOAD_0))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT) (STACK) NIL))
                             (10 (FRAME (LOCALS INT) (STACK INT) NIL)))))
     (METHOD "abs" (PARAMETERS LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 13)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_0))
                               (2 (LCMP))
                               (3 (IFGE 11))
                               (6 (JVM::LLOAD_0))
                               (7 (JVM::LNEG))
                               (8 (GOTO 12))
                               (11 (JVM::LLOAD_0))
                               (12 (JVM::LRETURN))
                               (ENDOFCODE 13))
                   (EXCEPTIONS)
                   (STACKMAP (11 (FRAME (LOCALS LONG TOPX) (STACK) NIL))
                             (12 (FRAME (LOCALS LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD "max" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (ILOAD_1))
                               (2 (IF_ICMPLT 9))
                               (5 (ILOAD_0))
                               (6 (GOTO 10))
                               (9 (ILOAD_1))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT INT) (STACK) NIL))
                             (10 (FRAME (LOCALS INT INT)
                                        (STACK INT)
                                        NIL)))))
     (METHOD "max" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (JVM::LLOAD_2))
                               (2 (LCMP))
                               (3 (IFLT 10))
                               (6 (JVM::LLOAD_0))
                               (7 (GOTO 11))
                               (10 (JVM::LLOAD_2))
                               (11 (JVM::LRETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (10 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (11 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD "min" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 11)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (ILOAD_1))
                               (2 (IF_ICMPGT 9))
                               (5 (ILOAD_0))
                               (6 (GOTO 10))
                               (9 (ILOAD_1))
                               (10 (IRETURN))
                               (ENDOFCODE 11))
                   (EXCEPTIONS)
                   (STACKMAP (9 (FRAME (LOCALS INT INT) (STACK) NIL))
                             (10 (FRAME (LOCALS INT INT)
                                        (STACK INT)
                                        NIL)))))
     (METHOD "min" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC* JVM::*STRICT*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 12)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (JVM::LLOAD_2))
                               (2 (LCMP))
                               (3 (IFGT 10))
                               (6 (JVM::LLOAD_0))
                               (7 (GOTO 11))
                               (10 (JVM::LLOAD_2))
                               (11 (JVM::LRETURN))
                               (ENDOFCODE 12))
                   (EXCEPTIONS)
                   (STACKMAP (10 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (11 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Long" "java.lang.Object"
    (CONSTANT_POOL (LONG -9223372036854775808)
                   (LONG 9223372036854775807)
                   (STRING "null")
                   (STRING "radix ")
                   (STRING " less than Character.MIN_RADIX")
                   (STRING " greater than Character.MAX_RADIX")
                   (LONG -9223372036854775807))
    (FIELDS (FIELD "MIN_VALUE" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "value"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "toString" (PARAMETERS LONG INT)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 7)
        (JVM::MAX_LOCALS . 6)
        (CODE_LENGTH . 120)
        (PARSEDCODE
             (0 (ILOAD_2))
             (1 (ICONST_2))
             (2 (IF_ICMPLT 11))
             (5 (ILOAD_2))
             (6 (BIPUSH 36))
             (8 (IF_ICMPLE 14))
             (11 (BIPUSH 10))
             (13 (ISTORE_2))
             (14 (BIPUSH 65))
             (16 (NEWARRAY CHAR))
             (18 (ASTORE_3))
             (19 (BIPUSH 64))
             (21 (ISTORE 4))
             (23 (JVM::LLOAD_0))
             (24 (LCONST_0))
             (25 (LCMP))
             (26 (IFGE 33))
             (29 (ICONST_1))
             (30 (GOTO 34))
             (33 (ICONST_0))
             (34 (ISTORE 5))
             (36 (ILOAD 5))
             (38 (IFNE 71))
             (41 (JVM::LLOAD_0))
             (42 (JVM::LNEG))
             (43 (JVM::LSTORE_0))
             (44 (GOTO 71))
             (47 (ALOAD_3))
             (48 (ILOAD 4))
             (50 (DUP))
             (51 (ICONST_1))
             (52 (ISUB))
             (53 (ISTORE 4))
             (55 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (58 (JVM::LLOAD_0))
             (59 (ILOAD_2))
             (60 (JVM::I2L))
             (61 (JVM::LREM))
             (62 (JVM::LNEG))
             (63 (JVM::L2I))
             (64 (CALOAD))
             (65 (CASTORE))
             (66 (JVM::LLOAD_0))
             (67 (ILOAD_2))
             (68 (JVM::I2L))
             (69 (JVM::LDIV))
             (70 (JVM::LSTORE_0))
             (71 (JVM::LLOAD_0))
             (72 (ILOAD_2))
             (73 (INEG))
             (74 (JVM::I2L))
             (75 (LCMP))
             (76 (IFLE 47))
             (79 (ALOAD_3))
             (80 (ILOAD 4))
             (82 (GETSTATIC (JVM::FIELDCP "digits"
                                          "java.lang.Integer" (ARRAY CHAR))))
             (85 (JVM::LLOAD_0))
             (86 (JVM::LNEG))
             (87 (JVM::L2I))
             (88 (CALOAD))
             (89 (CASTORE))
             (90 (ILOAD 5))
             (92 (IFEQ 104))
             (95 (ALOAD_3))
             (96 (IINC 4 -1))
             (99 (ILOAD 4))
             (101 (BIPUSH 45))
             (103 (CASTORE))
             (104 (NEW (CLASS "java.lang.String")))
             (107 (DUP))
             (108 (ALOAD_3))
             (109 (ILOAD 4))
             (111 (BIPUSH 65))
             (113 (ILOAD 4))
             (115 (ISUB))
             (116 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                           ((ARRAY CHAR) INT INT)
                                           VOID)))
             (119 (ARETURN))
             (ENDOFCODE 120))
        (EXCEPTIONS)
        (STACKMAP (11 (FRAME (LOCALS LONG TOPX INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (14 (FRAME (LOCALS LONG TOPX INT TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                  (33 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK)
                             NIL))
                  (34 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT TOPX)
                             (STACK INT)
                             NIL))
                  (47 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT INT)
                             (STACK)
                             NIL))
                  (71 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                     INT INT)
                             (STACK)
                             NIL))
                  (104 (FRAME (LOCALS LONG TOPX INT (ARRAY CHAR)
                                      INT INT)
                              (STACK)
                              NIL)))))
     (METHOD
      "toString" (PARAMETERS LONG)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (JVM::LLOAD_0))
            (1 (BIPUSH 10))
            (3 (INVOKESTATIC (METHODCP "toString" "java.lang.Long" (LONG INT)
                                       (CLASS "java.lang.String"))))
            (6 (ARETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "parseLong"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 12)
       (CODE_LENGTH . 308)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 14))
        (4 (NEW (CLASS "java.lang.NumberFormatException")))
        (7 (DUP))
        (8 (LDC 2))
        (10 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (13 (ATHROW))
        (14 (ILOAD_1))
        (15 (ICONST_2))
        (16 (IF_ICMPGE 51))
        (19 (NEW (CLASS "java.lang.NumberFormatException")))
        (22 (DUP))
        (23 (NEW (CLASS "java.lang.StringBuffer")))
        (26 (DUP))
        (27 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (30 (LDC 3))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (ILOAD_1))
        (36 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (39 (LDC 4))
        (41 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (44 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (47 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (50 (ATHROW))
        (51 (ILOAD_1))
        (52 (BIPUSH 36))
        (54 (IF_ICMPLE 89))
        (57 (NEW (CLASS "java.lang.NumberFormatException")))
        (60 (DUP))
        (61 (NEW (CLASS "java.lang.StringBuffer")))
        (64 (DUP))
        (65 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (68 (LDC 3))
        (70 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (73 (ILOAD_1))
        (74 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (77 (LDC 5))
        (79 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (82 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (85 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NumberFormatException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (88 (ATHROW))
        (89 (LCONST_0))
        (90 (JVM::LSTORE_2))
        (91 (ICONST_0))
        (92 (ISTORE 4))
        (94 (ICONST_0))
        (95 (ISTORE 5))
        (97 (ALOAD_0))
        (98 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (101 (ISTORE 6))
        (103 (ILOAD 6))
        (105 (IFLE 274))
        (108 (ALOAD_0))
        (109 (ICONST_0))
        (110 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (113 (BIPUSH 45))
        (115 (IF_ICMPNE 132))
        (118 (ICONST_1))
        (119 (ISTORE 4))
        (121 (JVM::LDC2_W 0))
        (124 (JVM::LSTORE 7))
        (126 (IINC 5 1))
        (129 (GOTO 137))
        (132 (JVM::LDC2_W 6))
        (135 (JVM::LSTORE 7))
        (137 (JVM::LLOAD 7))
        (139 (ILOAD_1))
        (140 (JVM::I2L))
        (141 (JVM::LDIV))
        (142 (JVM::LSTORE 9))
        (144 (ILOAD 5))
        (146 (ILOAD 6))
        (148 (IF_ICMPGE 264))
        (151 (ALOAD_0))
        (152 (ILOAD 5))
        (154 (IINC 5 1))
        (157 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (160 (ILOAD_1))
        (161 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (164 (ISTORE 11))
        (166 (ILOAD 11))
        (168 (IFGE 180))
        (171 (NEW (CLASS "java.lang.NumberFormatException")))
        (174 (DUP))
        (175 (ALOAD_0))
        (176 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (179 (ATHROW))
        (180 (ILOAD 11))
        (182 (INEG))
        (183 (JVM::I2L))
        (184 (JVM::LSTORE_2))
        (185 (GOTO 264))
        (188 (ALOAD_0))
        (189 (ILOAD 5))
        (191 (IINC 5 1))
        (194 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                      CHAR)))
        (197 (ILOAD_1))
        (198 (INVOKESTATIC (METHODCP "digit" "java.lang.Character" (CHAR INT)
                                     INT)))
        (201 (ISTORE 11))
        (203 (ILOAD 11))
        (205 (IFGE 217))
        (208 (NEW (CLASS "java.lang.NumberFormatException")))
        (211 (DUP))
        (212 (ALOAD_0))
        (213 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (216 (ATHROW))
        (217 (JVM::LLOAD_2))
        (218 (JVM::LLOAD 9))
        (220 (LCMP))
        (221 (IFGE 233))
        (224 (NEW (CLASS "java.lang.NumberFormatException")))
        (227 (DUP))
        (228 (ALOAD_0))
        (229 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (232 (ATHROW))
        (233 (JVM::LLOAD_2))
        (234 (ILOAD_1))
        (235 (JVM::I2L))
        (236 (JVM::LMUL))
        (237 (JVM::LSTORE_2))
        (238 (JVM::LLOAD_2))
        (239 (JVM::LLOAD 7))
        (241 (ILOAD 11))
        (243 (JVM::I2L))
        (244 (JVM::LADD))
        (245 (LCMP))
        (246 (IFGE 258))
        (249 (NEW (CLASS "java.lang.NumberFormatException")))
        (252 (DUP))
        (253 (ALOAD_0))
        (254 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (257 (ATHROW))
        (258 (JVM::LLOAD_2))
        (259 (ILOAD 11))
        (261 (JVM::I2L))
        (262 (JVM::LSUB))
        (263 (JVM::LSTORE_2))
        (264 (ILOAD 5))
        (266 (ILOAD 6))
        (268 (IF_ICMPLT 188))
        (271 (GOTO 283))
        (274 (NEW (CLASS "java.lang.NumberFormatException")))
        (277 (DUP))
        (278 (ALOAD_0))
        (279 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (282 (ATHROW))
        (283 (ILOAD 4))
        (285 (IFEQ 305))
        (288 (ILOAD 5))
        (290 (ICONST_1))
        (291 (IF_ICMPLE 296))
        (294 (JVM::LLOAD_2))
        (295 (JVM::LRETURN))
        (296 (NEW (CLASS "java.lang.NumberFormatException")))
        (299 (DUP))
        (300 (ALOAD_0))
        (301 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.NumberFormatException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (304 (ATHROW))
        (305 (JVM::LLOAD_2))
        (306 (JVM::LNEG))
        (307 (JVM::LRETURN))
        (ENDOFCODE 308))
       (EXCEPTIONS)
       (STACKMAP (14 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (89 (FRAME (LOCALS (CLASS "java.lang.String")
                                    INT TOPX TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (132 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (180 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (188 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (217 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (233 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (258 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX INT)
                             (STACK)
                             NIL))
                 (264 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (274 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (283 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (296 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL))
                 (305 (FRAME (LOCALS (CLASS "java.lang.String")
                                     INT LONG TOPX
                                     INT INT INT LONG TOPX LONG TOPX TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
       "parseLong"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . LONG)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseLong" "java.lang.Long"
                                             ((CLASS "java.lang.String") INT)
                                             LONG)))
                  (6 (JVM::LRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::LLOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "longValue" (PARAMETERS)
       (RETURNTYPE . LONG)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 5)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
                  (4 (JVM::LRETURN))
                  (ENDOFCODE 5))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
               (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                          (CLASS "java.lang.String"))))
               (7 (ARETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
       "hashCode" (PARAMETERS)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 5)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 14)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
                  (4 (ALOAD_0))
                  (5 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
                  (8 (BIPUSH 32))
                  (10 (JVM::LSHR))
                  (11 (JVM::LXOR))
                  (12 (JVM::L2I))
                  (13 (IRETURN))
                  (ENDOFCODE 14))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 30)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (JVM::INSTANCEOF (CLASS "java.lang.Long")))
        (4 (IFEQ 28))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Long" LONG)))
        (11 (ALOAD_1))
        (12 (CHECKCAST (CLASS "java.lang.Long")))
        (15 (INVOKEVIRTUAL (METHODCP "longValue" "java.lang.Long" NIL LONG)))
        (18 (LCMP))
        (19 (IFNE 26))
        (22 (ICONST_1))
        (23 (GOTO 27))
        (26 (ICONST_0))
        (27 (IRETURN))
        (28 (ICONST_0))
        (29 (IRETURN))
        (ENDOFCODE 30))
       (EXCEPTIONS)
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.lang.Long")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.Long")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL))
                 (28 (FRAME (LOCALS (CLASS "java.lang.Long")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Runtime"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "currentRuntime"
                   (CLASS "java.lang.Runtime")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "getRuntime" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Runtime")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 0)
        (CODE_LENGTH . 4)
        (PARSEDCODE
             (0 (GETSTATIC (JVM::FIELDCP "currentRuntime" "java.lang.Runtime"
                                         (CLASS "java.lang.Runtime"))))
             (3 (ARETURN))
             (ENDOFCODE 4))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "exitInternal" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "exit" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (INVOKESPECIAL (METHODCP "exitInternal" "java.lang.Runtime" (INT)
                                     VOID)))
         (5 (RETURN))
         (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "freeMemory" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "totalMemory" (PARAMETERS)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD "gc" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 11)
       (PARSEDCODE
         (0 (NEW (CLASS "java.lang.Runtime")))
         (3 (DUP))
         (4 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Runtime" NIL VOID)))
         (7 (PUTSTATIC (JVM::FIELDCP "currentRuntime" "java.lang.Runtime"
                                     (CLASS "java.lang.Runtime"))))
         (10 (RETURN))
         (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ArrayIndexOutOfBoundsException"
    "java.lang.IndexOutOfBoundsException"
    (CONSTANT_POOL (STRING "Array index out of range: "))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
            (4 (RETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (NEW (CLASS "java.lang.StringBuffer")))
         (4 (DUP))
         (5 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
         (8 (LDC 0))
         (10 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (13 (ILOAD_1))
         (14 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (17 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (20 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (23 (RETURN))
         (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ArithmeticException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.ArrayStoreException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Boolean" "java.lang.Object"
    (CONSTANT_POOL (STRING "true")
                   (STRING "false"))
    (FIELDS (FIELD "value"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "booleanValue" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (4 (IRETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 15)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (4 (IFEQ 12))
            (7 (LDC 0))
            (9 (GOTO 14))
            (12 (LDC 1))
            (14 (ARETURN))
            (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK)
                            NIL))
                 (14 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK (CLASS "java.lang.String"))
                            NIL)))))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (4 (IFEQ 13))
            (7 (JVM::SIPUSH 1231))
            (10 (GOTO 16))
            (13 (JVM::SIPUSH 1237))
            (16 (IRETURN))
            (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP (13 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK)
                            NIL))
                 (16 (FRAME (LOCALS (CLASS "java.lang.Boolean"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
            (0 (ALOAD_1))
            (1 (JVM::INSTANCEOF (CLASS "java.lang.Boolean")))
            (4 (IFEQ 27))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Boolean" BOOLEAN)))
            (11 (ALOAD_1))
            (12 (CHECKCAST (CLASS "java.lang.Boolean")))
            (15 (INVOKEVIRTUAL (METHODCP "booleanValue"
                                         "java.lang.Boolean" NIL BOOLEAN)))
            (18 (IF_ICMPNE 25))
            (21 (ICONST_1))
            (22 (GOTO 26))
            (25 (ICONST_0))
            (26 (IRETURN))
            (27 (ICONST_0))
            (28 (IRETURN))
            (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Boolean")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Boolean")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.Boolean")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Byte" "java.lang.Object"
    (CONSTANT_POOL (INT -128) (INT 127))
    (FIELDS (FIELD "MIN_VALUE" BYTE
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" BYTE
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "value"
                   BYTE (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
       "parseByte"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . BYTE)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseByte" "java.lang.Byte"
                                             ((CLASS "java.lang.String") INT)
                                             BYTE)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "parseByte"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 29)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ILOAD_1))
               (2 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                          ((CLASS "java.lang.String") INT)
                                          INT)))
               (5 (ISTORE_2))
               (6 (ILOAD_2))
               (7 (BIPUSH -128))
               (9 (IF_ICMPLT 18))
               (12 (ILOAD_2))
               (13 (BIPUSH 127))
               (15 (IF_ICMPLE 26))
               (18 (NEW (CLASS "java.lang.NumberFormatException")))
               (21 (DUP))
               (22 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.NumberFormatException"
                                            NIL VOID)))
               (25 (ATHROW))
               (26 (ILOAD_2))
               (27 (JVM::I2B))
               (28 (IRETURN))
               (ENDOFCODE 29))
          (EXCEPTIONS)
          (STACKMAP (18 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL))
                    (26 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "<init>" (PARAMETERS BYTE)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "byteValue" (PARAMETERS)
       (RETURNTYPE . BYTE)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 1)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 5)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
                  (4 (IRETURN))
                  (ENDOFCODE 5))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
                (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (7 (ARETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
       "hashCode" (PARAMETERS)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 1)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 5)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
                  (4 (IRETURN))
                  (ENDOFCODE 5))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (JVM::INSTANCEOF (CLASS "java.lang.Byte")))
        (4 (IFEQ 27))
        (7 (ALOAD_0))
        (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Byte" BYTE)))
        (11 (ALOAD_1))
        (12 (CHECKCAST (CLASS "java.lang.Byte")))
        (15 (INVOKEVIRTUAL (METHODCP "byteValue" "java.lang.Byte" NIL BYTE)))
        (18 (IF_ICMPNE 25))
        (21 (ICONST_1))
        (22 (GOTO 26))
        (25 (ICONST_0))
        (26 (IRETURN))
        (27 (ICONST_0))
        (28 (IRETURN))
        (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Byte")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.lang.Byte")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.lang.Byte")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalMonitorStateException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.IllegalThreadStateException"
    "java.lang.IllegalArgumentException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         NIL VOID)))
             (4 (RETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.IllegalArgumentException"
                                         ((CLASS "java.lang.String"))
                                         VOID)))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.NegativeArraySizeException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.OutOfMemoryError"
    "java.lang.VirtualMachineError"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.VirtualMachineError"
                                     NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ALOAD_1))
         (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.VirtualMachineError"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
         (5 (RETURN))
         (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.VirtualMachineError"
    "java.lang.Error" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Error" NIL VOID)))
           (4 (RETURN))
           (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 6)
         (PARSEDCODE (0 (ALOAD_0))
                     (1 (ALOAD_1))
                     (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Error"
                                                 ((CLASS "java.lang.String"))
                                                 VOID)))
                     (5 (RETURN))
                     (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.lang.Runnable"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "run" (PARAMETERS)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.lang.SecurityException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Short" "java.lang.Object"
    (CONSTANT_POOL (INT -32768) (INT 32767))
    (FIELDS (FIELD "MIN_VALUE" SHORT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MAX_VALUE" SHORT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "value"
                   SHORT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
       "parseShort"
       (PARAMETERS (CLASS "java.lang.String"))
       (RETURNTYPE . SHORT)
       (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 10))
                  (3 (INVOKESTATIC (METHODCP "parseShort" "java.lang.Short"
                                             ((CLASS "java.lang.String") INT)
                                             SHORT)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "parseShort"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 31)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ILOAD_1))
               (2 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                          ((CLASS "java.lang.String") INT)
                                          INT)))
               (5 (ISTORE_2))
               (6 (ILOAD_2))
               (7 (JVM::SIPUSH -32768))
               (10 (IF_ICMPLT 20))
               (13 (ILOAD_2))
               (14 (JVM::SIPUSH 32767))
               (17 (IF_ICMPLE 28))
               (20 (NEW (CLASS "java.lang.NumberFormatException")))
               (23 (DUP))
               (24 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.NumberFormatException"
                                            NIL VOID)))
               (27 (ATHROW))
               (28 (ILOAD_2))
               (29 (JVM::I2S))
               (30 (IRETURN))
               (ENDOFCODE 31))
          (EXCEPTIONS)
          (STACKMAP (20 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL))
                    (28 (FRAME (LOCALS (CLASS "java.lang.String")
                                       INT INT)
                               (STACK)
                               NIL)))))
     (METHOD
      "<init>" (PARAMETERS SHORT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "shortValue" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (4 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (7 (ARETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (4 (IRETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 29)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.lang.Short")))
                (4 (IFEQ 27))
                (7 (ALOAD_0))
                (8 (GETFIELD (JVM::FIELDCP "value" "java.lang.Short" SHORT)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.lang.Short")))
                (15 (INVOKEVIRTUAL (METHODCP "shortValue"
                                             "java.lang.Short" NIL SHORT)))
                (18 (IF_ICMPNE 25))
                (21 (ICONST_1))
                (22 (GOTO 26))
                (25 (ICONST_0))
                (26 (IRETURN))
                (27 (ICONST_0))
                (28 (IRETURN))
                (ENDOFCODE 29))
           (EXCEPTIONS)
           (STACKMAP (25 (FRAME (LOCALS (CLASS "java.lang.Short")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (26 (FRAME (LOCALS (CLASS "java.lang.Short")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.lang.Short")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *FINAL*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.lang.Thread" "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 5)
                   (INT 10)
                   (STRING "Thread[@")
                   (STRING ",")
                   (STRING "]"))
    (FIELDS (FIELD "priority"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "threadQ" (CLASS "java.lang.Thread")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "target" (CLASS "java.lang.Runnable")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "MIN_PRIORITY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "NORM_PRIORITY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "MAX_PRIORITY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2))
    (METHODS
     (METHOD "currentThread" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.Thread")
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "yield" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD "sleep" (PARAMETERS LONG)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ACONST_NULL))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread"
                                               ((CLASS "java.lang.Runnable"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.Runnable"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 35)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_5))
          (6 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (9 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                     NIL (CLASS "java.lang.Thread"))))
          (12 (ASTORE_2))
          (13 (ALOAD_0))
          (14 (ALOAD_2))
          (15 (INVOKEVIRTUAL (METHODCP "getPriority"
                                       "java.lang.Thread" NIL INT)))
          (18 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (21 (ALOAD_0))
          (22 (ALOAD_1))
          (23 (PUTFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                      (CLASS "java.lang.Runnable"))))
          (26 (ALOAD_0))
          (27 (ALOAD_0))
          (28 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
          (31 (INVOKEVIRTUAL (METHODCP "setPriority" "java.lang.Thread" (INT)
                                       VOID)))
          (34 (RETURN))
          (ENDOFCODE 35))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "start" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE*
                          *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (4 (IFNULL 16))
          (7 (ALOAD_0))
          (8 (GETFIELD (JVM::FIELDCP "target" "java.lang.Thread"
                                     (CLASS "java.lang.Runnable"))))
          (11 (INVOKEINTERFACE (METHODCP "run" "java.lang.Runnable" NIL VOID)
                               1))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD "isAlive" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *FINAL* *NATIVE* *PUBLIC*)
             (CODE))
     (METHOD
      "setPriority" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 30)
       (PARSEDCODE
         (0 (ILOAD_1))
         (1 (BIPUSH 10))
         (3 (IF_ICMPGT 11))
         (6 (ILOAD_1))
         (7 (ICONST_1))
         (8 (IF_ICMPGE 19))
         (11 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (14 (DUP))
         (15 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
         (18 (ATHROW))
         (19 (ALOAD_0))
         (20 (ALOAD_0))
         (21 (ILOAD_1))
         (22 (DUP_X1))
         (23 (PUTFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
         (26 (INVOKESPECIAL (METHODCP "setPriority0" "java.lang.Thread" (INT)
                                      VOID)))
         (29 (RETURN))
         (ENDOFCODE 30))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.lang.Thread") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "getPriority" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "priority" "java.lang.Thread" INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD "activeCount" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *NATIVE* *PUBLIC* *STATIC*)
             (CODE))
     (METHOD
      "join" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 19)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESTATIC (METHODCP "currentThread" "java.lang.Thread"
                                       NIL (CLASS "java.lang.Thread"))))
            (4 (JVM::IF_ACMPNE 11))
            (7 (RETURN))
            (8 (INVOKESTATIC (METHODCP "yield" "java.lang.Thread" NIL VOID)))
            (11 (ALOAD_0))
            (12 (INVOKEVIRTUAL (METHODCP "isAlive"
                                         "java.lang.Thread" NIL BOOLEAN)))
            (15 (IFNE 8))
            (18 (RETURN))
            (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "java.lang.Thread"))
                            (STACK)
                            NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 40)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.StringBuffer")))
        (3 (DUP))
        (4 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.StringBuffer" NIL VOID)))
        (7 (LDC 3))
        (9 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.StringBuffer"))))
        (12 (ALOAD_0))
        (13 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (16 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (19 (LDC 4))
        (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (24 (ALOAD_0))
        (25 (INVOKEVIRTUAL (METHODCP "getPriority"
                                     "java.lang.Thread" NIL INT)))
        (28 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (31 (LDC 5))
        (33 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (36 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (39 (ARETURN))
        (ENDOFCODE 40))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "setPriority0" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE)))
    (INTERFACES "java.lang.Runnable")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.UnsupportedEncodingException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.IOException"
    "java.lang.Exception" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Exception"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.InputStream" "java.lang.Object"
    (CONSTANT_POOL (STRING "mark/reset not supported"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "read" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 4)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 9)
         (PARSEDCODE (0 (ALOAD_0))
                     (1 (ALOAD_1))
                     (2 (ICONST_0))
                     (3 (ALOAD_1))
                     (4 (ARRAYLENGTH))
                     (5 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                                 ((ARRAY BYTE) INT INT)
                                                 INT)))
                     (8 (IRETURN))
                     (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 128)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 12))
         (4 (NEW (CLASS "java.lang.NullPointerException")))
         (7 (DUP))
         (8 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
         (11 (ATHROW))
         (12 (ILOAD_2))
         (13 (IFLT 40))
         (16 (ILOAD_2))
         (17 (ALOAD_1))
         (18 (ARRAYLENGTH))
         (19 (IF_ICMPGT 40))
         (22 (ILOAD_3))
         (23 (IFLT 40))
         (26 (ILOAD_2))
         (27 (ILOAD_3))
         (28 (IADD))
         (29 (ALOAD_1))
         (30 (ARRAYLENGTH))
         (31 (IF_ICMPGT 40))
         (34 (ILOAD_2))
         (35 (ILOAD_3))
         (36 (IADD))
         (37 (IFGE 48))
         (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (43 (DUP))
         (44 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      NIL VOID)))
         (47 (ATHROW))
         (48 (ILOAD_3))
         (49 (IFNE 54))
         (52 (ICONST_0))
         (53 (IRETURN))
         (54 (ALOAD_0))
         (55 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
         (58 (ISTORE 4))
         (60 (ILOAD 4))
         (62 (ICONST_M1))
         (63 (IF_ICMPNE 68))
         (66 (ICONST_M1))
         (67 (IRETURN))
         (68 (ALOAD_1))
         (69 (ILOAD_2))
         (70 (ILOAD 4))
         (72 (JVM::I2B))
         (73 (BASTORE))
         (74 (ICONST_1))
         (75 (ISTORE 5))
         (77 (GOTO 111))
         (80 (ALOAD_0))
         (81 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
         (84 (ISTORE 4))
         (86 (ILOAD 4))
         (88 (ICONST_M1))
         (89 (IF_ICMPNE 95))
         (92 (GOTO 117))
         (95 (ALOAD_1))
         (96 (IFNULL 108))
         (99 (ALOAD_1))
         (100 (ILOAD_2))
         (101 (ILOAD 5))
         (103 (IADD))
         (104 (ILOAD 4))
         (106 (JVM::I2B))
         (107 (BASTORE))
         (108 (IINC 5 1))
         (111 (ILOAD 5))
         (113 (ILOAD_3))
         (114 (IF_ICMPLT 80))
         (117 (GOTO 125))
         (120 (ASTORE 6))
         (122 (GOTO 125))
         (125 (ILOAD 5))
         (127 (IRETURN))
         (ENDOFCODE 128))
       (EXCEPTIONS (JVM::HANDLER 77
                                 117 120 (CLASS "java.io.IOException")))
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (68 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (80 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (95 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    (ARRAY BYTE)
                                    INT INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (108 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (111 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (117 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL))
                 (120 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK (CLASS "java.io.IOException"))
                             NIL))
                 (125 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                     (ARRAY BYTE)
                                     INT INT INT INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 29)
       (PARSEDCODE
          (0 (JVM::LLOAD_1))
          (1 (JVM::LSTORE_3))
          (2 (GOTO 19))
          (5 (ALOAD_0))
          (6 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
          (9 (IFGE 15))
          (12 (GOTO 25))
          (15 (JVM::LLOAD_3))
          (16 (LCONST_1))
          (17 (JVM::LSUB))
          (18 (JVM::LSTORE_3))
          (19 (JVM::LLOAD_3))
          (20 (LCONST_0))
          (21 (LCMP))
          (22 (IFGT 5))
          (25 (JVM::LLOAD_1))
          (26 (JVM::LLOAD_3))
          (27 (JVM::LSUB))
          (28 (JVM::LRETURN))
          (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (5 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                   LONG TOPX LONG TOPX)
                           (STACK)
                           NIL))
                 (15 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL))
                 (25 (FRAME (LOCALS (CLASS "java.io.InputStream")
                                    LONG TOPX LONG TOPX)
                            (STACK)
                            NIL)))))
     (METHOD "available" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "mark" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE (0 (NEW (CLASS "java.io.IOException")))
                   (3 (DUP))
                   (4 (LDC 0))
                   (6 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (9 (ATHROW))
                   (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "markSupported" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.Reader" "java.lang.Object"
    (CONSTANT_POOL (INT 8192)
                   (STRING "skip value is negative")
                   (LONG 8192)
                   (STRING "mark() not supported")
                   (STRING "reset() not supported"))
    (FIELDS (FIELD "lock" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "maxSkipBufferSize" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "skipBuffer" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 15)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ACONST_NULL))
          (6 (PUTFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
          (9 (ALOAD_0))
          (10 (ALOAD_0))
          (11 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Reader"
                                      (CLASS "java.lang.Object"))))
          (14 (RETURN))
          (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 27)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ACONST_NULL))
          (6 (PUTFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
          (9 (ALOAD_1))
          (10 (IFNONNULL 21))
          (13 (NEW (CLASS "java.lang.NullPointerException")))
          (16 (DUP))
          (17 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
          (20 (ATHROW))
          (21 (ALOAD_0))
          (22 (ALOAD_1))
          (23 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Reader"
                                      (CLASS "java.lang.Object"))))
          (26 (RETURN))
          (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL)))))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 21)
       (PARSEDCODE
          (0 (ICONST_1))
          (1 (NEWARRAY CHAR))
          (3 (ASTORE_1))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (ICONST_0))
          (7 (ICONST_1))
          (8 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
          (11 (ICONST_M1))
          (12 (IF_ICMPNE 17))
          (15 (ICONST_M1))
          (16 (IRETURN))
          (17 (ALOAD_1))
          (18 (ICONST_0))
          (19 (CALOAD))
          (20 (IRETURN))
          (ENDOFCODE 21))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    (ARRAY CHAR))
                            (STACK)
                            NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (ICONST_0))
          (3 (ALOAD_1))
          (4 (ARRAYLENGTH))
          (5 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
          (8 (IRETURN))
          (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "read" (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 7)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 121)
       (PARSEDCODE
         (0 (JVM::LLOAD_1))
         (1 (LCONST_0))
         (2 (LCMP))
         (3 (IFGE 16))
         (6 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (9 (DUP))
         (10 (LDC 1))
         (12 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (15 (ATHROW))
         (16 (JVM::LLOAD_1))
         (17 (JVM::LDC2_W 2))
         (20 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (LONG LONG)
                                     LONG)))
         (23 (JVM::L2I))
         (24 (ISTORE_3))
         (25 (ALOAD_0))
         (26 (GETFIELD (JVM::FIELDCP "lock" "java.io.Reader"
                                     (CLASS "java.lang.Object"))))
         (29 (DUP))
         (30 (ASTORE 4))
         (32 (MONITORENTER))
         (33 (ALOAD_0))
         (34 (GETFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (37 (IFNULL 49))
         (40 (ALOAD_0))
         (41 (GETFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (44 (ARRAYLENGTH))
         (45 (ILOAD_3))
         (46 (IF_ICMPGE 56))
         (49 (ALOAD_0))
         (50 (ILOAD_3))
         (51 (NEWARRAY CHAR))
         (53 (PUTFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (56 (JVM::LLOAD_1))
         (57 (JVM::LSTORE 5))
         (59 (GOTO 98))
         (62 (ALOAD_0))
         (63 (ALOAD_0))
         (64 (GETFIELD (JVM::FIELDCP "skipBuffer"
                                     "java.io.Reader" (ARRAY CHAR))))
         (67 (ICONST_0))
         (68 (JVM::LLOAD 5))
         (70 (ILOAD_3))
         (71 (JVM::I2L))
         (72 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (LONG LONG)
                                     LONG)))
         (75 (JVM::L2I))
         (76 (INVOKEVIRTUAL (METHODCP "read"
                                      "java.io.Reader" ((ARRAY CHAR) INT INT)
                                      INT)))
         (79 (ISTORE 7))
         (81 (ILOAD 7))
         (83 (ICONST_M1))
         (84 (IF_ICMPNE 90))
         (87 (GOTO 105))
         (90 (JVM::LLOAD 5))
         (92 (ILOAD 7))
         (94 (JVM::I2L))
         (95 (JVM::LSUB))
         (96 (JVM::LSTORE 5))
         (98 (JVM::LLOAD 5))
         (100 (LCONST_0))
         (101 (LCMP))
         (102 (IFGT 62))
         (105 (JVM::LLOAD_1))
         (106 (JVM::LLOAD 5))
         (108 (JVM::LSUB))
         (109 (ALOAD 4))
         (111 (MONITOREXIT))
         (112 (JVM::LRETURN))
         (113 (ASTORE 8))
         (115 (ALOAD 4))
         (117 (MONITOREXIT))
         (118 (ALOAD 8))
         (120 (ATHROW))
         (ENDOFCODE 121))
       (EXCEPTIONS (JVM::HANDLER 33
                                 112 113 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 113
                                 118 113 (CLASS "java.lang.Throwable")))
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    LONG TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (90 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    LONG TOPX INT TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.io.Reader")
                                    LONG TOPX INT (CLASS "java.lang.Object")
                                    LONG TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (105 (FRAME (LOCALS (CLASS "java.io.Reader")
                                     LONG TOPX INT (CLASS "java.lang.Object")
                                     LONG TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (113 (FRAME (LOCALS (CLASS "java.io.Reader")
                                     LONG TOPX INT (CLASS "java.lang.Object")
                                     TOPX TOPX TOPX TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL)))))
     (METHOD "ready" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "markSupported" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_0))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 10)
       (PARSEDCODE (0 (NEW (CLASS "java.io.IOException")))
                   (3 (DUP))
                   (4 (LDC 3))
                   (6 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (9 (ATHROW))
                   (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE (0 (NEW (CLASS "java.io.IOException")))
                   (3 (DUP))
                   (4 (LDC 4))
                   (6 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (9 (ATHROW))
                   (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.OutputStream"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "write" (PARAMETERS INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "write" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (ICONST_0))
                   (3 (ALOAD_1))
                   (4 (ARRAYLENGTH))
                   (5 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream"
                                               ((ARRAY BYTE) INT INT)
                                               VOID)))
                   (8 (RETURN))
                   (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 79)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (IFNONNULL 12))
           (4 (NEW (CLASS "java.lang.NullPointerException")))
           (7 (DUP))
           (8 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
           (11 (ATHROW))
           (12 (ILOAD_2))
           (13 (IFLT 40))
           (16 (ILOAD_2))
           (17 (ALOAD_1))
           (18 (ARRAYLENGTH))
           (19 (IF_ICMPGT 40))
           (22 (ILOAD_3))
           (23 (IFLT 40))
           (26 (ILOAD_2))
           (27 (ILOAD_3))
           (28 (IADD))
           (29 (ALOAD_1))
           (30 (ARRAYLENGTH))
           (31 (IF_ICMPGT 40))
           (34 (ILOAD_2))
           (35 (ILOAD_3))
           (36 (IADD))
           (37 (IFGE 48))
           (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
           (43 (DUP))
           (44 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
           (47 (ATHROW))
           (48 (ILOAD_3))
           (49 (IFNE 53))
           (52 (RETURN))
           (53 (ICONST_0))
           (54 (ISTORE 4))
           (56 (GOTO 72))
           (59 (ALOAD_0))
           (60 (ALOAD_1))
           (61 (ILOAD_2))
           (62 (ILOAD 4))
           (64 (IADD))
           (65 (BALOAD))
           (66 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                        VOID)))
           (69 (IINC 4 1))
           (72 (ILOAD 4))
           (74 (ILOAD_3))
           (75 (IF_ICMPLT 59))
           (78 (RETURN))
           (ENDOFCODE 79))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (59 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "java.io.OutputStream")
                                    (ARRAY BYTE)
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD "flush" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.Writer"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "writeBuffer" (ARRAY CHAR)
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "writeBufferSize" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1)
            (FIELD "lock" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::SIPUSH 1024))
          (8 (PUTFIELD (JVM::FIELDCP "writeBufferSize"
                                     "java.io.Writer" INT)))
          (11 (ALOAD_0))
          (12 (ALOAD_0))
          (13 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                      (CLASS "java.lang.Object"))))
          (16 (RETURN))
          (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::SIPUSH 1024))
          (8 (PUTFIELD (JVM::FIELDCP "writeBufferSize"
                                     "java.io.Writer" INT)))
          (11 (ALOAD_1))
          (12 (IFNONNULL 23))
          (15 (NEW (CLASS "java.lang.NullPointerException")))
          (18 (DUP))
          (19 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
          (22 (ATHROW))
          (23 (ALOAD_0))
          (24 (ALOAD_1))
          (25 (PUTFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                      (CLASS "java.lang.Object"))))
          (28 (RETURN))
          (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (23 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 52)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                    (CLASS "java.lang.Object"))))
         (4 (DUP))
         (5 (ASTORE_2))
         (6 (MONITORENTER))
         (7 (ALOAD_0))
         (8 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                    "java.io.Writer" (ARRAY CHAR))))
         (11 (IFNONNULL 23))
         (14 (ALOAD_0))
         (15 (JVM::SIPUSH 1024))
         (18 (NEWARRAY CHAR))
         (20 (PUTFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (23 (ALOAD_0))
         (24 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (27 (ICONST_0))
         (28 (ILOAD_1))
         (29 (JVM::I2C))
         (30 (CASTORE))
         (31 (ALOAD_0))
         (32 (ALOAD_0))
         (33 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (36 (ICONST_0))
         (37 (ICONST_1))
         (38 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
         (41 (ALOAD_2))
         (42 (MONITOREXIT))
         (43 (GOTO 51))
         (46 (ASTORE_3))
         (47 (ALOAD_2))
         (48 (MONITOREXIT))
         (49 (ALOAD_3))
         (50 (ATHROW))
         (51 (RETURN))
         (ENDOFCODE 52))
       (EXCEPTIONS (JVM::HANDLER 7 43 46 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 46 49 46 (CLASS "java.lang.Throwable")))
       (STACKMAP (23 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (ICONST_0))
          (3 (ALOAD_1))
          (4 (ARRAYLENGTH))
          (5 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
          (8 (RETURN))
          (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "write"
             (PARAMETERS (ARRAY CHAR) INT INT)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 11)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ALOAD_1))
           (2 (ICONST_0))
           (3 (ALOAD_1))
           (4 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
           (7 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer"
                                       ((CLASS "java.lang.String") INT INT)
                                       VOID)))
           (10 (RETURN))
           (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 79)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "lock" "java.io.Writer"
                                    (CLASS "java.lang.Object"))))
         (4 (DUP))
         (5 (ASTORE 4))
         (7 (MONITORENTER))
         (8 (ILOAD_3))
         (9 (JVM::SIPUSH 1024))
         (12 (IF_ICMPGT 40))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (19 (IFNONNULL 31))
         (22 (ALOAD_0))
         (23 (JVM::SIPUSH 1024))
         (26 (NEWARRAY CHAR))
         (28 (PUTFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (31 (ALOAD_0))
         (32 (GETFIELD (JVM::FIELDCP "writeBuffer"
                                     "java.io.Writer" (ARRAY CHAR))))
         (35 (ASTORE 5))
         (37 (GOTO 45))
         (40 (ILOAD_3))
         (41 (NEWARRAY CHAR))
         (43 (ASTORE 5))
         (45 (ALOAD_1))
         (46 (ILOAD_2))
         (47 (ILOAD_2))
         (48 (ILOAD_3))
         (49 (IADD))
         (50 (ALOAD 5))
         (52 (ICONST_0))
         (53 (INVOKEVIRTUAL (METHODCP "getChars" "java.lang.String"
                                      (INT INT (ARRAY CHAR) INT)
                                      VOID)))
         (56 (ALOAD_0))
         (57 (ALOAD 5))
         (59 (ICONST_0))
         (60 (ILOAD_3))
         (61 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
         (64 (ALOAD 4))
         (66 (MONITOREXIT))
         (67 (GOTO 78))
         (70 (ASTORE 6))
         (72 (ALOAD 4))
         (74 (MONITOREXIT))
         (75 (ALOAD 6))
         (77 (ATHROW))
         (78 (RETURN))
         (ENDOFCODE 79))
       (EXCEPTIONS (JVM::HANDLER 8 67 70 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 70 75 70 (CLASS "java.lang.Throwable")))
       (STACKMAP (31 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    (ARRAY CHAR)
                                    TOPX)
                            (STACK)
                            NIL))
                 (70 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    TOPX TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (78 (FRAME (LOCALS (CLASS "java.io.Writer")
                                    (CLASS "java.lang.String")
                                    INT INT (CLASS "java.lang.Object")
                                    (ARRAY CHAR)
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD "flush" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE)))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.PrintStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Null output stream")
                   (STRING "Stream closed")
                   (STRING "true")
                   (STRING "false")
                   (STRING "null"))
    (FIELDS (FIELD "trouble"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "charOut"
                   (CLASS "java.io.OutputStreamWriter")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "byteOut" (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "closing"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 46)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.OutputStream" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ICONST_0))
          (6 (PUTFIELD (JVM::FIELDCP "trouble"
                                     "java.io.PrintStream" BOOLEAN)))
          (9 (ALOAD_0))
          (10 (ICONST_0))
          (11 (PUTFIELD (JVM::FIELDCP "closing"
                                      "java.io.PrintStream" BOOLEAN)))
          (14 (ALOAD_1))
          (15 (IFNONNULL 28))
          (18 (NEW (CLASS "java.lang.NullPointerException")))
          (21 (DUP))
          (22 (LDC 0))
          (24 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
          (27 (ATHROW))
          (28 (ALOAD_0))
          (29 (ALOAD_1))
          (30 (PUTFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStream"))))
          (33 (ALOAD_0))
          (34 (NEW (CLASS "java.io.OutputStreamWriter")))
          (37 (DUP))
          (38 (ALOAD_1))
          (39 (INVOKESPECIAL (METHODCP "<init>" "java.io.OutputStreamWriter"
                                       ((CLASS "java.io.OutputStream"))
                                       VOID)))
          (42 (PUTFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStreamWriter"))))
          (45 (RETURN))
          (ENDOFCODE 46))
       (EXCEPTIONS)
       (STACKMAP (28 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.OutputStream"))
                            (STACK)
                            NIL)))))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStreamWriter"))))
           (4 (IFNONNULL 17))
           (7 (NEW (CLASS "java.io.IOException")))
           (10 (DUP))
           (11 (LDC 1))
           (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (16 (ATHROW))
           (17 (RETURN))
           (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.PrintStream"))
                            (STACK)
                            NIL)))))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 38)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (DUP))
        (2 (ASTORE_1))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (INVOKESPECIAL (METHODCP "ensureOpen"
                                    "java.io.PrintStream" NIL VOID)))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                   (CLASS "java.io.OutputStreamWriter"))))
        (12 (INVOKEVIRTUAL (METHODCP "flush"
                                     "java.io.OutputStreamWriter" NIL VOID)))
        (15 (GOTO 27))
        (18 (ASTORE_2))
        (19 (ALOAD_0))
        (20 (ICONST_1))
        (21 (PUTFIELD (JVM::FIELDCP "trouble"
                                    "java.io.PrintStream" BOOLEAN)))
        (24 (GOTO 27))
        (27 (ALOAD_1))
        (28 (MONITOREXIT))
        (29 (GOTO 37))
        (32 (ASTORE_3))
        (33 (ALOAD_1))
        (34 (MONITOREXIT))
        (35 (ALOAD_3))
        (36 (ATHROW))
        (37 (RETURN))
        (ENDOFCODE 38))
       (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 4 29 32 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 32 35 32 (CLASS "java.lang.Throwable")))
       (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (27 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (32 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (37 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (DUP))
        (2 (ASTORE_1))
        (3 (MONITORENTER))
        (4 (ALOAD_0))
        (5 (GETFIELD (JVM::FIELDCP "closing"
                                   "java.io.PrintStream" BOOLEAN)))
        (8 (IFNE 45))
        (11 (ALOAD_0))
        (12 (ICONST_1))
        (13 (PUTFIELD (JVM::FIELDCP "closing"
                                    "java.io.PrintStream" BOOLEAN)))
        (16 (ALOAD_0))
        (17 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStreamWriter"))))
        (20 (INVOKEVIRTUAL (METHODCP "close"
                                     "java.io.OutputStreamWriter" NIL VOID)))
        (23 (GOTO 35))
        (26 (ASTORE_2))
        (27 (ALOAD_0))
        (28 (ICONST_1))
        (29 (PUTFIELD (JVM::FIELDCP "trouble"
                                    "java.io.PrintStream" BOOLEAN)))
        (32 (GOTO 35))
        (35 (ALOAD_0))
        (36 (ACONST_NULL))
        (37 (PUTFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStreamWriter"))))
        (40 (ALOAD_0))
        (41 (ACONST_NULL))
        (42 (PUTFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStream"))))
        (45 (ALOAD_1))
        (46 (MONITOREXIT))
        (47 (GOTO 55))
        (50 (ASTORE_3))
        (51 (ALOAD_1))
        (52 (MONITOREXIT))
        (53 (ALOAD_3))
        (54 (ATHROW))
        (55 (RETURN))
        (ENDOFCODE 56))
       (EXCEPTIONS (JVM::HANDLER 16 23 26 (CLASS "java.io.IOException"))
                   (JVM::HANDLER 4 47 50 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 50 53 50 (CLASS "java.lang.Throwable")))
       (STACKMAP (26 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL))
                 (50 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (55 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.io.PrintStream")
                                    TOPX TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "checkError" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 16)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                      (CLASS "java.io.OutputStreamWriter"))))
           (4 (IFNULL 11))
           (7 (ALOAD_0))
           (8 (INVOKEVIRTUAL (METHODCP "flush"
                                       "java.io.PrintStream" NIL VOID)))
           (11 (ALOAD_0))
           (12 (GETFIELD (JVM::FIELDCP "trouble"
                                       "java.io.PrintStream" BOOLEAN)))
           (15 (IRETURN))
           (ENDOFCODE 16))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.io.PrintStream"))
                            (STACK)
                            NIL)))))
     (METHOD
       "setError" (PARAMETERS)
       (RETURNTYPE . VOID)
       (ACCESSFLAGS *CLASS* *PROTECTED*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 6)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (ICONST_1))
                  (2 (PUTFIELD (JVM::FIELDCP "trouble"
                                             "java.io.PrintStream" BOOLEAN)))
                  (5 (RETURN))
                  (ENDOFCODE 6))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 39)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (DUP))
            (2 (ASTORE_2))
            (3 (MONITORENTER))
            (4 (ALOAD_0))
            (5 (INVOKESPECIAL (METHODCP "ensureOpen"
                                        "java.io.PrintStream" NIL VOID)))
            (8 (ALOAD_0))
            (9 (GETFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                       (CLASS "java.io.OutputStream"))))
            (12 (ILOAD_1))
            (13 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                         VOID)))
            (16 (ALOAD_2))
            (17 (MONITOREXIT))
            (18 (GOTO 26))
            (21 (ASTORE_3))
            (22 (ALOAD_2))
            (23 (MONITOREXIT))
            (24 (ALOAD_3))
            (25 (ATHROW))
            (26 (GOTO 38))
            (29 (ASTORE_2))
            (30 (ALOAD_0))
            (31 (ICONST_1))
            (32 (PUTFIELD (JVM::FIELDCP "trouble"
                                        "java.io.PrintStream" BOOLEAN)))
            (35 (GOTO 38))
            (38 (RETURN))
            (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 4 18 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 21 24 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 0 26 29 (CLASS "java.io.IOException")))
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (38 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 6)
           (CODE_LENGTH . 47)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (DUP))
                (2 (ASTORE 4))
                (4 (MONITORENTER))
                (5 (ALOAD_0))
                (6 (INVOKESPECIAL (METHODCP "ensureOpen"
                                            "java.io.PrintStream" NIL VOID)))
                (9 (ALOAD_0))
                (10 (GETFIELD (JVM::FIELDCP "byteOut" "java.io.PrintStream"
                                            (CLASS "java.io.OutputStream"))))
                (13 (ALOAD_1))
                (14 (ILOAD_2))
                (15 (ILOAD_3))
                (16 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream"
                                             ((ARRAY BYTE) INT INT)
                                             VOID)))
                (19 (ALOAD 4))
                (21 (MONITOREXIT))
                (22 (GOTO 33))
                (25 (ASTORE 5))
                (27 (ALOAD 4))
                (29 (MONITOREXIT))
                (30 (ALOAD 5))
                (32 (ATHROW))
                (33 (GOTO 46))
                (36 (ASTORE 4))
                (38 (ALOAD_0))
                (39 (ICONST_1))
                (40 (PUTFIELD (JVM::FIELDCP "trouble"
                                            "java.io.PrintStream" BOOLEAN)))
                (43 (GOTO 46))
                (46 (RETURN))
                (ENDOFCODE 47))
           (EXCEPTIONS (JVM::HANDLER 5 22 25 (CLASS "java.lang.Throwable"))
                       (JVM::HANDLER 25 30 25 (CLASS "java.lang.Throwable"))
                       (JVM::HANDLER 0 33 36 (CLASS "java.io.IOException")))
           (STACKMAP (25 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT (CLASS "java.io.PrintStream")
                                        TOPX)
                                (STACK (CLASS "java.lang.Throwable"))
                                NIL))
                     (33 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT (CLASS "java.io.PrintStream")
                                        TOPX)
                                (STACK)
                                NIL))
                     (36 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT TOPX TOPX)
                                (STACK (CLASS "java.io.IOException"))
                                NIL))
                     (46 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                        (ARRAY BYTE)
                                        INT INT (CLASS "java.lang.Object")
                                        TOPX)
                                (STACK)
                                NIL)))))
     (METHOD
      "write" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 39)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (DUP))
         (2 (ASTORE_2))
         (3 (MONITORENTER))
         (4 (ALOAD_0))
         (5 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.PrintStream" NIL VOID)))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "charOut" "java.io.PrintStream"
                                    (CLASS "java.io.OutputStreamWriter"))))
         (12 (ALOAD_1))
         (13 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer" ((ARRAY CHAR))
                                      VOID)))
         (16 (ALOAD_2))
         (17 (MONITOREXIT))
         (18 (GOTO 26))
         (21 (ASTORE_3))
         (22 (ALOAD_2))
         (23 (MONITOREXIT))
         (24 (ALOAD_3))
         (25 (ATHROW))
         (26 (GOTO 38))
         (29 (ASTORE_2))
         (30 (ALOAD_0))
         (31 (ICONST_1))
         (32 (PUTFIELD (JVM::FIELDCP "trouble"
                                     "java.io.PrintStream" BOOLEAN)))
         (35 (GOTO 38))
         (38 (RETURN))
         (ENDOFCODE 39))
       (EXCEPTIONS (JVM::HANDLER 4 18 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 21 24 21 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 0 26 29 (CLASS "java.io.IOException")))
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (26 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK)
                            NIL))
                 (29 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    TOPX TOPX)
                            (STACK (CLASS "java.io.IOException"))
                            NIL))
                 (38 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (ARRAY CHAR)
                                    (CLASS "java.lang.Object")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD "write"
             (PARAMETERS (CLASS "java.lang.String"))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD "newLine" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *NATIVE* *PRIVATE*)
             (CODE))
     (METHOD
      "print" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 16)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ILOAD_1))
                   (2 (IFEQ 10))
                   (5 (LDC 2))
                   (7 (GOTO 12))
                   (10 (LDC 3))
                   (12 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                                ((CLASS "java.lang.String"))
                                                VOID)))
                   (15 (RETURN))
                   (ENDOFCODE 16))
       (EXCEPTIONS)
       (STACKMAP (10 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT)
                            (STACK (CLASS "java.io.PrintStream"))
                            NIL))
                 (12 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT)
                            (STACK (CLASS "java.lang.String")
                                   (CLASS "java.io.PrintStream"))
                            NIL)))))
     (METHOD
      "print" (PARAMETERS CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (ILOAD_1))
               (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (CHAR)
                                          (CLASS "java.lang.String"))))
               (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                           ((CLASS "java.lang.String"))
                                           VOID)))
               (8 (RETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "print" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 9)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ILOAD_1))
                (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (INT)
                                           (CLASS "java.lang.String"))))
                (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                            ((CLASS "java.lang.String"))
                                            VOID)))
                (8 (RETURN))
                (ENDOFCODE 9))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "print" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (JVM::LLOAD_1))
               (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String" (LONG)
                                          (CLASS "java.lang.String"))))
               (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                           ((CLASS "java.lang.String"))
                                           VOID)))
               (8 (RETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "print" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (INVOKESPECIAL (METHODCP "write"
                                         "java.io.PrintStream" ((ARRAY CHAR))
                                         VOID)))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "print"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 13)
        (PARSEDCODE (0 (ALOAD_1))
                    (1 (IFNONNULL 7))
                    (4 (LDC 4))
                    (6 (ASTORE_1))
                    (7 (ALOAD_0))
                    (8 (ALOAD_1))
                    (9 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                                ((CLASS "java.lang.String"))
                                                VOID)))
                    (12 (RETURN))
                    (ENDOFCODE 13))
        (EXCEPTIONS)
        (STACKMAP (7 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    (CLASS "java.lang.String"))
                            (STACK)
                            NIL)))))
     (METHOD
      "print"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE (0 (ALOAD_0))
                    (1 (ALOAD_1))
                    (2 (INVOKESTATIC (METHODCP "valueOf" "java.lang.String"
                                               ((CLASS "java.lang.Object"))
                                               (CLASS "java.lang.String"))))
                    (5 (INVOKESPECIAL (METHODCP "write" "java.io.PrintStream"
                                                ((CLASS "java.lang.String"))
                                                VOID)))
                    (8 (RETURN))
                    (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "println" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "newLine"
                                            "java.io.PrintStream" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "println" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 24)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (DUP))
          (2 (ASTORE_2))
          (3 (MONITORENTER))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (BOOLEAN)
                                      VOID)))
          (9 (ALOAD_0))
          (10 (INVOKESPECIAL (METHODCP "newLine"
                                       "java.io.PrintStream" NIL VOID)))
          (13 (ALOAD_2))
          (14 (MONITOREXIT))
          (15 (GOTO 23))
          (18 (ASTORE_3))
          (19 (ALOAD_2))
          (20 (MONITOREXIT))
          (21 (ALOAD_3))
          (22 (ATHROW))
          (23 (RETURN))
          (ENDOFCODE 24))
       (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
       (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                    INT (CLASS "java.io.PrintStream")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "println" (PARAMETERS CHAR)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 4)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (ASTORE_2))
             (3 (MONITORENTER))
             (4 (ALOAD_0))
             (5 (ILOAD_1))
             (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (CHAR)
                                         VOID)))
             (9 (ALOAD_0))
             (10 (INVOKESPECIAL (METHODCP "newLine"
                                          "java.io.PrintStream" NIL VOID)))
             (13 (ALOAD_2))
             (14 (MONITOREXIT))
             (15 (GOTO 23))
             (18 (ASTORE_3))
             (19 (ALOAD_2))
             (20 (MONITOREXIT))
             (21 (ALOAD_3))
             (22 (ATHROW))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                    (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
        (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     INT (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL))
                  (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     INT (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "println" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 4)
         (CODE_LENGTH . 24)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (DUP))
              (2 (ASTORE_2))
              (3 (MONITORENTER))
              (4 (ALOAD_0))
              (5 (ILOAD_1))
              (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (INT)
                                          VOID)))
              (9 (ALOAD_0))
              (10 (INVOKESPECIAL (METHODCP "newLine"
                                           "java.io.PrintStream" NIL VOID)))
              (13 (ALOAD_2))
              (14 (MONITOREXIT))
              (15 (GOTO 23))
              (18 (ASTORE_3))
              (19 (ALOAD_2))
              (20 (MONITOREXIT))
              (21 (ALOAD_3))
              (22 (ATHROW))
              (23 (RETURN))
              (ENDOFCODE 24))
         (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                     (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
         (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                      INT (CLASS "java.io.PrintStream")
                                      TOPX)
                              (STACK (CLASS "java.lang.Throwable"))
                              NIL))
                   (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                      INT (CLASS "java.io.PrintStream")
                                      TOPX)
                              (STACK)
                              NIL)))))
     (METHOD
      "println" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 5)
        (CODE_LENGTH . 26)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (ASTORE_3))
             (3 (MONITORENTER))
             (4 (ALOAD_0))
             (5 (JVM::LLOAD_1))
             (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream" (LONG)
                                         VOID)))
             (9 (ALOAD_0))
             (10 (INVOKESPECIAL (METHODCP "newLine"
                                          "java.io.PrintStream" NIL VOID)))
             (13 (ALOAD_3))
             (14 (MONITOREXIT))
             (15 (GOTO 25))
             (18 (ASTORE 4))
             (20 (ALOAD_3))
             (21 (MONITOREXIT))
             (22 (ALOAD 4))
             (24 (ATHROW))
             (25 (RETURN))
             (ENDOFCODE 26))
        (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                    (JVM::HANDLER 18 22 18 (CLASS "java.lang.Throwable")))
        (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     LONG TOPX (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL))
                  (25 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     LONG TOPX (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "println" (PARAMETERS (ARRAY CHAR))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 4)
        (CODE_LENGTH . 24)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (DUP))
             (2 (ASTORE_2))
             (3 (MONITORENTER))
             (4 (ALOAD_0))
             (5 (ALOAD_1))
             (6 (INVOKEVIRTUAL (METHODCP "print"
                                         "java.io.PrintStream" ((ARRAY CHAR))
                                         VOID)))
             (9 (ALOAD_0))
             (10 (INVOKESPECIAL (METHODCP "newLine"
                                          "java.io.PrintStream" NIL VOID)))
             (13 (ALOAD_2))
             (14 (MONITOREXIT))
             (15 (GOTO 23))
             (18 (ASTORE_3))
             (19 (ALOAD_2))
             (20 (MONITOREXIT))
             (21 (ALOAD_3))
             (22 (ATHROW))
             (23 (RETURN))
             (ENDOFCODE 24))
        (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                    (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
        (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     (ARRAY CHAR)
                                     (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK (CLASS "java.lang.Throwable"))
                             NIL))
                  (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                     (ARRAY CHAR)
                                     (CLASS "java.io.PrintStream")
                                     TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "println"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 4)
          (CODE_LENGTH . 24)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (DUP))
               (2 (ASTORE_2))
               (3 (MONITORENTER))
               (4 (ALOAD_0))
               (5 (ALOAD_1))
               (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                           ((CLASS "java.lang.String"))
                                           VOID)))
               (9 (ALOAD_0))
               (10 (INVOKESPECIAL (METHODCP "newLine"
                                            "java.io.PrintStream" NIL VOID)))
               (13 (ALOAD_2))
               (14 (MONITOREXIT))
               (15 (GOTO 23))
               (18 (ASTORE_3))
               (19 (ALOAD_2))
               (20 (MONITOREXIT))
               (21 (ALOAD_3))
               (22 (ATHROW))
               (23 (RETURN))
               (ENDOFCODE 24))
          (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
          (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.String")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK (CLASS "java.lang.Throwable"))
                               NIL))
                    (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.String")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK)
                               NIL)))))
     (METHOD
      "println"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 4)
          (CODE_LENGTH . 24)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (DUP))
               (2 (ASTORE_2))
               (3 (MONITORENTER))
               (4 (ALOAD_0))
               (5 (ALOAD_1))
               (6 (INVOKEVIRTUAL (METHODCP "print" "java.io.PrintStream"
                                           ((CLASS "java.lang.Object"))
                                           VOID)))
               (9 (ALOAD_0))
               (10 (INVOKESPECIAL (METHODCP "newLine"
                                            "java.io.PrintStream" NIL VOID)))
               (13 (ALOAD_2))
               (14 (MONITOREXIT))
               (15 (GOTO 23))
               (18 (ASTORE_3))
               (19 (ALOAD_2))
               (20 (MONITOREXIT))
               (21 (ALOAD_3))
               (22 (ATHROW))
               (23 (RETURN))
               (ENDOFCODE 24))
          (EXCEPTIONS (JVM::HANDLER 4 15 18 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 18 21 18 (CLASS "java.lang.Throwable")))
          (STACKMAP (18 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.Object")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK (CLASS "java.lang.Throwable"))
                               NIL))
                    (23 (FRAME (LOCALS (CLASS "java.io.PrintStream")
                                       (CLASS "java.lang.Object")
                                       (CLASS "java.io.PrintStream")
                                       TOPX)
                               (STACK)
                               NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.OutputStreamWriter"
    "java.io.Writer"
    (CONSTANT_POOL (STRING "Stream closed"))
    (FIELDS (FIELD "out" (CLASS "java.io.Writer")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 13)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Writer" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ALOAD_1))
            (6 (INVOKESTATIC (METHODCP "getStreamWriter"
                                       "com.sun.cldc.i18n.Helper"
                                       ((CLASS "java.io.OutputStream"))
                                       (CLASS "java.io.Writer"))))
            (9 (PUTFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                       (CLASS "java.io.Writer"))))
            (12 (RETURN))
            (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream")
                  (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 14)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>" "java.io.Writer" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ALOAD_1))
            (6 (ALOAD_2))
            (7 (INVOKESTATIC (METHODCP "getStreamWriter"
                                       "com.sun.cldc.i18n.Helper"
                                       ((CLASS "java.io.OutputStream")
                                        (CLASS "java.lang.String"))
                                       (CLASS "java.io.Writer"))))
            (10 (PUTFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                        (CLASS "java.io.Writer"))))
            (13 (RETURN))
            (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
           (MAX_STACK . 3)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 18)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                           (CLASS "java.io.Writer"))))
                (4 (IFNONNULL 17))
                (7 (NEW (CLASS "java.io.IOException")))
                (10 (DUP))
                (11 (LDC 0))
                (13 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                             ((CLASS "java.lang.String"))
                                             VOID)))
                (16 (ATHROW))
                (17 (RETURN))
                (ENDOFCODE 18))
           (EXCEPTIONS)
           (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter"))
                                (STACK)
                                NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 13)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                    (CLASS "java.io.Writer"))))
         (8 (ILOAD_1))
         (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer" (INT)
                                     VOID)))
         (12 (RETURN))
         (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY CHAR) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 56)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ILOAD_2))
         (5 (IFLT 32))
         (8 (ILOAD_2))
         (9 (ALOAD_1))
         (10 (ARRAYLENGTH))
         (11 (IF_ICMPGT 32))
         (14 (ILOAD_3))
         (15 (IFLT 32))
         (18 (ILOAD_2))
         (19 (ILOAD_3))
         (20 (IADD))
         (21 (ALOAD_1))
         (22 (ARRAYLENGTH))
         (23 (IF_ICMPGT 32))
         (26 (ILOAD_2))
         (27 (ILOAD_3))
         (28 (IADD))
         (29 (IFGE 40))
         (32 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (35 (DUP))
         (36 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      NIL VOID)))
         (39 (ATHROW))
         (40 (ILOAD_3))
         (41 (IFNE 45))
         (44 (RETURN))
         (45 (ALOAD_0))
         (46 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                     (CLASS "java.io.Writer"))))
         (49 (ALOAD_1))
         (50 (ILOAD_2))
         (51 (ILOAD_3))
         (52 (INVOKEVIRTUAL (METHODCP "write"
                                      "java.io.Writer" ((ARRAY CHAR) INT INT)
                                      VOID)))
         (55 (RETURN))
         (ENDOFCODE 56))
       (EXCEPTIONS)
       (STACKMAP (32 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (ARRAY CHAR)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (CLASS "java.lang.String")
                  INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 60)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ILOAD_2))
         (5 (IFLT 36))
         (8 (ILOAD_2))
         (9 (ALOAD_1))
         (10 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
         (13 (IF_ICMPGT 36))
         (16 (ILOAD_3))
         (17 (IFLT 36))
         (20 (ILOAD_2))
         (21 (ILOAD_3))
         (22 (IADD))
         (23 (ALOAD_1))
         (24 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
         (27 (IF_ICMPGT 36))
         (30 (ILOAD_2))
         (31 (ILOAD_3))
         (32 (IADD))
         (33 (IFGE 44))
         (36 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (39 (DUP))
         (40 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      NIL VOID)))
         (43 (ATHROW))
         (44 (ILOAD_3))
         (45 (IFNE 49))
         (48 (RETURN))
         (49 (ALOAD_0))
         (50 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                     (CLASS "java.io.Writer"))))
         (53 (ALOAD_1))
         (54 (ILOAD_2))
         (55 (ILOAD_3))
         (56 (INVOKEVIRTUAL (METHODCP "write" "java.io.Writer"
                                      ((CLASS "java.lang.String") INT INT)
                                      VOID)))
         (59 (RETURN))
         (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (36 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (44 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter")
                                    (CLASS "java.lang.String")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 12)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                     "java.io.OutputStreamWriter" NIL VOID)))
         (4 (ALOAD_0))
         (5 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                    (CLASS "java.io.Writer"))))
         (8 (INVOKEVIRTUAL (METHODCP "flush" "java.io.Writer" NIL VOID)))
         (11 (RETURN))
         (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                       (CLASS "java.io.Writer"))))
            (4 (IFNULL 19))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                       (CLASS "java.io.Writer"))))
            (11 (INVOKEVIRTUAL (METHODCP "close" "java.io.Writer" NIL VOID)))
            (14 (ALOAD_0))
            (15 (ACONST_NULL))
            (16 (PUTFIELD (JVM::FIELDCP "out" "java.io.OutputStreamWriter"
                                        (CLASS "java.io.Writer"))))
            (19 (RETURN))
            (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP (19 (FRAME (LOCALS (CLASS "java.io.OutputStreamWriter"))
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.ByteArrayInputStream"
    "java.io.InputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "pos"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "mark"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 26)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.io.InputStream" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ICONST_0))
            (6 (PUTFIELD (JVM::FIELDCP "mark"
                                       "java.io.ByteArrayInputStream" INT)))
            (9 (ALOAD_0))
            (10 (ALOAD_1))
            (11 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                        (ARRAY BYTE))))
            (14 (ALOAD_0))
            (15 (ICONST_0))
            (16 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (19 (ALOAD_0))
            (20 (ALOAD_1))
            (21 (ARRAYLENGTH))
            (22 (PUTFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
            (25 (RETURN))
            (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 37)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.io.InputStream" NIL VOID)))
            (4 (ALOAD_0))
            (5 (ICONST_0))
            (6 (PUTFIELD (JVM::FIELDCP "mark"
                                       "java.io.ByteArrayInputStream" INT)))
            (9 (ALOAD_0))
            (10 (ALOAD_1))
            (11 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                        (ARRAY BYTE))))
            (14 (ALOAD_0))
            (15 (ILOAD_2))
            (16 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (19 (ALOAD_0))
            (20 (ILOAD_2))
            (21 (ILOAD_3))
            (22 (IADD))
            (23 (ALOAD_1))
            (24 (ARRAYLENGTH))
            (25 (INVOKESTATIC (METHODCP "min" "java.lang.Math" (INT INT)
                                        INT)))
            (28 (PUTFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
            (31 (ALOAD_0))
            (32 (ILOAD_2))
            (33 (PUTFIELD (JVM::FIELDCP "mark"
                                        "java.io.ByteArrayInputStream" INT)))
            (36 (RETURN))
            (ENDOFCODE 37))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 36)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
            (4 (ALOAD_0))
            (5 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
            (8 (IF_ICMPGE 34))
            (11 (ALOAD_0))
            (12 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                        (ARRAY BYTE))))
            (15 (ALOAD_0))
            (16 (DUP))
            (17 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (20 (DUP_X1))
            (21 (ICONST_1))
            (22 (IADD))
            (23 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (26 (BALOAD))
            (27 (JVM::SIPUSH 255))
            (30 (JVM::IAND))
            (31 (GOTO 35))
            (34 (ICONST_M1))
            (35 (IRETURN))
            (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP (34 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream"))
                            (STACK)
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "read" (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 116)
       (PARSEDCODE
           (0 (ALOAD_1))
           (1 (IFNONNULL 12))
           (4 (NEW (CLASS "java.lang.NullPointerException")))
           (7 (DUP))
           (8 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.NullPointerException"
                                       NIL VOID)))
           (11 (ATHROW))
           (12 (ILOAD_2))
           (13 (IFLT 40))
           (16 (ILOAD_2))
           (17 (ALOAD_1))
           (18 (ARRAYLENGTH))
           (19 (IF_ICMPGT 40))
           (22 (ILOAD_3))
           (23 (IFLT 40))
           (26 (ILOAD_2))
           (27 (ILOAD_3))
           (28 (IADD))
           (29 (ALOAD_1))
           (30 (ARRAYLENGTH))
           (31 (IF_ICMPGT 40))
           (34 (ILOAD_2))
           (35 (ILOAD_3))
           (36 (IADD))
           (37 (IFGE 48))
           (40 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
           (43 (DUP))
           (44 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
           (47 (ATHROW))
           (48 (ALOAD_0))
           (49 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (52 (ALOAD_0))
           (53 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
           (56 (IF_ICMPLT 61))
           (59 (ICONST_M1))
           (60 (IRETURN))
           (61 (ALOAD_0))
           (62 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (65 (ILOAD_3))
           (66 (IADD))
           (67 (ALOAD_0))
           (68 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
           (71 (IF_ICMPLE 84))
           (74 (ALOAD_0))
           (75 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
           (78 (ALOAD_0))
           (79 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (82 (ISUB))
           (83 (ISTORE_3))
           (84 (ILOAD_3))
           (85 (IFGT 90))
           (88 (ICONST_0))
           (89 (IRETURN))
           (90 (ALOAD_0))
           (91 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayInputStream"
                                       (ARRAY BYTE))))
           (94 (ALOAD_0))
           (95 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
           (98 (ALOAD_1))
           (99 (ILOAD_2))
           (100 (ILOAD_3))
           (101 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                        ((CLASS "java.lang.Object")
                                         INT (CLASS "java.lang.Object")
                                         INT INT)
                                        VOID)))
           (104 (ALOAD_0))
           (105 (DUP))
           (106 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
           (109 (ILOAD_3))
           (110 (IADD))
           (111 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
           (114 (ILOAD_3))
           (115 (IRETURN))
           (ENDOFCODE 116))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (61 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (84 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL))
                 (90 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    (ARRAY BYTE)
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 49)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "pos"
                                       "java.io.ByteArrayInputStream" INT)))
            (4 (JVM::I2L))
            (5 (JVM::LLOAD_1))
            (6 (JVM::LADD))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayInputStream" INT)))
            (11 (JVM::I2L))
            (12 (LCMP))
            (13 (IFLE 27))
            (16 (ALOAD_0))
            (17 (GETFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
            (20 (ALOAD_0))
            (21 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (24 (ISUB))
            (25 (JVM::I2L))
            (26 (JVM::LSTORE_1))
            (27 (JVM::LLOAD_1))
            (28 (LCONST_0))
            (29 (LCMP))
            (30 (IFGE 35))
            (33 (LCONST_0))
            (34 (JVM::LRETURN))
            (35 (ALOAD_0))
            (36 (DUP))
            (37 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (40 (JVM::I2L))
            (41 (JVM::LLOAD_1))
            (42 (JVM::LADD))
            (43 (JVM::L2I))
            (44 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
            (47 (JVM::LLOAD_1))
            (48 (JVM::LRETURN))
            (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP (27 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    LONG TOPX)
                            (STACK)
                            NIL))
                 (35 (FRAME (LOCALS (CLASS "java.io.ByteArrayInputStream")
                                    LONG TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 10)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "count"
                                        "java.io.ByteArrayInputStream" INT)))
             (4 (ALOAD_0))
             (5 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
             (8 (ISUB))
             (9 (IRETURN))
             (ENDOFCODE 10))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD "markSupported" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ICONST_1))
                               (1 (IRETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
             (5 (PUTFIELD (JVM::FIELDCP "mark"
                                        "java.io.ByteArrayInputStream" INT)))
             (8 (RETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "mark"
                                        "java.io.ByteArrayInputStream" INT)))
             (5 (PUTFIELD (JVM::FIELDCP "pos"
                                        "java.io.ByteArrayInputStream" INT)))
             (8 (RETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD "close" (PARAMETERS)
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
             (CODE (MAX_STACK . 0)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 1)
                   (PARSEDCODE (0 (RETURN)) (ENDOFCODE 1))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.ByteArrayOutputStream"
    "java.io.OutputStream"
    (CONSTANT_POOL (STRING "Writing to closed ByteArrayOutputStream")
                   (STRING "Negative initial size: "))
    (FIELDS (FIELD "buf" (ARRAY BYTE)
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "isClosed"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "ensureOpen" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 18)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "isClosed"
                                      "java.io.ByteArrayOutputStream"
                                      BOOLEAN)))
           (4 (IFEQ 17))
           (7 (NEW (CLASS "java.lang.RuntimeException")))
           (10 (DUP))
           (11 (LDC 0))
           (13 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
           (16 (ATHROW))
           (17 (RETURN))
           (ENDOFCODE 18))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream"))
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (BIPUSH 32))
            (3 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.io.ByteArrayOutputStream" (INT)
                                        VOID)))
            (6 (RETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 48)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.io.OutputStream" NIL VOID)))
         (4 (ALOAD_0))
         (5 (ICONST_0))
         (6 (PUTFIELD (JVM::FIELDCP "isClosed"
                                    "java.io.ByteArrayOutputStream"
                                    BOOLEAN)))
         (9 (ILOAD_1))
         (10 (IFGE 40))
         (13 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (16 (DUP))
         (17 (NEW (CLASS "java.lang.StringBuffer")))
         (20 (DUP))
         (21 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (24 (LDC 1))
         (26 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (29 (ILOAD_1))
         (30 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (33 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (36 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (39 (ATHROW))
         (40 (ALOAD_0))
         (41 (ILOAD_1))
         (42 (NEWARRAY BYTE))
         (44 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                     (ARRAY BYTE))))
         (47 (RETURN))
         (ENDOFCODE 48))
       (EXCEPTIONS)
       (STACKMAP (40 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 70)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                       "java.io.ByteArrayOutputStream"
                                       NIL VOID)))
           (4 (ALOAD_0))
           (5 (GETFIELD (JVM::FIELDCP "count"
                                      "java.io.ByteArrayOutputStream" INT)))
           (8 (ICONST_1))
           (9 (IADD))
           (10 (ISTORE_2))
           (11 (ILOAD_2))
           (12 (ALOAD_0))
           (13 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (16 (ARRAYLENGTH))
           (17 (IF_ICMPLE 53))
           (20 (ALOAD_0))
           (21 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (24 (ARRAYLENGTH))
           (25 (ICONST_1))
           (26 (JVM::ISHL))
           (27 (ILOAD_2))
           (28 (INVOKESTATIC (METHODCP "max" "java.lang.Math" (INT INT)
                                       INT)))
           (31 (NEWARRAY BYTE))
           (33 (ASTORE_3))
           (34 (ALOAD_0))
           (35 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (38 (ICONST_0))
           (39 (ALOAD_3))
           (40 (ICONST_0))
           (41 (ALOAD_0))
           (42 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (45 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                       ((CLASS "java.lang.Object")
                                        INT (CLASS "java.lang.Object")
                                        INT INT)
                                       VOID)))
           (48 (ALOAD_0))
           (49 (ALOAD_3))
           (50 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (53 (ALOAD_0))
           (54 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (57 (ALOAD_0))
           (58 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (61 (ILOAD_1))
           (62 (JVM::I2B))
           (63 (BASTORE))
           (64 (ALOAD_0))
           (65 (ILOAD_2))
           (66 (PUTFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (69 (RETURN))
           (ENDOFCODE 70))
       (EXCEPTIONS)
       (STACKMAP (53 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 121)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                      "java.io.ByteArrayOutputStream"
                                      NIL VOID)))
          (4 (ILOAD_2))
          (5 (IFLT 32))
          (8 (ILOAD_2))
          (9 (ALOAD_1))
          (10 (ARRAYLENGTH))
          (11 (IF_ICMPGT 32))
          (14 (ILOAD_3))
          (15 (IFLT 32))
          (18 (ILOAD_2))
          (19 (ILOAD_3))
          (20 (IADD))
          (21 (ALOAD_1))
          (22 (ARRAYLENGTH))
          (23 (IF_ICMPGT 32))
          (26 (ILOAD_2))
          (27 (ILOAD_3))
          (28 (IADD))
          (29 (IFGE 40))
          (32 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
          (35 (DUP))
          (36 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.lang.IndexOutOfBoundsException"
                                       NIL VOID)))
          (39 (ATHROW))
          (40 (ILOAD_3))
          (41 (IFNE 45))
          (44 (RETURN))
          (45 (ALOAD_0))
          (46 (GETFIELD (JVM::FIELDCP "count"
                                      "java.io.ByteArrayOutputStream" INT)))
          (49 (ILOAD_3))
          (50 (IADD))
          (51 (ISTORE 4))
          (53 (ILOAD 4))
          (55 (ALOAD_0))
          (56 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (59 (ARRAYLENGTH))
          (60 (IF_ICMPLE 100))
          (63 (ALOAD_0))
          (64 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (67 (ARRAYLENGTH))
          (68 (ICONST_1))
          (69 (JVM::ISHL))
          (70 (ILOAD 4))
          (72 (INVOKESTATIC (METHODCP "max" "java.lang.Math" (INT INT)
                                      INT)))
          (75 (NEWARRAY BYTE))
          (77 (ASTORE 5))
          (79 (ALOAD_0))
          (80 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (83 (ICONST_0))
          (84 (ALOAD 5))
          (86 (ICONST_0))
          (87 (ALOAD_0))
          (88 (GETFIELD (JVM::FIELDCP "count"
                                      "java.io.ByteArrayOutputStream" INT)))
          (91 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                      ((CLASS "java.lang.Object")
                                       INT (CLASS "java.lang.Object")
                                       INT INT)
                                      VOID)))
          (94 (ALOAD_0))
          (95 (ALOAD 5))
          (97 (PUTFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
          (100 (ALOAD_1))
          (101 (ILOAD_2))
          (102 (ALOAD_0))
          (103 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
          (106 (ALOAD_0))
          (107 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
          (110 (ILOAD_3))
          (111 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                       ((CLASS "java.lang.Object")
                                        INT (CLASS "java.lang.Object")
                                        INT INT)
                                       VOID)))
          (114 (ALOAD_0))
          (115 (ILOAD 4))
          (117 (PUTFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
          (120 (RETURN))
          (ENDOFCODE 121))
       (EXCEPTIONS)
       (STACKMAP (32 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (100 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                     (ARRAY BYTE)
                                     INT INT INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKESPECIAL (METHODCP "ensureOpen"
                                        "java.io.ByteArrayOutputStream"
                                        NIL VOID)))
            (4 (ALOAD_0))
            (5 (ICONST_0))
            (6 (PUTFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
            (9 (RETURN))
            (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toByteArray" (PARAMETERS)
      (RETURNTYPE ARRAY BYTE)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 47)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (GETFIELD (JVM::FIELDCP "isClosed"
                                      "java.io.ByteArrayOutputStream"
                                      BOOLEAN)))
           (4 (IFEQ 24))
           (7 (ALOAD_0))
           (8 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
           (11 (ARRAYLENGTH))
           (12 (ALOAD_0))
           (13 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (16 (IF_ICMPNE 24))
           (19 (ALOAD_0))
           (20 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (23 (ARETURN))
           (24 (ALOAD_0))
           (25 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (28 (NEWARRAY BYTE))
           (30 (ASTORE_1))
           (31 (ALOAD_0))
           (32 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                       (ARRAY BYTE))))
           (35 (ICONST_0))
           (36 (ALOAD_1))
           (37 (ICONST_0))
           (38 (ALOAD_0))
           (39 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (42 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                       ((CLASS "java.lang.Object")
                                        INT (CLASS "java.lang.Object")
                                        INT INT)
                                       VOID)))
           (45 (ALOAD_1))
           (46 (ARETURN))
           (ENDOFCODE 47))
       (EXCEPTIONS)
       (STACKMAP (24 (FRAME (LOCALS (CLASS "java.io.ByteArrayOutputStream")
                                    TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
            (4 (IRETURN))
            (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 17)
       (PARSEDCODE
           (0 (NEW (CLASS "java.lang.String")))
           (3 (DUP))
           (4 (ALOAD_0))
           (5 (GETFIELD (JVM::FIELDCP "buf" "java.io.ByteArrayOutputStream"
                                      (ARRAY BYTE))))
           (8 (ICONST_0))
           (9 (ALOAD_0))
           (10 (GETFIELD (JVM::FIELDCP "count"
                                       "java.io.ByteArrayOutputStream" INT)))
           (13 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                        ((ARRAY BYTE) INT INT)
                                        VOID)))
           (16 (ARETURN))
           (ENDOFCODE 17))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ICONST_1))
                   (2 (PUTFIELD (JVM::FIELDCP "isClosed"
                                              "java.io.ByteArrayOutputStream"
                                              BOOLEAN)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.DataInputStream"
    "java.io.InputStream"
    (CONSTANT_POOL (LONG 4294967295))
    (FIELDS (FIELD "in" (CLASS "java.io.InputStream")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.InputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 10)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.InputStream" NIL VOID)))
                (4 (ALOAD_0))
                (5 (ALOAD_1))
                (6 (PUTFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                           (CLASS "java.io.InputStream"))))
                (9 (RETURN))
                (ENDOFCODE 10))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "read" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 8)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                     (CLASS "java.io.InputStream"))))
          (4 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream" NIL INT)))
          (7 (IRETURN))
          (ENDOFCODE 8))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "read" (PARAMETERS (ARRAY BYTE))
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
       (CODE (MAX_STACK . 4)
             (JVM::MAX_LOCALS . 2)
             (CODE_LENGTH . 12)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                             (CLASS "java.io.InputStream"))))
                  (4 (ALOAD_1))
                  (5 (ICONST_0))
                  (6 (ALOAD_1))
                  (7 (ARRAYLENGTH))
                  (8 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                              ((ARRAY BYTE) INT INT)
                                              INT)))
                  (11 (IRETURN))
                  (ENDOFCODE 12))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
       "read" (PARAMETERS (ARRAY BYTE) INT INT)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
       (CODE (MAX_STACK . 4)
             (JVM::MAX_LOCALS . 4)
             (CODE_LENGTH . 11)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                             (CLASS "java.io.InputStream"))))
                  (4 (ALOAD_1))
                  (5 (ILOAD_2))
                  (6 (ILOAD_3))
                  (7 (INVOKEVIRTUAL (METHODCP "read" "java.io.InputStream"
                                              ((ARRAY BYTE) INT INT)
                                              INT)))
                  (10 (IRETURN))
                  (ENDOFCODE 11))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "readFully" (PARAMETERS (ARRAY BYTE))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (ICONST_0))
            (3 (ALOAD_1))
            (4 (ARRAYLENGTH))
            (5 (INVOKEVIRTUAL (METHODCP "readFully" "java.io.DataInputStream"
                                        ((ARRAY BYTE) INT INT)
                                        VOID)))
            (8 (RETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "readFully"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 60)
       (PARSEDCODE
            (0 (ILOAD_3))
            (1 (IFGE 12))
            (4 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
            (7 (DUP))
            (8 (INVOKESPECIAL (METHODCP "<init>"
                                        "java.lang.IndexOutOfBoundsException"
                                        NIL VOID)))
            (11 (ATHROW))
            (12 (ICONST_0))
            (13 (ISTORE 4))
            (15 (GOTO 53))
            (18 (ALOAD_0))
            (19 (ALOAD_1))
            (20 (ILOAD_2))
            (21 (ILOAD 4))
            (23 (IADD))
            (24 (ILOAD_3))
            (25 (ILOAD 4))
            (27 (ISUB))
            (28 (INVOKEVIRTUAL (METHODCP "read" "java.io.DataInputStream"
                                         ((ARRAY BYTE) INT INT)
                                         INT)))
            (31 (ISTORE 5))
            (33 (ILOAD 5))
            (35 (IFGE 46))
            (38 (NEW (CLASS "java.io.EOFException")))
            (41 (DUP))
            (42 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.io.EOFException" NIL VOID)))
            (45 (ATHROW))
            (46 (ILOAD 4))
            (48 (ILOAD 5))
            (50 (IADD))
            (51 (ISTORE 4))
            (53 (ILOAD 4))
            (55 (ILOAD_3))
            (56 (IF_ICMPLT 18))
            (59 (RETURN))
            (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (18 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT INT INT)
                            (STACK)
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    (ARRAY BYTE)
                                    INT INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "skipBytes" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 32)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_2))
         (2 (ICONST_0))
         (3 (ISTORE_3))
         (4 (GOTO 11))
         (7 (ILOAD_2))
         (8 (ILOAD_3))
         (9 (IADD))
         (10 (ISTORE_2))
         (11 (ILOAD_2))
         (12 (ILOAD_1))
         (13 (IF_ICMPGE 30))
         (16 (ALOAD_0))
         (17 (ILOAD_1))
         (18 (ILOAD_2))
         (19 (ISUB))
         (20 (JVM::I2L))
         (21 (INVOKEVIRTUAL (METHODCP "skip" "java.io.DataInputStream" (LONG)
                                      LONG)))
         (24 (JVM::L2I))
         (25 (DUP))
         (26 (ISTORE_3))
         (27 (IFGT 7))
         (30 (ILOAD_2))
         (31 (IRETURN))
         (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (7 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                   INT INT INT)
                           (STACK)
                           NIL))
                 (11 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    INT INT INT)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readBoolean" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 27)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ILOAD_1))
             (6 (IFGE 17))
             (9 (NEW (CLASS "java.io.EOFException")))
             (12 (DUP))
             (13 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (16 (ATHROW))
             (17 (ILOAD_1))
             (18 (IFEQ 25))
             (21 (ICONST_1))
             (22 (GOTO 26))
             (25 (ICONST_0))
             (26 (IRETURN))
             (ENDOFCODE 27))
        (EXCEPTIONS)
        (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL))
                  (25 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL))
                  (26 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK INT)
                             NIL)))))
     (METHOD
      "readByte" (PARAMETERS)
      (RETURNTYPE . BYTE)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 20)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ILOAD_1))
             (6 (IFGE 17))
             (9 (NEW (CLASS "java.io.EOFException")))
             (12 (DUP))
             (13 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (16 (ATHROW))
             (17 (ILOAD_1))
             (18 (JVM::I2B))
             (19 (IRETURN))
             (ENDOFCODE 20))
        (EXCEPTIONS)
        (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "readUnsignedByte" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ILOAD_1))
             (6 (IFGE 17))
             (9 (NEW (CLASS "java.io.EOFException")))
             (12 (DUP))
             (13 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (16 (ATHROW))
             (17 (ILOAD_1))
             (18 (IRETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS)
        (STACKMAP (17 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "readShort" (PARAMETERS)
      (RETURNTYPE . SHORT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "readUnsignedShort"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (JVM::I2S))
             (5 (IRETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readUnsignedShort" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 33)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (ISTORE_1))
             (5 (ALOAD_0))
             (6 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
             (9 (ISTORE_2))
             (10 (ILOAD_1))
             (11 (ILOAD_2))
             (12 (JVM::IOR))
             (13 (IFGE 24))
             (16 (NEW (CLASS "java.io.EOFException")))
             (19 (DUP))
             (20 (INVOKESPECIAL (METHODCP "<init>"
                                          "java.io.EOFException" NIL VOID)))
             (23 (ATHROW))
             (24 (ILOAD_1))
             (25 (BIPUSH 8))
             (27 (JVM::ISHL))
             (28 (ILOAD_2))
             (29 (ICONST_0))
             (30 (JVM::ISHL))
             (31 (IADD))
             (32 (IRETURN))
             (ENDOFCODE 33))
        (EXCEPTIONS)
        (STACKMAP (24 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                     INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "readChar" (PARAMETERS)
      (RETURNTYPE . CHAR)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "readUnsignedShort"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (JVM::I2C))
             (5 (IRETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readInt" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 60)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (INVOKEVIRTUAL (METHODCP "read"
                                        "java.io.DataInputStream" NIL INT)))
            (4 (ISTORE_1))
            (5 (ALOAD_0))
            (6 (INVOKEVIRTUAL (METHODCP "read"
                                        "java.io.DataInputStream" NIL INT)))
            (9 (ISTORE_2))
            (10 (ALOAD_0))
            (11 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
            (14 (ISTORE_3))
            (15 (ALOAD_0))
            (16 (INVOKEVIRTUAL (METHODCP "read"
                                         "java.io.DataInputStream" NIL INT)))
            (19 (ISTORE 4))
            (21 (ILOAD_1))
            (22 (ILOAD_2))
            (23 (JVM::IOR))
            (24 (ILOAD_3))
            (25 (JVM::IOR))
            (26 (ILOAD 4))
            (28 (JVM::IOR))
            (29 (IFGE 40))
            (32 (NEW (CLASS "java.io.EOFException")))
            (35 (DUP))
            (36 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.io.EOFException" NIL VOID)))
            (39 (ATHROW))
            (40 (ILOAD_1))
            (41 (BIPUSH 24))
            (43 (JVM::ISHL))
            (44 (ILOAD_2))
            (45 (BIPUSH 16))
            (47 (JVM::ISHL))
            (48 (IADD))
            (49 (ILOAD_3))
            (50 (BIPUSH 8))
            (52 (JVM::ISHL))
            (53 (IADD))
            (54 (ILOAD 4))
            (56 (ICONST_0))
            (57 (JVM::ISHL))
            (58 (IADD))
            (59 (IRETURN))
            (ENDOFCODE 60))
       (EXCEPTIONS)
       (STACKMAP (40 (FRAME (LOCALS (CLASS "java.io.DataInputStream")
                                    INT INT INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "readLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 6)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "readInt"
                                         "java.io.DataInputStream" NIL INT)))
             (4 (JVM::I2L))
             (5 (BIPUSH 32))
             (7 (JVM::LSHL))
             (8 (ALOAD_0))
             (9 (INVOKEVIRTUAL (METHODCP "readInt"
                                         "java.io.DataInputStream" NIL INT)))
             (12 (JVM::I2L))
             (13 (JVM::LDC2_W 0))
             (16 (JVM::LAND))
             (17 (JVM::LADD))
             (18 (JVM::LRETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "readUTF" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 5)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESTATIC (METHODCP "readUTF" "java.io.DataInputStream"
                                          ((CLASS "java.io.DataInput"))
                                          (CLASS "java.lang.String"))))
               (4 (ARETURN))
               (ENDOFCODE 5))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "readUTF"
      (PARAMETERS (CLASS "java.io.DataInput"))
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 328)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEINTERFACE (METHODCP "readUnsignedShort"
                                      "java.io.DataInput" NIL INT)
                            1))
        (6 (ISTORE_1))
        (7 (NEW (CLASS "java.lang.StringBuffer")))
        (10 (DUP))
        (11 (ILOAD_1))
        (12 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer" (INT)
                                     VOID)))
        (15 (ASTORE_2))
        (16 (ILOAD_1))
        (17 (NEWARRAY BYTE))
        (19 (ASTORE_3))
        (20 (ICONST_0))
        (21 (ISTORE 7))
        (23 (ALOAD_0))
        (24 (ALOAD_3))
        (25 (ICONST_0))
        (26 (ILOAD_1))
        (27 (INVOKEINTERFACE (METHODCP "readFully" "java.io.DataInput"
                                       ((ARRAY BYTE) INT INT)
                                       VOID)
                             4))
        (32 (GOTO 313))
        (35 (ALOAD_3))
        (36 (ILOAD 7))
        (38 (BALOAD))
        (39 (JVM::SIPUSH 255))
        (42 (JVM::IAND))
        (43 (ISTORE 4))
        (45 (ILOAD 4))
        (47 (ICONST_4))
        (48 (JVM::ISHR))
        (49
         (JVM::TABLESWITCH
           (JVM::TABLESWITCHINFO 305 (0 . 14)
                                 (124 124 124 124 124 124
                                      124 124 305 305 305 305 138 138 206))))
        (124 (IINC 7 1))
        (127 (ALOAD_2))
        (128 (ILOAD 4))
        (130 (JVM::I2C))
        (131
            (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (134 (POP))
        (135 (GOTO 313))
        (138 (IINC 7 2))
        (141 (ILOAD 7))
        (143 (ILOAD_1))
        (144 (IF_ICMPLE 155))
        (147 (NEW (CLASS "java.io.UTFDataFormatException")))
        (150 (DUP))
        (151 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (154 (ATHROW))
        (155 (ALOAD_3))
        (156 (ILOAD 7))
        (158 (ICONST_1))
        (159 (ISUB))
        (160 (BALOAD))
        (161 (ISTORE 5))
        (163 (ILOAD 5))
        (165 (JVM::SIPUSH 192))
        (168 (JVM::IAND))
        (169 (JVM::SIPUSH 128))
        (172 (IF_ICMPEQ 183))
        (175 (NEW (CLASS "java.io.UTFDataFormatException")))
        (178 (DUP))
        (179 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (182 (ATHROW))
        (183 (ALOAD_2))
        (184 (ILOAD 4))
        (186 (BIPUSH 31))
        (188 (JVM::IAND))
        (189 (BIPUSH 6))
        (191 (JVM::ISHL))
        (192 (ILOAD 5))
        (194 (BIPUSH 63))
        (196 (JVM::IAND))
        (197 (JVM::IOR))
        (198 (JVM::I2C))
        (199
            (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (202 (POP))
        (203 (GOTO 313))
        (206 (IINC 7 3))
        (209 (ILOAD 7))
        (211 (ILOAD_1))
        (212 (IF_ICMPLE 223))
        (215 (NEW (CLASS "java.io.UTFDataFormatException")))
        (218 (DUP))
        (219 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (222 (ATHROW))
        (223 (ALOAD_3))
        (224 (ILOAD 7))
        (226 (ICONST_2))
        (227 (ISUB))
        (228 (BALOAD))
        (229 (ISTORE 5))
        (231 (ALOAD_3))
        (232 (ILOAD 7))
        (234 (ICONST_1))
        (235 (ISUB))
        (236 (BALOAD))
        (237 (ISTORE 6))
        (239 (ILOAD 5))
        (241 (JVM::SIPUSH 192))
        (244 (JVM::IAND))
        (245 (JVM::SIPUSH 128))
        (248 (IF_ICMPNE 263))
        (251 (ILOAD 6))
        (253 (JVM::SIPUSH 192))
        (256 (JVM::IAND))
        (257 (JVM::SIPUSH 128))
        (260 (IF_ICMPEQ 271))
        (263 (NEW (CLASS "java.io.UTFDataFormatException")))
        (266 (DUP))
        (267 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (270 (ATHROW))
        (271 (ALOAD_2))
        (272 (ILOAD 4))
        (274 (BIPUSH 15))
        (276 (JVM::IAND))
        (277 (BIPUSH 12))
        (279 (JVM::ISHL))
        (280 (ILOAD 5))
        (282 (BIPUSH 63))
        (284 (JVM::IAND))
        (285 (BIPUSH 6))
        (287 (JVM::ISHL))
        (288 (JVM::IOR))
        (289 (ILOAD 6))
        (291 (BIPUSH 63))
        (293 (JVM::IAND))
        (294 (ICONST_0))
        (295 (JVM::ISHL))
        (296 (JVM::IOR))
        (297 (JVM::I2C))
        (298
            (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (CHAR)
                                     (CLASS "java.lang.StringBuffer"))))
        (301 (POP))
        (302 (GOTO 313))
        (305 (NEW (CLASS "java.io.UTFDataFormatException")))
        (308 (DUP))
        (309 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.io.UTFDataFormatException"
                                      NIL VOID)))
        (312 (ATHROW))
        (313 (ILOAD 7))
        (315 (ILOAD_1))
        (316 (IF_ICMPLT 35))
        (319 (NEW (CLASS "java.lang.String")))
        (322 (DUP))
        (323 (ALOAD_2))
        (324 (INVOKESPECIAL (METHODCP "<init>" "java.lang.String"
                                      ((CLASS "java.lang.StringBuffer"))
                                      VOID)))
        (327 (ARETURN))
        (ENDOFCODE 328))
       (EXCEPTIONS)
       (STACKMAP (35 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (ARRAY BYTE)
                                    TOPX TOPX TOPX INT)
                            (STACK)
                            NIL))
                 (124 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (138 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (155 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (183 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT INT TOPX INT)
                             (STACK)
                             NIL))
                 (206 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (223 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (263 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (271 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (305 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     INT TOPX TOPX INT)
                             (STACK)
                             NIL))
                 (313 (FRAME (LOCALS (CLASS "java.io.DataInput")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (ARRAY BYTE)
                                     TOPX TOPX TOPX INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "skip" (PARAMETERS LONG)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 9)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                         (CLASS "java.io.InputStream"))))
              (4 (JVM::LLOAD_1))
              (5 (INVOKEVIRTUAL (METHODCP "skip" "java.io.InputStream" (LONG)
                                          LONG)))
              (8 (JVM::LRETURN))
              (ENDOFCODE 9))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "available" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 1)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 8)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                            (CLASS "java.io.InputStream"))))
                 (4 (INVOKEVIRTUAL (METHODCP "available"
                                             "java.io.InputStream" NIL INT)))
                 (7 (IRETURN))
                 (ENDOFCODE 8))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                           (CLASS "java.io.InputStream"))))
                (4 (INVOKEVIRTUAL (METHODCP "close"
                                            "java.io.InputStream" NIL VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "mark" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                          (CLASS "java.io.InputStream"))))
               (4 (ILOAD_1))
               (5 (INVOKEVIRTUAL (METHODCP "mark" "java.io.InputStream" (INT)
                                           VOID)))
               (8 (RETURN))
               (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "reset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 8)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                           (CLASS "java.io.InputStream"))))
                (4 (INVOKEVIRTUAL (METHODCP "reset"
                                            "java.io.InputStream" NIL VOID)))
                (7 (RETURN))
                (ENDOFCODE 8))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "markSupported" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 8)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "in" "java.io.DataInputStream"
                                        (CLASS "java.io.InputStream"))))
             (4 (INVOKEVIRTUAL (METHODCP "markSupported"
                                         "java.io.InputStream" NIL BOOLEAN)))
             (7 (IRETURN))
             (ENDOFCODE 8))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES "java.io.DataInput")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.io.DataInput"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "readFully" (PARAMETERS (ARRAY BYTE))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readFully"
                           (PARAMETERS (ARRAY BYTE) INT INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "skipBytes" (PARAMETERS INT)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readBoolean" (PARAMETERS)
                           (RETURNTYPE . BOOLEAN)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readByte" (PARAMETERS)
                           (RETURNTYPE . BYTE)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readUnsignedByte" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readShort" (PARAMETERS)
                           (RETURNTYPE . SHORT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readUnsignedShort" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readChar" (PARAMETERS)
                           (RETURNTYPE . CHAR)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readInt" (PARAMETERS)
                           (RETURNTYPE . INT)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readLong" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "readUTF" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.io.DataOutputStream"
    "java.io.OutputStream" (CONSTANT_POOL)
    (FIELDS (FIELD "out" (CLASS "java.io.OutputStream")
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.io.OutputStream"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 10)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESPECIAL (METHODCP "<init>"
                                           "java.io.OutputStream" NIL VOID)))
               (4 (ALOAD_0))
               (5 (ALOAD_1))
               (6 (PUTFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                          (CLASS "java.io.OutputStream"))))
               (9 (RETURN))
               (ENDOFCODE 10))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "write" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 9)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                        (CLASS "java.io.OutputStream"))))
             (4 (ILOAD_1))
             (5 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream" (INT)
                                         VOID)))
             (8 (RETURN))
             (ENDOFCODE 9))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "write"
      (PARAMETERS (ARRAY BYTE) INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (JVM::MAX_LOCALS . 4)
            (CODE_LENGTH . 11)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                            (CLASS "java.io.OutputStream"))))
                 (4 (ALOAD_1))
                 (5 (ILOAD_2))
                 (6 (ILOAD_3))
                 (7 (INVOKEVIRTUAL (METHODCP "write" "java.io.OutputStream"
                                             ((ARRAY BYTE) INT INT)
                                             VOID)))
                 (10 (RETURN))
                 (ENDOFCODE 11))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "flush" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                          (CLASS "java.io.OutputStream"))))
               (4 (INVOKEVIRTUAL (METHODCP "flush"
                                           "java.io.OutputStream" NIL VOID)))
               (7 (RETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "close" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "out" "java.io.DataOutputStream"
                                          (CLASS "java.io.OutputStream"))))
               (4 (INVOKEVIRTUAL (METHODCP "close"
                                           "java.io.OutputStream" NIL VOID)))
               (7 (RETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "writeBoolean" (PARAMETERS BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (IFEQ 9))
        (5 (ICONST_1))
        (6 (GOTO 10))
        (9 (ICONST_0))
        (10 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (13 (RETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP (9 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                   INT)
                           (STACK (CLASS "java.io.DataOutputStream"))
                           NIL))
                 (10 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                    INT)
                            (STACK INT (CLASS "java.io.DataOutputStream"))
                            NIL)))))
     (METHOD
      "writeByte" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ILOAD_1))
         (2 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
         (5 (RETURN))
         (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeShort" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (BIPUSH 8))
        (4 (JVM::IUSHR))
        (5 (JVM::SIPUSH 255))
        (8 (JVM::IAND))
        (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                    VOID)))
        (12 (ALOAD_0))
        (13 (ILOAD_1))
        (14 (ICONST_0))
        (15 (JVM::IUSHR))
        (16 (JVM::SIPUSH 255))
        (19 (JVM::IAND))
        (20 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (23 (RETURN))
        (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeChar" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 24)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (BIPUSH 8))
        (4 (JVM::IUSHR))
        (5 (JVM::SIPUSH 255))
        (8 (JVM::IAND))
        (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                    VOID)))
        (12 (ALOAD_0))
        (13 (ILOAD_1))
        (14 (ICONST_0))
        (15 (JVM::IUSHR))
        (16 (JVM::SIPUSH 255))
        (19 (JVM::IAND))
        (20 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (23 (RETURN))
        (ENDOFCODE 24))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeInt" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 48)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ILOAD_1))
        (2 (BIPUSH 24))
        (4 (JVM::IUSHR))
        (5 (JVM::SIPUSH 255))
        (8 (JVM::IAND))
        (9 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                    VOID)))
        (12 (ALOAD_0))
        (13 (ILOAD_1))
        (14 (BIPUSH 16))
        (16 (JVM::IUSHR))
        (17 (JVM::SIPUSH 255))
        (20 (JVM::IAND))
        (21 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (24 (ALOAD_0))
        (25 (ILOAD_1))
        (26 (BIPUSH 8))
        (28 (JVM::IUSHR))
        (29 (JVM::SIPUSH 255))
        (32 (JVM::IAND))
        (33 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (36 (ALOAD_0))
        (37 (ILOAD_1))
        (38 (ICONST_0))
        (39 (JVM::IUSHR))
        (40 (JVM::SIPUSH 255))
        (43 (JVM::IAND))
        (44 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (47 (RETURN))
        (ENDOFCODE 48))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeLong" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 104)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (JVM::LLOAD_1))
        (2 (BIPUSH 56))
        (4 (JVM::LUSHR))
        (5 (JVM::L2I))
        (6 (JVM::SIPUSH 255))
        (9 (JVM::IAND))
        (10 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (13 (ALOAD_0))
        (14 (JVM::LLOAD_1))
        (15 (BIPUSH 48))
        (17 (JVM::LUSHR))
        (18 (JVM::L2I))
        (19 (JVM::SIPUSH 255))
        (22 (JVM::IAND))
        (23 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (26 (ALOAD_0))
        (27 (JVM::LLOAD_1))
        (28 (BIPUSH 40))
        (30 (JVM::LUSHR))
        (31 (JVM::L2I))
        (32 (JVM::SIPUSH 255))
        (35 (JVM::IAND))
        (36 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (39 (ALOAD_0))
        (40 (JVM::LLOAD_1))
        (41 (BIPUSH 32))
        (43 (JVM::LUSHR))
        (44 (JVM::L2I))
        (45 (JVM::SIPUSH 255))
        (48 (JVM::IAND))
        (49 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (52 (ALOAD_0))
        (53 (JVM::LLOAD_1))
        (54 (BIPUSH 24))
        (56 (JVM::LUSHR))
        (57 (JVM::L2I))
        (58 (JVM::SIPUSH 255))
        (61 (JVM::IAND))
        (62 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (65 (ALOAD_0))
        (66 (JVM::LLOAD_1))
        (67 (BIPUSH 16))
        (69 (JVM::LUSHR))
        (70 (JVM::L2I))
        (71 (JVM::SIPUSH 255))
        (74 (JVM::IAND))
        (75 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (78 (ALOAD_0))
        (79 (JVM::LLOAD_1))
        (80 (BIPUSH 8))
        (82 (JVM::LUSHR))
        (83 (JVM::L2I))
        (84 (JVM::SIPUSH 255))
        (87 (JVM::IAND))
        (88 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (91 (ALOAD_0))
        (92 (JVM::LLOAD_1))
        (93 (ICONST_0))
        (94 (JVM::LUSHR))
        (95 (JVM::L2I))
        (96 (JVM::SIPUSH 255))
        (99 (JVM::IAND))
        (100
            (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (103 (RETURN))
        (ENDOFCODE 104))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "writeChars"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 51)
       (PARSEDCODE
        (0 (ALOAD_1))
        (1 (INVOKEVIRTUAL (METHODCP "length" "java.lang.String" NIL INT)))
        (4 (ISTORE_2))
        (5 (ICONST_0))
        (6 (ISTORE_3))
        (7 (GOTO 45))
        (10 (ALOAD_1))
        (11 (ILOAD_3))
        (12 (INVOKEVIRTUAL (METHODCP "charAt" "java.lang.String" (INT)
                                     CHAR)))
        (15 (ISTORE 4))
        (17 (ALOAD_0))
        (18 (ILOAD 4))
        (20 (BIPUSH 8))
        (22 (JVM::IUSHR))
        (23 (JVM::SIPUSH 255))
        (26 (JVM::IAND))
        (27 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (30 (ALOAD_0))
        (31 (ILOAD 4))
        (33 (ICONST_0))
        (34 (JVM::IUSHR))
        (35 (JVM::SIPUSH 255))
        (38 (JVM::IAND))
        (39 (INVOKEVIRTUAL (METHODCP "write" "java.io.DataOutputStream" (INT)
                                     VOID)))
        (42 (IINC 3 1))
        (45 (ILOAD_3))
        (46 (ILOAD_2))
        (47 (IF_ICMPLT 10))
        (50 (RETURN))
        (ENDOFCODE 51))
       (EXCEPTIONS)
       (STACKMAP (10 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL))
                 (45 (FRAME (LOCALS (CLASS "java.io.DataOutputStream")
                                    (CLASS "java.lang.String")
                                    INT INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (ALOAD_1))
             (1 (ALOAD_0))
             (2 (INVOKESTATIC (METHODCP "writeUTF" "java.io.DataOutputStream"
                                        ((CLASS "java.lang.String")
                                         (CLASS "java.io.DataOutput"))
                                        INT)))
             (5 (POP))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "writeUTF"
      (PARAMETERS (CLASS "java.lang.String")
                  (CLASS "java.io.DataOutput"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (INVOKESTATIC (METHODCP "writeUTF" "com.sun.cldc.io.GeneralBase"
                                     ((CLASS "java.lang.String")
                                      (CLASS "java.io.DataOutput"))
                                     INT)))
          (5 (IRETURN))
          (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES "java.io.DataOutput")
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.io.DataOutput"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "write" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "write" (PARAMETERS (ARRAY BYTE))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "write"
                           (PARAMETERS (ARRAY BYTE) INT INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeBoolean" (PARAMETERS BOOLEAN)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeByte" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeShort" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeChar" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeInt" (PARAMETERS INT)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeLong" (PARAMETERS LONG)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeChars"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "writeUTF"
                           (PARAMETERS (CLASS "java.lang.String"))
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.io.EOFException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.UTFDataFormatException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.io.InterruptedIOException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS (FIELD "bytesTransferred"
                   INT (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 10)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.io.IOException" NIL VOID)))
           (4 (ALOAD_0))
           (5 (ICONST_0))
           (6 (PUTFIELD (JVM::FIELDCP "bytesTransferred"
                                      "java.io.InterruptedIOException" INT)))
           (9 (RETURN))
           (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 11)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ALOAD_1))
           (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                       ((CLASS "java.lang.String"))
                                       VOID)))
           (5 (ALOAD_0))
           (6 (ICONST_0))
           (7 (PUTFIELD (JVM::FIELDCP "bytesTransferred"
                                      "java.io.InterruptedIOException" INT)))
           (10 (RETURN))
           (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Hashtable$HashtableEnumerator"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "HashtableEnumerator"))
    (FIELDS (FIELD "keys" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "index" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "table"
                   (ARRAY (CLASS "java.util.HashtableEntry"))
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "entry"
                   (CLASS "java.util.HashtableEntry")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "this$0" (CLASS "java.util.Hashtable")
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.util.Hashtable")
                  (ARRAY (CLASS "java.util.HashtableEntry"))
                  BOOLEAN)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 26)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
        (4 (ALOAD_0))
        (5 (ALOAD_1))
        (6 (PUTFIELD (JVM::FIELDCP "this$0"
                                   "java.util.Hashtable$HashtableEnumerator"
                                   (CLASS "java.util.Hashtable"))))
        (9 (ALOAD_0))
        (10 (ALOAD_2))
        (11 (PUTFIELD
                 (JVM::FIELDCP "table"
                               "java.util.Hashtable$HashtableEnumerator"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (14 (ALOAD_0))
        (15 (ILOAD_3))
        (16 (PUTFIELD (JVM::FIELDCP "keys"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    BOOLEAN)))
        (19 (ALOAD_0))
        (20 (ALOAD_2))
        (21 (ARRAYLENGTH))
        (22 (PUTFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (25 (RETURN))
        (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "hasMoreElements" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 44)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "entry"
                                   "java.util.Hashtable$HashtableEnumerator"
                                   (CLASS "java.util.HashtableEntry"))))
        (4 (IFNULL 28))
        (7 (ICONST_1))
        (8 (IRETURN))
        (9 (ALOAD_0))
        (10 (ALOAD_0))
        (11 (GETFIELD
                 (JVM::FIELDCP "table"
                               "java.util.Hashtable$HashtableEnumerator"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (14 (ALOAD_0))
        (15 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (18 (AALOAD))
        (19 (DUP_X1))
        (20 (PUTFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (23 (IFNULL 28))
        (26 (ICONST_1))
        (27 (IRETURN))
        (28 (ALOAD_0))
        (29 (DUP))
        (30 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (33 (DUP_X1))
        (34 (ICONST_1))
        (35 (ISUB))
        (36 (PUTFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (39 (IFGT 9))
        (42 (ICONST_0))
        (43 (IRETURN))
        (ENDOFCODE 44))
       (EXCEPTIONS)
       (STACKMAP
        (9 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator"))
                  (STACK)
                  NIL))
        (28 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator"))
                   (STACK)
                   NIL)))))
     (METHOD
      "nextElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 90)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "entry"
                                   "java.util.Hashtable$HashtableEnumerator"
                                   (CLASS "java.util.HashtableEntry"))))
        (4 (IFNONNULL 41))
        (7 (GOTO 10))
        (10 (ALOAD_0))
        (11 (DUP))
        (12 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (15 (DUP_X1))
        (16 (ICONST_1))
        (17 (ISUB))
        (18 (PUTFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (21 (IFLE 41))
        (24 (ALOAD_0))
        (25 (ALOAD_0))
        (26 (GETFIELD
                 (JVM::FIELDCP "table"
                               "java.util.Hashtable$HashtableEnumerator"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (29 (ALOAD_0))
        (30 (GETFIELD (JVM::FIELDCP "index"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    INT)))
        (33 (AALOAD))
        (34 (DUP_X1))
        (35 (PUTFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (38 (IFNULL 10))
        (41 (ALOAD_0))
        (42 (GETFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (45 (IFNULL 80))
        (48 (ALOAD_0))
        (49 (GETFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (52 (ASTORE_1))
        (53 (ALOAD_0))
        (54 (ALOAD_1))
        (55 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                    (CLASS "java.util.HashtableEntry"))))
        (58 (PUTFIELD (JVM::FIELDCP "entry"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    (CLASS "java.util.HashtableEntry"))))
        (61 (ALOAD_0))
        (62 (GETFIELD (JVM::FIELDCP "keys"
                                    "java.util.Hashtable$HashtableEnumerator"
                                    BOOLEAN)))
        (65 (IFEQ 75))
        (68 (ALOAD_1))
        (69 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (72 (GOTO 79))
        (75 (ALOAD_1))
        (76 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (79 (ARETURN))
        (80 (NEW (CLASS "java.util.NoSuchElementException")))
        (83 (DUP))
        (84 (LDC 0))
        (86 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.util.NoSuchElementException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (89 (ATHROW))
        (ENDOFCODE 90))
       (EXCEPTIONS)
       (STACKMAP
         (10 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            TOPX)
                    (STACK)
                    NIL))
         (41 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            TOPX)
                    (STACK)
                    NIL))
         (75 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            (CLASS "java.util.HashtableEntry"))
                    (STACK)
                    NIL))
         (79 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            (CLASS "java.util.HashtableEntry"))
                    (STACK (CLASS "java.lang.Object"))
                    NIL))
         (80 (FRAME (LOCALS (CLASS "java.util.Hashtable$HashtableEnumerator")
                            TOPX)
                    (STACK)
                    NIL))))))
    (INTERFACES "java.util.Enumeration")
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Hashtable" "java.lang.Object"
    (CONSTANT_POOL (INT 75)
                   (INT 2147483647)
                   (STRING "{")
                   (STRING "=")
                   (STRING ", ")
                   (STRING "}"))
    (FIELDS (FIELD "table"
                   (ARRAY (CLASS "java.util.HashtableEntry"))
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)
                   -1)
            (FIELD "count" INT
                   (ACCESSFLAGS *CLASS* *PRIVATE* JVM::*TRANSIENT*)
                   -1)
            (FIELD "threshold"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "loadFactorPercent" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 42)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
         (4 (ILOAD_1))
         (5 (IFGE 16))
         (8 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (11 (DUP))
         (12 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      NIL VOID)))
         (15 (ATHROW))
         (16 (ILOAD_1))
         (17 (IFNE 22))
         (20 (ICONST_1))
         (21 (ISTORE_1))
         (22 (ALOAD_0))
         (23 (ILOAD_1))
         (24 (ANEWARRAY (CLASS "java.util.HashtableEntry")))
         (27 (PUTFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
         (30 (ALOAD_0))
         (31 (ILOAD_1))
         (32 (BIPUSH 75))
         (34 (IMUL))
         (35 (BIPUSH 100))
         (37 (IDIV))
         (38 (PUTFIELD (JVM::FIELDCP "threshold" "java.util.Hashtable" INT)))
         (41 (RETURN))
         (ENDOFCODE 42))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                    INT)
                            (STACK)
                            NIL))
                 (22 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 7)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (BIPUSH 11))
             (3 (INVOKESPECIAL (METHODCP "<init>" "java.util.Hashtable" (INT)
                                         VOID)))
             (6 (RETURN))
             (ENDOFCODE 7))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
              (4 (IRETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "isEmpty" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 13)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
              (4 (IFNE 11))
              (7 (ICONST_1))
              (8 (GOTO 12))
              (11 (ICONST_0))
              (12 (IRETURN))
              (ENDOFCODE 13))
         (EXCEPTIONS)
         (STACKMAP (11 (FRAME (LOCALS (CLASS "java.util.Hashtable"))
                              (STACK)
                              NIL))
                   (12 (FRAME (LOCALS (CLASS "java.util.Hashtable"))
                              (STACK INT)
                              NIL)))))
     (METHOD
      "keys" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Enumeration")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (NEW (CLASS "java.util.Hashtable$HashtableEnumerator")))
        (3 (DUP))
        (4 (ALOAD_0))
        (5 (ALOAD_0))
        (6 (GETFIELD
                (JVM::FIELDCP "table" "java.util.Hashtable"
                              (ARRAY (CLASS "java.util.HashtableEntry")))))
        (9 (ICONST_1))
        (10
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.util.Hashtable$HashtableEnumerator"
                                  ((CLASS "java.util.Hashtable")
                                   (ARRAY (CLASS "java.util.HashtableEntry"))
                                   BOOLEAN)
                                  VOID)))
        (13 (ARETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "elements" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Enumeration")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 14)
       (PARSEDCODE
        (0 (NEW (CLASS "java.util.Hashtable$HashtableEnumerator")))
        (3 (DUP))
        (4 (ALOAD_0))
        (5 (ALOAD_0))
        (6 (GETFIELD
                (JVM::FIELDCP "table" "java.util.Hashtable"
                              (ARRAY (CLASS "java.util.HashtableEntry")))))
        (9 (ICONST_0))
        (10
         (INVOKESPECIAL (METHODCP "<init>"
                                  "java.util.Hashtable$HashtableEnumerator"
                                  ((CLASS "java.util.Hashtable")
                                   (ARRAY (CLASS "java.util.HashtableEntry"))
                                   BOOLEAN)
                                  VOID)))
        (13 (ARETURN))
        (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "contains"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 67)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 12))
         (4 (NEW (CLASS "java.lang.NullPointerException")))
         (7 (DUP))
         (8 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.NullPointerException"
                                     NIL VOID)))
         (11 (ATHROW))
         (12 (ALOAD_0))
         (13 (GETFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
         (16 (ASTORE_2))
         (17 (ALOAD_2))
         (18 (ARRAYLENGTH))
         (19 (ISTORE_3))
         (20 (GOTO 57))
         (23 (ALOAD_2))
         (24 (ILOAD_3))
         (25 (AALOAD))
         (26 (ASTORE 4))
         (28 (GOTO 52))
         (31 (ALOAD 4))
         (33 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (36 (ALOAD_1))
         (37 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (40 (IFEQ 45))
         (43 (ICONST_1))
         (44 (IRETURN))
         (45 (ALOAD 4))
         (47 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (50 (ASTORE 4))
         (52 (ALOAD 4))
         (54 (IFNONNULL 31))
         (57 (ILOAD_3))
         (58 (DUP))
         (59 (ICONST_1))
         (60 (ISUB))
         (61 (ISTORE_3))
         (62 (IFGT 23))
         (65 (ICONST_0))
         (66 (IRETURN))
         (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (23 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT TOPX)
                       (STACK)
                       NIL))
            (31 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (45 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (52 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (57 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT TOPX)
                       (STACK)
                       NIL)))))
     (METHOD
      "containsKey"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 65)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ASTORE_2))
         (5 (ALOAD_1))
         (6 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (LDC 1))
         (13 (JVM::IAND))
         (14 (ALOAD_2))
         (15 (ARRAYLENGTH))
         (16 (IREM))
         (17 (ISTORE 4))
         (19 (ALOAD_2))
         (20 (ILOAD 4))
         (22 (AALOAD))
         (23 (ASTORE 5))
         (25 (GOTO 58))
         (28 (ALOAD 5))
         (30 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (33 (ILOAD_3))
         (34 (IF_ICMPNE 51))
         (37 (ALOAD 5))
         (39 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (42 (ALOAD_1))
         (43 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (46 (IFEQ 51))
         (49 (ICONST_1))
         (50 (IRETURN))
         (51 (ALOAD 5))
         (53 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (56 (ASTORE 5))
         (58 (ALOAD 5))
         (60 (IFNONNULL 28))
         (63 (ICONST_0))
         (64 (IRETURN))
         (ENDOFCODE 65))
       (EXCEPTIONS)
       (STACKMAP
            (28 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (51 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (58 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL)))))
     (METHOD
      "get"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 69)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ASTORE_2))
         (5 (ALOAD_1))
         (6 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (LDC 1))
         (13 (JVM::IAND))
         (14 (ALOAD_2))
         (15 (ARRAYLENGTH))
         (16 (IREM))
         (17 (ISTORE 4))
         (19 (ALOAD_2))
         (20 (ILOAD 4))
         (22 (AALOAD))
         (23 (ASTORE 5))
         (25 (GOTO 62))
         (28 (ALOAD 5))
         (30 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (33 (ILOAD_3))
         (34 (IF_ICMPNE 55))
         (37 (ALOAD 5))
         (39 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (42 (ALOAD_1))
         (43 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (46 (IFEQ 55))
         (49 (ALOAD 5))
         (51 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (54 (ARETURN))
         (55 (ALOAD 5))
         (57 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (60 (ASTORE 5))
         (62 (ALOAD 5))
         (64 (IFNONNULL 28))
         (67 (ACONST_NULL))
         (68 (ARETURN))
         (ENDOFCODE 69))
       (EXCEPTIONS)
       (STACKMAP
            (28 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (55 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (62 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL)))))
     (METHOD
      "rehash" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 111)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ARRAYLENGTH))
         (5 (ISTORE_1))
         (6 (ALOAD_0))
         (7 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (10 (ASTORE_2))
         (11 (ILOAD_1))
         (12 (ICONST_2))
         (13 (IMUL))
         (14 (ICONST_1))
         (15 (IADD))
         (16 (ISTORE_3))
         (17 (ILOAD_3))
         (18 (ANEWARRAY (CLASS "java.util.HashtableEntry")))
         (21 (ASTORE 4))
         (23 (ALOAD_0))
         (24 (ILOAD_3))
         (25 (BIPUSH 75))
         (27 (IMUL))
         (28 (BIPUSH 100))
         (30 (IDIV))
         (31 (PUTFIELD (JVM::FIELDCP "threshold" "java.util.Hashtable" INT)))
         (34 (ALOAD_0))
         (35 (ALOAD 4))
         (37 (PUTFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
         (40 (ILOAD_1))
         (41 (ISTORE 5))
         (43 (GOTO 100))
         (46 (ALOAD_2))
         (47 (ILOAD 5))
         (49 (AALOAD))
         (50 (ASTORE 6))
         (52 (GOTO 95))
         (55 (ALOAD 6))
         (57 (ASTORE 7))
         (59 (ALOAD 6))
         (61 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (64 (ASTORE 6))
         (66 (ALOAD 7))
         (68 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (71 (LDC 1))
         (73 (JVM::IAND))
         (74 (ILOAD_3))
         (75 (IREM))
         (76 (ISTORE 8))
         (78 (ALOAD 7))
         (80 (ALOAD 4))
         (82 (ILOAD 8))
         (84 (AALOAD))
         (85 (PUTFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (88 (ALOAD 4))
         (90 (ILOAD 8))
         (92 (ALOAD 7))
         (94 (AASTORE))
         (95 (ALOAD 6))
         (97 (IFNONNULL 55))
         (100 (ILOAD 5))
         (102 (DUP))
         (103 (ICONST_1))
         (104 (ISUB))
         (105 (ISTORE 5))
         (107 (IFGT 46))
         (110 (RETURN))
         (ENDOFCODE 111))
       (EXCEPTIONS)
       (STACKMAP
            (46 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (55 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (95 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX TOPX)
                       (STACK)
                       NIL))
            (100 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                INT
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT TOPX TOPX TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "put"
      (PARAMETERS (CLASS "java.lang.Object")
                  (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 169)
       (PARSEDCODE
        (0 (ALOAD_2))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (ALOAD_0))
        (13 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
        (16 (ASTORE_3))
        (17 (ALOAD_1))
        (18 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
        (21 (ISTORE 4))
        (23 (ILOAD 4))
        (25 (LDC 1))
        (27 (JVM::IAND))
        (28 (ALOAD_3))
        (29 (ARRAYLENGTH))
        (30 (IREM))
        (31 (ISTORE 5))
        (33 (ALOAD_3))
        (34 (ILOAD 5))
        (36 (AALOAD))
        (37 (ASTORE 6))
        (39 (GOTO 87))
        (42 (ALOAD 6))
        (44 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
        (47 (ILOAD 4))
        (49 (IF_ICMPNE 80))
        (52 (ALOAD 6))
        (54 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (57 (ALOAD_1))
        (58 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                     ((CLASS "java.lang.Object"))
                                     BOOLEAN)))
        (61 (IFEQ 80))
        (64 (ALOAD 6))
        (66 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (69 (ASTORE 7))
        (71 (ALOAD 6))
        (73 (ALOAD_2))
        (74 (PUTFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                    (CLASS "java.lang.Object"))))
        (77 (ALOAD 7))
        (79 (ARETURN))
        (80 (ALOAD 6))
        (82 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                    (CLASS "java.util.HashtableEntry"))))
        (85 (ASTORE 6))
        (87 (ALOAD 6))
        (89 (IFNONNULL 42))
        (92 (ALOAD_0))
        (93 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
        (96 (ALOAD_0))
        (97 (GETFIELD (JVM::FIELDCP "threshold" "java.util.Hashtable" INT)))
        (100 (IF_ICMPLT 114))
        (103 (ALOAD_0))
        (104 (INVOKEVIRTUAL (METHODCP "rehash"
                                      "java.util.Hashtable" NIL VOID)))
        (107 (ALOAD_0))
        (108 (ALOAD_1))
        (109 (ALOAD_2))
        (110 (INVOKEVIRTUAL (METHODCP "put" "java.util.Hashtable"
                                      ((CLASS "java.lang.Object")
                                       (CLASS "java.lang.Object"))
                                      (CLASS "java.lang.Object"))))
        (113 (ARETURN))
        (114 (NEW (CLASS "java.util.HashtableEntry")))
        (117 (DUP))
        (118 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.HashtableEntry" NIL VOID)))
        (121 (ASTORE 7))
        (123 (ALOAD 7))
        (125 (ILOAD 4))
        (127 (PUTFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
        (130 (ALOAD 7))
        (132 (ALOAD_1))
        (133 (PUTFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
        (136 (ALOAD 7))
        (138 (ALOAD_2))
        (139 (PUTFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
        (142 (ALOAD 7))
        (144 (ALOAD_3))
        (145 (ILOAD 5))
        (147 (AALOAD))
        (148 (PUTFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
        (151 (ALOAD_3))
        (152 (ILOAD 5))
        (154 (ALOAD 7))
        (156 (AASTORE))
        (157 (ALOAD_0))
        (158 (DUP))
        (159 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
        (162 (ICONST_1))
        (163 (IADD))
        (164 (PUTFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
        (167 (ACONST_NULL))
        (168 (ARETURN))
        (ENDOFCODE 169))
       (EXCEPTIONS)
       (STACKMAP
            (12 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               TOPX TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (42 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX)
                       (STACK)
                       NIL))
            (80 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX)
                       (STACK)
                       NIL))
            (87 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               TOPX)
                       (STACK)
                       NIL))
            (114 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                (CLASS "java.lang.Object")
                                (CLASS "java.lang.Object")
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT
                                INT (CLASS "java.util.HashtableEntry")
                                TOPX)
                        (STACK)
                        NIL)))))
     (METHOD
      "remove"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 113)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD
                 (JVM::FIELDCP "table" "java.util.Hashtable"
                               (ARRAY (CLASS "java.util.HashtableEntry")))))
         (4 (ASTORE_2))
         (5 (ALOAD_1))
         (6 (INVOKEVIRTUAL (METHODCP "hashCode" "java.lang.Object" NIL INT)))
         (9 (ISTORE_3))
         (10 (ILOAD_3))
         (11 (LDC 1))
         (13 (JVM::IAND))
         (14 (ALOAD_2))
         (15 (ARRAYLENGTH))
         (16 (IREM))
         (17 (ISTORE 4))
         (19 (ALOAD_2))
         (20 (ILOAD 4))
         (22 (AALOAD))
         (23 (ASTORE 5))
         (25 (ACONST_NULL))
         (26 (ASTORE 6))
         (28 (GOTO 106))
         (31 (ALOAD 5))
         (33 (GETFIELD (JVM::FIELDCP "hash" "java.util.HashtableEntry" INT)))
         (36 (ILOAD_3))
         (37 (IF_ICMPNE 95))
         (40 (ALOAD 5))
         (42 (GETFIELD (JVM::FIELDCP "key" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (45 (ALOAD_1))
         (46 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (49 (IFEQ 95))
         (52 (ALOAD 6))
         (54 (IFNULL 70))
         (57 (ALOAD 6))
         (59 (ALOAD 5))
         (61 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (64 (PUTFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (67 (GOTO 79))
         (70 (ALOAD_2))
         (71 (ILOAD 4))
         (73 (ALOAD 5))
         (75 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                     (CLASS "java.util.HashtableEntry"))))
         (78 (AASTORE))
         (79 (ALOAD_0))
         (80 (DUP))
         (81 (GETFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
         (84 (ICONST_1))
         (85 (ISUB))
         (86 (PUTFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
         (89 (ALOAD 5))
         (91 (GETFIELD (JVM::FIELDCP "value" "java.util.HashtableEntry"
                                     (CLASS "java.lang.Object"))))
         (94 (ARETURN))
         (95 (ALOAD 5))
         (97 (ASTORE 6))
         (99 (ALOAD 5))
         (101 (GETFIELD (JVM::FIELDCP "next" "java.util.HashtableEntry"
                                      (CLASS "java.util.HashtableEntry"))))
         (104 (ASTORE 5))
         (106 (ALOAD 5))
         (108 (IFNONNULL 31))
         (111 (ACONST_NULL))
         (112 (ARETURN))
         (ENDOFCODE 113))
       (EXCEPTIONS)
       (STACKMAP
            (31 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (70 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (79 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (95 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (CLASS "java.lang.Object")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT
                               INT (CLASS "java.util.HashtableEntry")
                               (CLASS "java.util.HashtableEntry"))
                       (STACK)
                       NIL))
            (106 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                (CLASS "java.lang.Object")
                                (ARRAY (CLASS "java.util.HashtableEntry"))
                                INT
                                INT (CLASS "java.util.HashtableEntry")
                                (CLASS "java.util.HashtableEntry"))
                        (STACK)
                        NIL)))))
     (METHOD
      "clear" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 28)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD
                  (JVM::FIELDCP "table" "java.util.Hashtable"
                                (ARRAY (CLASS "java.util.HashtableEntry")))))
          (4 (ASTORE_1))
          (5 (ALOAD_1))
          (6 (ARRAYLENGTH))
          (7 (ISTORE_2))
          (8 (GOTO 15))
          (11 (ALOAD_1))
          (12 (ILOAD_2))
          (13 (ACONST_NULL))
          (14 (AASTORE))
          (15 (IINC 2 -1))
          (18 (ILOAD_2))
          (19 (IFGE 11))
          (22 (ALOAD_0))
          (23 (ICONST_0))
          (24 (PUTFIELD (JVM::FIELDCP "count" "java.util.Hashtable" INT)))
          (27 (RETURN))
          (ENDOFCODE 28))
       (EXCEPTIONS)
       (STACKMAP
            (11 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT)
                       (STACK)
                       NIL))
            (15 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                               (ARRAY (CLASS "java.util.HashtableEntry"))
                               INT)
                       (STACK)
                       NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 126)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Hashtable" NIL INT)))
         (4 (ICONST_1))
         (5 (ISUB))
         (6 (ISTORE_1))
         (7 (NEW (CLASS "java.lang.StringBuffer")))
         (10 (DUP))
         (11 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (14 (ASTORE_2))
         (15 (ALOAD_0))
         (16 (INVOKEVIRTUAL (METHODCP "keys" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (19 (ASTORE_3))
         (20 (ALOAD_0))
         (21 (INVOKEVIRTUAL (METHODCP "elements" "java.util.Hashtable"
                                      NIL (CLASS "java.util.Enumeration"))))
         (24 (ASTORE 4))
         (26 (ALOAD_2))
         (27 (LDC 2))
         (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (32 (POP))
         (33 (ICONST_0))
         (34 (ISTORE 5))
         (36 (GOTO 108))
         (39 (ALOAD_3))
         (40 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (45 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                      NIL (CLASS "java.lang.String"))))
         (48 (ASTORE 6))
         (50 (ALOAD 4))
         (52 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (57 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Object"
                                      NIL (CLASS "java.lang.String"))))
         (60 (ASTORE 7))
         (62 (ALOAD_2))
         (63 (NEW (CLASS "java.lang.StringBuffer")))
         (66 (DUP))
         (67 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (70 (ALOAD 6))
         (72 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (75 (LDC 3))
         (77 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (80 (ALOAD 7))
         (82 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (85 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (88 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (91 (POP))
         (92 (ILOAD 5))
         (94 (ILOAD_1))
         (95 (IF_ICMPGE 105))
         (98 (ALOAD_2))
         (99 (LDC 4))
         (101 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.StringBuffer"))))
         (104 (POP))
         (105 (IINC 5 1))
         (108 (ILOAD 5))
         (110 (ILOAD_1))
         (111 (IF_ICMPLE 39))
         (114 (ALOAD_2))
         (115 (LDC 5))
         (117 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                       ((CLASS "java.lang.String"))
                                       (CLASS "java.lang.StringBuffer"))))
         (120 (POP))
         (121 (ALOAD_2))
         (122 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                       NIL (CLASS "java.lang.String"))))
         (125 (ARETURN))
         (ENDOFCODE 126))
       (EXCEPTIONS)
       (STACKMAP (39 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    (CLASS "java.util.Enumeration")
                                    INT TOPX TOPX)
                            (STACK)
                            NIL))
                 (105 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (CLASS "java.util.Enumeration")
                                     (CLASS "java.util.Enumeration")
                                     INT (CLASS "java.lang.String")
                                     (CLASS "java.lang.String"))
                             (STACK)
                             NIL))
                 (108 (FRAME (LOCALS (CLASS "java.util.Hashtable")
                                     INT (CLASS "java.lang.StringBuffer")
                                     (CLASS "java.util.Enumeration")
                                     (CLASS "java.util.Enumeration")
                                     INT TOPX TOPX)
                             (STACK)
                             NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.HashtableEntry"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "hash" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "key" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "value" (CLASS "java.lang.Object")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "next"
                   (CLASS "java.util.HashtableEntry")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS "java.util.Enumeration"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "hasMoreElements" (PARAMETERS)
                           (RETURNTYPE . BOOLEAN)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "nextElement" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.Object")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "java.util.NoSuchElementException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                        ((CLASS "java.lang.String"))
                                        VOID)))
            (5 (RETURN))
            (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.TimeZone" "java.lang.Object"
    (CONSTANT_POOL (STRING "GMT")
                   (STRING "j2me")
                   (STRING "microedition.implpath")
                   (STRING "com.sun.cldc")
                   (STRING ".util.")
                   (STRING ".TimeZoneImpl"))
    (FIELDS (FIELD "defaultZone"
                   (CLASS "com.sun.cldc.util.TimeZoneImplementation")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "platform" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "classRoot" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "getOffset"
             (PARAMETERS INT INT INT INT INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "getRawOffset" (PARAMETERS)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "useDaylightTime" (PARAMETERS)
             (RETURNTYPE . BOOLEAN)
             (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
             (CODE))
     (METHOD "getID" (PARAMETERS)
             (RETURNTYPE CLASS "java.lang.String")
             (ACCESSFLAGS *CLASS* *PUBLIC*)
             (CODE (MAX_STACK . 1)
                   (JVM::MAX_LOCALS . 1)
                   (CODE_LENGTH . 2)
                   (PARSEDCODE (0 (ACONST_NULL))
                               (1 (ARETURN))
                               (ENDOFCODE 2))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD
      "getTimeZone"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 39)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 12))
        (4 (NEW (CLASS "java.lang.NullPointerException")))
        (7 (DUP))
        (8 (INVOKESPECIAL (METHODCP "<init>"
                                    "java.lang.NullPointerException"
                                    NIL VOID)))
        (11 (ATHROW))
        (12 (INVOKESTATIC (METHODCP "getDefault" "java.util.TimeZone"
                                    NIL (CLASS "java.util.TimeZone"))))
        (15 (POP))
        (16
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (19 (ALOAD_0))
        (20
          (INVOKEVIRTUAL (METHODCP "getInstance"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.util.TimeZone"))))
        (23 (ASTORE_1))
        (24 (ALOAD_1))
        (25 (IFNONNULL 37))
        (28
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (31 (LDC 0))
        (33
          (INVOKEVIRTUAL (METHODCP "getInstance"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.util.TimeZone"))))
        (36 (ASTORE_1))
        (37 (ALOAD_1))
        (38 (ARETURN))
        (ENDOFCODE 39))
       (EXCEPTIONS)
       (STACKMAP (12 (FRAME (LOCALS (CLASS "java.lang.String") TOPX)
                            (STACK)
                            NIL))
                 (37 (FRAME (LOCALS (CLASS "java.lang.String")
                                    (CLASS "java.util.TimeZone"))
                            (STACK)
                            NIL)))))
     (METHOD
      "getDefault" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 106)
       (PARSEDCODE
        (0
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (3 (IFNONNULL 102))
        (6 (GETSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                    (CLASS "java.lang.String"))))
        (9 (IFNONNULL 36))
        (12 (LDC 1))
        (14 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (17 (LDC 2))
        (19 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (22 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (25 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (28 (IFNONNULL 36))
        (31 (LDC 3))
        (33 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (36 (NEW (CLASS "java.lang.StringBuffer")))
        (39 (DUP))
        (40 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (43 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (46 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (49 (LDC 4))
        (51 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (54 (GETSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                     (CLASS "java.lang.String"))))
        (57 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (60 (LDC 5))
        (62 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (65 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (68 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (71 (ASTORE_0))
        (72 (ALOAD_0))
        (73 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                     NIL (CLASS "java.lang.Object"))))
        (76 (CHECKCAST (CLASS "com.sun.cldc.util.TimeZoneImplementation")))
        (79
         (PUTSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (82
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (85 (ACONST_NULL))
        (86
          (INVOKEVIRTUAL (METHODCP "getInstance"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.util.TimeZone"))))
        (89 (CHECKCAST (CLASS "com.sun.cldc.util.TimeZoneImplementation")))
        (92
         (PUTSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (95 (GOTO 102))
        (98 (ASTORE_0))
        (99 (GOTO 102))
        (102
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (105 (ARETURN))
        (ENDOFCODE 106))
       (EXCEPTIONS (JVM::HANDLER 36 95 98 (CLASS "java.lang.Exception")))
       (STACKMAP (36 (FRAME (LOCALS TOPX) (STACK) NIL))
                 (98 (FRAME (LOCALS TOPX)
                            (STACK (CLASS "java.lang.Exception"))
                            NIL))
                 (102 (FRAME (LOCALS TOPX) (STACK) NIL)))))
     (METHOD
      "getAvailableIDs" (PARAMETERS)
      (RETURNTYPE ARRAY (CLASS "java.lang.String"))
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 11)
       (PARSEDCODE
        (0 (INVOKESTATIC (METHODCP "getDefault" "java.util.TimeZone"
                                   NIL (CLASS "java.util.TimeZone"))))
        (3 (POP))
        (4
         (GETSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (7
          (INVOKEVIRTUAL (METHODCP "getIDs"
                                   "com.sun.cldc.util.TimeZoneImplementation"
                                   NIL
                                   (ARRAY (CLASS "java.lang.String")))))
        (10 (ARETURN))
        (ENDOFCODE 11))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 13)
       (PARSEDCODE
        (0 (ACONST_NULL))
        (1
         (PUTSTATIC
          (JVM::FIELDCP "defaultZone" "java.util.TimeZone"
                        (CLASS "com.sun.cldc.util.TimeZoneImplementation"))))
        (4 (ACONST_NULL))
        (5 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.TimeZone"
                                    (CLASS "java.lang.String"))))
        (8 (ACONST_NULL))
        (9 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.TimeZone"
                                    (CLASS "java.lang.String"))))
        (12 (RETURN))
        (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Calendar" "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 2)
                   (INT 5)
                   (INT 7)
                   (INT 9)
                   (INT 10)
                   (INT 11)
                   (INT 12)
                   (INT 13)
                   (INT 14)
                   (INT 3)
                   (INT 4)
                   (INT 6)
                   (INT 0)
                   (INT 8)
                   (INT 1721426)
                   (INT 2440588)
                   (INT 1970)
                   (INT 1000)
                   (INT 60000)
                   (INT 3600000)
                   (LONG 86400000)
                   (LONG 604800000)
                   (LONG -12219292800000)
                   (INT 1582)
                   (STRING "Could not find default timezone")
                   (STRING "j2me")
                   (STRING "microedition.implpath")
                   (STRING "com.sun.cldc")
                   (STRING ".util.")
                   (STRING ".CalendarImpl")
                   (INT 4194303)
                   (INT -4128769)
                   (INT -64513)
                   (LONG 9223372036854775807)
                   (LONG -9223372036854775808)
                   (INT -130023425)
                   (LONG 1721426)
                   (INT 146097)
                   (INT 36524)
                   (LONG 7)
                   (LONG 1721424)
                   (LONG 4)
                   (LONG 1464)
                   (LONG 1461)
                   (LONG -106749550580)
                   (INT 86400000)
                   (LONG 365)
                   (LONG 1721423)
                   (LONG 2440588))
    (FIELDS (FIELD "YEAR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MONTH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "DATE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "DAY_OF_MONTH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "DAY_OF_WEEK" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "AM_PM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   4)
            (FIELD "HOUR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   5)
            (FIELD "HOUR_OF_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   6)
            (FIELD "MINUTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   7)
            (FIELD "SECOND" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   8)
            (FIELD "MILLISECOND" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   9)
            (FIELD "SUNDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MONDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "TUESDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   10)
            (FIELD "WEDNESDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   11)
            (FIELD "THURSDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "FRIDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   12)
            (FIELD "SATURDAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "JANUARY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   13)
            (FIELD "FEBRUARY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "MARCH" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "APRIL" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   10)
            (FIELD "MAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   11)
            (FIELD "JUNE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "JULY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   12)
            (FIELD "AUGUST" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   3)
            (FIELD "SEPTEMBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   14)
            (FIELD "OCTOBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   4)
            (FIELD "NOVEMBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   5)
            (FIELD "DECEMBER" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   6)
            (FIELD "AM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   13)
            (FIELD "PM" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "packed_time"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "packed_date"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "day_field"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "dstOffset"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "dstSet"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "time"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "millisSet"
                   BOOLEAN (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "zone" (CLASS "java.util.TimeZone")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "JAN_1_1_JULIAN_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   15)
            (FIELD "EPOCH_JULIAN_DAY" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   16)
            (FIELD "EPOCH_YEAR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   17)
            (FIELD "NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "LEAP_NUM_DAYS" (ARRAY INT)
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "ONE_SECOND" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   18)
            (FIELD "ONE_MINUTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   19)
            (FIELD "ONE_HOUR" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   20)
            (FIELD "ONE_DAY" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   21)
            (FIELD "ONE_WEEK" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   22)
            (FIELD "gregorianCutover" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   23)
            (FIELD "gregorianCutoverYear" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   24)
            (FIELD "date" (CLASS "java.util.Date")
                   (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "hour_12hr"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "am_pm_12hr"
                   INT (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "platform" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "classRoot" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 76)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
         (4 (ALOAD_0))
         (5 (ICONST_0))
         (6 (PUTFIELD (JVM::FIELDCP "packed_time"
                                    "java.util.Calendar" INT)))
         (9 (ALOAD_0))
         (10 (ICONST_0))
         (11 (PUTFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
         (14 (ALOAD_0))
         (15 (ICONST_0))
         (16 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (19 (ALOAD_0))
         (20 (ICONST_0))
         (21 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
         (24 (ALOAD_0))
         (25 (ICONST_0))
         (26 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
         (29 (ALOAD_0))
         (30 (ACONST_NULL))
         (31 (PUTFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                     (CLASS "java.util.Date"))))
         (34 (ALOAD_0))
         (35 (ICONST_M1))
         (36 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
         (39 (ALOAD_0))
         (40 (ICONST_M1))
         (41 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
         (44 (ALOAD_0))
         (45 (INVOKESTATIC (METHODCP "getDefault" "java.util.TimeZone"
                                     NIL (CLASS "java.util.TimeZone"))))
         (48 (PUTFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
         (51 (ALOAD_0))
         (52 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
         (55 (IFNONNULL 68))
         (58 (NEW (CLASS "java.lang.RuntimeException")))
         (61 (DUP))
         (62 (LDC 25))
         (64 (INVOKESPECIAL (METHODCP "<init>" "java.lang.RuntimeException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (67 (ATHROW))
         (68 (ALOAD_0))
         (69 (INVOKESTATIC (METHODCP "currentTimeMillis"
                                     "java.lang.System" NIL LONG)))
         (72 (INVOKEVIRTUAL (METHODCP "setTimeInMillis"
                                      "java.util.Calendar" (LONG)
                                      VOID)))
         (75 (RETURN))
         (ENDOFCODE 76))
       (EXCEPTIONS)
       (STACKMAP (68 (FRAME (LOCALS (CLASS "java.util.Calendar"))
                            (STACK)
                            NIL)))))
     (METHOD
      "getTime" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Date")
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
          (MAX_STACK . 5)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 54)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                          (CLASS "java.util.Date"))))
               (4 (IFNONNULL 24))
               (7 (ALOAD_0))
               (8 (NEW (CLASS "java.util.Date")))
               (11 (DUP))
               (12 (ALOAD_0))
               (13 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
               (16 (INVOKESPECIAL (METHODCP "<init>" "java.util.Date" (LONG)
                                            VOID)))
               (19 (DUP_X1))
               (20 (PUTFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (23 (ARETURN))
               (24 (ALOAD_0))
               (25 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (28 (DUP))
               (29 (ASTORE_1))
               (30 (MONITORENTER))
               (31 (ALOAD_0))
               (32 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (35 (ALOAD_0))
               (36 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
               (39 (INVOKEVIRTUAL (METHODCP "setTime" "java.util.Date" (LONG)
                                            VOID)))
               (42 (ALOAD_0))
               (43 (GETFIELD (JVM::FIELDCP "date" "java.util.Calendar"
                                           (CLASS "java.util.Date"))))
               (46 (ALOAD_1))
               (47 (MONITOREXIT))
               (48 (ARETURN))
               (49 (ASTORE_2))
               (50 (ALOAD_1))
               (51 (MONITOREXIT))
               (52 (ALOAD_2))
               (53 (ATHROW))
               (ENDOFCODE 54))
          (EXCEPTIONS (JVM::HANDLER 31 48 49 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 49 52 49 (CLASS "java.lang.Throwable")))
          (STACKMAP (24 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                       TOPX TOPX)
                               (STACK)
                               NIL))
                    (49 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                       (CLASS "java.util.Date")
                                       TOPX)
                               (STACK (CLASS "java.lang.Throwable"))
                               NIL)))))
     (METHOD
      "setTime"
      (PARAMETERS (CLASS "java.util.Date"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ALOAD_1))
           (2 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
           (5 (INVOKEVIRTUAL (METHODCP "setTimeInMillis"
                                       "java.util.Calendar" (LONG)
                                       VOID)))
           (8 (RETURN))
           (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getInstance" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Calendar")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 80)
       (PARSEDCODE
            (0 (GETSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                        (CLASS "java.lang.String"))))
            (3 (IFNONNULL 30))
            (6 (LDC 26))
            (8 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                        (CLASS "java.lang.String"))))
            (11 (LDC 27))
            (13 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.String"))))
            (16 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (19 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (22 (IFNONNULL 30))
            (25 (LDC 28))
            (27 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (30 (NEW (CLASS "java.lang.StringBuffer")))
            (33 (DUP))
            (34 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
            (37 (GETSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (40 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (43 (LDC 29))
            (45 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (48 (GETSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                         (CLASS "java.lang.String"))))
            (51 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (54 (LDC 30))
            (56 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
            (59 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                         NIL (CLASS "java.lang.String"))))
            (62 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.lang.Class"))))
            (65 (ASTORE_0))
            (66 (ALOAD_0))
            (67 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                         NIL (CLASS "java.lang.Object"))))
            (70 (CHECKCAST (CLASS "java.util.Calendar")))
            (73 (ARETURN))
            (74 (ASTORE_0))
            (75 (GOTO 78))
            (78 (ACONST_NULL))
            (79 (ARETURN))
            (ENDOFCODE 80))
       (EXCEPTIONS (JVM::HANDLER 30 73 74 (CLASS "java.lang.Exception")))
       (STACKMAP (30 (FRAME (LOCALS TOPX) (STACK) NIL))
                 (74 (FRAME (LOCALS TOPX)
                            (STACK (CLASS "java.lang.Exception"))
                            NIL))
                 (78 (FRAME (LOCALS (CLASS "java.lang.Exception"))
                            (STACK)
                            NIL)))))
     (METHOD
      "getInstance"
      (PARAMETERS (CLASS "java.util.TimeZone"))
      (RETURNTYPE CLASS "java.util.Calendar")
      (ACCESSFLAGS *CLASS* *PUBLIC*
                   *STATIC* *SUPER* *SYNCHRONIZED*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 11)
          (PARSEDCODE
               (0 (INVOKESTATIC (METHODCP "getInstance" "java.util.Calendar"
                                          NIL (CLASS "java.util.Calendar"))))
               (3 (ASTORE_1))
               (4 (ALOAD_1))
               (5 (ALOAD_0))
               (6 (INVOKEVIRTUAL (METHODCP "setTimeZone" "java.util.Calendar"
                                           ((CLASS "java.util.TimeZone"))
                                           VOID)))
               (9 (ALOAD_1))
               (10 (ARETURN))
               (ENDOFCODE 11))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "getTimeInMillis" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 21)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (GETFIELD (JVM::FIELDCP "millisSet"
                                         "java.util.Calendar" BOOLEAN)))
              (4 (IFNE 16))
              (7 (ALOAD_0))
              (8 (INVOKESPECIAL (METHODCP "calculateTime"
                                          "java.util.Calendar" NIL VOID)))
              (11 (ALOAD_0))
              (12 (ICONST_1))
              (13 (PUTFIELD (JVM::FIELDCP "millisSet"
                                          "java.util.Calendar" BOOLEAN)))
              (16 (ALOAD_0))
              (17 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
              (20 (JVM::LRETURN))
              (ENDOFCODE 21))
         (EXCEPTIONS)
         (STACKMAP (16 (FRAME (LOCALS (CLASS "java.util.Calendar"))
                              (STACK)
                              NIL)))))
     (METHOD
      "setTimeInMillis" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PROTECTED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 20)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ICONST_1))
           (2 (PUTFIELD (JVM::FIELDCP "millisSet"
                                      "java.util.Calendar" BOOLEAN)))
           (5 (ALOAD_0))
           (6 (ICONST_0))
           (7 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
           (10 (ALOAD_0))
           (11 (JVM::LLOAD_1))
           (12 (PUTFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
           (15 (ALOAD_0))
           (16 (INVOKESPECIAL (METHODCP "calculateFields"
                                        "java.util.Calendar" NIL VOID)))
           (19 (RETURN))
           (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "get" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 206)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1
         (JVM::TABLESWITCH
             (JVM::TABLESWITCHINFO 198 (1 . 14)
                                   (72 80 198 198 90
                                       198 98 198 149 127 119 167 178 189))))
        (72 (ALOAD_0))
        (73 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (76 (BIPUSH 9))
        (78 (JVM::ISHR))
        (79 (IRETURN))
        (80 (ALOAD_0))
        (81 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (84 (ICONST_5))
        (85 (JVM::ISHR))
        (86 (BIPUSH 15))
        (88 (JVM::IAND))
        (89 (IRETURN))
        (90 (ALOAD_0))
        (91 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (94 (BIPUSH 31))
        (96 (JVM::IAND))
        (97 (IRETURN))
        (98 (ALOAD_0))
        (99 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (102 (IFNE 114))
        (105 (ALOAD_0))
        (106 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                      "java.util.Calendar" NIL LONG)))
        (109 (POP2))
        (110 (ALOAD_0))
        (111 (INVOKESPECIAL (METHODCP "calculateFields"
                                      "java.util.Calendar" NIL VOID)))
        (114 (ALOAD_0))
        (115 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (118 (IRETURN))
        (119 (ALOAD_0))
        (120 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (123 (BIPUSH 22))
        (125 (JVM::ISHR))
        (126 (IRETURN))
        (127 (ALOAD_0))
        (128 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (131 (BIPUSH 22))
        (133 (JVM::ISHR))
        (134 (BIPUSH 12))
        (136 (IREM))
        (137 (ISTORE_2))
        (138 (ILOAD_2))
        (139 (IFNE 147))
        (142 (BIPUSH 12))
        (144 (GOTO 148))
        (147 (ILOAD_2))
        (148 (IRETURN))
        (149 (ALOAD_0))
        (150 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (153 (BIPUSH 22))
        (155 (JVM::ISHR))
        (156 (BIPUSH 12))
        (158 (IF_ICMPGE 165))
        (161 (ICONST_0))
        (162 (GOTO 166))
        (165 (ICONST_1))
        (166 (IRETURN))
        (167 (ALOAD_0))
        (168 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (171 (BIPUSH 16))
        (173 (JVM::ISHR))
        (174 (BIPUSH 63))
        (176 (JVM::IAND))
        (177 (IRETURN))
        (178 (ALOAD_0))
        (179 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (182 (BIPUSH 10))
        (184 (JVM::ISHR))
        (185 (BIPUSH 63))
        (187 (JVM::IAND))
        (188 (IRETURN))
        (189 (ALOAD_0))
        (190 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (193 (JVM::SIPUSH 1023))
        (196 (JVM::IAND))
        (197 (IRETURN))
        (198 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (201 (DUP))
        (202
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (205 (ATHROW))
        (ENDOFCODE 206))
       (EXCEPTIONS)
       (STACKMAP (72 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (80 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (90 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (98 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (114 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (119 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (127 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (147 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (148 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK INT)
                             NIL))
                 (149 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (165 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (166 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK INT)
                             NIL))
                 (167 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (178 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (189 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL))
                 (198 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "set" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 426)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_0))
        (2 (PUTFIELD (JVM::FIELDCP "millisSet"
                                   "java.util.Calendar" BOOLEAN)))
        (5 (ALOAD_0))
        (6 (ICONST_0))
        (7 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (10 (ILOAD_1))
        (11
         (JVM::TABLESWITCH
            (JVM::TABLESWITCHINFO 412 (1 . 14)
                                  (80 100 412 412 122
                                      412 412 412 257 175 141 347 369 391))))
        (80 (ALOAD_0))
        (81 (ALOAD_0))
        (82 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (85 (JVM::SIPUSH 511))
        (88 (JVM::IAND))
        (89 (ILOAD_2))
        (90 (BIPUSH 9))
        (92 (JVM::ISHL))
        (93 (JVM::IOR))
        (94 (PUTFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (97 (GOTO 420))
        (100 (ALOAD_0))
        (101 (ALOAD_0))
        (102 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (105 (JVM::SIPUSH -481))
        (108 (JVM::IAND))
        (109 (ILOAD_2))
        (110 (BIPUSH 15))
        (112 (JVM::IAND))
        (113 (ICONST_5))
        (114 (JVM::ISHL))
        (115 (JVM::IOR))
        (116 (PUTFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (119 (GOTO 420))
        (122 (ALOAD_0))
        (123 (ALOAD_0))
        (124 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (127 (BIPUSH -32))
        (129 (JVM::IAND))
        (130 (ILOAD_2))
        (131 (BIPUSH 31))
        (133 (JVM::IAND))
        (134 (JVM::IOR))
        (135 (PUTFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (138 (GOTO 420))
        (141 (ILOAD_2))
        (142 (BIPUSH 24))
        (144 (IREM))
        (145 (ISTORE_2))
        (146 (ALOAD_0))
        (147 (ALOAD_0))
        (148 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (151 (LDC 31))
        (153 (JVM::IAND))
        (154 (ILOAD_2))
        (155 (BIPUSH 22))
        (157 (JVM::ISHL))
        (158 (JVM::IOR))
        (159 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (162 (ALOAD_0))
        (163 (ALOAD_0))
        (164 (ICONST_M1))
        (165 (DUP_X1))
        (166 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (169 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (172 (GOTO 420))
        (175 (ILOAD_2))
        (176 (BIPUSH 12))
        (178 (IF_ICMPLE 184))
        (181 (BIPUSH 12))
        (183 (ISTORE_2))
        (184 (ALOAD_0))
        (185 (GETFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (188 (ICONST_M1))
        (189 (IF_ICMPEQ 233))
        (192 (ALOAD_0))
        (193 (GETFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (196 (ICONST_1))
        (197 (IF_ICMPNE 212))
        (200 (ILOAD_2))
        (201 (BIPUSH 12))
        (203 (IF_ICMPEQ 220))
        (206 (IINC 2 12))
        (209 (GOTO 220))
        (212 (ILOAD_2))
        (213 (BIPUSH 12))
        (215 (IF_ICMPNE 220))
        (218 (ICONST_0))
        (219 (ISTORE_2))
        (220 (ALOAD_0))
        (221 (ALOAD_0))
        (222 (ICONST_M1))
        (223 (DUP_X1))
        (224 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (227 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (230 (GOTO 238))
        (233 (ALOAD_0))
        (234 (ILOAD_2))
        (235 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (238 (ALOAD_0))
        (239 (ALOAD_0))
        (240 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (243 (LDC 31))
        (245 (JVM::IAND))
        (246 (ILOAD_2))
        (247 (BIPUSH 22))
        (249 (JVM::ISHL))
        (250 (JVM::IOR))
        (251 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (254 (GOTO 420))
        (257 (ALOAD_0))
        (258 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (261 (ICONST_M1))
        (262 (IF_ICMPEQ 339))
        (265 (ILOAD_2))
        (266 (ICONST_1))
        (267 (IF_ICMPNE 293))
        (270 (ALOAD_0))
        (271 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (274 (BIPUSH 12))
        (276 (IF_ICMPEQ 307))
        (279 (ALOAD_0))
        (280 (DUP))
        (281 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (284 (BIPUSH 12))
        (286 (IADD))
        (287 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (290 (GOTO 307))
        (293 (ALOAD_0))
        (294 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (297 (BIPUSH 12))
        (299 (IF_ICMPNE 307))
        (302 (ALOAD_0))
        (303 (ICONST_0))
        (304 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (307 (ALOAD_0))
        (308 (ALOAD_0))
        (309 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (312 (LDC 31))
        (314 (JVM::IAND))
        (315 (ALOAD_0))
        (316 (GETFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (319 (BIPUSH 22))
        (321 (JVM::ISHL))
        (322 (JVM::IOR))
        (323 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (326 (ALOAD_0))
        (327 (ALOAD_0))
        (328 (ICONST_M1))
        (329 (DUP_X1))
        (330 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (333 (PUTFIELD (JVM::FIELDCP "hour_12hr" "java.util.Calendar" INT)))
        (336 (GOTO 420))
        (339 (ALOAD_0))
        (340 (ILOAD_2))
        (341 (PUTFIELD (JVM::FIELDCP "am_pm_12hr" "java.util.Calendar" INT)))
        (344 (GOTO 420))
        (347 (ALOAD_0))
        (348 (ALOAD_0))
        (349 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (352 (LDC 32))
        (354 (JVM::IAND))
        (355 (ILOAD_2))
        (356 (BIPUSH 63))
        (358 (JVM::IAND))
        (359 (BIPUSH 16))
        (361 (JVM::ISHL))
        (362 (JVM::IOR))
        (363 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (366 (GOTO 420))
        (369 (ALOAD_0))
        (370 (ALOAD_0))
        (371 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (374 (LDC 33))
        (376 (JVM::IAND))
        (377 (ILOAD_2))
        (378 (BIPUSH 63))
        (380 (JVM::IAND))
        (381 (BIPUSH 10))
        (383 (JVM::ISHL))
        (384 (JVM::IOR))
        (385 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (388 (GOTO 420))
        (391 (ALOAD_0))
        (392 (ALOAD_0))
        (393 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (396 (JVM::SIPUSH -1024))
        (399 (JVM::IAND))
        (400 (ILOAD_2))
        (401 (JVM::SIPUSH 1023))
        (404 (JVM::IAND))
        (405 (JVM::IOR))
        (406 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (409 (GOTO 420))
        (412 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (415 (DUP))
        (416
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (419 (ATHROW))
        (420 (ALOAD_0))
        (421 (ICONST_0))
        (422 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (425 (RETURN))
        (ENDOFCODE 426))
       (EXCEPTIONS)
       (STACKMAP (80 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT)
                            (STACK)
                            NIL))
                 (100 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (122 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (141 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (175 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (184 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (212 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (220 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (233 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (238 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (257 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (293 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (307 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (339 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (347 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (369 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (391 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (412 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL))
                 (420 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 3)
           (CODE_LENGTH . 53)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (JVM::IF_ACMPNE 7))
                (5 (ICONST_1))
                (6 (IRETURN))
                (7 (ALOAD_1))
                (8 (JVM::INSTANCEOF (CLASS "java.util.Calendar")))
                (11 (IFNE 16))
                (14 (ICONST_0))
                (15 (IRETURN))
                (16 (ALOAD_1))
                (17 (CHECKCAST (CLASS "java.util.Calendar")))
                (20 (ASTORE_2))
                (21 (ALOAD_0))
                (22 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (25 (ALOAD_2))
                (26 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (29 (LCMP))
                (30 (IFNE 51))
                (33 (ALOAD_0))
                (34 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                            (CLASS "java.util.TimeZone"))))
                (37 (ALOAD_2))
                (38 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                            (CLASS "java.util.TimeZone"))))
                (41 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                             ((CLASS "java.lang.Object"))
                                             BOOLEAN)))
                (44 (IFEQ 51))
                (47 (ICONST_1))
                (48 (GOTO 52))
                (51 (ICONST_0))
                (52 (IRETURN))
                (ENDOFCODE 53))
           (EXCEPTIONS)
           (STACKMAP (7 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                       (CLASS "java.lang.Object")
                                       TOPX)
                               (STACK)
                               NIL))
                     (16 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object")
                                        TOPX)
                                (STACK)
                                NIL))
                     (51 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object")
                                        (CLASS "java.util.Calendar"))
                                (STACK)
                                NIL))
                     (52 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object")
                                        (CLASS "java.util.Calendar"))
                                (STACK INT)
                                NIL)))))
     (METHOD
      "before"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 28)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.util.Calendar")))
                (4 (IFEQ 26))
                (7 (ALOAD_0))
                (8 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.util.Calendar")))
                (15 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (18 (LCMP))
                (19 (IFGE 26))
                (22 (ICONST_1))
                (23 (GOTO 27))
                (26 (ICONST_0))
                (27 (IRETURN))
                (ENDOFCODE 28))
           (EXCEPTIONS)
           (STACKMAP (26 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL)))))
     (METHOD
      "after"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 28)
           (PARSEDCODE
                (0 (ALOAD_1))
                (1 (JVM::INSTANCEOF (CLASS "java.util.Calendar")))
                (4 (IFEQ 26))
                (7 (ALOAD_0))
                (8 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
                (11 (ALOAD_1))
                (12 (CHECKCAST (CLASS "java.util.Calendar")))
                (15 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                             "java.util.Calendar" NIL LONG)))
                (18 (LCMP))
                (19 (IFLE 26))
                (22 (ICONST_1))
                (23 (GOTO 27))
                (26 (ICONST_0))
                (27 (IRETURN))
                (ENDOFCODE 28))
           (EXCEPTIONS)
           (STACKMAP (26 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK)
                                NIL))
                     (27 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                        (CLASS "java.lang.Object"))
                                (STACK INT)
                                NIL)))))
     (METHOD
      "setTimeZone"
      (PARAMETERS (CLASS "java.util.TimeZone"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 2)
           (CODE_LENGTH . 15)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (ALOAD_1))
                (2 (PUTFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                           (CLASS "java.util.TimeZone"))))
                (5 (ALOAD_0))
                (6 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                            "java.util.Calendar" NIL LONG)))
                (9 (POP2))
                (10 (ALOAD_0))
                (11 (INVOKESPECIAL (METHODCP "calculateFields"
                                             "java.util.Calendar" NIL VOID)))
                (14 (RETURN))
                (ENDOFCODE 15))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "getTimeZone" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.TimeZone")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                              (CLASS "java.util.TimeZone"))))
                   (4 (ARETURN))
                   (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "calculateDstOffset" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 8)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 114)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (4 (IFNE 16))
        (7 (ALOAD_0))
        (8 (INVOKEVIRTUAL (METHODCP "getTimeInMillis"
                                    "java.util.Calendar" NIL LONG)))
        (11 (POP2))
        (12 (ALOAD_0))
        (13 (INVOKESPECIAL (METHODCP "calculateFields"
                                     "java.util.Calendar" NIL VOID)))
        (16 (ALOAD_0))
        (17 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                    (CLASS "java.util.TimeZone"))))
        (20 (INVOKEVIRTUAL (METHODCP "getRawOffset"
                                     "java.util.TimeZone" NIL INT)))
        (23 (ISTORE_1))
        (24 (ALOAD_0))
        (25 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (28 (ILOAD_1))
        (29 (JVM::I2L))
        (30 (JVM::LADD))
        (31 (JVM::LSTORE_2))
        (32 (JVM::LLOAD_2))
        (33 (JVM::LDC2_W 21))
        (36 (JVM::LDIV))
        (37 (JVM::LSTORE 4))
        (39 (JVM::LLOAD_2))
        (40 (JVM::LLOAD 4))
        (42 (JVM::LDC2_W 21))
        (45 (JVM::LMUL))
        (46 (JVM::LSUB))
        (47 (JVM::L2I))
        (48 (ISTORE 6))
        (50 (ILOAD 6))
        (52 (IFGE 65))
        (55 (ILOAD 6))
        (57 (JVM::I2L))
        (58 (JVM::LDC2_W 21))
        (61 (JVM::LADD))
        (62 (JVM::L2I))
        (63 (ISTORE 6))
        (65 (ALOAD_0))
        (66 (ALOAD_0))
        (67 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                    (CLASS "java.util.TimeZone"))))
        (70 (ICONST_1))
        (71 (ALOAD_0))
        (72 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (75 (BIPUSH 9))
        (77 (JVM::ISHR))
        (78 (ALOAD_0))
        (79 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (82 (ICONST_5))
        (83 (JVM::ISHR))
        (84 (BIPUSH 15))
        (86 (JVM::IAND))
        (87 (ALOAD_0))
        (88 (GETFIELD (JVM::FIELDCP "packed_date"
                                    "java.util.Calendar" INT)))
        (91 (BIPUSH 31))
        (93 (JVM::IAND))
        (94 (ALOAD_0))
        (95 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (98 (ILOAD 6))
        (100 (INVOKEVIRTUAL (METHODCP "getOffset" "java.util.TimeZone"
                                      (INT INT INT INT INT INT)
                                      INT)))
        (103 (ILOAD_1))
        (104 (ISUB))
        (105 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (108 (ALOAD_0))
        (109 (ICONST_1))
        (110 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (113 (RETURN))
        (ENDOFCODE 114))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT LONG TOPX LONG TOPX INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "calculateFields" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 8)
       (JVM::MAX_LOCALS . 9)
       (CODE_LENGTH . 350)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                   (CLASS "java.util.TimeZone"))))
        (4 (INVOKEVIRTUAL (METHODCP "getRawOffset"
                                    "java.util.TimeZone" NIL INT)))
        (7 (ISTORE_1))
        (8 (ALOAD_0))
        (9 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (12 (ILOAD_1))
        (13 (JVM::I2L))
        (14 (JVM::LADD))
        (15 (JVM::LSTORE_2))
        (16 (ALOAD_0))
        (17 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (20 (LCONST_0))
        (21 (LCMP))
        (22 (IFLE 42))
        (25 (JVM::LLOAD_2))
        (26 (LCONST_0))
        (27 (LCMP))
        (28 (IFGE 42))
        (31 (ILOAD_1))
        (32 (IFLE 42))
        (35 (JVM::LDC2_W 34))
        (38 (JVM::LSTORE_2))
        (39 (GOTO 65))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (46 (LCONST_0))
        (47 (LCMP))
        (48 (IFGE 65))
        (51 (JVM::LLOAD_2))
        (52 (LCONST_0))
        (53 (LCMP))
        (54 (IFLE 65))
        (57 (ILOAD_1))
        (58 (IFGE 65))
        (61 (JVM::LDC2_W 35))
        (64 (JVM::LSTORE_2))
        (65 (ALOAD_0))
        (66 (JVM::LLOAD_2))
        (67 (INVOKESPECIAL (METHODCP "timeToFields"
                                     "java.util.Calendar" (LONG)
                                     VOID)))
        (70 (JVM::LLOAD_2))
        (71 (JVM::LDC2_W 21))
        (74 (JVM::LDIV))
        (75 (JVM::LSTORE 4))
        (77 (JVM::LLOAD_2))
        (78 (JVM::LLOAD 4))
        (80 (JVM::LDC2_W 21))
        (83 (JVM::LMUL))
        (84 (JVM::LSUB))
        (85 (JVM::L2I))
        (86 (ISTORE 6))
        (88 (ILOAD 6))
        (90 (IFGE 103))
        (93 (ILOAD 6))
        (95 (JVM::I2L))
        (96 (JVM::LDC2_W 21))
        (99 (JVM::LADD))
        (100 (JVM::L2I))
        (101 (ISTORE 6))
        (103 (ALOAD_0))
        (104 (ALOAD_0))
        (105 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
        (108 (ICONST_1))
        (109 (ALOAD_0))
        (110 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (113 (BIPUSH 9))
        (115 (JVM::ISHR))
        (116 (ALOAD_0))
        (117 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (120 (ICONST_5))
        (121 (JVM::ISHR))
        (122 (BIPUSH 15))
        (124 (JVM::IAND))
        (125 (ALOAD_0))
        (126 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (129 (BIPUSH 31))
        (131 (JVM::IAND))
        (132 (ALOAD_0))
        (133 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
        (136 (ILOAD 6))
        (138 (INVOKEVIRTUAL (METHODCP "getOffset" "java.util.TimeZone"
                                      (INT INT INT INT INT INT)
                                      INT)))
        (141 (ILOAD_1))
        (142 (ISUB))
        (143 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (146 (ALOAD_0))
        (147 (ICONST_1))
        (148 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (151 (ILOAD 6))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (157 (IADD))
        (158 (ISTORE 6))
        (160 (ILOAD 6))
        (162 (JVM::I2L))
        (163 (JVM::LDC2_W 21))
        (166 (LCMP))
        (167 (IFLT 248))
        (170 (JVM::LLOAD_2))
        (171 (ALOAD_0))
        (172 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (175 (JVM::I2L))
        (176 (JVM::LADD))
        (177 (JVM::LSTORE 7))
        (179 (ILOAD 6))
        (181 (JVM::I2L))
        (182 (JVM::LDC2_W 21))
        (185 (JVM::LSUB))
        (186 (JVM::L2I))
        (187 (ISTORE 6))
        (189 (JVM::LLOAD_2))
        (190 (LCONST_0))
        (191 (LCMP))
        (192 (IFLE 217))
        (195 (JVM::LLOAD 7))
        (197 (LCONST_0))
        (198 (LCMP))
        (199 (IFGE 217))
        (202 (ALOAD_0))
        (203 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (206 (IFLE 217))
        (209 (JVM::LDC2_W 34))
        (212 (JVM::LSTORE 7))
        (214 (GOTO 242))
        (217 (JVM::LLOAD_2))
        (218 (LCONST_0))
        (219 (LCMP))
        (220 (IFGE 242))
        (223 (JVM::LLOAD 7))
        (225 (LCONST_0))
        (226 (LCMP))
        (227 (IFLE 242))
        (230 (ALOAD_0))
        (231 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (234 (IFGE 242))
        (237 (JVM::LDC2_W 35))
        (240 (JVM::LSTORE 7))
        (242 (ALOAD_0))
        (243 (JVM::LLOAD 7))
        (245 (INVOKESPECIAL (METHODCP "timeToFields"
                                      "java.util.Calendar" (LONG)
                                      VOID)))
        (248 (ALOAD_0))
        (249 (ALOAD_0))
        (250 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (253 (JVM::SIPUSH -1024))
        (256 (JVM::IAND))
        (257 (ILOAD 6))
        (259 (JVM::SIPUSH 1000))
        (262 (IREM))
        (263 (JVM::IOR))
        (264 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (267 (ILOAD 6))
        (269 (JVM::SIPUSH 1000))
        (272 (IDIV))
        (273 (ISTORE 6))
        (275 (ALOAD_0))
        (276 (ALOAD_0))
        (277 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (280 (LDC 33))
        (282 (JVM::IAND))
        (283 (ILOAD 6))
        (285 (BIPUSH 60))
        (287 (IREM))
        (288 (BIPUSH 10))
        (290 (JVM::ISHL))
        (291 (JVM::IOR))
        (292 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (295 (ILOAD 6))
        (297 (BIPUSH 60))
        (299 (IDIV))
        (300 (ISTORE 6))
        (302 (ALOAD_0))
        (303 (ALOAD_0))
        (304 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (307 (LDC 32))
        (309 (JVM::IAND))
        (310 (ILOAD 6))
        (312 (BIPUSH 60))
        (314 (IREM))
        (315 (BIPUSH 16))
        (317 (JVM::ISHL))
        (318 (JVM::IOR))
        (319 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (322 (ILOAD 6))
        (324 (BIPUSH 60))
        (326 (IDIV))
        (327 (ISTORE 6))
        (329 (ALOAD_0))
        (330 (ALOAD_0))
        (331 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (334 (LDC 36))
        (336 (JVM::IAND))
        (337 (ILOAD 6))
        (339 (BIPUSH 31))
        (341 (JVM::IAND))
        (342 (BIPUSH 22))
        (344 (JVM::ISHL))
        (345 (JVM::IOR))
        (346 (PUTFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (349 (RETURN))
        (ENDOFCODE 350))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT LONG TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT LONG TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (103 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT TOPX TOPX)
                             (STACK)
                             NIL))
                 (217 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (242 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (248 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT LONG TOPX LONG TOPX INT TOPX TOPX)
                             (STACK)
                             NIL)))))
     (METHOD
      "timeToFields" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 14)
       (CODE_LENGTH . 396)
       (PARSEDCODE
         (0 (JVM::LLOAD_1))
         (1 (JVM::LDC2_W 23))
         (4 (LCMP))
         (5 (IFLT 171))
         (8 (JVM::LLOAD_1))
         (9 (INVOKESTATIC (METHODCP "millisToJulianDay"
                                    "java.util.Calendar" (LONG)
                                    LONG)))
         (12 (JVM::LDC2_W 37))
         (15 (JVM::LSUB))
         (16 (JVM::LSTORE 7))
         (18 (ICONST_1))
         (19 (NEWARRAY INT))
         (21 (ASTORE 9))
         (23 (JVM::LLOAD 7))
         (25 (LDC 38))
         (27 (ALOAD 9))
         (29 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (LONG INT (ARRAY INT))
                                     INT)))
         (32 (ISTORE 10))
         (34 (ALOAD 9))
         (36 (ICONST_0))
         (37 (IALOAD))
         (38 (LDC 39))
         (40 (ALOAD 9))
         (42 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (INT INT (ARRAY INT))
                                     INT)))
         (45 (ISTORE 11))
         (47 (ALOAD 9))
         (49 (ICONST_0))
         (50 (IALOAD))
         (51 (JVM::SIPUSH 1461))
         (54 (ALOAD 9))
         (56 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (INT INT (ARRAY INT))
                                     INT)))
         (59 (ISTORE 12))
         (61 (ALOAD 9))
         (63 (ICONST_0))
         (64 (IALOAD))
         (65 (JVM::SIPUSH 365))
         (68 (ALOAD 9))
         (70 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (INT INT (ARRAY INT))
                                     INT)))
         (73 (ISTORE 13))
         (75 (JVM::SIPUSH 400))
         (78 (ILOAD 10))
         (80 (IMUL))
         (81 (BIPUSH 100))
         (83 (ILOAD 11))
         (85 (IMUL))
         (86 (IADD))
         (87 (ICONST_4))
         (88 (ILOAD 12))
         (90 (IMUL))
         (91 (IADD))
         (92 (ILOAD 13))
         (94 (IADD))
         (95 (ISTORE 5))
         (97 (ALOAD 9))
         (99 (ICONST_0))
         (100 (IALOAD))
         (101 (ISTORE_3))
         (102 (ILOAD 11))
         (104 (ICONST_4))
         (105 (IF_ICMPEQ 114))
         (108 (ILOAD 13))
         (110 (ICONST_4))
         (111 (IF_ICMPNE 121))
         (114 (JVM::SIPUSH 365))
         (117 (ISTORE_3))
         (118 (GOTO 124))
         (121 (IINC 5 1))
         (124 (ILOAD 5))
         (126 (ICONST_3))
         (127 (JVM::IAND))
         (128 (IFNE 152))
         (131 (ILOAD 5))
         (133 (BIPUSH 100))
         (135 (IREM))
         (136 (IFNE 148))
         (139 (ILOAD 5))
         (141 (JVM::SIPUSH 400))
         (144 (IREM))
         (145 (IFNE 152))
         (148 (ICONST_1))
         (149 (GOTO 153))
         (152 (ICONST_0))
         (153 (ISTORE 6))
         (155 (ALOAD_0))
         (156 (JVM::LLOAD 7))
         (158 (LCONST_1))
         (159 (JVM::LADD))
         (160 (JVM::LDC2_W 40))
         (163 (JVM::LREM))
         (164 (JVM::L2I))
         (165 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (168 (GOTO 254))
         (171 (JVM::LLOAD_1))
         (172 (INVOKESTATIC (METHODCP "millisToJulianDay"
                                      "java.util.Calendar" (LONG)
                                      LONG)))
         (175 (JVM::LDC2_W 41))
         (178 (JVM::LSUB))
         (179 (JVM::LSTORE 7))
         (181 (JVM::LDC2_W 42))
         (184 (JVM::LLOAD 7))
         (186 (JVM::LMUL))
         (187 (JVM::LDC2_W 43))
         (190 (JVM::LADD))
         (191 (JVM::LDC2_W 44))
         (194 (INVOKESTATIC (METHODCP "floorDivide"
                                      "java.util.Calendar" (LONG LONG)
                                      LONG)))
         (197 (JVM::L2I))
         (198 (ISTORE 5))
         (200 (JVM::SIPUSH 365))
         (203 (ILOAD 5))
         (205 (ICONST_1))
         (206 (ISUB))
         (207 (IMUL))
         (208 (ILOAD 5))
         (210 (ICONST_1))
         (211 (ISUB))
         (212 (ICONST_4))
         (213 (INVOKESTATIC (METHODCP "floorDivide"
                                      "java.util.Calendar" (INT INT)
                                      INT)))
         (216 (IADD))
         (217 (JVM::I2L))
         (218 (JVM::LSTORE 9))
         (220 (JVM::LLOAD 7))
         (222 (JVM::LLOAD 9))
         (224 (JVM::LSUB))
         (225 (JVM::L2I))
         (226 (ISTORE_3))
         (227 (ILOAD 5))
         (229 (ICONST_3))
         (230 (JVM::IAND))
         (231 (IFNE 238))
         (234 (ICONST_1))
         (235 (GOTO 239))
         (238 (ICONST_0))
         (239 (ISTORE 6))
         (241 (ALOAD_0))
         (242 (JVM::LLOAD 7))
         (244 (LCONST_1))
         (245 (JVM::LSUB))
         (246 (JVM::LDC2_W 40))
         (249 (JVM::LREM))
         (250 (JVM::L2I))
         (251 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (254 (ICONST_0))
         (255 (ISTORE 7))
         (257 (ILOAD 6))
         (259 (IFEQ 267))
         (262 (BIPUSH 60))
         (264 (GOTO 269))
         (267 (BIPUSH 59))
         (269 (ISTORE 8))
         (271 (ILOAD_3))
         (272 (ILOAD 8))
         (274 (IF_ICMPLT 289))
         (277 (ILOAD 6))
         (279 (IFEQ 286))
         (282 (ICONST_1))
         (283 (GOTO 287))
         (286 (ICONST_2))
         (287 (ISTORE 7))
         (289 (BIPUSH 12))
         (291 (ILOAD_3))
         (292 (ILOAD 7))
         (294 (IADD))
         (295 (IMUL))
         (296 (BIPUSH 6))
         (298 (IADD))
         (299 (JVM::SIPUSH 367))
         (302 (IDIV))
         (303 (ISTORE 9))
         (305 (ILOAD_3))
         (306 (ILOAD 6))
         (308 (IFEQ 320))
         (311 (GETSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                       "java.util.Calendar" (ARRAY INT))))
         (314 (ILOAD 9))
         (316 (IALOAD))
         (317 (GOTO 326))
         (320 (GETSTATIC (JVM::FIELDCP "NUM_DAYS"
                                       "java.util.Calendar" (ARRAY INT))))
         (323 (ILOAD 9))
         (325 (IALOAD))
         (326 (ISUB))
         (327 (ICONST_1))
         (328 (IADD))
         (329 (ISTORE 10))
         (331 (ALOAD_0))
         (332 (DUP))
         (333 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (336 (ALOAD_0))
         (337 (GETFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (340 (IFGE 348))
         (343 (BIPUSH 8))
         (345 (GOTO 349))
         (348 (ICONST_1))
         (349 (IADD))
         (350 (PUTFIELD (JVM::FIELDCP "day_field" "java.util.Calendar" INT)))
         (353 (IINC 9 0))
         (356 (ALOAD_0))
         (357 (ILOAD 5))
         (359 (BIPUSH 9))
         (361 (JVM::ISHL))
         (362 (PUTFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (365 (ALOAD_0))
         (366 (DUP))
         (367 (GETFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (370 (ILOAD 9))
         (372 (BIPUSH 15))
         (374 (JVM::IAND))
         (375 (ICONST_5))
         (376 (JVM::ISHL))
         (377 (JVM::IOR))
         (378 (PUTFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (381 (ALOAD_0))
         (382 (DUP))
         (383 (GETFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (386 (ILOAD 10))
         (388 (BIPUSH 31))
         (390 (JVM::IAND))
         (391 (JVM::IOR))
         (392 (PUTFIELD (JVM::FIELDCP "packed_date"
                                      "java.util.Calendar" INT)))
         (395 (RETURN))
         (ENDOFCODE 396))
       (EXCEPTIONS)
       (STACKMAP (114 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (121 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (124 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (148 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (152 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK)
                             NIL))
                 (153 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX
                                     INT TOPX INT TOPX LONG TOPX (ARRAY INT)
                                     INT INT INT INT)
                             (STACK INT)
                             NIL))
                 (171 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX TOPX TOPX TOPX
                                     TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (238 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     TOPX LONG TOPX LONG TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (239 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     TOPX LONG TOPX LONG TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (254 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT LONG TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (267 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (269 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT TOPX TOPX TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (286 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (287 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (289 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX INT
                                     INT INT INT TOPX TOPX TOPX TOPX TOPX)
                             (STACK)
                             NIL))
                 (320 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT TOPX TOPX TOPX TOPX)
                             (STACK INT)
                             NIL))
                 (326 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT TOPX TOPX TOPX TOPX)
                             (STACK INT INT)
                             NIL))
                 (348 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK INT (CLASS "java.util.Calendar"))
                             NIL))
                 (349 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     LONG TOPX INT TOPX
                                     INT INT INT INT INT INT TOPX TOPX TOPX)
                             (STACK INT INT (CLASS "java.util.Calendar"))
                             NIL)))))
     (METHOD
      "calculateTime" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 9)
       (JVM::MAX_LOCALS . 11)
       (CODE_LENGTH . 273)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "packed_date"
                                   "java.util.Calendar" INT)))
        (4 (BIPUSH 9))
        (6 (JVM::ISHR))
        (7 (ISTORE_1))
        (8 (ILOAD_1))
        (9 (JVM::SIPUSH 1582))
        (12 (IF_ICMPLT 19))
        (15 (ICONST_1))
        (16 (GOTO 20))
        (19 (ICONST_0))
        (20 (ISTORE_2))
        (21 (ALOAD_0))
        (22 (ILOAD_2))
        (23 (ILOAD_1))
        (24 (INVOKESPECIAL (METHODCP "calculateJulianDay"
                                     "java.util.Calendar" (BOOLEAN INT)
                                     LONG)))
        (27 (JVM::LSTORE_3))
        (28 (JVM::LLOAD_3))
        (29 (INVOKESTATIC (METHODCP "julianDayToMillis"
                                    "java.util.Calendar" (LONG)
                                    LONG)))
        (32 (JVM::LSTORE 5))
        (34 (ILOAD_2))
        (35 (JVM::LLOAD 5))
        (37 (JVM::LDC2_W 23))
        (40 (LCMP))
        (41 (IFLT 48))
        (44 (ICONST_1))
        (45 (GOTO 49))
        (48 (ICONST_0))
        (49 (IF_ICMPEQ 81))
        (52 (JVM::LLOAD_3))
        (53 (JVM::LDC2_W 45))
        (56 (LCMP))
        (57 (IFEQ 81))
        (60 (ALOAD_0))
        (61 (ILOAD_2))
        (62 (IFNE 69))
        (65 (ICONST_1))
        (66 (GOTO 70))
        (69 (ICONST_0))
        (70 (ILOAD_1))
        (71 (INVOKESPECIAL (METHODCP "calculateJulianDay"
                                     "java.util.Calendar" (BOOLEAN INT)
                                     LONG)))
        (74 (JVM::LSTORE_3))
        (75 (JVM::LLOAD_3))
        (76 (INVOKESTATIC (METHODCP "julianDayToMillis"
                                    "java.util.Calendar" (LONG)
                                    LONG)))
        (79 (JVM::LSTORE 5))
        (81 (ICONST_0))
        (82 (ISTORE 7))
        (84 (ILOAD 7))
        (86 (ALOAD_0))
        (87 (GETFIELD (JVM::FIELDCP "packed_time"
                                    "java.util.Calendar" INT)))
        (90 (BIPUSH 22))
        (92 (JVM::ISHR))
        (93 (BIPUSH 31))
        (95 (JVM::IAND))
        (96 (IADD))
        (97 (ISTORE 7))
        (99 (ILOAD 7))
        (101 (BIPUSH 60))
        (103 (IMUL))
        (104 (ISTORE 7))
        (106 (ILOAD 7))
        (108 (ALOAD_0))
        (109 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (112 (BIPUSH 16))
        (114 (JVM::ISHR))
        (115 (BIPUSH 63))
        (117 (JVM::IAND))
        (118 (IADD))
        (119 (ISTORE 7))
        (121 (ILOAD 7))
        (123 (BIPUSH 60))
        (125 (IMUL))
        (126 (ISTORE 7))
        (128 (ILOAD 7))
        (130 (ALOAD_0))
        (131 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (134 (BIPUSH 10))
        (136 (JVM::ISHR))
        (137 (BIPUSH 63))
        (139 (JVM::IAND))
        (140 (IADD))
        (141 (ISTORE 7))
        (143 (ILOAD 7))
        (145 (JVM::SIPUSH 1000))
        (148 (IMUL))
        (149 (ISTORE 7))
        (151 (ILOAD 7))
        (153 (ALOAD_0))
        (154 (GETFIELD (JVM::FIELDCP "packed_time"
                                     "java.util.Calendar" INT)))
        (157 (JVM::SIPUSH 1023))
        (160 (JVM::IAND))
        (161 (IADD))
        (162 (ISTORE 7))
        (164 (ALOAD_0))
        (165 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
        (168 (INVOKEVIRTUAL (METHODCP "getRawOffset"
                                      "java.util.TimeZone" NIL INT)))
        (171 (ISTORE 8))
        (173 (JVM::LLOAD 5))
        (175 (ILOAD 7))
        (177 (JVM::I2L))
        (178 (JVM::LADD))
        (179 (JVM::LSTORE 5))
        (181 (ALOAD_0))
        (182 (ICONST_0))
        (183 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (186 (ICONST_1))
        (187 (NEWARRAY INT))
        (189 (ASTORE 9))
        (191 (JVM::LLOAD 5))
        (193 (LDC 46))
        (195 (ALOAD 9))
        (197 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                     (LONG INT (ARRAY INT))
                                     INT)))
        (200 (POP))
        (201 (JVM::LLOAD_3))
        (202 (INVOKESTATIC (METHODCP "julianDayToDayOfWeek"
                                     "java.util.Calendar" (LONG)
                                     INT)))
        (205 (ISTORE 10))
        (207 (ALOAD_0))
        (208 (ALOAD_0))
        (209 (GETFIELD (JVM::FIELDCP "zone" "java.util.Calendar"
                                     (CLASS "java.util.TimeZone"))))
        (212 (ICONST_1))
        (213 (ALOAD_0))
        (214 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (217 (BIPUSH 9))
        (219 (JVM::ISHR))
        (220 (ALOAD_0))
        (221 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (224 (ICONST_5))
        (225 (JVM::ISHR))
        (226 (BIPUSH 15))
        (228 (JVM::IAND))
        (229 (ALOAD_0))
        (230 (GETFIELD (JVM::FIELDCP "packed_date"
                                     "java.util.Calendar" INT)))
        (233 (BIPUSH 31))
        (235 (JVM::IAND))
        (236 (ILOAD 10))
        (238 (ALOAD 9))
        (240 (ICONST_0))
        (241 (IALOAD))
        (242 (INVOKEVIRTUAL (METHODCP "getOffset" "java.util.TimeZone"
                                      (INT INT INT INT INT INT)
                                      INT)))
        (245 (ILOAD 8))
        (247 (ISUB))
        (248 (PUTFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (251 (ALOAD_0))
        (252 (ICONST_1))
        (253 (PUTFIELD (JVM::FIELDCP "dstSet" "java.util.Calendar" BOOLEAN)))
        (256 (ALOAD_0))
        (257 (JVM::LLOAD 5))
        (259 (ILOAD 8))
        (261 (JVM::I2L))
        (262 (JVM::LSUB))
        (263 (ALOAD_0))
        (264 (GETFIELD (JVM::FIELDCP "dstOffset" "java.util.Calendar" INT)))
        (267 (JVM::I2L))
        (268 (JVM::LSUB))
        (269 (PUTFIELD (JVM::FIELDCP "time" "java.util.Calendar" LONG)))
        (272 (RETURN))
        (ENDOFCODE 273))
       (EXCEPTIONS)
       (STACKMAP (19 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (20 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT TOPX
                                    TOPX TOPX TOPX TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (49 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT INT)
                            NIL))
                 (69 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK (CLASS "java.util.Calendar"))
                            NIL))
                 (70 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK INT (CLASS "java.util.Calendar"))
                            NIL))
                 (81 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT INT
                                    LONG TOPX LONG TOPX TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "calculateJulianDay"
      (PARAMETERS BOOLEAN INT)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 10)
       (CODE_LENGTH . 181)
       (PARSEDCODE
            (0 (ICONST_0))
            (1 (ISTORE_3))
            (2 (LCONST_0))
            (3 (JVM::LSTORE 5))
            (5 (ALOAD_0))
            (6 (GETFIELD (JVM::FIELDCP "packed_date"
                                       "java.util.Calendar" INT)))
            (9 (ICONST_5))
            (10 (JVM::ISHR))
            (11 (BIPUSH 15))
            (13 (JVM::IAND))
            (14 (ISTORE_3))
            (15 (ILOAD_3))
            (16 (IFLT 25))
            (19 (ILOAD_3))
            (20 (BIPUSH 11))
            (22 (IF_ICMPLE 46))
            (25 (ICONST_1))
            (26 (NEWARRAY INT))
            (28 (ASTORE 7))
            (30 (ILOAD_2))
            (31 (ILOAD_3))
            (32 (BIPUSH 12))
            (34 (ALOAD 7))
            (36 (INVOKESTATIC (METHODCP "floorDivide" "java.util.Calendar"
                                        (INT INT (ARRAY INT))
                                        INT)))
            (39 (IADD))
            (40 (ISTORE_2))
            (41 (ALOAD 7))
            (43 (ICONST_0))
            (44 (IALOAD))
            (45 (ISTORE_3))
            (46 (ILOAD_2))
            (47 (ICONST_4))
            (48 (IREM))
            (49 (IFNE 56))
            (52 (ICONST_1))
            (53 (GOTO 57))
            (56 (ICONST_0))
            (57 (ISTORE 7))
            (59 (ILOAD_2))
            (60 (ICONST_1))
            (61 (ISUB))
            (62 (ISTORE 4))
            (64 (JVM::LDC2_W 47))
            (67 (ILOAD 4))
            (69 (JVM::I2L))
            (70 (JVM::LMUL))
            (71 (ILOAD 4))
            (73 (ICONST_4))
            (74 (INVOKESTATIC (METHODCP "floorDivide"
                                        "java.util.Calendar" (INT INT)
                                        INT)))
            (77 (JVM::I2L))
            (78 (JVM::LADD))
            (79 (JVM::LDC2_W 48))
            (82 (JVM::LADD))
            (83 (JVM::LSTORE 8))
            (85 (ILOAD_1))
            (86 (IFEQ 140))
            (89 (ILOAD 7))
            (91 (IFEQ 113))
            (94 (ILOAD_2))
            (95 (BIPUSH 100))
            (97 (IREM))
            (98 (IFNE 109))
            (101 (ILOAD_2))
            (102 (JVM::SIPUSH 400))
            (105 (IREM))
            (106 (IFNE 113))
            (109 (ICONST_1))
            (110 (GOTO 114))
            (113 (ICONST_0))
            (114 (ISTORE 7))
            (116 (JVM::LLOAD 8))
            (118 (ILOAD 4))
            (120 (JVM::SIPUSH 400))
            (123 (INVOKESTATIC (METHODCP "floorDivide"
                                         "java.util.Calendar" (INT INT)
                                         INT)))
            (126 (ILOAD 4))
            (128 (BIPUSH 100))
            (130 (INVOKESTATIC (METHODCP "floorDivide"
                                         "java.util.Calendar" (INT INT)
                                         INT)))
            (133 (ISUB))
            (134 (ICONST_2))
            (135 (IADD))
            (136 (JVM::I2L))
            (137 (JVM::LADD))
            (138 (JVM::LSTORE 8))
            (140 (JVM::LLOAD 8))
            (142 (ILOAD 7))
            (144 (IFEQ 156))
            (147 (GETSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                          "java.util.Calendar" (ARRAY INT))))
            (150 (ILOAD_3))
            (151 (IALOAD))
            (152 (JVM::I2L))
            (153 (GOTO 162))
            (156 (GETSTATIC (JVM::FIELDCP "NUM_DAYS"
                                          "java.util.Calendar" (ARRAY INT))))
            (159 (ILOAD_3))
            (160 (IALOAD))
            (161 (JVM::I2L))
            (162 (JVM::LADD))
            (163 (JVM::LSTORE 8))
            (165 (JVM::LLOAD 8))
            (167 (ALOAD_0))
            (168 (GETFIELD (JVM::FIELDCP "packed_date"
                                         "java.util.Calendar" INT)))
            (171 (BIPUSH 31))
            (173 (JVM::IAND))
            (174 (JVM::I2L))
            (175 (JVM::LADD))
            (176 (JVM::LSTORE 8))
            (178 (JVM::LLOAD 8))
            (180 (JVM::LRETURN))
            (ENDOFCODE 181))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (46 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (56 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK)
                            NIL))
                 (57 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                    INT
                                    INT INT TOPX LONG TOPX TOPX TOPX TOPX)
                            (STACK INT)
                            NIL))
                 (109 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (113 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (114 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK INT)
                             NIL))
                 (140 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK)
                             NIL))
                 (156 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG)
                             NIL))
                 (162 (FRAME (LOCALS (CLASS "java.util.Calendar")
                                     INT INT INT INT LONG TOPX INT LONG TOPX)
                             (STACK TOPX LONG TOPX LONG)
                             NIL)))))
     (METHOD
       "millisToJulianDay" (PARAMETERS LONG)
       (RETURNTYPE . LONG)
       (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
       (CODE (MAX_STACK . 6)
             (JVM::MAX_LOCALS . 2)
             (CODE_LENGTH . 12)
             (PARSEDCODE
                  (0 (JVM::LDC2_W 49))
                  (3 (JVM::LLOAD_0))
                  (4 (JVM::LDC2_W 21))
                  (7 (INVOKESTATIC (METHODCP "floorDivide"
                                             "java.util.Calendar" (LONG LONG)
                                             LONG)))
                  (10 (JVM::LADD))
                  (11 (JVM::LRETURN))
                  (ENDOFCODE 12))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD "julianDayToMillis" (PARAMETERS LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 10)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (JVM::LDC2_W 49))
                               (4 (JVM::LSUB))
                               (5 (JVM::LDC2_W 21))
                               (8 (JVM::LMUL))
                               (9 (JVM::LRETURN))
                               (ENDOFCODE 10))
                   (EXCEPTIONS)
                   (STACKMAP)))
     (METHOD "julianDayToDayOfWeek" (PARAMETERS LONG)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 3)
                   (CODE_LENGTH . 22)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_1))
                               (2 (JVM::LADD))
                               (3 (JVM::LDC2_W 40))
                               (6 (JVM::LREM))
                               (7 (JVM::L2I))
                               (8 (ISTORE_2))
                               (9 (ILOAD_2))
                               (10 (ILOAD_2))
                               (11 (IFGE 19))
                               (14 (BIPUSH 8))
                               (16 (GOTO 20))
                               (19 (ICONST_1))
                               (20 (IADD))
                               (21 (IRETURN))
                               (ENDOFCODE 22))
                   (EXCEPTIONS)
                   (STACKMAP (19 (FRAME (LOCALS LONG TOPX INT)
                                        (STACK INT)
                                        NIL))
                             (20 (FRAME (LOCALS LONG TOPX INT)
                                        (STACK INT INT)
                                        NIL)))))
     (METHOD "floorDivide" (PARAMETERS LONG LONG)
             (RETURNTYPE . LONG)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 4)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 20)
                   (PARSEDCODE (0 (JVM::LLOAD_0))
                               (1 (LCONST_0))
                               (2 (LCMP))
                               (3 (IFLT 12))
                               (6 (JVM::LLOAD_0))
                               (7 (JVM::LLOAD_2))
                               (8 (JVM::LDIV))
                               (9 (GOTO 19))
                               (12 (JVM::LLOAD_0))
                               (13 (LCONST_1))
                               (14 (JVM::LADD))
                               (15 (JVM::LLOAD_2))
                               (16 (JVM::LDIV))
                               (17 (LCONST_1))
                               (18 (JVM::LSUB))
                               (19 (JVM::LRETURN))
                               (ENDOFCODE 20))
                   (EXCEPTIONS)
                   (STACKMAP (12 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK)
                                        NIL))
                             (19 (FRAME (LOCALS LONG TOPX LONG TOPX)
                                        (STACK TOPX LONG)
                                        NIL)))))
     (METHOD "floorDivide" (PARAMETERS INT INT)
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 2)
                   (CODE_LENGTH . 18)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFLT 10))
                               (4 (ILOAD_0))
                               (5 (ILOAD_1))
                               (6 (IDIV))
                               (7 (GOTO 17))
                               (10 (ILOAD_0))
                               (11 (ICONST_1))
                               (12 (IADD))
                               (13 (ILOAD_1))
                               (14 (IDIV))
                               (15 (ICONST_1))
                               (16 (ISUB))
                               (17 (IRETURN))
                               (ENDOFCODE 18))
                   (EXCEPTIONS)
                   (STACKMAP (10 (FRAME (LOCALS INT INT) (STACK) NIL))
                             (17 (FRAME (LOCALS INT INT)
                                        (STACK INT)
                                        NIL)))))
     (METHOD "floorDivide"
             (PARAMETERS INT INT (ARRAY INT))
             (RETURNTYPE . INT)
             (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
             (CODE (MAX_STACK . 5)
                   (JVM::MAX_LOCALS . 4)
                   (CODE_LENGTH . 32)
                   (PARSEDCODE (0 (ILOAD_0))
                               (1 (IFLT 14))
                               (4 (ALOAD_2))
                               (5 (ICONST_0))
                               (6 (ILOAD_0))
                               (7 (ILOAD_1))
                               (8 (IREM))
                               (9 (IASTORE))
                               (10 (ILOAD_0))
                               (11 (ILOAD_1))
                               (12 (IDIV))
                               (13 (IRETURN))
                               (14 (ILOAD_0))
                               (15 (ICONST_1))
                               (16 (IADD))
                               (17 (ILOAD_1))
                               (18 (IDIV))
                               (19 (ICONST_1))
                               (20 (ISUB))
                               (21 (ISTORE_3))
                               (22 (ALOAD_2))
                               (23 (ICONST_0))
                               (24 (ILOAD_0))
                               (25 (ILOAD_3))
                               (26 (ILOAD_1))
                               (27 (IMUL))
                               (28 (ISUB))
                               (29 (IASTORE))
                               (30 (ILOAD_3))
                               (31 (IRETURN))
                               (ENDOFCODE 32))
                   (EXCEPTIONS)
                   (STACKMAP (14 (FRAME (LOCALS INT INT (ARRAY INT) TOPX)
                                        (STACK)
                                        NIL)))))
     (METHOD
          "floorDivide"
          (PARAMETERS LONG INT (ARRAY INT))
          (RETURNTYPE . INT)
          (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
          (CODE (MAX_STACK . 6)
                (JVM::MAX_LOCALS . 5)
                (CODE_LENGTH . 45)
                (PARSEDCODE (0 (JVM::LLOAD_0))
                            (1 (LCONST_0))
                            (2 (LCMP))
                            (3 (IFLT 20))
                            (6 (ALOAD_3))
                            (7 (ICONST_0))
                            (8 (JVM::LLOAD_0))
                            (9 (ILOAD_2))
                            (10 (JVM::I2L))
                            (11 (JVM::LREM))
                            (12 (JVM::L2I))
                            (13 (IASTORE))
                            (14 (JVM::LLOAD_0))
                            (15 (ILOAD_2))
                            (16 (JVM::I2L))
                            (17 (JVM::LDIV))
                            (18 (JVM::L2I))
                            (19 (IRETURN))
                            (20 (JVM::LLOAD_0))
                            (21 (LCONST_1))
                            (22 (JVM::LADD))
                            (23 (ILOAD_2))
                            (24 (JVM::I2L))
                            (25 (JVM::LDIV))
                            (26 (LCONST_1))
                            (27 (JVM::LSUB))
                            (28 (JVM::L2I))
                            (29 (ISTORE 4))
                            (31 (ALOAD_3))
                            (32 (ICONST_0))
                            (33 (JVM::LLOAD_0))
                            (34 (ILOAD 4))
                            (36 (ILOAD_2))
                            (37 (IMUL))
                            (38 (JVM::I2L))
                            (39 (JVM::LSUB))
                            (40 (JVM::L2I))
                            (41 (IASTORE))
                            (42 (ILOAD 4))
                            (44 (IRETURN))
                            (ENDOFCODE 45))
                (EXCEPTIONS)
                (STACKMAP (20 (FRAME (LOCALS LONG TOPX INT (ARRAY INT) TOPX)
                                     (STACK)
                                     NIL)))))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 167)
       (PARSEDCODE
            (0 (BIPUSH 12))
            (2 (NEWARRAY INT))
            (4 (DUP))
            (5 (ICONST_0))
            (6 (ICONST_0))
            (7 (IASTORE))
            (8 (DUP))
            (9 (ICONST_1))
            (10 (BIPUSH 31))
            (12 (IASTORE))
            (13 (DUP))
            (14 (ICONST_2))
            (15 (BIPUSH 59))
            (17 (IASTORE))
            (18 (DUP))
            (19 (ICONST_3))
            (20 (BIPUSH 90))
            (22 (IASTORE))
            (23 (DUP))
            (24 (ICONST_4))
            (25 (BIPUSH 120))
            (27 (IASTORE))
            (28 (DUP))
            (29 (ICONST_5))
            (30 (JVM::SIPUSH 151))
            (33 (IASTORE))
            (34 (DUP))
            (35 (BIPUSH 6))
            (37 (JVM::SIPUSH 181))
            (40 (IASTORE))
            (41 (DUP))
            (42 (BIPUSH 7))
            (44 (JVM::SIPUSH 212))
            (47 (IASTORE))
            (48 (DUP))
            (49 (BIPUSH 8))
            (51 (JVM::SIPUSH 243))
            (54 (IASTORE))
            (55 (DUP))
            (56 (BIPUSH 9))
            (58 (JVM::SIPUSH 273))
            (61 (IASTORE))
            (62 (DUP))
            (63 (BIPUSH 10))
            (65 (JVM::SIPUSH 304))
            (68 (IASTORE))
            (69 (DUP))
            (70 (BIPUSH 11))
            (72 (JVM::SIPUSH 334))
            (75 (IASTORE))
            (76 (PUTSTATIC (JVM::FIELDCP "NUM_DAYS"
                                         "java.util.Calendar" (ARRAY INT))))
            (79 (BIPUSH 12))
            (81 (NEWARRAY INT))
            (83 (DUP))
            (84 (ICONST_0))
            (85 (ICONST_0))
            (86 (IASTORE))
            (87 (DUP))
            (88 (ICONST_1))
            (89 (BIPUSH 31))
            (91 (IASTORE))
            (92 (DUP))
            (93 (ICONST_2))
            (94 (BIPUSH 60))
            (96 (IASTORE))
            (97 (DUP))
            (98 (ICONST_3))
            (99 (BIPUSH 91))
            (101 (IASTORE))
            (102 (DUP))
            (103 (ICONST_4))
            (104 (BIPUSH 121))
            (106 (IASTORE))
            (107 (DUP))
            (108 (ICONST_5))
            (109 (JVM::SIPUSH 152))
            (112 (IASTORE))
            (113 (DUP))
            (114 (BIPUSH 6))
            (116 (JVM::SIPUSH 182))
            (119 (IASTORE))
            (120 (DUP))
            (121 (BIPUSH 7))
            (123 (JVM::SIPUSH 213))
            (126 (IASTORE))
            (127 (DUP))
            (128 (BIPUSH 8))
            (130 (JVM::SIPUSH 244))
            (133 (IASTORE))
            (134 (DUP))
            (135 (BIPUSH 9))
            (137 (JVM::SIPUSH 274))
            (140 (IASTORE))
            (141 (DUP))
            (142 (BIPUSH 10))
            (144 (JVM::SIPUSH 305))
            (147 (IASTORE))
            (148 (DUP))
            (149 (BIPUSH 11))
            (151 (JVM::SIPUSH 335))
            (154 (IASTORE))
            (155 (PUTSTATIC (JVM::FIELDCP "LEAP_NUM_DAYS"
                                          "java.util.Calendar" (ARRAY INT))))
            (158 (ACONST_NULL))
            (159 (PUTSTATIC (JVM::FIELDCP "platform" "java.util.Calendar"
                                          (CLASS "java.lang.String"))))
            (162 (ACONST_NULL))
            (163 (PUTSTATIC (JVM::FIELDCP "classRoot" "java.util.Calendar"
                                          (CLASS "java.lang.String"))))
            (166 (RETURN))
            (ENDOFCODE 167))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *ABSTRACT* *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Date"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "millis"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 8)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (INVOKESTATIC (METHODCP "currentTimeMillis"
                                            "java.lang.System" NIL LONG)))
                 (4 (INVOKESPECIAL (METHODCP "<init>" "java.util.Date" (LONG)
                                             VOID)))
                 (7 (RETURN))
                 (ENDOFCODE 8))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::LLOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "millis" "java.util.Date" LONG)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "getTime" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 2)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 5)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (GETFIELD (JVM::FIELDCP "millis" "java.util.Date" LONG)))
                 (4 (JVM::LRETURN))
                 (ENDOFCODE 5))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "setTime" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 3)
            (CODE_LENGTH . 6)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (JVM::LLOAD_1))
                 (2 (PUTFIELD (JVM::FIELDCP "millis" "java.util.Date" LONG)))
                 (5 (RETURN))
                 (ENDOFCODE 6))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "equals"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 32)
       (PARSEDCODE
          (0 (ALOAD_1))
          (1 (IFNULL 30))
          (4 (ALOAD_1))
          (5 (JVM::INSTANCEOF (CLASS "java.util.Date")))
          (8 (IFEQ 30))
          (11 (ALOAD_0))
          (12 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
          (15 (ALOAD_1))
          (16 (CHECKCAST (CLASS "java.util.Date")))
          (19 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
          (22 (LCMP))
          (23 (IFNE 30))
          (26 (ICONST_1))
          (27 (GOTO 31))
          (30 (ICONST_0))
          (31 (IRETURN))
          (ENDOFCODE 32))
       (EXCEPTIONS)
       (STACKMAP (30 (FRAME (LOCALS (CLASS "java.util.Date")
                                    (CLASS "java.lang.Object"))
                            (STACK)
                            NIL))
                 (31 (FRAME (LOCALS (CLASS "java.util.Date")
                                    (CLASS "java.lang.Object"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "hashCode" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 14)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (INVOKEVIRTUAL (METHODCP "getTime" "java.util.Date" NIL LONG)))
           (4 (JVM::LSTORE_1))
           (5 (JVM::LLOAD_1))
           (6 (JVM::L2I))
           (7 (JVM::LLOAD_1))
           (8 (BIPUSH 32))
           (10 (JVM::LSHR))
           (11 (JVM::L2I))
           (12 (JVM::IXOR))
           (13 (IRETURN))
           (ENDOFCODE 14))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.EmptyStackException"
    "java.lang.RuntimeException"
    (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.RuntimeException" NIL VOID)))
         (4 (RETURN))
         (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Random" "java.lang.Object"
    (CONSTANT_POOL (LONG 25214903917)
                   (LONG 11)
                   (LONG 281474976710655)
                   (INT 8)
                   (INT 4))
    (FIELDS (FIELD "seed"
                   LONG (ACCESSFLAGS *CLASS* *PRIVATE*)
                   -1)
            (FIELD "multiplier" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   0)
            (FIELD "addend" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   1)
            (FIELD "mask" LONG
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   2)
            (FIELD "BITS_PER_BYTE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   3)
            (FIELD "BYTES_PER_INT" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PRIVATE* *STATIC*)
                   4))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 1)
          (CODE_LENGTH . 8)
          (PARSEDCODE
               (0 (ALOAD_0))
               (1 (INVOKESTATIC (METHODCP "currentTimeMillis"
                                          "java.lang.System" NIL LONG)))
               (4 (INVOKESPECIAL (METHODCP "<init>" "java.util.Random" (LONG)
                                           VOID)))
               (7 (RETURN))
               (ENDOFCODE 8))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 10)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (JVM::LLOAD_1))
          (6 (INVOKEVIRTUAL (METHODCP "setSeed" "java.util.Random" (LONG)
                                      VOID)))
          (9 (RETURN))
          (ENDOFCODE 10))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "setSeed" (PARAMETERS LONG)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
           (MAX_STACK . 5)
           (JVM::MAX_LOCALS . 3)
           (CODE_LENGTH . 14)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (JVM::LLOAD_1))
                (2 (JVM::LDC2_W 0))
                (5 (JVM::LXOR))
                (6 (JVM::LDC2_W 2))
                (9 (JVM::LAND))
                (10 (PUTFIELD (JVM::FIELDCP "seed" "java.util.Random" LONG)))
                (13 (RETURN))
                (ENDOFCODE 14))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "next" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS*
                   *PROTECTED* *SUPER* *SYNCHRONIZED*)
      (CODE
           (MAX_STACK . 4)
           (JVM::MAX_LOCALS . 4)
           (CODE_LENGTH . 30)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (GETFIELD (JVM::FIELDCP "seed" "java.util.Random" LONG)))
                (4 (JVM::LDC2_W 0))
                (7 (JVM::LMUL))
                (8 (JVM::LDC2_W 1))
                (11 (JVM::LADD))
                (12 (JVM::LDC2_W 2))
                (15 (JVM::LAND))
                (16 (JVM::LSTORE_2))
                (17 (ALOAD_0))
                (18 (JVM::LLOAD_2))
                (19 (PUTFIELD (JVM::FIELDCP "seed" "java.util.Random" LONG)))
                (22 (JVM::LLOAD_2))
                (23 (BIPUSH 48))
                (25 (ILOAD_1))
                (26 (ISUB))
                (27 (JVM::LUSHR))
                (28 (JVM::L2I))
                (29 (IRETURN))
                (ENDOFCODE 30))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
       "nextInt" (PARAMETERS)
       (RETURNTYPE . INT)
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 1)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (BIPUSH 32))
                  (3 (INVOKEVIRTUAL (METHODCP "next" "java.util.Random" (INT)
                                              INT)))
                  (6 (IRETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "nextLong" (PARAMETERS)
      (RETURNTYPE . LONG)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 4)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 19)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (BIPUSH 32))
                 (3 (INVOKEVIRTUAL (METHODCP "next" "java.util.Random" (INT)
                                             INT)))
                 (6 (JVM::I2L))
                 (7 (BIPUSH 32))
                 (9 (JVM::LSHL))
                 (10 (ALOAD_0))
                 (11 (BIPUSH 32))
                 (13 (INVOKEVIRTUAL (METHODCP "next" "java.util.Random" (INT)
                                              INT)))
                 (16 (JVM::I2L))
                 (17 (JVM::LADD))
                 (18 (JVM::LRETURN))
                 (ENDOFCODE 19))
            (EXCEPTIONS)
            (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Stack"
    "java.util.Vector" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.util.Vector" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
       "push"
       (PARAMETERS (CLASS "java.lang.Object"))
       (RETURNTYPE CLASS "java.lang.Object")
       (ACCESSFLAGS *CLASS* *PUBLIC*)
       (CODE (MAX_STACK . 2)
             (JVM::MAX_LOCALS . 2)
             (CODE_LENGTH . 7)
             (PARSEDCODE
                  (0 (ALOAD_0))
                  (1 (ALOAD_1))
                  (2 (INVOKEVIRTUAL (METHODCP "addElement" "java.util.Vector"
                                              ((CLASS "java.lang.Object"))
                                              VOID)))
                  (5 (ALOAD_1))
                  (6 (ARETURN))
                  (ENDOFCODE 7))
             (EXCEPTIONS)
             (STACKMAP)))
     (METHOD
      "pop" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 3)
        (JVM::MAX_LOCALS . 3)
        (CODE_LENGTH . 19)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
             (4 (ISTORE_2))
             (5 (ALOAD_0))
             (6 (INVOKEVIRTUAL (METHODCP "peek" "java.util.Stack"
                                         NIL (CLASS "java.lang.Object"))))
             (9 (ASTORE_1))
             (10 (ALOAD_0))
             (11 (ILOAD_2))
             (12 (ICONST_1))
             (13 (ISUB))
             (14 (INVOKEVIRTUAL (METHODCP "removeElementAt"
                                          "java.util.Vector" (INT)
                                          VOID)))
             (17 (ALOAD_1))
             (18 (ARETURN))
             (ENDOFCODE 19))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "peek" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 25)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
        (4 (ISTORE_1))
        (5 (ILOAD_1))
        (6 (IFNE 17))
        (9 (NEW (CLASS "java.util.EmptyStackException")))
        (12 (DUP))
        (13 (INVOKESPECIAL (METHODCP "<init>" "java.util.EmptyStackException"
                                     NIL VOID)))
        (16 (ATHROW))
        (17 (ALOAD_0))
        (18 (ILOAD_1))
        (19 (ICONST_1))
        (20 (ISUB))
        (21 (INVOKEVIRTUAL (METHODCP "elementAt" "java.util.Vector" (INT)
                                     (CLASS "java.lang.Object"))))
        (24 (ARETURN))
        (ENDOFCODE 25))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.util.Stack") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "empty" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 13)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
             (4 (IFNE 11))
             (7 (ICONST_1))
             (8 (GOTO 12))
             (11 (ICONST_0))
             (12 (IRETURN))
             (ENDOFCODE 13))
        (EXCEPTIONS)
        (STACKMAP (11 (FRAME (LOCALS (CLASS "java.util.Stack"))
                             (STACK)
                             NIL))
                  (12 (FRAME (LOCALS (CLASS "java.util.Stack"))
                             (STACK INT)
                             NIL)))))
     (METHOD
      "search"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 19)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ALOAD_1))
            (2 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.util.Vector"
                                        ((CLASS "java.lang.Object"))
                                        INT)))
            (5 (ISTORE_2))
            (6 (ILOAD_2))
            (7 (IFLT 17))
            (10 (ALOAD_0))
            (11 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
            (14 (ILOAD_2))
            (15 (ISUB))
            (16 (IRETURN))
            (17 (ICONST_M1))
            (18 (IRETURN))
            (ENDOFCODE 19))
       (EXCEPTIONS)
       (STACKMAP (17 (FRAME (LOCALS (CLASS "java.util.Stack")
                                    (CLASS "java.lang.Object")
                                    INT)
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.Vector" "java.lang.Object"
    (CONSTANT_POOL (STRING "Illegal Capacity: ")
                   (STRING " >= ")
                   (STRING " < 0")
                   (STRING " > ")
                   (STRING "[")
                   (STRING ", ")
                   (STRING "]"))
    (FIELDS (FIELD "elementData"
                   (ARRAY (CLASS "java.lang.Object"))
                   (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "elementCount"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1)
            (FIELD "capacityIncrement"
                   INT (ACCESSFLAGS *CLASS* *PROTECTED*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 49)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
         (4 (ILOAD_1))
         (5 (IFGE 35))
         (8 (NEW (CLASS "java.lang.IllegalArgumentException")))
         (11 (DUP))
         (12 (NEW (CLASS "java.lang.StringBuffer")))
         (15 (DUP))
         (16 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (19 (LDC 0))
         (21 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (24 (ILOAD_1))
         (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (28 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (31 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IllegalArgumentException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (34 (ATHROW))
         (35 (ALOAD_0))
         (36 (ILOAD_1))
         (37 (ANEWARRAY (CLASS "java.lang.Object")))
         (40 (PUTFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (43 (ALOAD_0))
         (44 (ILOAD_2))
         (45 (PUTFIELD (JVM::FIELDCP "capacityIncrement"
                                     "java.util.Vector" INT)))
         (48 (RETURN))
         (ENDOFCODE 49))
       (EXCEPTIONS)
       (STACKMAP (35 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 7)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (ILOAD_1))
            (2 (ICONST_0))
            (3 (INVOKESPECIAL (METHODCP "<init>" "java.util.Vector" (INT INT)
                                        VOID)))
            (6 (RETURN))
            (ENDOFCODE 7))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 2)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 7)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (BIPUSH 10))
                (3 (INVOKESPECIAL (METHODCP "<init>" "java.util.Vector" (INT)
                                            VOID)))
                (6 (RETURN))
                (ENDOFCODE 7))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "copyInto"
      (PARAMETERS (ARRAY (CLASS "java.lang.Object")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 26)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (ISTORE_2))
          (5 (GOTO 17))
          (8 (ALOAD_1))
          (9 (ILOAD_2))
          (10 (ALOAD_0))
          (11 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                      (ARRAY (CLASS "java.lang.Object")))))
          (14 (ILOAD_2))
          (15 (AALOAD))
          (16 (AASTORE))
          (17 (ILOAD_2))
          (18 (DUP))
          (19 (ICONST_1))
          (20 (ISUB))
          (21 (ISTORE_2))
          (22 (IFGT 8))
          (25 (RETURN))
          (ENDOFCODE 26))
       (EXCEPTIONS)
       (STACKMAP (8 (FRAME (LOCALS (CLASS "java.util.Vector")
                                   (ARRAY (CLASS "java.lang.Object"))
                                   INT)
                           (STACK)
                           NIL))
                 (17 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (ARRAY (CLASS "java.lang.Object"))
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "trimToSize" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 45)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (4 (ARRAYLENGTH))
         (5 (ISTORE_1))
         (6 (ALOAD_0))
         (7 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (10 (ILOAD_1))
         (11 (IF_ICMPGE 44))
         (14 (ALOAD_0))
         (15 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (18 (ASTORE_2))
         (19 (ALOAD_0))
         (20 (ALOAD_0))
         (21 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (24 (ANEWARRAY (CLASS "java.lang.Object")))
         (27 (PUTFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (30 (ALOAD_2))
         (31 (ICONST_0))
         (32 (ALOAD_0))
         (33 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (36 (ICONST_0))
         (37 (ALOAD_0))
         (38 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (41 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (44 (RETURN))
         (ENDOFCODE 45))
       (EXCEPTIONS)
       (STACKMAP (44 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "ensureCapacity" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 15)
        (PARSEDCODE
             (0 (ILOAD_1))
             (1 (ALOAD_0))
             (2 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                        (ARRAY (CLASS "java.lang.Object")))))
             (5 (ARRAYLENGTH))
             (6 (IF_ICMPLE 14))
             (9 (ALOAD_0))
             (10 (ILOAD_1))
             (11 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                          "java.util.Vector" (INT)
                                          VOID)))
             (14 (RETURN))
             (ENDOFCODE 15))
        (EXCEPTIONS)
        (STACKMAP (14 (FRAME (LOCALS (CLASS "java.util.Vector") INT)
                             (STACK)
                             NIL)))))
     (METHOD
      "ensureCapacityHelper" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 65)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (4 (ARRAYLENGTH))
         (5 (ISTORE_2))
         (6 (ALOAD_0))
         (7 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (10 (ASTORE_3))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "capacityIncrement"
                                     "java.util.Vector" INT)))
         (15 (IFLE 27))
         (18 (ILOAD_2))
         (19 (ALOAD_0))
         (20 (GETFIELD (JVM::FIELDCP "capacityIncrement"
                                     "java.util.Vector" INT)))
         (23 (IADD))
         (24 (GOTO 30))
         (27 (ILOAD_2))
         (28 (ICONST_2))
         (29 (IMUL))
         (30 (ISTORE 4))
         (32 (ILOAD 4))
         (34 (ILOAD_1))
         (35 (IF_ICMPGE 41))
         (38 (ILOAD_1))
         (39 (ISTORE 4))
         (41 (ALOAD_0))
         (42 (ILOAD 4))
         (44 (ANEWARRAY (CLASS "java.lang.Object")))
         (47 (PUTFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (50 (ALOAD_3))
         (51 (ICONST_0))
         (52 (ALOAD_0))
         (53 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (56 (ICONST_0))
         (57 (ALOAD_0))
         (58 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (61 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                     ((CLASS "java.lang.Object")
                                      INT (CLASS "java.lang.Object")
                                      INT INT)
                                     VOID)))
         (64 (RETURN))
         (ENDOFCODE 65))
       (EXCEPTIONS)
       (STACKMAP (27 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT
                                    INT (ARRAY (CLASS "java.lang.Object"))
                                    TOPX)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT
                                    INT (ARRAY (CLASS "java.lang.Object"))
                                    TOPX)
                            (STACK INT)
                            NIL))
                 (41 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT
                                    INT (ARRAY (CLASS "java.lang.Object"))
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "setSize" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 54)
       (PARSEDCODE
         (0 (ILOAD_1))
         (1 (ALOAD_0))
         (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (5 (IF_ICMPLE 25))
         (8 (ILOAD_1))
         (9 (ALOAD_0))
         (10 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (13 (ARRAYLENGTH))
         (14 (IF_ICMPLE 25))
         (17 (ALOAD_0))
         (18 (ILOAD_1))
         (19 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                      "java.util.Vector" (INT)
                                      VOID)))
         (22 (GOTO 48))
         (25 (ILOAD_1))
         (26 (ISTORE_2))
         (27 (GOTO 40))
         (30 (ALOAD_0))
         (31 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (34 (ILOAD_2))
         (35 (ACONST_NULL))
         (36 (AASTORE))
         (37 (IINC 2 1))
         (40 (ILOAD_2))
         (41 (ALOAD_0))
         (42 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (45 (IF_ICMPLT 30))
         (48 (ALOAD_0))
         (49 (ILOAD_1))
         (50 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (53 (RETURN))
         (ENDOFCODE 54))
       (EXCEPTIONS)
       (STACKMAP (25 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (30 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL))
                 (40 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL)))))
     (METHOD
      "capacity" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                        (ARRAY (CLASS "java.lang.Object")))))
             (4 (ARRAYLENGTH))
             (5 (IRETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "size" (PARAMETERS)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (IRETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "isEmpty" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 13)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (IFNE 11))
          (7 (ICONST_1))
          (8 (GOTO 12))
          (11 (ICONST_0))
          (12 (IRETURN))
          (ENDOFCODE 13))
       (EXCEPTIONS)
       (STACKMAP (11 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK)
                            NIL))
                 (12 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "elements" (PARAMETERS)
      (RETURNTYPE CLASS "java.util.Enumeration")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 9)
       (PARSEDCODE
            (0 (NEW (CLASS "java.util.VectorEnumerator")))
            (3 (DUP))
            (4 (ALOAD_0))
            (5 (INVOKESPECIAL (METHODCP "<init>" "java.util.VectorEnumerator"
                                        ((CLASS "java.util.Vector"))
                                        VOID)))
            (8 (ARETURN))
            (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "contains"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 15)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.util.Vector"
                                             ((CLASS "java.lang.Object") INT)
                                             INT)))
                 (6 (IFLT 13))
                 (9 (ICONST_1))
                 (10 (GOTO 14))
                 (13 (ICONST_0))
                 (14 (IRETURN))
                 (ENDOFCODE 15))
            (EXCEPTIONS)
            (STACKMAP (13 (FRAME (LOCALS (CLASS "java.util.Vector")
                                         (CLASS "java.lang.Object"))
                                 (STACK)
                                 NIL))
                      (14 (FRAME (LOCALS (CLASS "java.util.Vector")
                                         (CLASS "java.lang.Object"))
                                 (STACK INT)
                                 NIL)))))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 2)
            (CODE_LENGTH . 7)
            (PARSEDCODE
                 (0 (ALOAD_0))
                 (1 (ALOAD_1))
                 (2 (ICONST_0))
                 (3 (INVOKEVIRTUAL (METHODCP "indexOf" "java.util.Vector"
                                             ((CLASS "java.lang.Object") INT)
                                             INT)))
                 (6 (IRETURN))
                 (ENDOFCODE 7))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "indexOf"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 67)
       (PARSEDCODE
         (0 (ALOAD_1))
         (1 (IFNONNULL 34))
         (4 (ILOAD_2))
         (5 (ISTORE_3))
         (6 (GOTO 23))
         (9 (ALOAD_0))
         (10 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (13 (ILOAD_3))
         (14 (AALOAD))
         (15 (IFNONNULL 20))
         (18 (ILOAD_3))
         (19 (IRETURN))
         (20 (IINC 3 1))
         (23 (ILOAD_3))
         (24 (ALOAD_0))
         (25 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (28 (IF_ICMPLT 9))
         (31 (GOTO 65))
         (34 (ILOAD_2))
         (35 (ISTORE_3))
         (36 (GOTO 57))
         (39 (ALOAD_1))
         (40 (ALOAD_0))
         (41 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (44 (ILOAD_3))
         (45 (AALOAD))
         (46 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (49 (IFEQ 54))
         (52 (ILOAD_3))
         (53 (IRETURN))
         (54 (IINC 3 1))
         (57 (ILOAD_3))
         (58 (ALOAD_0))
         (59 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (62 (IF_ICMPLT 39))
         (65 (ICONST_M1))
         (66 (IRETURN))
         (ENDOFCODE 67))
       (EXCEPTIONS)
       (STACKMAP (9 (FRAME (LOCALS (CLASS "java.util.Vector")
                                   (CLASS "java.lang.Object")
                                   INT INT)
                           (STACK)
                           NIL))
                 (20 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (23 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (34 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (39 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (54 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (57 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "lastIndexOf"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 12)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (ALOAD_1))
          (2 (ALOAD_0))
          (3 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (6 (ICONST_1))
          (7 (ISUB))
          (8 (INVOKEVIRTUAL (METHODCP "lastIndexOf" "java.util.Vector"
                                      ((CLASS "java.lang.Object") INT)
                                      INT)))
          (11 (IRETURN))
          (ENDOFCODE 12))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "lastIndexOf"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 101)
       (PARSEDCODE
         (0 (ILOAD_2))
         (1 (ALOAD_0))
         (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (5 (IF_ICMPLT 42))
         (8 (NEW (CLASS "java.lang.IndexOutOfBoundsException")))
         (11 (DUP))
         (12 (NEW (CLASS "java.lang.StringBuffer")))
         (15 (DUP))
         (16 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (19 (ILOAD_2))
         (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (23 (LDC 1))
         (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (28 (ALOAD_0))
         (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (38 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.IndexOutOfBoundsException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (41 (ATHROW))
         (42 (ALOAD_1))
         (43 (IFNONNULL 72))
         (46 (ILOAD_2))
         (47 (ISTORE_3))
         (48 (GOTO 65))
         (51 (ALOAD_0))
         (52 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (55 (ILOAD_3))
         (56 (AALOAD))
         (57 (IFNONNULL 62))
         (60 (ILOAD_3))
         (61 (IRETURN))
         (62 (IINC 3 -1))
         (65 (ILOAD_3))
         (66 (IFGE 51))
         (69 (GOTO 99))
         (72 (ILOAD_2))
         (73 (ISTORE_3))
         (74 (GOTO 95))
         (77 (ALOAD_1))
         (78 (ALOAD_0))
         (79 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (82 (ILOAD_3))
         (83 (AALOAD))
         (84 (INVOKEVIRTUAL (METHODCP "equals" "java.lang.Object"
                                      ((CLASS "java.lang.Object"))
                                      BOOLEAN)))
         (87 (IFEQ 92))
         (90 (ILOAD_3))
         (91 (IRETURN))
         (92 (IINC 3 -1))
         (95 (ILOAD_3))
         (96 (IFGE 77))
         (99 (ICONST_M1))
         (100 (IRETURN))
         (ENDOFCODE 101))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (51 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (62 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (65 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (72 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (77 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (92 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (95 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (99 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "elementAt" (PARAMETERS INT)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 77)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (5 (IF_ICMPLT 42))
        (8 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (NEW (CLASS "java.lang.StringBuffer")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (19 (ILOAD_1))
        (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (23 (LDC 1))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (ALOAD_0))
        (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (38
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (41 (ATHROW))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (46 (ILOAD_1))
        (47 (AALOAD))
        (48 (ARETURN))
        (49 (ASTORE_2))
        (50 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (53 (DUP))
        (54 (NEW (CLASS "java.lang.StringBuffer")))
        (57 (DUP))
        (58 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (61 (ILOAD_1))
        (62 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (65 (LDC 2))
        (67 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (70 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (73
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (76 (ATHROW))
        (ENDOFCODE 77))
       (EXCEPTIONS
           (JVM::HANDLER 42 48 49
                         (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
       (STACKMAP
        (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                           INT TOPX)
                   (STACK)
                   NIL))
        (49 (FRAME (LOCALS (CLASS "java.util.Vector")
                           INT TOPX)
                   (STACK (CLASS "java.lang.ArrayIndexOutOfBoundsException"))
                   NIL)))))
     (METHOD
      "firstElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 22)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (4 (IFNE 15))
          (7 (NEW (CLASS "java.util.NoSuchElementException")))
          (10 (DUP))
          (11 (INVOKESPECIAL (METHODCP "<init>"
                                       "java.util.NoSuchElementException"
                                       NIL VOID)))
          (14 (ATHROW))
          (15 (ALOAD_0))
          (16 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                      (ARRAY (CLASS "java.lang.Object")))))
          (19 (ICONST_0))
          (20 (AALOAD))
          (21 (ARETURN))
          (ENDOFCODE 22))
       (EXCEPTIONS)
       (STACKMAP (15 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK)
                            NIL)))))
     (METHOD
      "lastElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 27)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (4 (IFNE 15))
         (7 (NEW (CLASS "java.util.NoSuchElementException")))
         (10 (DUP))
         (11 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.NoSuchElementException"
                                      NIL VOID)))
         (14 (ATHROW))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (19 (ALOAD_0))
         (20 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (23 (ICONST_1))
         (24 (ISUB))
         (25 (AALOAD))
         (26 (ARETURN))
         (ENDOFCODE 27))
       (EXCEPTIONS)
       (STACKMAP (15 (FRAME (LOCALS (CLASS "java.util.Vector"))
                            (STACK)
                            NIL)))))
     (METHOD
      "setElementAt"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 50)
       (PARSEDCODE
        (0 (ILOAD_2))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (5 (IF_ICMPLT 42))
        (8 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (NEW (CLASS "java.lang.StringBuffer")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (19 (ILOAD_2))
        (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (23 (LDC 1))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (ALOAD_0))
        (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (38
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (41 (ATHROW))
        (42 (ALOAD_0))
        (43 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (46 (ILOAD_2))
        (47 (ALOAD_1))
        (48 (AASTORE))
        (49 (RETURN))
        (ENDOFCODE 50))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "removeElementAt" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 105)
       (PARSEDCODE
        (0 (ILOAD_1))
        (1 (ALOAD_0))
        (2 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (5 (IF_ICMPLT 42))
        (8 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (11 (DUP))
        (12 (NEW (CLASS "java.lang.StringBuffer")))
        (15 (DUP))
        (16 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (19 (ILOAD_1))
        (20 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (23 (LDC 1))
        (25 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (28 (ALOAD_0))
        (29 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (32 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (35 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (38
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (41 (ATHROW))
        (42 (ILOAD_1))
        (43 (IFGE 55))
        (46 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (49 (DUP))
        (50 (ILOAD_1))
        (51
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   (INT)
                                   VOID)))
        (54 (ATHROW))
        (55 (ALOAD_0))
        (56 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (59 (ILOAD_1))
        (60 (ISUB))
        (61 (ICONST_1))
        (62 (ISUB))
        (63 (ISTORE_2))
        (64 (ILOAD_2))
        (65 (IFLE 84))
        (68 (ALOAD_0))
        (69 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (72 (ILOAD_1))
        (73 (ICONST_1))
        (74 (IADD))
        (75 (ALOAD_0))
        (76 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (79 (ILOAD_1))
        (80 (ILOAD_2))
        (81 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (84 (ALOAD_0))
        (85 (DUP))
        (86 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (89 (ICONST_1))
        (90 (ISUB))
        (91 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (94 (ALOAD_0))
        (95 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (98 (ALOAD_0))
        (99 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (102 (ACONST_NULL))
        (103 (AASTORE))
        (104 (RETURN))
        (ENDOFCODE 105))
       (EXCEPTIONS)
       (STACKMAP (42 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (55 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT TOPX)
                            (STACK)
                            NIL))
                 (84 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "insertElementAt"
      (PARAMETERS (CLASS "java.lang.Object")
                  INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 6)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 99)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (4 (ICONST_1))
        (5 (IADD))
        (6 (ISTORE_3))
        (7 (ILOAD_2))
        (8 (ILOAD_3))
        (9 (IF_ICMPLT 46))
        (12 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (15 (DUP))
        (16 (NEW (CLASS "java.lang.StringBuffer")))
        (19 (DUP))
        (20 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (23 (ILOAD_2))
        (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (27 (LDC 3))
        (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (32 (ALOAD_0))
        (33 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (36 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                     (CLASS "java.lang.StringBuffer"))))
        (39 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (42
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   ((CLASS "java.lang.String"))
                                   VOID)))
        (45 (ATHROW))
        (46 (ILOAD_3))
        (47 (ALOAD_0))
        (48 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (51 (ARRAYLENGTH))
        (52 (IF_ICMPLE 60))
        (55 (ALOAD_0))
        (56 (ILOAD_3))
        (57 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                     "java.util.Vector" (INT)
                                     VOID)))
        (60 (ALOAD_0))
        (61 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (64 (ILOAD_2))
        (65 (ALOAD_0))
        (66 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (69 (ILOAD_2))
        (70 (ICONST_1))
        (71 (IADD))
        (72 (ALOAD_0))
        (73 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (76 (ILOAD_2))
        (77 (ISUB))
        (78 (INVOKESTATIC (METHODCP "arraycopy" "java.lang.System"
                                    ((CLASS "java.lang.Object")
                                     INT (CLASS "java.lang.Object")
                                     INT INT)
                                    VOID)))
        (81 (ALOAD_0))
        (82 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
        (85 (ILOAD_2))
        (86 (ALOAD_1))
        (87 (AASTORE))
        (88 (ALOAD_0))
        (89 (DUP))
        (90 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (93 (ICONST_1))
        (94 (IADD))
        (95 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
        (98 (RETURN))
        (ENDOFCODE 99))
       (EXCEPTIONS)
       (STACKMAP (46 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL))
                 (60 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "addElement"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 39)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (4 (ICONST_1))
         (5 (IADD))
         (6 (ISTORE_2))
         (7 (ILOAD_2))
         (8 (ALOAD_0))
         (9 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (12 (ARRAYLENGTH))
         (13 (IF_ICMPLE 21))
         (16 (ALOAD_0))
         (17 (ILOAD_2))
         (18 (INVOKESPECIAL (METHODCP "ensureCapacityHelper"
                                      "java.util.Vector" (INT)
                                      VOID)))
         (21 (ALOAD_0))
         (22 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (25 (ALOAD_0))
         (26 (DUP))
         (27 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (30 (DUP_X1))
         (31 (ICONST_1))
         (32 (IADD))
         (33 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (36 (ALOAD_1))
         (37 (AASTORE))
         (38 (RETURN))
         (ENDOFCODE 39))
       (EXCEPTIONS)
       (STACKMAP (21 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    (CLASS "java.lang.Object")
                                    INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "removeElement"
      (PARAMETERS (CLASS "java.lang.Object"))
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 3)
         (CODE_LENGTH . 19)
         (PARSEDCODE (0 (ALOAD_0))
                     (1 (ALOAD_1))
                     (2 (INVOKEVIRTUAL (METHODCP "indexOf" "java.util.Vector"
                                                 ((CLASS "java.lang.Object"))
                                                 INT)))
                     (5 (ISTORE_2))
                     (6 (ILOAD_2))
                     (7 (IFLT 17))
                     (10 (ALOAD_0))
                     (11 (ILOAD_2))
                     (12 (INVOKEVIRTUAL (METHODCP "removeElementAt"
                                                  "java.util.Vector" (INT)
                                                  VOID)))
                     (15 (ICONST_1))
                     (16 (IRETURN))
                     (17 (ICONST_0))
                     (18 (IRETURN))
                     (ENDOFCODE 19))
         (EXCEPTIONS)
         (STACKMAP (17 (FRAME (LOCALS (CLASS "java.util.Vector")
                                      (CLASS "java.lang.Object")
                                      INT)
                              (STACK)
                              NIL)))))
     (METHOD
      "removeAllElements" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 29)
       (PARSEDCODE
         (0 (ICONST_0))
         (1 (ISTORE_1))
         (2 (GOTO 15))
         (5 (ALOAD_0))
         (6 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                    (ARRAY (CLASS "java.lang.Object")))))
         (9 (ILOAD_1))
         (10 (ACONST_NULL))
         (11 (AASTORE))
         (12 (IINC 1 1))
         (15 (ILOAD_1))
         (16 (ALOAD_0))
         (17 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (20 (IF_ICMPLT 5))
         (23 (ALOAD_0))
         (24 (ICONST_0))
         (25 (PUTFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (28 (RETURN))
         (ENDOFCODE 29))
       (EXCEPTIONS)
       (STACKMAP (5 (FRAME (LOCALS (CLASS "java.util.Vector") INT)
                           (STACK)
                           NIL))
                 (15 (FRAME (LOCALS (CLASS "java.util.Vector") INT)
                            (STACK)
                            NIL)))))
     (METHOD
      "toString" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.String")
      (ACCESSFLAGS *CLASS* *PUBLIC* *SUPER* *SYNCHRONIZED*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 78)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (INVOKEVIRTUAL (METHODCP "size" "java.util.Vector" NIL INT)))
         (4 (ICONST_1))
         (5 (ISUB))
         (6 (ISTORE_1))
         (7 (NEW (CLASS "java.lang.StringBuffer")))
         (10 (DUP))
         (11 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (14 (ASTORE_2))
         (15 (ALOAD_0))
         (16 (INVOKEVIRTUAL (METHODCP "elements" "java.util.Vector"
                                      NIL (CLASS "java.util.Enumeration"))))
         (19 (ASTORE_3))
         (20 (ALOAD_2))
         (21 (LDC 4))
         (23 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (26 (POP))
         (27 (ICONST_0))
         (28 (ISTORE 4))
         (30 (GOTO 60))
         (33 (ALOAD_2))
         (34 (ALOAD_3))
         (35 (INVOKEINTERFACE (METHODCP "nextElement" "java.util.Enumeration"
                                        NIL (CLASS "java.lang.Object"))
                              1))
         (40 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.Object"))
                                      (CLASS "java.lang.StringBuffer"))))
         (43 (POP))
         (44 (ILOAD 4))
         (46 (ILOAD_1))
         (47 (IF_ICMPGE 57))
         (50 (ALOAD_2))
         (51 (LDC 5))
         (53 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (56 (POP))
         (57 (IINC 4 1))
         (60 (ILOAD 4))
         (62 (ILOAD_1))
         (63 (IF_ICMPLE 33))
         (66 (ALOAD_2))
         (67 (LDC 6))
         (69 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (72 (POP))
         (73 (ALOAD_2))
         (74 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (77 (ARETURN))
         (ENDOFCODE 78))
       (EXCEPTIONS)
       (STACKMAP (33 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    INT)
                            (STACK)
                            NIL))
                 (57 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    INT)
                            (STACK)
                            NIL))
                 (60 (FRAME (LOCALS (CLASS "java.util.Vector")
                                    INT (CLASS "java.lang.StringBuffer")
                                    (CLASS "java.util.Enumeration")
                                    INT)
                            (STACK)
                            NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "java.util.VectorEnumerator"
    "java.lang.Object"
    (CONSTANT_POOL (STRING "VectorEnumerator"))
    (FIELDS (FIELD "vector" (CLASS "java.util.Vector")
                   (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "count" INT (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.util.Vector"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 15)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ALOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
          (9 (ALOAD_0))
          (10 (ICONST_0))
          (11 (PUTFIELD (JVM::FIELDCP "count"
                                      "java.util.VectorEnumerator" INT)))
          (14 (RETURN))
          (ENDOFCODE 15))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "hasMoreElements" (PARAMETERS)
      (RETURNTYPE . BOOLEAN)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (GETFIELD (JVM::FIELDCP "count"
                                     "java.util.VectorEnumerator" INT)))
          (4 (ALOAD_0))
          (5 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
          (8 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
          (11 (IF_ICMPGE 18))
          (14 (ICONST_1))
          (15 (GOTO 19))
          (18 (ICONST_0))
          (19 (IRETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP (18 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator"))
                            (STACK)
                            NIL))
                 (19 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator"))
                            (STACK INT)
                            NIL)))))
     (METHOD
      "nextElement" (PARAMETERS)
      (RETURNTYPE CLASS "java.lang.Object")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 5)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 63)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                    (CLASS "java.util.Vector"))))
         (4 (DUP))
         (5 (ASTORE_1))
         (6 (MONITORENTER))
         (7 (ALOAD_0))
         (8 (GETFIELD (JVM::FIELDCP "count"
                                    "java.util.VectorEnumerator" INT)))
         (11 (ALOAD_0))
         (12 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
         (15 (GETFIELD (JVM::FIELDCP "elementCount" "java.util.Vector" INT)))
         (18 (IF_ICMPGE 43))
         (21 (ALOAD_0))
         (22 (GETFIELD (JVM::FIELDCP "vector" "java.util.VectorEnumerator"
                                     (CLASS "java.util.Vector"))))
         (25 (GETFIELD (JVM::FIELDCP "elementData" "java.util.Vector"
                                     (ARRAY (CLASS "java.lang.Object")))))
         (28 (ALOAD_0))
         (29 (DUP))
         (30 (GETFIELD (JVM::FIELDCP "count"
                                     "java.util.VectorEnumerator" INT)))
         (33 (DUP_X1))
         (34 (ICONST_1))
         (35 (IADD))
         (36 (PUTFIELD (JVM::FIELDCP "count"
                                     "java.util.VectorEnumerator" INT)))
         (39 (AALOAD))
         (40 (ALOAD_1))
         (41 (MONITOREXIT))
         (42 (ARETURN))
         (43 (ALOAD_1))
         (44 (MONITOREXIT))
         (45 (GOTO 53))
         (48 (ASTORE_2))
         (49 (ALOAD_1))
         (50 (MONITOREXIT))
         (51 (ALOAD_2))
         (52 (ATHROW))
         (53 (NEW (CLASS "java.util.NoSuchElementException")))
         (56 (DUP))
         (57 (LDC 0))
         (59 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.util.NoSuchElementException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (62 (ATHROW))
         (ENDOFCODE 63))
       (EXCEPTIONS (JVM::HANDLER 7 42 48 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 43 45 48 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 48 51 48 (CLASS "java.lang.Throwable")))
       (STACKMAP (43 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator")
                                    (CLASS "java.util.Vector")
                                    TOPX)
                            (STACK)
                            NIL))
                 (48 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator")
                                    (CLASS "java.util.Vector")
                                    TOPX)
                            (STACK (CLASS "java.lang.Throwable"))
                            NIL))
                 (53 (FRAME (LOCALS (CLASS "java.util.VectorEnumerator")
                                    (CLASS "java.util.Vector")
                                    TOPX)
                            (STACK)
                            NIL))))))
    (INTERFACES "java.util.Enumeration")
    (ACCESSFLAGS *CLASS* *FINAL* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "javax.microedition.io.Connector"
    "java.lang.Object"
    (CONSTANT_POOL (INT 1)
                   (INT 2)
                   (INT 3)
                   (STRING "j2me")
                   (STRING "j2se")
                   (STRING "The requested protocol does not exist ")
                   (STRING "Null URL")
                   (STRING "no n:n in URL")
                   (STRING ".")
                   (STRING ".Protocol")
                   (STRING "microedition.configuration")
                   (STRING "microedition.platform")
                   (STRING "javax.microedition.io.Connector.protocolpath")
                   (STRING "com.sun.cldc.io"))
    (FIELDS (FIELD "READ" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   0)
            (FIELD "WRITE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   1)
            (FIELD "READ_WRITE" INT
                   (ACCESSFLAGS *CLASS* *FINAL* *PUBLIC* *STATIC*)
                   2)
            (FIELD "platform" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "j2me" BOOLEAN
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1)
            (FIELD "classRoot" (CLASS "java.lang.String")
                   (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PRIVATE*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 6)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ICONST_3))
              (2 (INVOKESTATIC
                      (METHODCP "open" "javax.microedition.io.Connector"
                                ((CLASS "java.lang.String") INT)
                                (CLASS "javax.microedition.io.Connection"))))
              (5 (ARETURN))
              (ENDOFCODE 6))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 2)
         (CODE_LENGTH . 7)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (ILOAD_1))
              (2 (ICONST_0))
              (3 (INVOKESTATIC
                      (METHODCP "open" "javax.microedition.io.Connector"
                                ((CLASS "java.lang.String") INT BOOLEAN)
                                (CLASS "javax.microedition.io.Connection"))))
              (6 (ARETURN))
              (ENDOFCODE 7))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "open"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN)
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 71)
       (PARSEDCODE
        (0 (GETSTATIC (JVM::FIELDCP "platform"
                                    "javax.microedition.io.Connector"
                                    (CLASS "java.lang.String"))))
        (3 (IFNULL 20))
        (6 (ALOAD_0))
        (7 (ILOAD_1))
        (8 (ILOAD_2))
        (9 (GETSTATIC (JVM::FIELDCP "platform"
                                    "javax.microedition.io.Connector"
                                    (CLASS "java.lang.String"))))
        (12 (INVOKESTATIC
                 (METHODCP "openPrim"
                           "javax.microedition.io.Connector"
                           ((CLASS "java.lang.String")
                            INT BOOLEAN (CLASS "java.lang.String"))
                           (CLASS "javax.microedition.io.Connection"))))
        (15 (ARETURN))
        (16 (ASTORE_3))
        (17 (GOTO 20))
        (20 (ALOAD_0))
        (21 (ILOAD_1))
        (22 (ILOAD_2))
        (23 (GETSTATIC (JVM::FIELDCP "j2me" "javax.microedition.io.Connector"
                                     BOOLEAN)))
        (26 (IFEQ 34))
        (29 (LDC 3))
        (31 (GOTO 36))
        (34 (LDC 4))
        (36 (INVOKESTATIC
                 (METHODCP "openPrim"
                           "javax.microedition.io.Connector"
                           ((CLASS "java.lang.String")
                            INT BOOLEAN (CLASS "java.lang.String"))
                           (CLASS "javax.microedition.io.Connection"))))
        (39 (ARETURN))
        (40 (ASTORE_3))
        (41 (GOTO 44))
        (44
           (NEW (CLASS "javax.microedition.io.ConnectionNotFoundException")))
        (47 (DUP))
        (48 (NEW (CLASS "java.lang.StringBuffer")))
        (51 (DUP))
        (52 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (55 (LDC 5))
        (57 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (60 (ALOAD_0))
        (61 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (64 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (67
           (INVOKESPECIAL
                (METHODCP "<init>"
                          "javax.microedition.io.ConnectionNotFoundException"
                          ((CLASS "java.lang.String"))
                          VOID)))
        (70 (ATHROW))
        (ENDOFCODE 71))
       (EXCEPTIONS (JVM::HANDLER 6 15 16
                                 (CLASS "java.lang.ClassNotFoundException"))
                   (JVM::HANDLER 20 39 40
                                 (CLASS "java.lang.ClassNotFoundException")))
       (STACKMAP
            (16 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (20 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK)
                       NIL))
            (34 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK INT INT (CLASS "java.lang.String"))
                       NIL))
            (36 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK (CLASS "java.lang.String")
                              INT INT (CLASS "java.lang.String"))
                       NIL))
            (40 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT TOPX)
                       (STACK (CLASS "java.lang.ClassNotFoundException"))
                       NIL))
            (44 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT
                               (CLASS "java.lang.ClassNotFoundException"))
                       (STACK)
                       NIL)))))
     (METHOD
      "openPrim"
      (PARAMETERS (CLASS "java.lang.String")
                  INT BOOLEAN (CLASS "java.lang.String"))
      (RETURNTYPE CLASS
                  "javax.microedition.io.Connection")
      (ACCESSFLAGS *CLASS* *PRIVATE* *STATIC*)
      (CODE
       (MAX_STACK . 4)
       (JVM::MAX_LOCALS . 8)
       (CODE_LENGTH . 167)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (IFNONNULL 14))
        (4 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (7 (DUP))
        (8 (LDC 6))
        (10 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (13 (ATHROW))
        (14 (ALOAD_0))
        (15 (BIPUSH 58))
        (17 (INVOKEVIRTUAL (METHODCP "indexOf" "java.lang.String" (INT)
                                     INT)))
        (20 (ISTORE 4))
        (22 (ILOAD 4))
        (24 (ICONST_1))
        (25 (IF_ICMPGE 38))
        (28 (NEW (CLASS "java.lang.IllegalArgumentException")))
        (31 (DUP))
        (32 (LDC 7))
        (34 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.IllegalArgumentException"
                                     ((CLASS "java.lang.String"))
                                     VOID)))
        (37 (ATHROW))
        (38 (ALOAD_0))
        (39 (ICONST_0))
        (40 (ILOAD 4))
        (42 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT INT)
                                     (CLASS "java.lang.String"))))
        (45 (ASTORE 5))
        (47 (ALOAD_0))
        (48 (ILOAD 4))
        (50 (ICONST_1))
        (51 (IADD))
        (52 (INVOKEVIRTUAL (METHODCP "substring" "java.lang.String" (INT)
                                     (CLASS "java.lang.String"))))
        (55 (ASTORE_0))
        (56 (NEW (CLASS "java.lang.StringBuffer")))
        (59 (DUP))
        (60 (INVOKESPECIAL (METHODCP "<init>"
                                     "java.lang.StringBuffer" NIL VOID)))
        (63 (GETSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (66 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (69 (LDC 8))
        (71 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (74 (ALOAD_3))
        (75 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (78 (LDC 8))
        (80 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (83 (ALOAD 5))
        (85 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (88 (LDC 9))
        (90 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                     ((CLASS "java.lang.String"))
                                     (CLASS "java.lang.StringBuffer"))))
        (93 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                     NIL (CLASS "java.lang.String"))))
        (96 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.Class"))))
        (99 (ASTORE 6))
        (101 (ALOAD 6))
        (103 (INVOKEVIRTUAL (METHODCP "newInstance" "java.lang.Class"
                                      NIL (CLASS "java.lang.Object"))))
        (106 (CHECKCAST (CLASS "com.sun.cldc.io.ConnectionBaseInterface")))
        (109 (ASTORE 7))
        (111 (ALOAD 7))
        (113 (ALOAD_0))
        (114 (ILOAD_1))
        (115 (ILOAD_2))
        (116 (INVOKEINTERFACE
                  (METHODCP "openPrim"
                            "com.sun.cldc.io.ConnectionBaseInterface"
                            ((CLASS "java.lang.String") INT BOOLEAN)
                            (CLASS "javax.microedition.io.Connection"))
                  4))
        (121 (ARETURN))
        (122 (ASTORE 5))
        (124 (NEW (CLASS "java.io.IOException")))
        (127 (DUP))
        (128 (ALOAD 5))
        (130 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (133 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (136 (ATHROW))
        (137 (ASTORE 6))
        (139 (NEW (CLASS "java.io.IOException")))
        (142 (DUP))
        (143 (ALOAD 6))
        (145 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (148 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (151 (ATHROW))
        (152 (ASTORE 7))
        (154 (NEW (CLASS "java.io.IOException")))
        (157 (DUP))
        (158 (ALOAD 7))
        (160 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.Throwable"
                                      NIL (CLASS "java.lang.String"))))
        (163 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
        (166 (ATHROW))
        (ENDOFCODE 167))
       (EXCEPTIONS (JVM::HANDLER 38 121 122
                                 (CLASS "java.lang.InstantiationException"))
                   (JVM::HANDLER 38 121 137
                                 (CLASS "java.lang.IllegalAccessException"))
                   (JVM::HANDLER 38 121 152
                                 (CLASS "java.lang.ClassCastException")))
       (STACKMAP
            (14 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT (CLASS "java.lang.String")
                               TOPX TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (38 (FRAME (LOCALS (CLASS "java.lang.String")
                               INT INT (CLASS "java.lang.String")
                               INT TOPX TOPX TOPX)
                       (STACK)
                       NIL))
            (122 (FRAME (LOCALS (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                INT TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.InstantiationException"))
                        NIL))
            (137 (FRAME (LOCALS (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                INT TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.IllegalAccessException"))
                        NIL))
            (152 (FRAME (LOCALS (CLASS "java.lang.String")
                                INT INT (CLASS "java.lang.String")
                                INT TOPX TOPX TOPX)
                        (STACK (CLASS "java.lang.ClassCastException"))
                        NIL)))))
     (METHOD
      "openDataInputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.DataInputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_1))
        (2 (INVOKESTATIC
                (METHODCP "open" "javax.microedition.io.Connector"
                          ((CLASS "java.lang.String") INT)
                          (CLASS "javax.microedition.io.Connection"))))
        (5 (CHECKCAST (CLASS "javax.microedition.io.InputConnection")))
        (8 (ASTORE_1))
        (9 (ALOAD_1))
        (10
           (INVOKEINTERFACE (METHODCP "openDataInputStream"
                                      "javax.microedition.io.InputConnection"
                                      NIL (CLASS "java.io.DataInputStream"))
                            1))
        (15 (ASTORE_2))
        (16 (ALOAD_1))
        (17 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (22 (ALOAD_2))
        (23 (ARETURN))
        (24 (ASTORE_3))
        (25 (ALOAD_1))
        (26 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (31 (ALOAD_3))
        (32 (ATHROW))
        (ENDOFCODE 33))
       (EXCEPTIONS (JVM::HANDLER 9 16 24 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 24 25 24 (CLASS "java.lang.Throwable")))
       (STACKMAP
           (24 (FRAME (LOCALS (CLASS "java.lang.String")
                              (CLASS "javax.microedition.io.InputConnection")
                              TOPX TOPX TOPX)
                      (STACK (CLASS "java.lang.Throwable"))
                      NIL)))))
     (METHOD
      "openDataOutputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.DataOutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 5)
       (CODE_LENGTH . 33)
       (PARSEDCODE
        (0 (ALOAD_0))
        (1 (ICONST_2))
        (2 (INVOKESTATIC
                (METHODCP "open" "javax.microedition.io.Connector"
                          ((CLASS "java.lang.String") INT)
                          (CLASS "javax.microedition.io.Connection"))))
        (5 (CHECKCAST (CLASS "javax.microedition.io.OutputConnection")))
        (8 (ASTORE_1))
        (9 (ALOAD_1))
        (10
          (INVOKEINTERFACE (METHODCP "openDataOutputStream"
                                     "javax.microedition.io.OutputConnection"
                                     NIL (CLASS "java.io.DataOutputStream"))
                           1))
        (15 (ASTORE_2))
        (16 (ALOAD_1))
        (17 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (22 (ALOAD_2))
        (23 (ARETURN))
        (24 (ASTORE_3))
        (25 (ALOAD_1))
        (26 (INVOKEINTERFACE (METHODCP "close"
                                       "javax.microedition.io.Connection"
                                       NIL VOID)
                             1))
        (31 (ALOAD_3))
        (32 (ATHROW))
        (ENDOFCODE 33))
       (EXCEPTIONS (JVM::HANDLER 9 16 24 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 24 25 24 (CLASS "java.lang.Throwable")))
       (STACKMAP
          (24 (FRAME (LOCALS (CLASS "java.lang.String")
                             (CLASS "javax.microedition.io.OutputConnection")
                             TOPX TOPX TOPX)
                     (STACK (CLASS "java.lang.Throwable"))
                     NIL)))))
     (METHOD
      "openInputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.InputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 5)
         (PARSEDCODE
              (0 (ALOAD_0))
              (1 (INVOKESTATIC (METHODCP "openDataInputStream"
                                         "javax.microedition.io.Connector"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.io.DataInputStream"))))
              (4 (ARETURN))
              (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "openOutputStream"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE CLASS "java.io.OutputStream")
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 1)
        (JVM::MAX_LOCALS . 1)
        (CODE_LENGTH . 5)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (INVOKESTATIC (METHODCP "openDataOutputStream"
                                        "javax.microedition.io.Connector"
                                        ((CLASS "java.lang.String"))
                                        (CLASS "java.io.DataOutputStream"))))
             (4 (ARETURN))
             (ENDOFCODE 5))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 0)
       (CODE_LENGTH . 44)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (PUTSTATIC (JVM::FIELDCP "j2me" "javax.microedition.io.Connector"
                                    BOOLEAN)))
        (4 (LDC 10))
        (6 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                   ((CLASS "java.lang.String"))
                                   (CLASS "java.lang.String"))))
        (9 (IFNULL 16))
        (12 (ICONST_1))
        (13 (PUTSTATIC (JVM::FIELDCP "j2me" "javax.microedition.io.Connector"
                                     BOOLEAN)))
        (16 (LDC 11))
        (18 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (21 (PUTSTATIC (JVM::FIELDCP "platform"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (24 (LDC 12))
        (26 (INVOKESTATIC (METHODCP "getProperty" "java.lang.System"
                                    ((CLASS "java.lang.String"))
                                    (CLASS "java.lang.String"))))
        (29 (PUTSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (32 (GETSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (35 (IFNONNULL 43))
        (38 (LDC 13))
        (40 (PUTSTATIC (JVM::FIELDCP "classRoot"
                                     "javax.microedition.io.Connector"
                                     (CLASS "java.lang.String"))))
        (43 (RETURN))
        (ENDOFCODE 44))
       (EXCEPTIONS)
       (STACKMAP (16 (FRAME (LOCALS) (STACK) NIL))
                 (43 (FRAME (LOCALS) (STACK) NIL))))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "javax.microedition.io.Connection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "close" (PARAMETERS)
                           (RETURNTYPE . VOID)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES)
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "javax.microedition.io.ConnectionNotFoundException"
    "java.io.IOException" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 5)
           (PARSEDCODE
                (0 (ALOAD_0))
                (1 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.io.IOException" NIL VOID)))
                (4 (RETURN))
                (ENDOFCODE 5))
           (EXCEPTIONS)
           (STACKMAP)))
     (METHOD
      "<init>"
      (PARAMETERS (CLASS "java.lang.String"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 6)
       (PARSEDCODE (0 (ALOAD_0))
                   (1 (ALOAD_1))
                   (2 (INVOKESPECIAL (METHODCP "<init>" "java.io.IOException"
                                               ((CLASS "java.lang.String"))
                                               VOID)))
                   (5 (RETURN))
                   (ENDOFCODE 6))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS "javax.microedition.io.InputConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "openInputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.InputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "openDataInputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.DataInputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.Connection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS "javax.microedition.io.OutputConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "openOutputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.OutputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "openDataOutputStream" (PARAMETERS)
                           (RETURNTYPE CLASS "java.io.DataOutputStream")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.Connection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS "javax.microedition.io.ContentConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS (METHOD "getType" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getEncoding" (PARAMETERS)
                           (RETURNTYPE CLASS "java.lang.String")
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE))
                   (METHOD "getLength" (PARAMETERS)
                           (RETURNTYPE . LONG)
                           (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                           (CODE)))
          (INTERFACES "javax.microedition.io.StreamConnection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS "javax.microedition.io.StreamConnection"
          "java.lang.Object" (CONSTANT_POOL)
          (FIELDS)
          (METHODS)
          (INTERFACES "javax.microedition.io.InputConnection"
                      "javax.microedition.io.OutputConnection")
          (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
       "javax.microedition.io.Datagram"
       "java.lang.Object" (CONSTANT_POOL)
       (FIELDS)
       (METHODS (METHOD "getAddress" (PARAMETERS)
                        (RETURNTYPE CLASS "java.lang.String")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getData" (PARAMETERS)
                        (RETURNTYPE ARRAY BYTE)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getLength" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getOffset" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setAddress"
                        (PARAMETERS (CLASS "java.lang.String"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setAddress"
                        (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setLength" (PARAMETERS INT)
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "setData"
                        (PARAMETERS (ARRAY BYTE) INT INT)
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "reset" (PARAMETERS)
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE)))
       (INTERFACES "java.io.DataInput"
                   "java.io.DataOutput")
       (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
       "javax.microedition.io.DatagramConnection"
       "java.lang.Object" (CONSTANT_POOL)
       (FIELDS)
       (METHODS (METHOD "getMaximumLength" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "getNominalLength" (PARAMETERS)
                        (RETURNTYPE . INT)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "send"
                        (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "receive"
                        (PARAMETERS (CLASS "javax.microedition.io.Datagram"))
                        (RETURNTYPE . VOID)
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram" (PARAMETERS INT)
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram"
                        (PARAMETERS INT (CLASS "java.lang.String"))
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram"
                        (PARAMETERS (ARRAY BYTE) INT)
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE))
                (METHOD "newDatagram"
                        (PARAMETERS (ARRAY BYTE)
                                    INT (CLASS "java.lang.String"))
                        (RETURNTYPE CLASS "javax.microedition.io.Datagram")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE)))
       (INTERFACES "javax.microedition.io.Connection")
       (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
       "javax.microedition.io.StreamConnectionNotifier"
       "java.lang.Object" (CONSTANT_POOL)
       (FIELDS)
       (METHODS (METHOD "acceptAndOpen" (PARAMETERS)
                        (RETURNTYPE CLASS
                                    "javax.microedition.io.StreamConnection")
                        (ACCESSFLAGS *ABSTRACT* *CLASS* *PUBLIC*)
                        (CODE)))
       (INTERFACES "javax.microedition.io.Connection")
       (ACCESSFLAGS *ABSTRACT* *INTERFACE* *PUBLIC*))
   (CLASS
    "Apprentice"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 31)
       (PARSEDCODE
            (0 (NEW (CLASS "Container")))
            (3 (DUP))
            (4 (INVOKESPECIAL (METHODCP "<init>" "Container" NIL VOID)))
            (7 (ASTORE_1))
            (8 (GOTO 11))
            (11 (NEW (CLASS "Job")))
            (14 (DUP))
            (15 (INVOKESPECIAL (METHODCP "<init>" "Job" NIL VOID)))
            (18 (ASTORE_2))
            (19 (ALOAD_2))
            (20 (ALOAD_1))
            (21 (INVOKEVIRTUAL (METHODCP "setref" "Job" ((CLASS "Container"))
                                         VOID)))
            (24 (ALOAD_2))
            (25 (INVOKEVIRTUAL (METHODCP "start" "Job" NIL VOID)))
            (28 (GOTO 11))
            (ENDOFCODE 31))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Container"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "counter"
                   INT (ACCESSFLAGS *CLASS* *PUBLIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Job" "java.lang.Thread" (CONSTANT_POOL)
    (FIELDS (FIELD "objref" (CLASS "Container")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "incr" (PARAMETERS)
      (RETURNTYPE CLASS "Job")
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 3)
       (CODE_LENGTH . 35)
       (PARSEDCODE
            (0 (ALOAD_0))
            (1 (GETFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
            (4 (ASTORE_1))
            (5 (ALOAD_1))
            (6 (MONITORENTER))
            (7 (ALOAD_0))
            (8 (GETFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
            (11 (ALOAD_0))
            (12 (GETFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
            (15 (GETFIELD (JVM::FIELDCP "counter" "Container" INT)))
            (18 (ICONST_1))
            (19 (IADD))
            (20 (PUTFIELD (JVM::FIELDCP "counter" "Container" INT)))
            (23 (ALOAD_1))
            (24 (MONITOREXIT))
            (25 (GOTO 33))
            (28 (ASTORE_2))
            (29 (ALOAD_1))
            (30 (MONITOREXIT))
            (31 (ALOAD_2))
            (32 (ATHROW))
            (33 (ALOAD_0))
            (34 (ARETURN))
            (ENDOFCODE 35))
       (EXCEPTIONS (JVM::HANDLER 7 25 28 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 28 31 28 (CLASS "java.lang.Throwable")))
       (STACKMAP)))
     (METHOD
      "setref"
      (PARAMETERS (CLASS "Container"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
        (MAX_STACK . 2)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 6)
        (PARSEDCODE
             (0 (ALOAD_0))
             (1 (ALOAD_1))
             (2 (PUTFIELD (JVM::FIELDCP "objref" "Job" (CLASS "Container"))))
             (5 (RETURN))
             (ENDOFCODE 6))
        (EXCEPTIONS)
        (STACKMAP)))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
           (MAX_STACK . 1)
           (JVM::MAX_LOCALS . 1)
           (CODE_LENGTH . 11)
           (PARSEDCODE
                (0 (GOTO 3))
                (3 (ALOAD_0))
                (4 (INVOKEVIRTUAL (METHODCP "incr" "Job" NIL (CLASS "Job"))))
                (7 (POP))
                (8 (GOTO 3))
                (ENDOFCODE 11))
           (EXCEPTIONS)
           (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main6"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 47)
       (PARSEDCODE
        (0 (ICONST_0))
        (1 (ISTORE_1))
        (2 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (5 (DUP))
        (6
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (9 (ASTORE_2))
        (10 (ALOAD_2))
        (11 (ATHROW))
        (12 (ASTORE_2))
        (13 (ILOAD_1))
        (14 (ICONST_1))
        (15 (IADD))
        (16 (ISTORE_1))
        (17 (ALOAD_2))
        (18 (ATHROW))
        (19 (ASTORE_3))
        (20 (ILOAD_1))
        (21 (ICONST_1))
        (22 (IADD))
        (23 (ISTORE_1))
        (24 (JSR 38))
        (27 (GOTO 46))
        (30 (ASTORE 4))
        (32 (JSR 38))
        (35 (ALOAD 4))
        (37 (ATHROW))
        (38 (ASTORE 5))
        (40 (ILOAD_1))
        (41 (ICONST_1))
        (42 (IADD))
        (43 (ISTORE_1))
        (44 (RET 5))
        (46 (RETURN))
        (ENDOFCODE 47))
       (EXCEPTIONS (JVM::HANDLER 2 12 12 (CLASS "java.lang.Exception"))
                   (JVM::HANDLER 17 19 19 (CLASS "java.lang.Exception"))
                   (JVM::HANDLER 2 27 30 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 30 35 30 (CLASS "java.lang.Throwable")))
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main5"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 9)
       (PARSEDCODE
        (0 (NEW (CLASS "java.lang.ArrayIndexOutOfBoundsException")))
        (3 (DUP))
        (4
          (INVOKESPECIAL (METHODCP "<init>"
                                   "java.lang.ArrayIndexOutOfBoundsException"
                                   NIL VOID)))
        (7 (ASTORE_1))
        (8 (RETURN))
        (ENDOFCODE 9))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main4" "java.lang.Object"
    (CONSTANT_POOL (STRING "Main4"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 2)
          (JVM::MAX_LOCALS . 5)
          (CODE_LENGTH . 44)
          (PARSEDCODE (0 (ACONST_NULL))
                      (1 (ASTORE_1))
                      (2 (LDC 0))
                      (4 (INVOKESTATIC (METHODCP "forName" "java.lang.Class"
                                                 ((CLASS "java.lang.String"))
                                                 (CLASS "java.lang.Class"))))
                      (7 (ASTORE_1))
                      (8 (GOTO 12))
                      (11 (ASTORE_2))
                      (12 (ICONST_1))
                      (13 (ISTORE_2))
                      (14 (GOTO 36))
                      (17 (ALOAD_1))
                      (18 (ASTORE_3))
                      (19 (ALOAD_3))
                      (20 (MONITORENTER))
                      (21 (ALOAD_3))
                      (22 (MONITOREXIT))
                      (23 (GOTO 33))
                      (26 (ASTORE 4))
                      (28 (ALOAD_3))
                      (29 (MONITOREXIT))
                      (30 (ALOAD 4))
                      (32 (ATHROW))
                      (33 (IINC 2 1))
                      (36 (ILOAD_2))
                      (37 (JVM::SIPUSH 1000))
                      (40 (IF_ICMPLT 17))
                      (43 (RETURN))
                      (ENDOFCODE 44))
          (EXCEPTIONS (JVM::HANDLER 2 8 11 (CLASS "java.lang.Exception"))
                      (JVM::HANDLER 21 23 26 (CLASS "java.lang.Throwable"))
                      (JVM::HANDLER 26 30 26 (CLASS "java.lang.Throwable")))
          (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main3"
    "java.lang.Thread" (CONSTANT_POOL)
    (FIELDS (FIELD "count"
                   INT (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 11)
         (PARSEDCODE (0 (NEW (CLASS "Main3")))
                     (3 (DUP))
                     (4 (INVOKESPECIAL (METHODCP "<init>" "Main3" NIL VOID)))
                     (7 (INVOKEVIRTUAL (METHODCP "start" "Main3" NIL VOID)))
                     (10 (RETURN))
                     (ENDOFCODE 11))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
         (MAX_STACK . 2)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 28)
         (PARSEDCODE (0 (GOTO 21))
                     (3 (NEW (CLASS "Main3")))
                     (6 (DUP))
                     (7 (INVOKESPECIAL (METHODCP "<init>" "Main3" NIL VOID)))
                     (10 (INVOKEVIRTUAL (METHODCP "start" "Main3" NIL VOID)))
                     (13 (GETSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                     (16 (ICONST_1))
                     (17 (ISUB))
                     (18 (PUTSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                     (21 (GETSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                     (24 (IFGT 3))
                     (27 (RETURN))
                     (ENDOFCODE 28))
         (EXCEPTIONS)
         (STACKMAP)))
     (METHOD
         "<clinit>" (PARAMETERS)
         (RETURNTYPE . VOID)
         (ACCESSFLAGS *CLASS* *STATIC*)
         (CODE (MAX_STACK . 1)
               (JVM::MAX_LOCALS . 0)
               (CODE_LENGTH . 6)
               (PARSEDCODE (0 (BIPUSH 25))
                           (2 (PUTSTATIC (JVM::FIELDCP "count" "Main3" INT)))
                           (5 (RETURN))
                           (ENDOFCODE 6))
               (EXCEPTIONS)
               (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main2" "java.lang.Object"
    (CONSTANT_POOL (STRING "123")
                   (STRING "234")
                   (STRING "456"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
        (MAX_STACK . 4)
        (JVM::MAX_LOCALS . 2)
        (CODE_LENGTH . 37)
        (PARSEDCODE
             (0 (NEW (CLASS "java.lang.StringBuffer")))
             (3 (DUP))
             (4 (INVOKESPECIAL (METHODCP "<init>"
                                         "java.lang.StringBuffer" NIL VOID)))
             (7 (LDC 0))
             (9 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                         ((CLASS "java.lang.String"))
                                         (CLASS "java.lang.StringBuffer"))))
             (12 (NEW (CLASS "java.lang.StringBuffer")))
             (15 (DUP))
             (16 (LDC 1))
             (18 (INVOKESPECIAL (METHODCP "<init>" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          VOID)))
             (21 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (24 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (27 (LDC 2))
             (29 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                          ((CLASS "java.lang.String"))
                                          (CLASS "java.lang.StringBuffer"))))
             (32 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                          NIL (CLASS "java.lang.String"))))
             (35 (ASTORE_1))
             (36 (RETURN))
             (ENDOFCODE 37))
        (EXCEPTIONS)
        (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "First"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "main"
             (PARAMETERS (ARRAY (CLASS "java.lang.String")))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 3)
                   (CODE_LENGTH . 9)
                   (PARSEDCODE (0 (ILOAD_2))
                               (1 (ISTORE_1))
                               (2 (ILOAD_1))
                               (3 (ICONST_1))
                               (4 (IADD))
                               (5 (ISTORE_2))
                               (6 (ILOAD_2))
                               (7 (ISTORE_1))
                               (8 (RETURN))
                               (ENDOFCODE 9))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "FirstX"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD "main"
             (PARAMETERS (ARRAY (CLASS "java.lang.String")))
             (RETURNTYPE . VOID)
             (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
             (CODE (MAX_STACK . 2)
                   (JVM::MAX_LOCALS . 3)
                   (CODE_LENGTH . 14)
                   (PARSEDCODE (0 (ILOAD_2))
                               (1 (ISTORE_1))
                               (2 (ILOAD_1))
                               (3 (ICONST_1))
                               (4 (IADD))
                               (5 (ISTORE_2))
                               (6 (ILOAD_2))
                               (7 (ISTORE_1))
                               (8 (ICONST_2))
                               (9 (ILOAD_2))
                               (10 (ILOAD_1))
                               (11 (IADD))
                               (12 (IADD))
                               (13 (ISTORE_2))
                               (14 (RETURN))
                               (ENDOFCODE 14))
                   (EXCEPTIONS)
                   (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Second"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 1)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 9)
          (PARSEDCODE (0 (BIPUSH 10))
                      (2 (ISTORE_1))
                      (3 (ILOAD_1))
                      (4 (INVOKESTATIC (METHODCP "fact" "Second" (INT) INT)))
                      (7 (POP))
                      (8 (RETURN))
                      (ENDOFCODE 9))
          (EXCEPTIONS)
          (STACKMAP)))
     (METHOD
      "fact" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
         (MAX_STACK . 3)
         (JVM::MAX_LOCALS . 1)
         (CODE_LENGTH . 15)
         (PARSEDCODE (0 (ILOAD_0))
                     (1 (IFGT 6))
                     (4 (ICONST_1))
                     (5 (IRETURN))
                     (6 (ILOAD_0))
                     (7 (ILOAD_0))
                     (8 (ICONST_1))
                     (9 (ISUB))
                     (10 (INVOKESTATIC (METHODCP "fact" "Second" (INT) INT)))
                     (13 (IMUL))
                     (14 (IRETURN))
                     (ENDOFCODE 15))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Fact"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "HELPER_COUNT"
                   INT (ACCESSFLAGS *CLASS* *STATIC*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "fact" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 6)
       (CODE_LENGTH . 84)
       (PARSEDCODE
           (0 (NEW (CLASS "FactJob")))
           (3 (DUP))
           (4 (ILOAD_0))
           (5 (INVOKESPECIAL (METHODCP "<init>" "FactJob" (INT)
                                       VOID)))
           (8 (ASTORE_1))
           (9 (ICONST_0))
           (10 (ISTORE_2))
           (11 (GOTO 21))
           (14 (ALOAD_1))
           (15 (INVOKESTATIC (METHODCP "compute"
                                       "FactHelper" ((CLASS "FactJob"))
                                       VOID)))
           (18 (IINC 2 1))
           (21 (ILOAD_2))
           (22 (GETSTATIC (JVM::FIELDCP "HELPER_COUNT" "Fact" INT)))
           (25 (IF_ICMPLT 14))
           (28 (ALOAD_1))
           (29 (ASTORE_3))
           (30 (ALOAD_3))
           (31 (MONITORENTER))
           (32 (ALOAD_1))
           (33 (INVOKEVIRTUAL (METHODCP "notifyAll"
                                        "java.lang.Object" NIL VOID)))
           (36 (ALOAD_3))
           (37 (MONITOREXIT))
           (38 (GOTO 48))
           (41 (ASTORE 4))
           (43 (ALOAD_3))
           (44 (MONITOREXIT))
           (45 (ALOAD 4))
           (47 (ATHROW))
           (48 (ALOAD_1))
           (49 (ASTORE 4))
           (51 (ALOAD 4))
           (53 (MONITORENTER))
           (54 (ALOAD_1))
           (55 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" NIL VOID)))
           (58 (ALOAD 4))
           (60 (MONITOREXIT))
           (61 (GOTO 72))
           (64 (ASTORE 5))
           (66 (ALOAD 4))
           (68 (MONITOREXIT))
           (69 (ALOAD 5))
           (71 (ATHROW))
           (72 (GOTO 79))
           (75 (ASTORE 4))
           (77 (ICONST_M1))
           (78 (IRETURN))
           (79 (ALOAD_1))
           (80 (GETFIELD (JVM::FIELDCP "value" "FactJob" INT)))
           (83 (IRETURN))
           (ENDOFCODE 84))
       (EXCEPTIONS (JVM::HANDLER 32 38 41 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 41 45 41 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 54 61 64 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 64 69 64 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 48 72 75
                                 (CLASS "java.lang.InterruptedException")))
       (STACKMAP)))
     (METHOD
      "<clinit>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *STATIC*)
      (CODE
         (MAX_STACK . 1)
         (JVM::MAX_LOCALS . 0)
         (CODE_LENGTH . 5)
         (PARSEDCODE (0 (ICONST_5))
                     (1 (PUTSTATIC (JVM::FIELDCP "HELPER_COUNT" "Fact" INT)))
                     (4 (RETURN))
                     (ENDOFCODE 5))
         (EXCEPTIONS)
         (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "FactHelper"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "myJob" (CLASS "FactJob")
                   (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "run" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 4)
       (CODE_LENGTH . 112)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (GETFIELD (JVM::FIELDCP "myJob"
                                    "FactHelper" (CLASS "FactJob"))))
         (4 (ASTORE_1))
         (5 (ALOAD_1))
         (6 (MONITORENTER))
         (7 (ALOAD_0))
         (8 (GETFIELD (JVM::FIELDCP "myJob"
                                    "FactHelper" (CLASS "FactJob"))))
         (11 (ICONST_1))
         (12 (PUTFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
         (15 (ALOAD_0))
         (16 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (19 (INVOKEVIRTUAL (METHODCP "wait" "java.lang.Object" NIL VOID)))
         (22 (ALOAD_1))
         (23 (MONITOREXIT))
         (24 (GOTO 32))
         (27 (ASTORE_2))
         (28 (ALOAD_1))
         (29 (MONITOREXIT))
         (30 (ALOAD_2))
         (31 (ATHROW))
         (32 (GOTO 37))
         (35 (ASTORE_1))
         (36 (RETURN))
         (37 (ALOAD_0))
         (38 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (41 (ASTORE_1))
         (42 (ALOAD_1))
         (43 (MONITORENTER))
         (44 (ALOAD_0))
         (45 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (48 (GETFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (51 (IFGT 64))
         (54 (ALOAD_0))
         (55 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (58 (INVOKEVIRTUAL (METHODCP "notify" "java.lang.Object" NIL VOID)))
         (61 (ALOAD_1))
         (62 (MONITOREXIT))
         (63 (RETURN))
         (64 (ALOAD_0))
         (65 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (68 (ALOAD_0))
         (69 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (72 (GETFIELD (JVM::FIELDCP "value" "FactJob" INT)))
         (75 (ALOAD_0))
         (76 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (79 (GETFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (82 (IMUL))
         (83 (PUTFIELD (JVM::FIELDCP "value" "FactJob" INT)))
         (86 (ALOAD_0))
         (87 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (90 (ALOAD_0))
         (91 (GETFIELD (JVM::FIELDCP "myJob"
                                     "FactHelper" (CLASS "FactJob"))))
         (94 (GETFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (97 (ICONST_1))
         (98 (ISUB))
         (99 (PUTFIELD (JVM::FIELDCP "n" "FactJob" INT)))
         (102 (ALOAD_1))
         (103 (MONITOREXIT))
         (104 (GOTO 37))
         (107 (ASTORE_3))
         (108 (ALOAD_1))
         (109 (MONITOREXIT))
         (110 (ALOAD_3))
         (111 (ATHROW))
         (ENDOFCODE 112))
       (EXCEPTIONS (JVM::HANDLER 7 24 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 27 30 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 0 32 35
                                 (CLASS "java.lang.InterruptedException"))
                   (JVM::HANDLER 44 63 107 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 64
                                 104 107 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 107
                                 110 107 (CLASS "java.lang.Throwable")))
       (STACKMAP)))
     (METHOD
      "compute" (PARAMETERS (CLASS "FactJob"))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 7)
       (CODE_LENGTH . 87)
       (PARSEDCODE
          (0 (NEW (CLASS "FactHelper")))
          (3 (DUP))
          (4 (INVOKESPECIAL (METHODCP "<init>" "FactHelper" NIL VOID)))
          (7 (ASTORE_1))
          (8 (ALOAD_1))
          (9 (ALOAD_0))
          (10 (PUTFIELD (JVM::FIELDCP "myJob"
                                      "FactHelper" (CLASS "FactJob"))))
          (13 (ALOAD_0))
          (14 (ASTORE_2))
          (15 (ALOAD_2))
          (16 (MONITORENTER))
          (17 (ALOAD_0))
          (18 (ICONST_0))
          (19 (PUTFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
          (22 (ALOAD_2))
          (23 (MONITOREXIT))
          (24 (GOTO 32))
          (27 (ASTORE_3))
          (28 (ALOAD_2))
          (29 (MONITOREXIT))
          (30 (ALOAD_3))
          (31 (ATHROW))
          (32 (NEW (CLASS "java.lang.Thread")))
          (35 (DUP))
          (36 (ALOAD_1))
          (37 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Thread"
                                       ((CLASS "java.lang.Runnable"))
                                       VOID)))
          (40 (ASTORE_3))
          (41 (ALOAD_3))
          (42 (INVOKEVIRTUAL (METHODCP "start" "java.lang.Thread" NIL VOID)))
          (45 (ICONST_1))
          (46 (ISTORE 4))
          (48 (GOTO 81))
          (51 (ALOAD_0))
          (52 (ASTORE 5))
          (54 (ALOAD 5))
          (56 (MONITORENTER))
          (57 (ALOAD_0))
          (58 (GETFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
          (61 (IFEQ 67))
          (64 (ICONST_0))
          (65 (ISTORE 4))
          (67 (ALOAD 5))
          (69 (MONITOREXIT))
          (70 (GOTO 81))
          (73 (ASTORE 6))
          (75 (ALOAD 5))
          (77 (MONITOREXIT))
          (78 (ALOAD 6))
          (80 (ATHROW))
          (81 (ILOAD 4))
          (83 (IFNE 51))
          (86 (RETURN))
          (ENDOFCODE 87))
       (EXCEPTIONS (JVM::HANDLER 17 24 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 27 30 27 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 57 70 73 (CLASS "java.lang.Throwable"))
                   (JVM::HANDLER 73 78 73 (CLASS "java.lang.Throwable")))
       (STACKMAP))))
    (INTERFACES "java.lang.Runnable")
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "FactJob"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS (FIELD "value" INT (ACCESSFLAGS *CLASS*)
                   -1)
            (FIELD "n" INT (ACCESSFLAGS *CLASS*) -1)
            (FIELD "ready" BOOLEAN (ACCESSFLAGS *CLASS*)
                   -1))
    (METHODS
     (METHOD
      "<init>" (PARAMETERS INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 20)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (ALOAD_0))
          (5 (ILOAD_1))
          (6 (PUTFIELD (JVM::FIELDCP "n" "FactJob" INT)))
          (9 (ALOAD_0))
          (10 (ICONST_1))
          (11 (PUTFIELD (JVM::FIELDCP "value" "FactJob" INT)))
          (14 (ALOAD_0))
          (15 (ICONST_0))
          (16 (PUTFIELD (JVM::FIELDCP "ready" "FactJob" BOOLEAN)))
          (19 (RETURN))
          (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Main" "java.lang.Object"
    (CONSTANT_POOL (STRING ""))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 3)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 36)
       (PARSEDCODE
         (0 (ALOAD_0))
         (1 (ICONST_0))
         (2 (AALOAD))
         (3 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                    ((CLASS "java.lang.String"))
                                    INT)))
         (6 (ISTORE_1))
         (7 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                     (CLASS "java.io.PrintStream"))))
         (10 (NEW (CLASS "java.lang.StringBuffer")))
         (13 (DUP))
         (14 (INVOKESPECIAL (METHODCP "<init>"
                                      "java.lang.StringBuffer" NIL VOID)))
         (17 (LDC 0))
         (19 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer"
                                      ((CLASS "java.lang.String"))
                                      (CLASS "java.lang.StringBuffer"))))
         (22 (ILOAD_1))
         (23 (INVOKESTATIC (METHODCP "fact" "Fact" (INT) INT)))
         (26 (INVOKEVIRTUAL (METHODCP "append" "java.lang.StringBuffer" (INT)
                                      (CLASS "java.lang.StringBuffer"))))
         (29 (INVOKEVIRTUAL (METHODCP "toString" "java.lang.StringBuffer"
                                      NIL (CLASS "java.lang.String"))))
         (32 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream"
                                      ((CLASS "java.lang.String"))
                                      VOID)))
         (35 (RETURN))
         (ENDOFCODE 36))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS*
                 *PUBLIC* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "ExceptionTest" "java.lang.Object"
    (CONSTANT_POOL (STRING "done"))
    (FIELDS)
    (METHODS
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 3)
          (CODE_LENGTH . 25)
          (PARSEDCODE
               (0 (BIPUSH 120))
               (2 (ICONST_5))
               (3 (INVOKESTATIC (METHODCP "compute" "ExceptionTest" (INT INT)
                                          VOID)))
               (6 (GOTO 24))
               (9 (ASTORE_1))
               (10 (NEW (CLASS "java.lang.Exception")))
               (13 (DUP))
               (14 (INVOKESPECIAL (METHODCP "<init>"
                                            "java.lang.Exception" NIL VOID)))
               (17 (ATHROW))
               (18 (ASTORE_2))
               (19 (ALOAD_0))
               (20 (ICONST_0))
               (21 (LDC 0))
               (23 (AASTORE))
               (24 (RETURN))
               (ENDOFCODE 25))
          (EXCEPTIONS (JVM::HANDLER 0 6 9 (CLASS "java.lang.Exception"))
                      (JVM::HANDLER 10 18 18 (CLASS "java.lang.Exception")))
          (STACKMAP)))
     (METHOD
      "compute" (PARAMETERS INT INT)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
          (MAX_STACK . 3)
          (JVM::MAX_LOCALS . 2)
          (CODE_LENGTH . 10)
          (PARSEDCODE
               (0 (ILOAD_0))
               (1 (ILOAD_1))
               (2 (IDIV))
               (3 (ILOAD_1))
               (4 (ICONST_1))
               (5 (ISUB))
               (6 (INVOKESTATIC (METHODCP "compute" "ExceptionTest" (INT INT)
                                          VOID)))
               (9 (RETURN))
               (ENDOFCODE 10))
          (EXCEPTIONS)
          (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))
   (CLASS
    "Demo"
    "java.lang.Object" (CONSTANT_POOL)
    (FIELDS)
    (METHODS
     (METHOD
      "fact" (PARAMETERS INT)
      (RETURNTYPE . INT)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE (MAX_STACK . 3)
            (JVM::MAX_LOCALS . 1)
            (CODE_LENGTH . 15)
            (PARSEDCODE (0 (ILOAD_0))
                        (1 (IFLE 13))
                        (4 (ILOAD_0))
                        (5 (ILOAD_0))
                        (6 (ICONST_1))
                        (7 (ISUB))
                        (8 (INVOKESTATIC (METHODCP "fact" "Demo" (INT) INT)))
                        (11 (IMUL))
                        (12 (IRETURN))
                        (13 (ICONST_1))
                        (14 (IRETURN))
                        (ENDOFCODE 15))
            (EXCEPTIONS)
            (STACKMAP)))
     (METHOD
      "main"
      (PARAMETERS (ARRAY (CLASS "java.lang.String")))
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS* *PUBLIC* *STATIC*)
      (CODE
       (MAX_STACK . 2)
       (JVM::MAX_LOCALS . 2)
       (CODE_LENGTH . 20)
       (PARSEDCODE
           (0 (ALOAD_0))
           (1 (ICONST_0))
           (2 (AALOAD))
           (3 (BIPUSH 10))
           (5 (INVOKESTATIC (METHODCP "parseInt" "java.lang.Integer"
                                      ((CLASS "java.lang.String") INT)
                                      INT)))
           (8 (ISTORE_1))
           (9 (GETSTATIC (JVM::FIELDCP "out" "java.lang.System"
                                       (CLASS "java.io.PrintStream"))))
           (12 (ILOAD_1))
           (13 (INVOKESTATIC (METHODCP "fact" "Demo" (INT) INT)))
           (16 (INVOKEVIRTUAL (METHODCP "println" "java.io.PrintStream" (INT)
                                        VOID)))
           (19 (RETURN))
           (ENDOFCODE 20))
       (EXCEPTIONS)
       (STACKMAP)))
     (METHOD
      "<init>" (PARAMETERS)
      (RETURNTYPE . VOID)
      (ACCESSFLAGS *CLASS*)
      (CODE
       (MAX_STACK . 1)
       (JVM::MAX_LOCALS . 1)
       (CODE_LENGTH . 5)
       (PARSEDCODE
          (0 (ALOAD_0))
          (1 (INVOKESPECIAL (METHODCP "<init>" "java.lang.Object" NIL VOID)))
          (4 (RETURN))
          (ENDOFCODE 5))
       (EXCEPTIONS)
       (STACKMAP))))
    (INTERFACES)
    (ACCESSFLAGS *CLASS* *SUPER* *SYNCHRONIZED*))))
 NIL
 ((TRACE (JVM::TH-OBJ-COUNTERS (-1 . 55))
         (RTRACE (55 -1 . 55)
                 (54 -1 . 54)
                 (53 -1 . 53)
                 (52 -1 . 52)
                 (51 -1 . 51)
                 (50 -1 . 50)
                 (49 -1 . 49)
                 (48 -1 . 48)
                 (47 -1 . 47)
                 (46 -1 . 46)
                 (45 -1 . 45)
                 (44 -1 . 44)
                 (43 -1 . 43)
                 (42 -1 . 42)
                 (41 -1 . 41)
                 (40 -1 . 40)
                 (39 -1 . 39)
                 (38 -1 . 38)
                 (37 -1 . 37)
                 (36 -1 . 36)
                 (35 -1 . 35)
                 (34 -1 . 34)
                 (33 -1 . 33)
                 (32 -1 . 32)
                 (31 -1 . 31)
                 (30 -1 . 30)
                 (29 -1 . 29)
                 (28 -1 . 28)
                 (27 -1 . 27)
                 (26 -1 . 26)
                 (25 -1 . 25)
                 (24 -1 . 24)
                 (23 -1 . 23)
                 (22 -1 . 22)
                 (21 -1 . 21)
                 (20 -1 . 20)
                 (19 -1 . 19)
                 (18 -1 . 18)
                 (17 -1 . 17)
                 (16 -1 . 16)
                 (15 -1 . 15)
                 (14 -1 . 14)
                 (13 -1 . 13)
                 (12 -1 . 12)
                 (11 -1 . 11)
                 (10 -1 . 10)
                 (9 -1 . 9)
                 (8 -1 . 8)
                 (7 -1 . 7)
                 (6 -1 . 6)
                 (5 -1 . 5)
                 (4 -1 . 4)
                 (3 -1 . 3)
                 (2 -1 . 2)
                 (1 -1 . 1)
                 (0 -1 . 0))))))
